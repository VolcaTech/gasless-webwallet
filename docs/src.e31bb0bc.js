// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

// eslint-disable-next-line no-global-assign
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  return newRequire;
})({"../../node_modules/regenerator-runtime/runtime.js":[function(require,module,exports) {
var global = arguments[3];
/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof global.process === "object" && global.process.domain) {
      invoke = global.process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // Among the various tricks for obtaining a reference to the global
  // object, this seems to be the most reliable technique that does not
  // use indirect eval (which violates Content Security Policy).
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this
);

},{}],"../../node_modules/babel-register/lib/browser.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

exports.default = function () {};

module.exports = exports["default"];
},{}],"../../node_modules/babel-core/register.js":[function(require,module,exports) {
/* eslint max-len: 0 */
// TODO: eventually deprecate this console.trace("use the `babel-register` package instead of `babel-core/register`");
module.exports = require("babel-register");

},{"babel-register":"../../node_modules/babel-register/lib/browser.js"}],"../../node_modules/core-js/modules/_global.js":[function(require,module,exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

},{}],"../../node_modules/core-js/modules/_has.js":[function(require,module,exports) {
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

},{}],"../../node_modules/core-js/modules/_fails.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

},{}],"../../node_modules/core-js/modules/_descriptors.js":[function(require,module,exports) {
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/_core.js":[function(require,module,exports) {
var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}],"../../node_modules/core-js/modules/_is-object.js":[function(require,module,exports) {
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

},{}],"../../node_modules/core-js/modules/_an-object.js":[function(require,module,exports) {
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/_dom-create.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_ie8-dom-define.js":[function(require,module,exports) {
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_dom-create":"../../node_modules/core-js/modules/_dom-create.js"}],"../../node_modules/core-js/modules/_to-primitive.js":[function(require,module,exports) {
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/_object-dp.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_ie8-dom-define":"../../node_modules/core-js/modules/_ie8-dom-define.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/_property-desc.js":[function(require,module,exports) {
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

},{}],"../../node_modules/core-js/modules/_hide.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/_uid.js":[function(require,module,exports) {
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

},{}],"../../node_modules/core-js/modules/_library.js":[function(require,module,exports) {
module.exports = false;

},{}],"../../node_modules/core-js/modules/_shared.js":[function(require,module,exports) {

var core = require('./_core');
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: require('./_library') ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});

},{"./_core":"../../node_modules/core-js/modules/_core.js","./_global":"../../node_modules/core-js/modules/_global.js","./_library":"../../node_modules/core-js/modules/_library.js"}],"../../node_modules/core-js/modules/_function-to-string.js":[function(require,module,exports) {
module.exports = require('./_shared')('native-function-to-string', Function.toString);

},{"./_shared":"../../node_modules/core-js/modules/_shared.js"}],"../../node_modules/core-js/modules/_redefine.js":[function(require,module,exports) {

var global = require('./_global');
var hide = require('./_hide');
var has = require('./_has');
var SRC = require('./_uid')('src');
var $toString = require('./_function-to-string');
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

require('./_core').inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_has":"../../node_modules/core-js/modules/_has.js","./_uid":"../../node_modules/core-js/modules/_uid.js","./_function-to-string":"../../node_modules/core-js/modules/_function-to-string.js","./_core":"../../node_modules/core-js/modules/_core.js"}],"../../node_modules/core-js/modules/_a-function.js":[function(require,module,exports) {
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

},{}],"../../node_modules/core-js/modules/_ctx.js":[function(require,module,exports) {
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

},{"./_a-function":"../../node_modules/core-js/modules/_a-function.js"}],"../../node_modules/core-js/modules/_export.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var hide = require('./_hide');
var redefine = require('./_redefine');
var ctx = require('./_ctx');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_core":"../../node_modules/core-js/modules/_core.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js"}],"../../node_modules/core-js/modules/_meta.js":[function(require,module,exports) {
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

},{"./_uid":"../../node_modules/core-js/modules/_uid.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_has":"../../node_modules/core-js/modules/_has.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/_wks.js":[function(require,module,exports) {
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

},{"./_shared":"../../node_modules/core-js/modules/_shared.js","./_uid":"../../node_modules/core-js/modules/_uid.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_set-to-string-tag.js":[function(require,module,exports) {
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_has":"../../node_modules/core-js/modules/_has.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_wks-ext.js":[function(require,module,exports) {
exports.f = require('./_wks');

},{"./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_wks-define.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_core":"../../node_modules/core-js/modules/_core.js","./_library":"../../node_modules/core-js/modules/_library.js","./_wks-ext":"../../node_modules/core-js/modules/_wks-ext.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js"}],"../../node_modules/core-js/modules/_cof.js":[function(require,module,exports) {
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

},{}],"../../node_modules/core-js/modules/_iobject.js":[function(require,module,exports) {
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

},{"./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/_defined.js":[function(require,module,exports) {
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

},{}],"../../node_modules/core-js/modules/_to-iobject.js":[function(require,module,exports) {
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

},{"./_iobject":"../../node_modules/core-js/modules/_iobject.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/_to-integer.js":[function(require,module,exports) {
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

},{}],"../../node_modules/core-js/modules/_to-length.js":[function(require,module,exports) {
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js"}],"../../node_modules/core-js/modules/_to-absolute-index.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js"}],"../../node_modules/core-js/modules/_array-includes.js":[function(require,module,exports) {
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

},{"./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js"}],"../../node_modules/core-js/modules/_shared-key.js":[function(require,module,exports) {
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

},{"./_shared":"../../node_modules/core-js/modules/_shared.js","./_uid":"../../node_modules/core-js/modules/_uid.js"}],"../../node_modules/core-js/modules/_object-keys-internal.js":[function(require,module,exports) {
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

},{"./_has":"../../node_modules/core-js/modules/_has.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_array-includes":"../../node_modules/core-js/modules/_array-includes.js","./_shared-key":"../../node_modules/core-js/modules/_shared-key.js"}],"../../node_modules/core-js/modules/_enum-bug-keys.js":[function(require,module,exports) {
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

},{}],"../../node_modules/core-js/modules/_object-keys.js":[function(require,module,exports) {
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

},{"./_object-keys-internal":"../../node_modules/core-js/modules/_object-keys-internal.js","./_enum-bug-keys":"../../node_modules/core-js/modules/_enum-bug-keys.js"}],"../../node_modules/core-js/modules/_object-gops.js":[function(require,module,exports) {
exports.f = Object.getOwnPropertySymbols;

},{}],"../../node_modules/core-js/modules/_object-pie.js":[function(require,module,exports) {
exports.f = {}.propertyIsEnumerable;

},{}],"../../node_modules/core-js/modules/_enum-keys.js":[function(require,module,exports) {
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

},{"./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_object-gops":"../../node_modules/core-js/modules/_object-gops.js","./_object-pie":"../../node_modules/core-js/modules/_object-pie.js"}],"../../node_modules/core-js/modules/_is-array.js":[function(require,module,exports) {
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

},{"./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/_object-dps.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/_html.js":[function(require,module,exports) {
var document = require('./_global').document;
module.exports = document && document.documentElement;

},{"./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_object-create.js":[function(require,module,exports) {
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_object-dps":"../../node_modules/core-js/modules/_object-dps.js","./_enum-bug-keys":"../../node_modules/core-js/modules/_enum-bug-keys.js","./_shared-key":"../../node_modules/core-js/modules/_shared-key.js","./_dom-create":"../../node_modules/core-js/modules/_dom-create.js","./_html":"../../node_modules/core-js/modules/_html.js"}],"../../node_modules/core-js/modules/_object-gopn.js":[function(require,module,exports) {
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

},{"./_object-keys-internal":"../../node_modules/core-js/modules/_object-keys-internal.js","./_enum-bug-keys":"../../node_modules/core-js/modules/_enum-bug-keys.js"}],"../../node_modules/core-js/modules/_object-gopn-ext.js":[function(require,module,exports) {
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js"}],"../../node_modules/core-js/modules/_object-gopd.js":[function(require,module,exports) {
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

},{"./_object-pie":"../../node_modules/core-js/modules/_object-pie.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_has":"../../node_modules/core-js/modules/_has.js","./_ie8-dom-define":"../../node_modules/core-js/modules/_ie8-dom-define.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/es6.symbol.js":[function(require,module,exports) {

'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  require('./_object-gops').f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_has":"../../node_modules/core-js/modules/_has.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_export":"../../node_modules/core-js/modules/_export.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_shared":"../../node_modules/core-js/modules/_shared.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_uid":"../../node_modules/core-js/modules/_uid.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_wks-ext":"../../node_modules/core-js/modules/_wks-ext.js","./_wks-define":"../../node_modules/core-js/modules/_wks-define.js","./_enum-keys":"../../node_modules/core-js/modules/_enum-keys.js","./_is-array":"../../node_modules/core-js/modules/_is-array.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_object-gopn-ext":"../../node_modules/core-js/modules/_object-gopn-ext.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_object-pie":"../../node_modules/core-js/modules/_object-pie.js","./_object-gops":"../../node_modules/core-js/modules/_object-gops.js","./_library":"../../node_modules/core-js/modules/_library.js","./_hide":"../../node_modules/core-js/modules/_hide.js"}],"../../node_modules/core-js/modules/es6.object.create.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: require('./_object-create') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js"}],"../../node_modules/core-js/modules/es6.object.define-property.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js"}],"../../node_modules/core-js/modules/es6.object.define-properties.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-dps":"../../node_modules/core-js/modules/_object-dps.js"}],"../../node_modules/core-js/modules/_object-sap.js":[function(require,module,exports) {
// most Object methods by ES6 should accept primitives
var $export = require('./_export');
var core = require('./_core');
var fails = require('./_fails');
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_core":"../../node_modules/core-js/modules/_core.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js":[function(require,module,exports) {
// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = require('./_to-iobject');
var $getOwnPropertyDescriptor = require('./_object-gopd').f;

require('./_object-sap')('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});

},{"./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/_to-object.js":[function(require,module,exports) {
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

},{"./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/_object-gpo.js":[function(require,module,exports) {
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

},{"./_has":"../../node_modules/core-js/modules/_has.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_shared-key":"../../node_modules/core-js/modules/_shared-key.js"}],"../../node_modules/core-js/modules/es6.object.get-prototype-of.js":[function(require,module,exports) {
// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = require('./_to-object');
var $getPrototypeOf = require('./_object-gpo');

require('./_object-sap')('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});

},{"./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.keys.js":[function(require,module,exports) {
// 19.1.2.14 Object.keys(O)
var toObject = require('./_to-object');
var $keys = require('./_object-keys');

require('./_object-sap')('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});

},{"./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.get-own-property-names.js":[function(require,module,exports) {
// 19.1.2.7 Object.getOwnPropertyNames(O)
require('./_object-sap')('getOwnPropertyNames', function () {
  return require('./_object-gopn-ext').f;
});

},{"./_object-sap":"../../node_modules/core-js/modules/_object-sap.js","./_object-gopn-ext":"../../node_modules/core-js/modules/_object-gopn-ext.js"}],"../../node_modules/core-js/modules/es6.object.freeze.js":[function(require,module,exports) {
// 19.1.2.5 Object.freeze(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('freeze', function ($freeze) {
  return function freeze(it) {
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.seal.js":[function(require,module,exports) {
// 19.1.2.17 Object.seal(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('seal', function ($seal) {
  return function seal(it) {
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.prevent-extensions.js":[function(require,module,exports) {
// 19.1.2.15 Object.preventExtensions(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('preventExtensions', function ($preventExtensions) {
  return function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.is-frozen.js":[function(require,module,exports) {
// 19.1.2.12 Object.isFrozen(O)
var isObject = require('./_is-object');

require('./_object-sap')('isFrozen', function ($isFrozen) {
  return function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.is-sealed.js":[function(require,module,exports) {
// 19.1.2.13 Object.isSealed(O)
var isObject = require('./_is-object');

require('./_object-sap')('isSealed', function ($isSealed) {
  return function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.is-extensible.js":[function(require,module,exports) {
// 19.1.2.11 Object.isExtensible(O)
var isObject = require('./_is-object');

require('./_object-sap')('isExtensible', function ($isExtensible) {
  return function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/_object-assign.js":[function(require,module,exports) {
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || require('./_fails')(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;

},{"./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_object-gops":"../../node_modules/core-js/modules/_object-gops.js","./_object-pie":"../../node_modules/core-js/modules/_object-pie.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_iobject":"../../node_modules/core-js/modules/_iobject.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.object.assign.js":[function(require,module,exports) {
// 19.1.3.1 Object.assign(target, source)
var $export = require('./_export');

$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-assign":"../../node_modules/core-js/modules/_object-assign.js"}],"../../node_modules/core-js/modules/_same-value.js":[function(require,module,exports) {
// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

},{}],"../../node_modules/core-js/modules/es6.object.is.js":[function(require,module,exports) {
// 19.1.3.10 Object.is(value1, value2)
var $export = require('./_export');
$export($export.S, 'Object', { is: require('./_same-value') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_same-value":"../../node_modules/core-js/modules/_same-value.js"}],"../../node_modules/core-js/modules/_set-proto.js":[function(require,module,exports) {
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = require('./_is-object');
var anObject = require('./_an-object');
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js"}],"../../node_modules/core-js/modules/es6.object.set-prototype-of.js":[function(require,module,exports) {
// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = require('./_export');
$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_set-proto":"../../node_modules/core-js/modules/_set-proto.js"}],"../../node_modules/core-js/modules/_classof.js":[function(require,module,exports) {
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

},{"./_cof":"../../node_modules/core-js/modules/_cof.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.object.to-string.js":[function(require,module,exports) {
'use strict';
// 19.1.3.6 Object.prototype.toString()
var classof = require('./_classof');
var test = {};
test[require('./_wks')('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  require('./_redefine')(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}

},{"./_classof":"../../node_modules/core-js/modules/_classof.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js"}],"../../node_modules/core-js/modules/_invoke.js":[function(require,module,exports) {
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

},{}],"../../node_modules/core-js/modules/_bind.js":[function(require,module,exports) {
'use strict';
var aFunction = require('./_a-function');
var isObject = require('./_is-object');
var invoke = require('./_invoke');
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};

},{"./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_invoke":"../../node_modules/core-js/modules/_invoke.js"}],"../../node_modules/core-js/modules/es6.function.bind.js":[function(require,module,exports) {
// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = require('./_export');

$export($export.P, 'Function', { bind: require('./_bind') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_bind":"../../node_modules/core-js/modules/_bind.js"}],"../../node_modules/core-js/modules/es6.function.name.js":[function(require,module,exports) {
var dP = require('./_object-dp').f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || require('./_descriptors') && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/es6.function.has-instance.js":[function(require,module,exports) {
'use strict';
var isObject = require('./_is-object');
var getPrototypeOf = require('./_object-gpo');
var HAS_INSTANCE = require('./_wks')('hasInstance');
var FunctionProto = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
if (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {
  if (typeof this != 'function' || !isObject(O)) return false;
  if (!isObject(this.prototype)) return O instanceof this;
  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
  return false;
} });

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js"}],"../../node_modules/core-js/modules/_string-ws.js":[function(require,module,exports) {
module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

},{}],"../../node_modules/core-js/modules/_string-trim.js":[function(require,module,exports) {
var $export = require('./_export');
var defined = require('./_defined');
var fails = require('./_fails');
var spaces = require('./_string-ws');
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_defined":"../../node_modules/core-js/modules/_defined.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_string-ws":"../../node_modules/core-js/modules/_string-ws.js"}],"../../node_modules/core-js/modules/_parse-int.js":[function(require,module,exports) {
var $parseInt = require('./_global').parseInt;
var $trim = require('./_string-trim').trim;
var ws = require('./_string-ws');
var hex = /^[-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_string-trim":"../../node_modules/core-js/modules/_string-trim.js","./_string-ws":"../../node_modules/core-js/modules/_string-ws.js"}],"../../node_modules/core-js/modules/es6.parse-int.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseInt = require('./_parse-int');
// 18.2.5 parseInt(string, radix)
$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_parse-int":"../../node_modules/core-js/modules/_parse-int.js"}],"../../node_modules/core-js/modules/_parse-float.js":[function(require,module,exports) {
var $parseFloat = require('./_global').parseFloat;
var $trim = require('./_string-trim').trim;

module.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_string-trim":"../../node_modules/core-js/modules/_string-trim.js","./_string-ws":"../../node_modules/core-js/modules/_string-ws.js"}],"../../node_modules/core-js/modules/es6.parse-float.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseFloat = require('./_parse-float');
// 18.2.4 parseFloat(string)
$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_parse-float":"../../node_modules/core-js/modules/_parse-float.js"}],"../../node_modules/core-js/modules/_inherit-if-required.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var setPrototypeOf = require('./_set-proto').set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_set-proto":"../../node_modules/core-js/modules/_set-proto.js"}],"../../node_modules/core-js/modules/es6.number.constructor.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var has = require('./_has');
var cof = require('./_cof');
var inheritIfRequired = require('./_inherit-if-required');
var toPrimitive = require('./_to-primitive');
var fails = require('./_fails');
var gOPN = require('./_object-gopn').f;
var gOPD = require('./_object-gopd').f;
var dP = require('./_object-dp').f;
var $trim = require('./_string-trim').trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = require('./_descriptors') ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  require('./_redefine')(global, NUMBER, $Number);
}

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_has":"../../node_modules/core-js/modules/_has.js","./_cof":"../../node_modules/core-js/modules/_cof.js","./_inherit-if-required":"../../node_modules/core-js/modules/_inherit-if-required.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_string-trim":"../../node_modules/core-js/modules/_string-trim.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js"}],"../../node_modules/core-js/modules/_a-number-value.js":[function(require,module,exports) {
var cof = require('./_cof');
module.exports = function (it, msg) {
  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
  return +it;
};

},{"./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/_string-repeat.js":[function(require,module,exports) {
'use strict';
var toInteger = require('./_to-integer');
var defined = require('./_defined');

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/es6.number.to-fixed.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toInteger = require('./_to-integer');
var aNumberValue = require('./_a-number-value');
var repeat = require('./_string-repeat');
var $toFixed = 1.0.toFixed;
var floor = Math.floor;
var data = [0, 0, 0, 0, 0, 0];
var ERROR = 'Number.toFixed: incorrect invocation!';
var ZERO = '0';

var multiply = function (n, c) {
  var i = -1;
  var c2 = c;
  while (++i < 6) {
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};
var divide = function (n) {
  var i = 6;
  var c = 0;
  while (--i >= 0) {
    c += data[i];
    data[i] = floor(c / n);
    c = (c % n) * 1e7;
  }
};
var numToString = function () {
  var i = 6;
  var s = '';
  while (--i >= 0) {
    if (s !== '' || i === 0 || data[i] !== 0) {
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
    }
  } return s;
};
var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};
var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

$export($export.P + $export.F * (!!$toFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !require('./_fails')(function () {
  // V8 ~ Android 4.3-
  $toFixed.call({});
})), 'Number', {
  toFixed: function toFixed(fractionDigits) {
    var x = aNumberValue(this, ERROR);
    var f = toInteger(fractionDigits);
    var s = '';
    var m = ZERO;
    var e, z, j, k;
    if (f < 0 || f > 20) throw RangeError(ERROR);
    // eslint-disable-next-line no-self-compare
    if (x != x) return 'NaN';
    if (x <= -1e21 || x >= 1e21) return String(x);
    if (x < 0) {
      s = '-';
      x = -x;
    }
    if (x > 1e-21) {
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = f;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call(ZERO, f);
      }
    }
    if (f > 0) {
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    } return m;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_a-number-value":"../../node_modules/core-js/modules/_a-number-value.js","./_string-repeat":"../../node_modules/core-js/modules/_string-repeat.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.number.to-precision.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $fails = require('./_fails');
var aNumberValue = require('./_a-number-value');
var $toPrecision = 1.0.toPrecision;

$export($export.P + $export.F * ($fails(function () {
  // IE7-
  return $toPrecision.call(1, undefined) !== '1';
}) || !$fails(function () {
  // V8 ~ Android 4.3-
  $toPrecision.call({});
})), 'Number', {
  toPrecision: function toPrecision(precision) {
    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_a-number-value":"../../node_modules/core-js/modules/_a-number-value.js"}],"../../node_modules/core-js/modules/es6.number.epsilon.js":[function(require,module,exports) {
// 20.1.2.1 Number.EPSILON
var $export = require('./_export');

$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.number.is-finite.js":[function(require,module,exports) {
// 20.1.2.2 Number.isFinite(number)
var $export = require('./_export');
var _isFinite = require('./_global').isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it) {
    return typeof it == 'number' && _isFinite(it);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_is-integer.js":[function(require,module,exports) {
// 20.1.2.3 Number.isInteger(number)
var isObject = require('./_is-object');
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/es6.number.is-integer.js":[function(require,module,exports) {
// 20.1.2.3 Number.isInteger(number)
var $export = require('./_export');

$export($export.S, 'Number', { isInteger: require('./_is-integer') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_is-integer":"../../node_modules/core-js/modules/_is-integer.js"}],"../../node_modules/core-js/modules/es6.number.is-nan.js":[function(require,module,exports) {
// 20.1.2.4 Number.isNaN(number)
var $export = require('./_export');

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.number.is-safe-integer.js":[function(require,module,exports) {
// 20.1.2.5 Number.isSafeInteger(number)
var $export = require('./_export');
var isInteger = require('./_is-integer');
var abs = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_is-integer":"../../node_modules/core-js/modules/_is-integer.js"}],"../../node_modules/core-js/modules/es6.number.max-safe-integer.js":[function(require,module,exports) {
// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.number.min-safe-integer.js":[function(require,module,exports) {
// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.number.parse-float.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseFloat = require('./_parse-float');
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_parse-float":"../../node_modules/core-js/modules/_parse-float.js"}],"../../node_modules/core-js/modules/es6.number.parse-int.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseInt = require('./_parse-int');
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_parse-int":"../../node_modules/core-js/modules/_parse-int.js"}],"../../node_modules/core-js/modules/_math-log1p.js":[function(require,module,exports) {
// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};

},{}],"../../node_modules/core-js/modules/es6.math.acosh.js":[function(require,module,exports) {
// 20.2.2.3 Math.acosh(x)
var $export = require('./_export');
var log1p = require('./_math-log1p');
var sqrt = Math.sqrt;
var $acosh = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-log1p":"../../node_modules/core-js/modules/_math-log1p.js"}],"../../node_modules/core-js/modules/es6.math.asinh.js":[function(require,module,exports) {
// 20.2.2.5 Math.asinh(x)
var $export = require('./_export');
var $asinh = Math.asinh;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.atanh.js":[function(require,module,exports) {
// 20.2.2.7 Math.atanh(x)
var $export = require('./_export');
var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/_math-sign.js":[function(require,module,exports) {
// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};

},{}],"../../node_modules/core-js/modules/es6.math.cbrt.js":[function(require,module,exports) {
// 20.2.2.9 Math.cbrt(x)
var $export = require('./_export');
var sign = require('./_math-sign');

$export($export.S, 'Math', {
  cbrt: function cbrt(x) {
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-sign":"../../node_modules/core-js/modules/_math-sign.js"}],"../../node_modules/core-js/modules/es6.math.clz32.js":[function(require,module,exports) {
// 20.2.2.11 Math.clz32(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.cosh.js":[function(require,module,exports) {
// 20.2.2.12 Math.cosh(x)
var $export = require('./_export');
var exp = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x) {
    return (exp(x = +x) + exp(-x)) / 2;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/_math-expm1.js":[function(require,module,exports) {
// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;

},{}],"../../node_modules/core-js/modules/es6.math.expm1.js":[function(require,module,exports) {
// 20.2.2.14 Math.expm1(x)
var $export = require('./_export');
var $expm1 = require('./_math-expm1');

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-expm1":"../../node_modules/core-js/modules/_math-expm1.js"}],"../../node_modules/core-js/modules/_math-fround.js":[function(require,module,exports) {
// 20.2.2.16 Math.fround(x)
var sign = require('./_math-sign');
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};

},{"./_math-sign":"../../node_modules/core-js/modules/_math-sign.js"}],"../../node_modules/core-js/modules/es6.math.fround.js":[function(require,module,exports) {
// 20.2.2.16 Math.fround(x)
var $export = require('./_export');

$export($export.S, 'Math', { fround: require('./_math-fround') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-fround":"../../node_modules/core-js/modules/_math-fround.js"}],"../../node_modules/core-js/modules/es6.math.hypot.js":[function(require,module,exports) {
// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = require('./_export');
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.imul.js":[function(require,module,exports) {
// 20.2.2.18 Math.imul(x, y)
var $export = require('./_export');
var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * require('./_fails')(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.math.log10.js":[function(require,module,exports) {
// 20.2.2.21 Math.log10(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.log1p.js":[function(require,module,exports) {
// 20.2.2.20 Math.log1p(x)
var $export = require('./_export');

$export($export.S, 'Math', { log1p: require('./_math-log1p') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-log1p":"../../node_modules/core-js/modules/_math-log1p.js"}],"../../node_modules/core-js/modules/es6.math.log2.js":[function(require,module,exports) {
// 20.2.2.22 Math.log2(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.sign.js":[function(require,module,exports) {
// 20.2.2.28 Math.sign(x)
var $export = require('./_export');

$export($export.S, 'Math', { sign: require('./_math-sign') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-sign":"../../node_modules/core-js/modules/_math-sign.js"}],"../../node_modules/core-js/modules/es6.math.sinh.js":[function(require,module,exports) {
// 20.2.2.30 Math.sinh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * require('./_fails')(function () {
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x) {
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-expm1":"../../node_modules/core-js/modules/_math-expm1.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.math.tanh.js":[function(require,module,exports) {
// 20.2.2.33 Math.tanh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-expm1":"../../node_modules/core-js/modules/_math-expm1.js"}],"../../node_modules/core-js/modules/es6.math.trunc.js":[function(require,module,exports) {
// 20.2.2.34 Math.trunc(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  trunc: function trunc(it) {
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.string.from-code-point.js":[function(require,module,exports) {
var $export = require('./_export');
var toAbsoluteIndex = require('./_to-absolute-index');
var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;
    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js"}],"../../node_modules/core-js/modules/es6.string.raw.js":[function(require,module,exports) {
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite) {
    var tpl = toIObject(callSite.raw);
    var len = toLength(tpl.length);
    var aLen = arguments.length;
    var res = [];
    var i = 0;
    while (len > i) {
      res.push(String(tpl[i++]));
      if (i < aLen) res.push(String(arguments[i]));
    } return res.join('');
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js"}],"../../node_modules/core-js/modules/es6.string.trim.js":[function(require,module,exports) {
'use strict';
// 21.1.3.25 String.prototype.trim()
require('./_string-trim')('trim', function ($trim) {
  return function trim() {
    return $trim(this, 3);
  };
});

},{"./_string-trim":"../../node_modules/core-js/modules/_string-trim.js"}],"../../node_modules/core-js/modules/_string-at.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/_iterators.js":[function(require,module,exports) {
module.exports = {};

},{}],"../../node_modules/core-js/modules/_iter-create.js":[function(require,module,exports) {
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

},{"./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_iter-define.js":[function(require,module,exports) {
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

},{"./_library":"../../node_modules/core-js/modules/_library.js","./_export":"../../node_modules/core-js/modules/_export.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_iter-create":"../../node_modules/core-js/modules/_iter-create.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.string.iterator.js":[function(require,module,exports) {
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

},{"./_string-at":"../../node_modules/core-js/modules/_string-at.js","./_iter-define":"../../node_modules/core-js/modules/_iter-define.js"}],"../../node_modules/core-js/modules/es6.string.code-point-at.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $at = require('./_string-at')(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-at":"../../node_modules/core-js/modules/_string-at.js"}],"../../node_modules/core-js/modules/_is-regexp.js":[function(require,module,exports) {
// 7.2.8 IsRegExp(argument)
var isObject = require('./_is-object');
var cof = require('./_cof');
var MATCH = require('./_wks')('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_cof":"../../node_modules/core-js/modules/_cof.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_string-context.js":[function(require,module,exports) {
// helper for String#{startsWith, endsWith, includes}
var isRegExp = require('./_is-regexp');
var defined = require('./_defined');

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};

},{"./_is-regexp":"../../node_modules/core-js/modules/_is-regexp.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/_fails-is-regexp.js":[function(require,module,exports) {
var MATCH = require('./_wks')('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};

},{"./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.string.ends-with.js":[function(require,module,exports) {
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_string-context":"../../node_modules/core-js/modules/_string-context.js","./_fails-is-regexp":"../../node_modules/core-js/modules/_fails-is-regexp.js"}],"../../node_modules/core-js/modules/es6.string.includes.js":[function(require,module,exports) {
// 21.1.3.7 String.prototype.includes(searchString, position = 0)
'use strict';
var $export = require('./_export');
var context = require('./_string-context');
var INCLUDES = 'includes';

$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-context":"../../node_modules/core-js/modules/_string-context.js","./_fails-is-regexp":"../../node_modules/core-js/modules/_fails-is-regexp.js"}],"../../node_modules/core-js/modules/es6.string.repeat.js":[function(require,module,exports) {
var $export = require('./_export');

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: require('./_string-repeat')
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-repeat":"../../node_modules/core-js/modules/_string-repeat.js"}],"../../node_modules/core-js/modules/es6.string.starts-with.js":[function(require,module,exports) {
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_string-context":"../../node_modules/core-js/modules/_string-context.js","./_fails-is-regexp":"../../node_modules/core-js/modules/_fails-is-regexp.js"}],"../../node_modules/core-js/modules/_string-html.js":[function(require,module,exports) {
var $export = require('./_export');
var fails = require('./_fails');
var defined = require('./_defined');
var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function (string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/es6.string.anchor.js":[function(require,module,exports) {
'use strict';
// B.2.3.2 String.prototype.anchor(name)
require('./_string-html')('anchor', function (createHTML) {
  return function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.big.js":[function(require,module,exports) {
'use strict';
// B.2.3.3 String.prototype.big()
require('./_string-html')('big', function (createHTML) {
  return function big() {
    return createHTML(this, 'big', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.blink.js":[function(require,module,exports) {
'use strict';
// B.2.3.4 String.prototype.blink()
require('./_string-html')('blink', function (createHTML) {
  return function blink() {
    return createHTML(this, 'blink', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.bold.js":[function(require,module,exports) {
'use strict';
// B.2.3.5 String.prototype.bold()
require('./_string-html')('bold', function (createHTML) {
  return function bold() {
    return createHTML(this, 'b', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.fixed.js":[function(require,module,exports) {
'use strict';
// B.2.3.6 String.prototype.fixed()
require('./_string-html')('fixed', function (createHTML) {
  return function fixed() {
    return createHTML(this, 'tt', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.fontcolor.js":[function(require,module,exports) {
'use strict';
// B.2.3.7 String.prototype.fontcolor(color)
require('./_string-html')('fontcolor', function (createHTML) {
  return function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.fontsize.js":[function(require,module,exports) {
'use strict';
// B.2.3.8 String.prototype.fontsize(size)
require('./_string-html')('fontsize', function (createHTML) {
  return function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.italics.js":[function(require,module,exports) {
'use strict';
// B.2.3.9 String.prototype.italics()
require('./_string-html')('italics', function (createHTML) {
  return function italics() {
    return createHTML(this, 'i', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.link.js":[function(require,module,exports) {
'use strict';
// B.2.3.10 String.prototype.link(url)
require('./_string-html')('link', function (createHTML) {
  return function link(url) {
    return createHTML(this, 'a', 'href', url);
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.small.js":[function(require,module,exports) {
'use strict';
// B.2.3.11 String.prototype.small()
require('./_string-html')('small', function (createHTML) {
  return function small() {
    return createHTML(this, 'small', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.strike.js":[function(require,module,exports) {
'use strict';
// B.2.3.12 String.prototype.strike()
require('./_string-html')('strike', function (createHTML) {
  return function strike() {
    return createHTML(this, 'strike', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.sub.js":[function(require,module,exports) {
'use strict';
// B.2.3.13 String.prototype.sub()
require('./_string-html')('sub', function (createHTML) {
  return function sub() {
    return createHTML(this, 'sub', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.sup.js":[function(require,module,exports) {
'use strict';
// B.2.3.14 String.prototype.sup()
require('./_string-html')('sup', function (createHTML) {
  return function sup() {
    return createHTML(this, 'sup', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.date.now.js":[function(require,module,exports) {
// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = require('./_export');

$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.date.to-json.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');

$export($export.P + $export.F * require('./_fails')(function () {
  return new Date(NaN).toJSON() !== null
    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
}), 'Date', {
  // eslint-disable-next-line no-unused-vars
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/_date-to-iso-string.js":[function(require,module,exports) {
'use strict';
// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var fails = require('./_fails');
var getTime = Date.prototype.getTime;
var $toISOString = Date.prototype.toISOString;

var lz = function (num) {
  return num > 9 ? num : '0' + num;
};

// PhantomJS / old WebKit has a broken implementations
module.exports = (fails(function () {
  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  $toISOString.call(new Date(NaN));
})) ? function toISOString() {
  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
  var d = this;
  var y = d.getUTCFullYear();
  var m = d.getUTCMilliseconds();
  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
} : $toISOString;

},{"./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.date.to-iso-string.js":[function(require,module,exports) {
// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var $export = require('./_export');
var toISOString = require('./_date-to-iso-string');

// PhantomJS / old WebKit has a broken implementations
$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
  toISOString: toISOString
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_date-to-iso-string":"../../node_modules/core-js/modules/_date-to-iso-string.js"}],"../../node_modules/core-js/modules/es6.date.to-string.js":[function(require,module,exports) {
var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;
if (new Date(NaN) + '' != INVALID_DATE) {
  require('./_redefine')(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}

},{"./_redefine":"../../node_modules/core-js/modules/_redefine.js"}],"../../node_modules/core-js/modules/_date-to-primitive.js":[function(require,module,exports) {
'use strict';
var anObject = require('./_an-object');
var toPrimitive = require('./_to-primitive');
var NUMBER = 'number';

module.exports = function (hint) {
  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js"}],"../../node_modules/core-js/modules/es6.date.to-primitive.js":[function(require,module,exports) {
var TO_PRIMITIVE = require('./_wks')('toPrimitive');
var proto = Date.prototype;

if (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));

},{"./_wks":"../../node_modules/core-js/modules/_wks.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_date-to-primitive":"../../node_modules/core-js/modules/_date-to-primitive.js"}],"../../node_modules/core-js/modules/es6.array.is-array.js":[function(require,module,exports) {
// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = require('./_export');

$export($export.S, 'Array', { isArray: require('./_is-array') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_is-array":"../../node_modules/core-js/modules/_is-array.js"}],"../../node_modules/core-js/modules/_iter-call.js":[function(require,module,exports) {
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/_is-array-iter.js":[function(require,module,exports) {
// check on default Array iterator
var Iterators = require('./_iterators');
var ITERATOR = require('./_wks')('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

},{"./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_create-property.js":[function(require,module,exports) {
'use strict';
var $defineProperty = require('./_object-dp');
var createDesc = require('./_property-desc');

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js"}],"../../node_modules/core-js/modules/core.get-iterator-method.js":[function(require,module,exports) {
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

},{"./_classof":"../../node_modules/core-js/modules/_classof.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_core":"../../node_modules/core-js/modules/_core.js"}],"../../node_modules/core-js/modules/_iter-detect.js":[function(require,module,exports) {
var ITERATOR = require('./_wks')('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

},{"./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.array.from.js":[function(require,module,exports) {
'use strict';
var ctx = require('./_ctx');
var $export = require('./_export');
var toObject = require('./_to-object');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var toLength = require('./_to-length');
var createProperty = require('./_create-property');
var getIterFn = require('./core.get-iterator-method');

$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

},{"./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_iter-call":"../../node_modules/core-js/modules/_iter-call.js","./_is-array-iter":"../../node_modules/core-js/modules/_is-array-iter.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_create-property":"../../node_modules/core-js/modules/_create-property.js","./core.get-iterator-method":"../../node_modules/core-js/modules/core.get-iterator-method.js","./_iter-detect":"../../node_modules/core-js/modules/_iter-detect.js"}],"../../node_modules/core-js/modules/es6.array.of.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var createProperty = require('./_create-property');

// WebKit Array.of isn't generic
$export($export.S + $export.F * require('./_fails')(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */) {
    var index = 0;
    var aLen = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(aLen);
    while (aLen > index) createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_create-property":"../../node_modules/core-js/modules/_create-property.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/_strict-method.js":[function(require,module,exports) {
'use strict';
var fails = require('./_fails');

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};

},{"./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.array.join.js":[function(require,module,exports) {
'use strict';
// 22.1.3.13 Array.prototype.join(separator)
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var arrayJoin = [].join;

// fallback for not array-like strings
$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {
  join: function join(separator) {
    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_iobject":"../../node_modules/core-js/modules/_iobject.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/es6.array.slice.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var html = require('./_html');
var cof = require('./_cof');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
var arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
$export($export.P + $export.F * require('./_fails')(function () {
  if (html) arraySlice.call(html);
}), 'Array', {
  slice: function slice(begin, end) {
    var len = toLength(this.length);
    var klass = cof(this);
    end = end === undefined ? len : end;
    if (klass == 'Array') return arraySlice.call(this, begin, end);
    var start = toAbsoluteIndex(begin, len);
    var upTo = toAbsoluteIndex(end, len);
    var size = toLength(upTo - start);
    var cloned = new Array(size);
    var i = 0;
    for (; i < size; i++) cloned[i] = klass == 'String'
      ? this.charAt(start + i)
      : this[start + i];
    return cloned;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_html":"../../node_modules/core-js/modules/_html.js","./_cof":"../../node_modules/core-js/modules/_cof.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.array.sort.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var aFunction = require('./_a-function');
var toObject = require('./_to-object');
var fails = require('./_fails');
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !require('./_strict-method')($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/_array-species-constructor.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var isArray = require('./_is-array');
var SPECIES = require('./_wks')('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_is-array":"../../node_modules/core-js/modules/_is-array.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_array-species-create.js":[function(require,module,exports) {
// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = require('./_array-species-constructor');

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};

},{"./_array-species-constructor":"../../node_modules/core-js/modules/_array-species-constructor.js"}],"../../node_modules/core-js/modules/_array-methods.js":[function(require,module,exports) {
// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = require('./_ctx');
var IObject = require('./_iobject');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var asc = require('./_array-species-create');
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

},{"./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_iobject":"../../node_modules/core-js/modules/_iobject.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_array-species-create":"../../node_modules/core-js/modules/_array-species-create.js"}],"../../node_modules/core-js/modules/es6.array.for-each.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $forEach = require('./_array-methods')(0);
var STRICT = require('./_strict-method')([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */) {
    return $forEach(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/es6.array.map.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $map = require('./_array-methods')(1);

$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/es6.array.filter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $filter = require('./_array-methods')(2);

$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/es6.array.some.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $some = require('./_array-methods')(3);

$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/es6.array.every.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $every = require('./_array-methods')(4);

$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {
  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/_array-reduce.js":[function(require,module,exports) {
var aFunction = require('./_a-function');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var toLength = require('./_to-length');

module.exports = function (that, callbackfn, aLen, memo, isRight) {
  aFunction(callbackfn);
  var O = toObject(that);
  var self = IObject(O);
  var length = toLength(O.length);
  var index = isRight ? length - 1 : 0;
  var i = isRight ? -1 : 1;
  if (aLen < 2) for (;;) {
    if (index in self) {
      memo = self[index];
      index += i;
      break;
    }
    index += i;
    if (isRight ? index < 0 : length <= index) {
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
    memo = callbackfn(memo, self[index], index, O);
  }
  return memo;
};

},{"./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_iobject":"../../node_modules/core-js/modules/_iobject.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js"}],"../../node_modules/core-js/modules/es6.array.reduce.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $reduce = require('./_array-reduce');

$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-reduce":"../../node_modules/core-js/modules/_array-reduce.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/es6.array.reduce-right.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $reduce = require('./_array-reduce');

$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {
  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-reduce":"../../node_modules/core-js/modules/_array-reduce.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/es6.array.index-of.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $indexOf = require('./_array-includes')(false);
var $native = [].indexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-includes":"../../node_modules/core-js/modules/_array-includes.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/es6.array.last-index-of.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
var $native = [].lastIndexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
    var O = toIObject(this);
    var length = toLength(O.length);
    var index = length - 1;
    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
    if (index < 0) index = length + index;
    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
    return -1;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/_array-copy-within.js":[function(require,module,exports) {
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};

},{"./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js"}],"../../node_modules/core-js/modules/_add-to-unscopables.js":[function(require,module,exports) {
// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = require('./_wks')('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

},{"./_wks":"../../node_modules/core-js/modules/_wks.js","./_hide":"../../node_modules/core-js/modules/_hide.js"}],"../../node_modules/core-js/modules/es6.array.copy-within.js":[function(require,module,exports) {
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });

require('./_add-to-unscopables')('copyWithin');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-copy-within":"../../node_modules/core-js/modules/_array-copy-within.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/_array-fill.js":[function(require,module,exports) {
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};

},{"./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js"}],"../../node_modules/core-js/modules/es6.array.fill.js":[function(require,module,exports) {
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { fill: require('./_array-fill') });

require('./_add-to-unscopables')('fill');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-fill":"../../node_modules/core-js/modules/_array-fill.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/es6.array.find.js":[function(require,module,exports) {
'use strict';
// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/es6.array.find-index.js":[function(require,module,exports) {
'use strict';
// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/_set-species.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var dP = require('./_object-dp');
var DESCRIPTORS = require('./_descriptors');
var SPECIES = require('./_wks')('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.array.species.js":[function(require,module,exports) {
require('./_set-species')('Array');

},{"./_set-species":"../../node_modules/core-js/modules/_set-species.js"}],"../../node_modules/core-js/modules/_iter-step.js":[function(require,module,exports) {
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

},{}],"../../node_modules/core-js/modules/es6.array.iterator.js":[function(require,module,exports) {
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

},{"./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js","./_iter-step":"../../node_modules/core-js/modules/_iter-step.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_iter-define":"../../node_modules/core-js/modules/_iter-define.js"}],"../../node_modules/core-js/modules/_flags.js":[function(require,module,exports) {
'use strict';
// 21.2.5.3 get RegExp.prototype.flags
var anObject = require('./_an-object');
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.regexp.constructor.js":[function(require,module,exports) {

var global = require('./_global');
var inheritIfRequired = require('./_inherit-if-required');
var dP = require('./_object-dp').f;
var gOPN = require('./_object-gopn').f;
var isRegExp = require('./_is-regexp');
var $flags = require('./_flags');
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {
  re2[require('./_wks')('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  require('./_redefine')(global, 'RegExp', $RegExp);
}

require('./_set-species')('RegExp');

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_inherit-if-required":"../../node_modules/core-js/modules/_inherit-if-required.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_is-regexp":"../../node_modules/core-js/modules/_is-regexp.js","./_flags":"../../node_modules/core-js/modules/_flags.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js"}],"../../node_modules/core-js/modules/_regexp-exec.js":[function(require,module,exports) {
'use strict';

var regexpFlags = require('./_flags');

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;

},{"./_flags":"../../node_modules/core-js/modules/_flags.js"}],"../../node_modules/core-js/modules/es6.regexp.exec.js":[function(require,module,exports) {
'use strict';
var regexpExec = require('./_regexp-exec');
require('./_export')({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});

},{"./_regexp-exec":"../../node_modules/core-js/modules/_regexp-exec.js","./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.regexp.flags.js":[function(require,module,exports) {
// 21.2.5.3 get RegExp.prototype.flags()
if (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {
  configurable: true,
  get: require('./_flags')
});

},{"./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_flags":"../../node_modules/core-js/modules/_flags.js"}],"../../node_modules/core-js/modules/es6.regexp.to-string.js":[function(require,module,exports) {

'use strict';
require('./es6.regexp.flags');
var anObject = require('./_an-object');
var $flags = require('./_flags');
var DESCRIPTORS = require('./_descriptors');
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}

},{"./es6.regexp.flags":"../../node_modules/core-js/modules/es6.regexp.flags.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_flags":"../../node_modules/core-js/modules/_flags.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/_advance-string-index.js":[function(require,module,exports) {
'use strict';
var at = require('./_string-at')(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};

},{"./_string-at":"../../node_modules/core-js/modules/_string-at.js"}],"../../node_modules/core-js/modules/_regexp-exec-abstract.js":[function(require,module,exports) {
'use strict';

var classof = require('./_classof');
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};

},{"./_classof":"../../node_modules/core-js/modules/_classof.js"}],"../../node_modules/core-js/modules/_fix-re-wks.js":[function(require,module,exports) {
'use strict';
require('./es6.regexp.exec');
var redefine = require('./_redefine');
var hide = require('./_hide');
var fails = require('./_fails');
var defined = require('./_defined');
var wks = require('./_wks');
var regexpExec = require('./_regexp-exec');

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};

},{"./es6.regexp.exec":"../../node_modules/core-js/modules/es6.regexp.exec.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_defined":"../../node_modules/core-js/modules/_defined.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_regexp-exec":"../../node_modules/core-js/modules/_regexp-exec.js"}],"../../node_modules/core-js/modules/es6.regexp.match.js":[function(require,module,exports) {
'use strict';

var anObject = require('./_an-object');
var toLength = require('./_to-length');
var advanceStringIndex = require('./_advance-string-index');
var regExpExec = require('./_regexp-exec-abstract');

// @@match logic
require('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative($match, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      if (!rx.global) return regExpExec(rx, S);
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_advance-string-index":"../../node_modules/core-js/modules/_advance-string-index.js","./_regexp-exec-abstract":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","./_fix-re-wks":"../../node_modules/core-js/modules/_fix-re-wks.js"}],"../../node_modules/core-js/modules/es6.regexp.replace.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';

var anObject = require('./_an-object');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var toInteger = require('./_to-integer');
var advanceStringIndex = require('./_advance-string-index');
var regExpExec = require('./_regexp-exec-abstract');
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
require('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_advance-string-index":"../../node_modules/core-js/modules/_advance-string-index.js","./_regexp-exec-abstract":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","./_fix-re-wks":"../../node_modules/core-js/modules/_fix-re-wks.js"}],"../../node_modules/core-js/modules/es6.regexp.search.js":[function(require,module,exports) {
'use strict';

var anObject = require('./_an-object');
var sameValue = require('./_same-value');
var regExpExec = require('./_regexp-exec-abstract');

// @@search logic
require('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative($search, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_same-value":"../../node_modules/core-js/modules/_same-value.js","./_regexp-exec-abstract":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","./_fix-re-wks":"../../node_modules/core-js/modules/_fix-re-wks.js"}],"../../node_modules/core-js/modules/_species-constructor.js":[function(require,module,exports) {
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var SPECIES = require('./_wks')('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.regexp.split.js":[function(require,module,exports) {
'use strict';

var isRegExp = require('./_is-regexp');
var anObject = require('./_an-object');
var speciesConstructor = require('./_species-constructor');
var advanceStringIndex = require('./_advance-string-index');
var toLength = require('./_to-length');
var callRegExpExec = require('./_regexp-exec-abstract');
var regexpExec = require('./_regexp-exec');
var fails = require('./_fails');
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
require('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});

},{"./_is-regexp":"../../node_modules/core-js/modules/_is-regexp.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./_advance-string-index":"../../node_modules/core-js/modules/_advance-string-index.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_regexp-exec-abstract":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","./_regexp-exec":"../../node_modules/core-js/modules/_regexp-exec.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_fix-re-wks":"../../node_modules/core-js/modules/_fix-re-wks.js"}],"../../node_modules/core-js/modules/_an-instance.js":[function(require,module,exports) {
module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

},{}],"../../node_modules/core-js/modules/_for-of.js":[function(require,module,exports) {
var ctx = require('./_ctx');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var anObject = require('./_an-object');
var toLength = require('./_to-length');
var getIterFn = require('./core.get-iterator-method');
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;

},{"./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_iter-call":"../../node_modules/core-js/modules/_iter-call.js","./_is-array-iter":"../../node_modules/core-js/modules/_is-array-iter.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./core.get-iterator-method":"../../node_modules/core-js/modules/core.get-iterator-method.js"}],"../../node_modules/core-js/modules/_task.js":[function(require,module,exports) {


var ctx = require('./_ctx');
var invoke = require('./_invoke');
var html = require('./_html');
var cel = require('./_dom-create');
var global = require('./_global');
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (require('./_cof')(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};

},{"./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_invoke":"../../node_modules/core-js/modules/_invoke.js","./_html":"../../node_modules/core-js/modules/_html.js","./_dom-create":"../../node_modules/core-js/modules/_dom-create.js","./_global":"../../node_modules/core-js/modules/_global.js","./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/_microtask.js":[function(require,module,exports) {


var global = require('./_global');
var macrotask = require('./_task').set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = require('./_cof')(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_task":"../../node_modules/core-js/modules/_task.js","./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/_new-promise-capability.js":[function(require,module,exports) {
'use strict';
// 25.4.1.5 NewPromiseCapability(C)
var aFunction = require('./_a-function');

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};

},{"./_a-function":"../../node_modules/core-js/modules/_a-function.js"}],"../../node_modules/core-js/modules/_perform.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

},{}],"../../node_modules/core-js/modules/_user-agent.js":[function(require,module,exports) {

var global = require('./_global');
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';

},{"./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_promise-resolve.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var newPromiseCapability = require('./_new-promise-capability');

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_new-promise-capability":"../../node_modules/core-js/modules/_new-promise-capability.js"}],"../../node_modules/core-js/modules/_redefine-all.js":[function(require,module,exports) {
var redefine = require('./_redefine');
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};

},{"./_redefine":"../../node_modules/core-js/modules/_redefine.js"}],"../../node_modules/core-js/modules/es6.promise.js":[function(require,module,exports) {


'use strict';
var LIBRARY = require('./_library');
var global = require('./_global');
var ctx = require('./_ctx');
var classof = require('./_classof');
var $export = require('./_export');
var isObject = require('./_is-object');
var aFunction = require('./_a-function');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var speciesConstructor = require('./_species-constructor');
var task = require('./_task').set;
var microtask = require('./_microtask')();
var newPromiseCapabilityModule = require('./_new-promise-capability');
var perform = require('./_perform');
var userAgent = require('./_user-agent');
var promiseResolve = require('./_promise-resolve');
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
require('./_set-to-string-tag')($Promise, PROMISE);
require('./_set-species')(PROMISE);
Wrapper = require('./_core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

},{"./_library":"../../node_modules/core-js/modules/_library.js","./_global":"../../node_modules/core-js/modules/_global.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_classof":"../../node_modules/core-js/modules/_classof.js","./_export":"../../node_modules/core-js/modules/_export.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./_task":"../../node_modules/core-js/modules/_task.js","./_microtask":"../../node_modules/core-js/modules/_microtask.js","./_new-promise-capability":"../../node_modules/core-js/modules/_new-promise-capability.js","./_perform":"../../node_modules/core-js/modules/_perform.js","./_user-agent":"../../node_modules/core-js/modules/_user-agent.js","./_promise-resolve":"../../node_modules/core-js/modules/_promise-resolve.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js","./_core":"../../node_modules/core-js/modules/_core.js","./_iter-detect":"../../node_modules/core-js/modules/_iter-detect.js"}],"../../node_modules/core-js/modules/_validate-collection.js":[function(require,module,exports) {
var isObject = require('./_is-object');
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/_collection-strong.js":[function(require,module,exports) {
'use strict';
var dP = require('./_object-dp').f;
var create = require('./_object-create');
var redefineAll = require('./_redefine-all');
var ctx = require('./_ctx');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var $iterDefine = require('./_iter-define');
var step = require('./_iter-step');
var setSpecies = require('./_set-species');
var DESCRIPTORS = require('./_descriptors');
var fastKey = require('./_meta').fastKey;
var validate = require('./_validate-collection');
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js","./_iter-define":"../../node_modules/core-js/modules/_iter-define.js","./_iter-step":"../../node_modules/core-js/modules/_iter-step.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js"}],"../../node_modules/core-js/modules/_collection.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var $export = require('./_export');
var redefine = require('./_redefine');
var redefineAll = require('./_redefine-all');
var meta = require('./_meta');
var forOf = require('./_for-of');
var anInstance = require('./_an-instance');
var isObject = require('./_is-object');
var fails = require('./_fails');
var $iterDetect = require('./_iter-detect');
var setToStringTag = require('./_set-to-string-tag');
var inheritIfRequired = require('./_inherit-if-required');

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_export":"../../node_modules/core-js/modules/_export.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_iter-detect":"../../node_modules/core-js/modules/_iter-detect.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_inherit-if-required":"../../node_modules/core-js/modules/_inherit-if-required.js"}],"../../node_modules/core-js/modules/es6.map.js":[function(require,module,exports) {
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var MAP = 'Map';

// 23.1 Map Objects
module.exports = require('./_collection')(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);

},{"./_collection-strong":"../../node_modules/core-js/modules/_collection-strong.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js","./_collection":"../../node_modules/core-js/modules/_collection.js"}],"../../node_modules/core-js/modules/es6.set.js":[function(require,module,exports) {
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var SET = 'Set';

// 23.2 Set Objects
module.exports = require('./_collection')(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);

},{"./_collection-strong":"../../node_modules/core-js/modules/_collection-strong.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js","./_collection":"../../node_modules/core-js/modules/_collection.js"}],"../../node_modules/core-js/modules/_collection-weak.js":[function(require,module,exports) {
'use strict';
var redefineAll = require('./_redefine-all');
var getWeak = require('./_meta').getWeak;
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var createArrayMethod = require('./_array-methods');
var $has = require('./_has');
var validate = require('./_validate-collection');
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function () {
  this.a = [];
};
var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;      // collection type
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};

},{"./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_has":"../../node_modules/core-js/modules/_has.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js"}],"../../node_modules/core-js/modules/es6.weak-map.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var each = require('./_array-methods')(0);
var redefine = require('./_redefine');
var meta = require('./_meta');
var assign = require('./_object-assign');
var weak = require('./_collection-weak');
var isObject = require('./_is-object');
var validate = require('./_validate-collection');
var NATIVE_WEAK_MAP = require('./_validate-collection');
var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var InternalMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_object-assign":"../../node_modules/core-js/modules/_object-assign.js","./_collection-weak":"../../node_modules/core-js/modules/_collection-weak.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js","./_collection":"../../node_modules/core-js/modules/_collection.js"}],"../../node_modules/core-js/modules/es6.weak-set.js":[function(require,module,exports) {
'use strict';
var weak = require('./_collection-weak');
var validate = require('./_validate-collection');
var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
require('./_collection')(WEAK_SET, function (get) {
  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value) {
    return weak.def(validate(this, WEAK_SET), value, true);
  }
}, weak, false, true);

},{"./_collection-weak":"../../node_modules/core-js/modules/_collection-weak.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js","./_collection":"../../node_modules/core-js/modules/_collection.js"}],"../../node_modules/core-js/modules/_typed.js":[function(require,module,exports) {

var global = require('./_global');
var hide = require('./_hide');
var uid = require('./_uid');
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_uid":"../../node_modules/core-js/modules/_uid.js"}],"../../node_modules/core-js/modules/_to-index.js":[function(require,module,exports) {
// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js"}],"../../node_modules/core-js/modules/_typed-buffer.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var DESCRIPTORS = require('./_descriptors');
var LIBRARY = require('./_library');
var $typed = require('./_typed');
var hide = require('./_hide');
var redefineAll = require('./_redefine-all');
var fails = require('./_fails');
var anInstance = require('./_an-instance');
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
var toIndex = require('./_to-index');
var gOPN = require('./_object-gopn').f;
var dP = require('./_object-dp').f;
var arrayFill = require('./_array-fill');
var setToStringTag = require('./_set-to-string-tag');
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_library":"../../node_modules/core-js/modules/_library.js","./_typed":"../../node_modules/core-js/modules/_typed.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_to-index":"../../node_modules/core-js/modules/_to-index.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_array-fill":"../../node_modules/core-js/modules/_array-fill.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js"}],"../../node_modules/core-js/modules/es6.typed.array-buffer.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $typed = require('./_typed');
var buffer = require('./_typed-buffer');
var anObject = require('./_an-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
var isObject = require('./_is-object');
var ArrayBuffer = require('./_global').ArrayBuffer;
var speciesConstructor = require('./_species-constructor');
var $ArrayBuffer = buffer.ArrayBuffer;
var $DataView = buffer.DataView;
var $isView = $typed.ABV && ArrayBuffer.isView;
var $slice = $ArrayBuffer.prototype.slice;
var VIEW = $typed.VIEW;
var ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it) {
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * require('./_fails')(function () {
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end) {
    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
    var len = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, len);
    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
    var viewS = new $DataView(this);
    var viewT = new $DataView(result);
    var index = 0;
    while (first < fin) {
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

require('./_set-species')(ARRAY_BUFFER);

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_typed":"../../node_modules/core-js/modules/_typed.js","./_typed-buffer":"../../node_modules/core-js/modules/_typed-buffer.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_global":"../../node_modules/core-js/modules/_global.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js"}],"../../node_modules/core-js/modules/es6.typed.data-view.js":[function(require,module,exports) {
var $export = require('./_export');
$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {
  DataView: require('./_typed-buffer').DataView
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_typed":"../../node_modules/core-js/modules/_typed.js","./_typed-buffer":"../../node_modules/core-js/modules/_typed-buffer.js"}],"../../node_modules/core-js/modules/_typed-array.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';
if (require('./_descriptors')) {
  var LIBRARY = require('./_library');
  var global = require('./_global');
  var fails = require('./_fails');
  var $export = require('./_export');
  var $typed = require('./_typed');
  var $buffer = require('./_typed-buffer');
  var ctx = require('./_ctx');
  var anInstance = require('./_an-instance');
  var propertyDesc = require('./_property-desc');
  var hide = require('./_hide');
  var redefineAll = require('./_redefine-all');
  var toInteger = require('./_to-integer');
  var toLength = require('./_to-length');
  var toIndex = require('./_to-index');
  var toAbsoluteIndex = require('./_to-absolute-index');
  var toPrimitive = require('./_to-primitive');
  var has = require('./_has');
  var classof = require('./_classof');
  var isObject = require('./_is-object');
  var toObject = require('./_to-object');
  var isArrayIter = require('./_is-array-iter');
  var create = require('./_object-create');
  var getPrototypeOf = require('./_object-gpo');
  var gOPN = require('./_object-gopn').f;
  var getIterFn = require('./core.get-iterator-method');
  var uid = require('./_uid');
  var wks = require('./_wks');
  var createArrayMethod = require('./_array-methods');
  var createArrayIncludes = require('./_array-includes');
  var speciesConstructor = require('./_species-constructor');
  var ArrayIterators = require('./es6.array.iterator');
  var Iterators = require('./_iterators');
  var $iterDetect = require('./_iter-detect');
  var setSpecies = require('./_set-species');
  var arrayFill = require('./_array-fill');
  var arrayCopyWithin = require('./_array-copy-within');
  var $DP = require('./_object-dp');
  var $GOPD = require('./_object-gopd');
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };

},{"./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_library":"../../node_modules/core-js/modules/_library.js","./_global":"../../node_modules/core-js/modules/_global.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_export":"../../node_modules/core-js/modules/_export.js","./_typed":"../../node_modules/core-js/modules/_typed.js","./_typed-buffer":"../../node_modules/core-js/modules/_typed-buffer.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_to-index":"../../node_modules/core-js/modules/_to-index.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_has":"../../node_modules/core-js/modules/_has.js","./_classof":"../../node_modules/core-js/modules/_classof.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_is-array-iter":"../../node_modules/core-js/modules/_is-array-iter.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./core.get-iterator-method":"../../node_modules/core-js/modules/core.get-iterator-method.js","./_uid":"../../node_modules/core-js/modules/_uid.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_array-includes":"../../node_modules/core-js/modules/_array-includes.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./es6.array.iterator":"../../node_modules/core-js/modules/es6.array.iterator.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_iter-detect":"../../node_modules/core-js/modules/_iter-detect.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js","./_array-fill":"../../node_modules/core-js/modules/_array-fill.js","./_array-copy-within":"../../node_modules/core-js/modules/_array-copy-within.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js"}],"../../node_modules/core-js/modules/es6.typed.int8-array.js":[function(require,module,exports) {
require('./_typed-array')('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.uint8-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.int16-array.js":[function(require,module,exports) {
require('./_typed-array')('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.uint16-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.int32-array.js":[function(require,module,exports) {
require('./_typed-array')('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.uint32-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.float32-array.js":[function(require,module,exports) {
require('./_typed-array')('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.float64-array.js":[function(require,module,exports) {
require('./_typed-array')('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.reflect.apply.js":[function(require,module,exports) {
// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export = require('./_export');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var rApply = (require('./_global').Reflect || {}).apply;
var fApply = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !require('./_fails')(function () {
  rApply(function () { /* empty */ });
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList) {
    var T = aFunction(target);
    var L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_global":"../../node_modules/core-js/modules/_global.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.reflect.construct.js":[function(require,module,exports) {
// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = require('./_export');
var create = require('./_object-create');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var fails = require('./_fails');
var bind = require('./_bind');
var rConstruct = (require('./_global').Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_bind":"../../node_modules/core-js/modules/_bind.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/es6.reflect.define-property.js":[function(require,module,exports) {
// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP = require('./_object-dp');
var $export = require('./_export');
var anObject = require('./_an-object');
var toPrimitive = require('./_to-primitive');

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * require('./_fails')(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_export":"../../node_modules/core-js/modules/_export.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.reflect.delete-property.js":[function(require,module,exports) {
// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export = require('./_export');
var gOPD = require('./_object-gopd').f;
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.enumerate.js":[function(require,module,exports) {
'use strict';
// 26.1.5 Reflect.enumerate(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var Enumerate = function (iterated) {
  this._t = anObject(iterated); // target
  this._i = 0;                  // next index
  var keys = this._k = [];      // keys
  var key;
  for (key in iterated) keys.push(key);
};
require('./_iter-create')(Enumerate, 'Object', function () {
  var that = this;
  var keys = that._k;
  var key;
  do {
    if (that._i >= keys.length) return { value: undefined, done: true };
  } while (!((key = keys[that._i++]) in that._t));
  return { value: key, done: false };
});

$export($export.S, 'Reflect', {
  enumerate: function enumerate(target) {
    return new Enumerate(target);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_iter-create":"../../node_modules/core-js/modules/_iter-create.js"}],"../../node_modules/core-js/modules/es6.reflect.get.js":[function(require,module,exports) {
// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var isObject = require('./_is-object');
var anObject = require('./_an-object');

function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', { get: get });

},{"./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_has":"../../node_modules/core-js/modules/_has.js","./_export":"../../node_modules/core-js/modules/_export.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js":[function(require,module,exports) {
// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD = require('./_object-gopd');
var $export = require('./_export');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return gOPD.f(anObject(target), propertyKey);
  }
});

},{"./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_export":"../../node_modules/core-js/modules/_export.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.get-prototype-of.js":[function(require,module,exports) {
// 26.1.8 Reflect.getPrototypeOf(target)
var $export = require('./_export');
var getProto = require('./_object-gpo');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target) {
    return getProto(anObject(target));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.has.js":[function(require,module,exports) {
// 26.1.9 Reflect.has(target, propertyKey)
var $export = require('./_export');

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.reflect.is-extensible.js":[function(require,module,exports) {
// 26.1.10 Reflect.isExtensible(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/_own-keys.js":[function(require,module,exports) {
// all object keys, includes non-enumerable and symbols
var gOPN = require('./_object-gopn');
var gOPS = require('./_object-gops');
var anObject = require('./_an-object');
var Reflect = require('./_global').Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};

},{"./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_object-gops":"../../node_modules/core-js/modules/_object-gops.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/es6.reflect.own-keys.js":[function(require,module,exports) {
// 26.1.11 Reflect.ownKeys(target)
var $export = require('./_export');

$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_own-keys":"../../node_modules/core-js/modules/_own-keys.js"}],"../../node_modules/core-js/modules/es6.reflect.prevent-extensions.js":[function(require,module,exports) {
// 26.1.12 Reflect.preventExtensions(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      if ($preventExtensions) $preventExtensions(target);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.set.js":[function(require,module,exports) {
// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP = require('./_object-dp');
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var createDesc = require('./_property-desc');
var anObject = require('./_an-object');
var isObject = require('./_is-object');

function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDesc = gOPD.f(anObject(target), propertyKey);
  var existingDescriptor, proto;
  if (!ownDesc) {
    if (isObject(proto = getPrototypeOf(target))) {
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if (has(ownDesc, 'value')) {
    if (ownDesc.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
    } else dP.f(receiver, propertyKey, createDesc(0, V));
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', { set: set });

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_has":"../../node_modules/core-js/modules/_has.js","./_export":"../../node_modules/core-js/modules/_export.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/es6.reflect.set-prototype-of.js":[function(require,module,exports) {
// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export = require('./_export');
var setProto = require('./_set-proto');

if (setProto) $export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_set-proto":"../../node_modules/core-js/modules/_set-proto.js"}],"../../node_modules/core-js/modules/es7.array.includes.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/Array.prototype.includes
var $export = require('./_export');
var $includes = require('./_array-includes')(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

require('./_add-to-unscopables')('includes');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-includes":"../../node_modules/core-js/modules/_array-includes.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/_flatten-into-array.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var isArray = require('./_is-array');
var isObject = require('./_is-object');
var toLength = require('./_to-length');
var ctx = require('./_ctx');
var IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');

function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
  var element, spreadable;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      spreadable = false;
      if (isObject(element)) {
        spreadable = element[IS_CONCAT_SPREADABLE];
        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
      }

      if (spreadable && depth > 0) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
}

module.exports = flattenIntoArray;

},{"./_is-array":"../../node_modules/core-js/modules/_is-array.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es7.array.flat-map.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
var $export = require('./_export');
var flattenIntoArray = require('./_flatten-into-array');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var aFunction = require('./_a-function');
var arraySpeciesCreate = require('./_array-species-create');

$export($export.P, 'Array', {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen, A;
    aFunction(callbackfn);
    sourceLen = toLength(O.length);
    A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
    return A;
  }
});

require('./_add-to-unscopables')('flatMap');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_flatten-into-array":"../../node_modules/core-js/modules/_flatten-into-array.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_array-species-create":"../../node_modules/core-js/modules/_array-species-create.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/es7.array.flatten.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
var $export = require('./_export');
var flattenIntoArray = require('./_flatten-into-array');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var toInteger = require('./_to-integer');
var arraySpeciesCreate = require('./_array-species-create');

$export($export.P, 'Array', {
  flatten: function flatten(/* depthArg = 1 */) {
    var depthArg = arguments[0];
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
    return A;
  }
});

require('./_add-to-unscopables')('flatten');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_flatten-into-array":"../../node_modules/core-js/modules/_flatten-into-array.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_array-species-create":"../../node_modules/core-js/modules/_array-species-create.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/es7.string.at.js":[function(require,module,exports) {
'use strict';
// https://github.com/mathiasbynens/String.prototype.at
var $export = require('./_export');
var $at = require('./_string-at')(true);

$export($export.P, 'String', {
  at: function at(pos) {
    return $at(this, pos);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-at":"../../node_modules/core-js/modules/_string-at.js"}],"../../node_modules/core-js/modules/_string-pad.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-string-pad-start-end
var toLength = require('./_to-length');
var repeat = require('./_string-repeat');
var defined = require('./_defined');

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};

},{"./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_string-repeat":"../../node_modules/core-js/modules/_string-repeat.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/es7.string.pad-start.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-pad":"../../node_modules/core-js/modules/_string-pad.js","./_user-agent":"../../node_modules/core-js/modules/_user-agent.js"}],"../../node_modules/core-js/modules/es7.string.pad-end.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-pad":"../../node_modules/core-js/modules/_string-pad.js","./_user-agent":"../../node_modules/core-js/modules/_user-agent.js"}],"../../node_modules/core-js/modules/es7.string.trim-left.js":[function(require,module,exports) {
'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
require('./_string-trim')('trimLeft', function ($trim) {
  return function trimLeft() {
    return $trim(this, 1);
  };
}, 'trimStart');

},{"./_string-trim":"../../node_modules/core-js/modules/_string-trim.js"}],"../../node_modules/core-js/modules/es7.string.trim-right.js":[function(require,module,exports) {
'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
require('./_string-trim')('trimRight', function ($trim) {
  return function trimRight() {
    return $trim(this, 2);
  };
}, 'trimEnd');

},{"./_string-trim":"../../node_modules/core-js/modules/_string-trim.js"}],"../../node_modules/core-js/modules/es7.string.match-all.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/String.prototype.matchAll/
var $export = require('./_export');
var defined = require('./_defined');
var toLength = require('./_to-length');
var isRegExp = require('./_is-regexp');
var getFlags = require('./_flags');
var RegExpProto = RegExp.prototype;

var $RegExpStringIterator = function (regexp, string) {
  this._r = regexp;
  this._s = string;
};

require('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {
  var match = this._r.exec(this._s);
  return { value: match, done: match === null };
});

$export($export.P, 'String', {
  matchAll: function matchAll(regexp) {
    defined(this);
    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
    var S = String(this);
    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);
    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
    rx.lastIndex = toLength(regexp.lastIndex);
    return new $RegExpStringIterator(rx, S);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_defined":"../../node_modules/core-js/modules/_defined.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_is-regexp":"../../node_modules/core-js/modules/_is-regexp.js","./_flags":"../../node_modules/core-js/modules/_flags.js","./_iter-create":"../../node_modules/core-js/modules/_iter-create.js"}],"../../node_modules/core-js/modules/es7.symbol.async-iterator.js":[function(require,module,exports) {
require('./_wks-define')('asyncIterator');

},{"./_wks-define":"../../node_modules/core-js/modules/_wks-define.js"}],"../../node_modules/core-js/modules/es7.symbol.observable.js":[function(require,module,exports) {
require('./_wks-define')('observable');

},{"./_wks-define":"../../node_modules/core-js/modules/_wks-define.js"}],"../../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = require('./_export');
var ownKeys = require('./_own-keys');
var toIObject = require('./_to-iobject');
var gOPD = require('./_object-gopd');
var createProperty = require('./_create-property');

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_own-keys":"../../node_modules/core-js/modules/_own-keys.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_create-property":"../../node_modules/core-js/modules/_create-property.js"}],"../../node_modules/core-js/modules/_object-to-array.js":[function(require,module,exports) {
var getKeys = require('./_object-keys');
var toIObject = require('./_to-iobject');
var isEnum = require('./_object-pie').f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) if (isEnum.call(O, key = keys[i++])) {
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};

},{"./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_object-pie":"../../node_modules/core-js/modules/_object-pie.js"}],"../../node_modules/core-js/modules/es7.object.values.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $values = require('./_object-to-array')(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-to-array":"../../node_modules/core-js/modules/_object-to-array.js"}],"../../node_modules/core-js/modules/es7.object.entries.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $entries = require('./_object-to-array')(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-to-array":"../../node_modules/core-js/modules/_object-to-array.js"}],"../../node_modules/core-js/modules/_object-forced-pam.js":[function(require,module,exports) {
'use strict';
// Forced replacement prototype accessors methods
module.exports = require('./_library') || !require('./_fails')(function () {
  var K = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call
  __defineSetter__.call(null, K, function () { /* empty */ });
  delete require('./_global')[K];
});

},{"./_library":"../../node_modules/core-js/modules/_library.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/es7.object.define-getter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var aFunction = require('./_a-function');
var $defineProperty = require('./_object-dp');

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineGetter__: function __defineGetter__(P, getter) {
    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"../../node_modules/core-js/modules/_object-forced-pam.js"}],"../../node_modules/core-js/modules/es7.object.define-setter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var aFunction = require('./_a-function');
var $defineProperty = require('./_object-dp');

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineSetter__: function __defineSetter__(P, setter) {
    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"../../node_modules/core-js/modules/_object-forced-pam.js"}],"../../node_modules/core-js/modules/es7.object.lookup-getter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');
var getPrototypeOf = require('./_object-gpo');
var getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupGetter__: function __lookupGetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
    } while (O = getPrototypeOf(O));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"../../node_modules/core-js/modules/_object-forced-pam.js"}],"../../node_modules/core-js/modules/es7.object.lookup-setter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');
var getPrototypeOf = require('./_object-gpo');
var getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupSetter__: function __lookupSetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
    } while (O = getPrototypeOf(O));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"../../node_modules/core-js/modules/_object-forced-pam.js"}],"../../node_modules/core-js/modules/_array-from-iterable.js":[function(require,module,exports) {
var forOf = require('./_for-of');

module.exports = function (iter, ITERATOR) {
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};

},{"./_for-of":"../../node_modules/core-js/modules/_for-of.js"}],"../../node_modules/core-js/modules/_collection-to-json.js":[function(require,module,exports) {
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = require('./_classof');
var from = require('./_array-from-iterable');
module.exports = function (NAME) {
  return function toJSON() {
    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};

},{"./_classof":"../../node_modules/core-js/modules/_classof.js","./_array-from-iterable":"../../node_modules/core-js/modules/_array-from-iterable.js"}],"../../node_modules/core-js/modules/es7.map.to-json.js":[function(require,module,exports) {
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = require('./_export');

$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_collection-to-json":"../../node_modules/core-js/modules/_collection-to-json.js"}],"../../node_modules/core-js/modules/es7.set.to-json.js":[function(require,module,exports) {
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = require('./_export');

$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_collection-to-json":"../../node_modules/core-js/modules/_collection-to-json.js"}],"../../node_modules/core-js/modules/_set-collection-of.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-setmap-offrom/
var $export = require('./_export');

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { of: function of() {
    var length = arguments.length;
    var A = new Array(length);
    while (length--) A[length] = arguments[length];
    return new this(A);
  } });
};

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.map.of.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
require('./_set-collection-of')('Map');

},{"./_set-collection-of":"../../node_modules/core-js/modules/_set-collection-of.js"}],"../../node_modules/core-js/modules/es7.set.of.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
require('./_set-collection-of')('Set');

},{"./_set-collection-of":"../../node_modules/core-js/modules/_set-collection-of.js"}],"../../node_modules/core-js/modules/es7.weak-map.of.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
require('./_set-collection-of')('WeakMap');

},{"./_set-collection-of":"../../node_modules/core-js/modules/_set-collection-of.js"}],"../../node_modules/core-js/modules/es7.weak-set.of.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
require('./_set-collection-of')('WeakSet');

},{"./_set-collection-of":"../../node_modules/core-js/modules/_set-collection-of.js"}],"../../node_modules/core-js/modules/_set-collection-from.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-setmap-offrom/
var $export = require('./_export');
var aFunction = require('./_a-function');
var ctx = require('./_ctx');
var forOf = require('./_for-of');

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
    var mapFn = arguments[1];
    var mapping, A, n, cb;
    aFunction(this);
    mapping = mapFn !== undefined;
    if (mapping) aFunction(mapFn);
    if (source == undefined) return new this();
    A = [];
    if (mapping) {
      n = 0;
      cb = ctx(mapFn, arguments[2], 2);
      forOf(source, false, function (nextItem) {
        A.push(cb(nextItem, n++));
      });
    } else {
      forOf(source, false, A.push, A);
    }
    return new this(A);
  } });
};

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js"}],"../../node_modules/core-js/modules/es7.map.from.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
require('./_set-collection-from')('Map');

},{"./_set-collection-from":"../../node_modules/core-js/modules/_set-collection-from.js"}],"../../node_modules/core-js/modules/es7.set.from.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
require('./_set-collection-from')('Set');

},{"./_set-collection-from":"../../node_modules/core-js/modules/_set-collection-from.js"}],"../../node_modules/core-js/modules/es7.weak-map.from.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
require('./_set-collection-from')('WeakMap');

},{"./_set-collection-from":"../../node_modules/core-js/modules/_set-collection-from.js"}],"../../node_modules/core-js/modules/es7.weak-set.from.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
require('./_set-collection-from')('WeakSet');

},{"./_set-collection-from":"../../node_modules/core-js/modules/_set-collection-from.js"}],"../../node_modules/core-js/modules/es7.global.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-global
var $export = require('./_export');

$export($export.G, { global: require('./_global') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/es7.system.global.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-global
var $export = require('./_export');

$export($export.S, 'System', { global: require('./_global') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/es7.error.is-error.js":[function(require,module,exports) {
// https://github.com/ljharb/proposal-is-error
var $export = require('./_export');
var cof = require('./_cof');

$export($export.S, 'Error', {
  isError: function isError(it) {
    return cof(it) === 'Error';
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/es7.math.clamp.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', {
  clamp: function clamp(x, lower, upper) {
    return Math.min(upper, Math.max(lower, x));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.math.deg-per-rad.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.math.degrees.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');
var RAD_PER_DEG = 180 / Math.PI;

$export($export.S, 'Math', {
  degrees: function degrees(radians) {
    return radians * RAD_PER_DEG;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/_math-scale.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
  if (
    arguments.length === 0
      // eslint-disable-next-line no-self-compare
      || x != x
      // eslint-disable-next-line no-self-compare
      || inLow != inLow
      // eslint-disable-next-line no-self-compare
      || inHigh != inHigh
      // eslint-disable-next-line no-self-compare
      || outLow != outLow
      // eslint-disable-next-line no-self-compare
      || outHigh != outHigh
  ) return NaN;
  if (x === Infinity || x === -Infinity) return x;
  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
};

},{}],"../../node_modules/core-js/modules/es7.math.fscale.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');
var scale = require('./_math-scale');
var fround = require('./_math-fround');

$export($export.S, 'Math', {
  fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
    return fround(scale(x, inLow, inHigh, outLow, outHigh));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-scale":"../../node_modules/core-js/modules/_math-scale.js","./_math-fround":"../../node_modules/core-js/modules/_math-fround.js"}],"../../node_modules/core-js/modules/es7.math.iaddh.js":[function(require,module,exports) {
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  iaddh: function iaddh(x0, x1, y0, y1) {
    var $x0 = x0 >>> 0;
    var $x1 = x1 >>> 0;
    var $y0 = y0 >>> 0;
    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.math.isubh.js":[function(require,module,exports) {
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  isubh: function isubh(x0, x1, y0, y1) {
    var $x0 = x0 >>> 0;
    var $x1 = x1 >>> 0;
    var $y0 = y0 >>> 0;
    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.math.imulh.js":[function(require,module,exports) {
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  imulh: function imulh(u, v) {
    var UINT16 = 0xffff;
    var $u = +u;
    var $v = +v;
    var u0 = $u & UINT16;
    var v0 = $v & UINT16;
    var u1 = $u >> 16;
    var v1 = $v >> 16;
    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.math.rad-per-deg.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.math.radians.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');
var DEG_PER_RAD = Math.PI / 180;

$export($export.S, 'Math', {
  radians: function radians(degrees) {
    return degrees * DEG_PER_RAD;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.math.scale.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', { scale: require('./_math-scale') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-scale":"../../node_modules/core-js/modules/_math-scale.js"}],"../../node_modules/core-js/modules/es7.math.umulh.js":[function(require,module,exports) {
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  umulh: function umulh(u, v) {
    var UINT16 = 0xffff;
    var $u = +u;
    var $v = +v;
    var u0 = $u & UINT16;
    var v0 = $v & UINT16;
    var u1 = $u >>> 16;
    var v1 = $v >>> 16;
    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.math.signbit.js":[function(require,module,exports) {
// http://jfbastien.github.io/papers/Math.signbit.html
var $export = require('./_export');

$export($export.S, 'Math', { signbit: function signbit(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
} });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es7.promise.finally.js":[function(require,module,exports) {

// https://github.com/tc39/proposal-promise-finally
'use strict';
var $export = require('./_export');
var core = require('./_core');
var global = require('./_global');
var speciesConstructor = require('./_species-constructor');
var promiseResolve = require('./_promise-resolve');

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_core":"../../node_modules/core-js/modules/_core.js","./_global":"../../node_modules/core-js/modules/_global.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./_promise-resolve":"../../node_modules/core-js/modules/_promise-resolve.js"}],"../../node_modules/core-js/modules/es7.promise.try.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/proposal-promise-try
var $export = require('./_export');
var newPromiseCapability = require('./_new-promise-capability');
var perform = require('./_perform');

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_new-promise-capability":"../../node_modules/core-js/modules/_new-promise-capability.js","./_perform":"../../node_modules/core-js/modules/_perform.js"}],"../../node_modules/core-js/modules/_metadata.js":[function(require,module,exports) {
var Map = require('./es6.map');
var $export = require('./_export');
var shared = require('./_shared')('metadata');
var store = shared.store || (shared.store = new (require('./es6.weak-map'))());

var getOrCreateMetadataMap = function (target, targetKey, create) {
  var targetMetadata = store.get(target);
  if (!targetMetadata) {
    if (!create) return undefined;
    store.set(target, targetMetadata = new Map());
  }
  var keyMetadata = targetMetadata.get(targetKey);
  if (!keyMetadata) {
    if (!create) return undefined;
    targetMetadata.set(targetKey, keyMetadata = new Map());
  } return keyMetadata;
};
var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
};
var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
};
var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
};
var ordinaryOwnMetadataKeys = function (target, targetKey) {
  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
  var keys = [];
  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });
  return keys;
};
var toMetaKey = function (it) {
  return it === undefined || typeof it == 'symbol' ? it : String(it);
};
var exp = function (O) {
  $export($export.S, 'Reflect', O);
};

module.exports = {
  store: store,
  map: getOrCreateMetadataMap,
  has: ordinaryHasOwnMetadata,
  get: ordinaryGetOwnMetadata,
  set: ordinaryDefineOwnMetadata,
  keys: ordinaryOwnMetadataKeys,
  key: toMetaKey,
  exp: exp
};

},{"./es6.map":"../../node_modules/core-js/modules/es6.map.js","./_export":"../../node_modules/core-js/modules/_export.js","./_shared":"../../node_modules/core-js/modules/_shared.js","./es6.weak-map":"../../node_modules/core-js/modules/es6.weak-map.js"}],"../../node_modules/core-js/modules/es7.reflect.define-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var toMetaKey = metadata.key;
var ordinaryDefineOwnMetadata = metadata.set;

metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
} });

},{"./_metadata":"../../node_modules/core-js/modules/_metadata.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var toMetaKey = metadata.key;
var getOrCreateMetadataMap = metadata.map;
var store = metadata.store;

metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {
  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
  if (metadataMap.size) return true;
  var targetMetadata = store.get(target);
  targetMetadata['delete'](targetKey);
  return !!targetMetadata.size || store['delete'](target);
} });

},{"./_metadata":"../../node_modules/core-js/modules/_metadata.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es7.reflect.get-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var getPrototypeOf = require('./_object-gpo');
var ordinaryHasOwnMetadata = metadata.has;
var ordinaryGetOwnMetadata = metadata.get;
var toMetaKey = metadata.key;

var ordinaryGetMetadata = function (MetadataKey, O, P) {
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
};

metadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_metadata":"../../node_modules/core-js/modules/_metadata.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js"}],"../../node_modules/core-js/modules/es7.reflect.get-metadata-keys.js":[function(require,module,exports) {
var Set = require('./es6.set');
var from = require('./_array-from-iterable');
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var getPrototypeOf = require('./_object-gpo');
var ordinaryOwnMetadataKeys = metadata.keys;
var toMetaKey = metadata.key;

var ordinaryMetadataKeys = function (O, P) {
  var oKeys = ordinaryOwnMetadataKeys(O, P);
  var parent = getPrototypeOf(O);
  if (parent === null) return oKeys;
  var pKeys = ordinaryMetadataKeys(parent, P);
  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
};

metadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
} });

},{"./es6.set":"../../node_modules/core-js/modules/es6.set.js","./_array-from-iterable":"../../node_modules/core-js/modules/_array-from-iterable.js","./_metadata":"../../node_modules/core-js/modules/_metadata.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js"}],"../../node_modules/core-js/modules/es7.reflect.get-own-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var ordinaryGetOwnMetadata = metadata.get;
var toMetaKey = metadata.key;

metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_metadata":"../../node_modules/core-js/modules/_metadata.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var ordinaryOwnMetadataKeys = metadata.keys;
var toMetaKey = metadata.key;

metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {
  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
} });

},{"./_metadata":"../../node_modules/core-js/modules/_metadata.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es7.reflect.has-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var getPrototypeOf = require('./_object-gpo');
var ordinaryHasOwnMetadata = metadata.has;
var toMetaKey = metadata.key;

var ordinaryHasMetadata = function (MetadataKey, O, P) {
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if (hasOwn) return true;
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
};

metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_metadata":"../../node_modules/core-js/modules/_metadata.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js"}],"../../node_modules/core-js/modules/es7.reflect.has-own-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var ordinaryHasOwnMetadata = metadata.has;
var toMetaKey = metadata.key;

metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_metadata":"../../node_modules/core-js/modules/_metadata.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es7.reflect.metadata.js":[function(require,module,exports) {
var $metadata = require('./_metadata');
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var toMetaKey = $metadata.key;
var ordinaryDefineOwnMetadata = $metadata.set;

$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
  return function decorator(target, targetKey) {
    ordinaryDefineOwnMetadata(
      metadataKey, metadataValue,
      (targetKey !== undefined ? anObject : aFunction)(target),
      toMetaKey(targetKey)
    );
  };
} });

},{"./_metadata":"../../node_modules/core-js/modules/_metadata.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js"}],"../../node_modules/core-js/modules/es7.asap.js":[function(require,module,exports) {

// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
var $export = require('./_export');
var microtask = require('./_microtask')();
var process = require('./_global').process;
var isNode = require('./_cof')(process) == 'process';

$export($export.G, {
  asap: function asap(fn) {
    var domain = isNode && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_microtask":"../../node_modules/core-js/modules/_microtask.js","./_global":"../../node_modules/core-js/modules/_global.js","./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/es7.observable.js":[function(require,module,exports) {

'use strict';
// https://github.com/zenparsing/es-observable
var $export = require('./_export');
var global = require('./_global');
var core = require('./_core');
var microtask = require('./_microtask')();
var OBSERVABLE = require('./_wks')('observable');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var anInstance = require('./_an-instance');
var redefineAll = require('./_redefine-all');
var hide = require('./_hide');
var forOf = require('./_for-of');
var RETURN = forOf.RETURN;

var getMethod = function (fn) {
  return fn == null ? undefined : aFunction(fn);
};

var cleanupSubscription = function (subscription) {
  var cleanup = subscription._c;
  if (cleanup) {
    subscription._c = undefined;
    cleanup();
  }
};

var subscriptionClosed = function (subscription) {
  return subscription._o === undefined;
};

var closeSubscription = function (subscription) {
  if (!subscriptionClosed(subscription)) {
    subscription._o = undefined;
    cleanupSubscription(subscription);
  }
};

var Subscription = function (observer, subscriber) {
  anObject(observer);
  this._c = undefined;
  this._o = observer;
  observer = new SubscriptionObserver(this);
  try {
    var cleanup = subscriber(observer);
    var subscription = cleanup;
    if (cleanup != null) {
      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };
      else aFunction(cleanup);
      this._c = cleanup;
    }
  } catch (e) {
    observer.error(e);
    return;
  } if (subscriptionClosed(this)) cleanupSubscription(this);
};

Subscription.prototype = redefineAll({}, {
  unsubscribe: function unsubscribe() { closeSubscription(this); }
});

var SubscriptionObserver = function (subscription) {
  this._s = subscription;
};

SubscriptionObserver.prototype = redefineAll({}, {
  next: function next(value) {
    var subscription = this._s;
    if (!subscriptionClosed(subscription)) {
      var observer = subscription._o;
      try {
        var m = getMethod(observer.next);
        if (m) return m.call(observer, value);
      } catch (e) {
        try {
          closeSubscription(subscription);
        } finally {
          throw e;
        }
      }
    }
  },
  error: function error(value) {
    var subscription = this._s;
    if (subscriptionClosed(subscription)) throw value;
    var observer = subscription._o;
    subscription._o = undefined;
    try {
      var m = getMethod(observer.error);
      if (!m) throw value;
      value = m.call(observer, value);
    } catch (e) {
      try {
        cleanupSubscription(subscription);
      } finally {
        throw e;
      }
    } cleanupSubscription(subscription);
    return value;
  },
  complete: function complete(value) {
    var subscription = this._s;
    if (!subscriptionClosed(subscription)) {
      var observer = subscription._o;
      subscription._o = undefined;
      try {
        var m = getMethod(observer.complete);
        value = m ? m.call(observer, value) : undefined;
      } catch (e) {
        try {
          cleanupSubscription(subscription);
        } finally {
          throw e;
        }
      } cleanupSubscription(subscription);
      return value;
    }
  }
});

var $Observable = function Observable(subscriber) {
  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
};

redefineAll($Observable.prototype, {
  subscribe: function subscribe(observer) {
    return new Subscription(observer, this._f);
  },
  forEach: function forEach(fn) {
    var that = this;
    return new (core.Promise || global.Promise)(function (resolve, reject) {
      aFunction(fn);
      var subscription = that.subscribe({
        next: function (value) {
          try {
            return fn(value);
          } catch (e) {
            reject(e);
            subscription.unsubscribe();
          }
        },
        error: reject,
        complete: resolve
      });
    });
  }
});

redefineAll($Observable, {
  from: function from(x) {
    var C = typeof this === 'function' ? this : $Observable;
    var method = getMethod(anObject(x)[OBSERVABLE]);
    if (method) {
      var observable = anObject(method.call(x));
      return observable.constructor === C ? observable : new C(function (observer) {
        return observable.subscribe(observer);
      });
    }
    return new C(function (observer) {
      var done = false;
      microtask(function () {
        if (!done) {
          try {
            if (forOf(x, false, function (it) {
              observer.next(it);
              if (done) return RETURN;
            }) === RETURN) return;
          } catch (e) {
            if (done) throw e;
            observer.error(e);
            return;
          } observer.complete();
        }
      });
      return function () { done = true; };
    });
  },
  of: function of() {
    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];
    return new (typeof this === 'function' ? this : $Observable)(function (observer) {
      var done = false;
      microtask(function () {
        if (!done) {
          for (var j = 0; j < items.length; ++j) {
            observer.next(items[j]);
            if (done) return;
          } observer.complete();
        }
      });
      return function () { done = true; };
    });
  }
});

hide($Observable.prototype, OBSERVABLE, function () { return this; });

$export($export.G, { Observable: $Observable });

require('./_set-species')('Observable');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_global":"../../node_modules/core-js/modules/_global.js","./_core":"../../node_modules/core-js/modules/_core.js","./_microtask":"../../node_modules/core-js/modules/_microtask.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js"}],"../../node_modules/core-js/modules/web.timers.js":[function(require,module,exports) {

// ie9- setTimeout & setInterval additional parameters fix
var global = require('./_global');
var $export = require('./_export');
var userAgent = require('./_user-agent');
var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
var wrap = function (set) {
  return function (fn, time /* , ...args */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : false;
    return set(boundArgs ? function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
    } : fn, time);
  };
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout: wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_export":"../../node_modules/core-js/modules/_export.js","./_user-agent":"../../node_modules/core-js/modules/_user-agent.js"}],"../../node_modules/core-js/modules/web.immediate.js":[function(require,module,exports) {
var $export = require('./_export');
var $task = require('./_task');
$export($export.G + $export.B, {
  setImmediate: $task.set,
  clearImmediate: $task.clear
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_task":"../../node_modules/core-js/modules/_task.js"}],"../../node_modules/core-js/modules/web.dom.iterable.js":[function(require,module,exports) {

var $iterators = require('./es6.array.iterator');
var getKeys = require('./_object-keys');
var redefine = require('./_redefine');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var wks = require('./_wks');
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}

},{"./es6.array.iterator":"../../node_modules/core-js/modules/es6.array.iterator.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_global":"../../node_modules/core-js/modules/_global.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/shim.js":[function(require,module,exports) {
require('./modules/es6.symbol');
require('./modules/es6.object.create');
require('./modules/es6.object.define-property');
require('./modules/es6.object.define-properties');
require('./modules/es6.object.get-own-property-descriptor');
require('./modules/es6.object.get-prototype-of');
require('./modules/es6.object.keys');
require('./modules/es6.object.get-own-property-names');
require('./modules/es6.object.freeze');
require('./modules/es6.object.seal');
require('./modules/es6.object.prevent-extensions');
require('./modules/es6.object.is-frozen');
require('./modules/es6.object.is-sealed');
require('./modules/es6.object.is-extensible');
require('./modules/es6.object.assign');
require('./modules/es6.object.is');
require('./modules/es6.object.set-prototype-of');
require('./modules/es6.object.to-string');
require('./modules/es6.function.bind');
require('./modules/es6.function.name');
require('./modules/es6.function.has-instance');
require('./modules/es6.parse-int');
require('./modules/es6.parse-float');
require('./modules/es6.number.constructor');
require('./modules/es6.number.to-fixed');
require('./modules/es6.number.to-precision');
require('./modules/es6.number.epsilon');
require('./modules/es6.number.is-finite');
require('./modules/es6.number.is-integer');
require('./modules/es6.number.is-nan');
require('./modules/es6.number.is-safe-integer');
require('./modules/es6.number.max-safe-integer');
require('./modules/es6.number.min-safe-integer');
require('./modules/es6.number.parse-float');
require('./modules/es6.number.parse-int');
require('./modules/es6.math.acosh');
require('./modules/es6.math.asinh');
require('./modules/es6.math.atanh');
require('./modules/es6.math.cbrt');
require('./modules/es6.math.clz32');
require('./modules/es6.math.cosh');
require('./modules/es6.math.expm1');
require('./modules/es6.math.fround');
require('./modules/es6.math.hypot');
require('./modules/es6.math.imul');
require('./modules/es6.math.log10');
require('./modules/es6.math.log1p');
require('./modules/es6.math.log2');
require('./modules/es6.math.sign');
require('./modules/es6.math.sinh');
require('./modules/es6.math.tanh');
require('./modules/es6.math.trunc');
require('./modules/es6.string.from-code-point');
require('./modules/es6.string.raw');
require('./modules/es6.string.trim');
require('./modules/es6.string.iterator');
require('./modules/es6.string.code-point-at');
require('./modules/es6.string.ends-with');
require('./modules/es6.string.includes');
require('./modules/es6.string.repeat');
require('./modules/es6.string.starts-with');
require('./modules/es6.string.anchor');
require('./modules/es6.string.big');
require('./modules/es6.string.blink');
require('./modules/es6.string.bold');
require('./modules/es6.string.fixed');
require('./modules/es6.string.fontcolor');
require('./modules/es6.string.fontsize');
require('./modules/es6.string.italics');
require('./modules/es6.string.link');
require('./modules/es6.string.small');
require('./modules/es6.string.strike');
require('./modules/es6.string.sub');
require('./modules/es6.string.sup');
require('./modules/es6.date.now');
require('./modules/es6.date.to-json');
require('./modules/es6.date.to-iso-string');
require('./modules/es6.date.to-string');
require('./modules/es6.date.to-primitive');
require('./modules/es6.array.is-array');
require('./modules/es6.array.from');
require('./modules/es6.array.of');
require('./modules/es6.array.join');
require('./modules/es6.array.slice');
require('./modules/es6.array.sort');
require('./modules/es6.array.for-each');
require('./modules/es6.array.map');
require('./modules/es6.array.filter');
require('./modules/es6.array.some');
require('./modules/es6.array.every');
require('./modules/es6.array.reduce');
require('./modules/es6.array.reduce-right');
require('./modules/es6.array.index-of');
require('./modules/es6.array.last-index-of');
require('./modules/es6.array.copy-within');
require('./modules/es6.array.fill');
require('./modules/es6.array.find');
require('./modules/es6.array.find-index');
require('./modules/es6.array.species');
require('./modules/es6.array.iterator');
require('./modules/es6.regexp.constructor');
require('./modules/es6.regexp.exec');
require('./modules/es6.regexp.to-string');
require('./modules/es6.regexp.flags');
require('./modules/es6.regexp.match');
require('./modules/es6.regexp.replace');
require('./modules/es6.regexp.search');
require('./modules/es6.regexp.split');
require('./modules/es6.promise');
require('./modules/es6.map');
require('./modules/es6.set');
require('./modules/es6.weak-map');
require('./modules/es6.weak-set');
require('./modules/es6.typed.array-buffer');
require('./modules/es6.typed.data-view');
require('./modules/es6.typed.int8-array');
require('./modules/es6.typed.uint8-array');
require('./modules/es6.typed.uint8-clamped-array');
require('./modules/es6.typed.int16-array');
require('./modules/es6.typed.uint16-array');
require('./modules/es6.typed.int32-array');
require('./modules/es6.typed.uint32-array');
require('./modules/es6.typed.float32-array');
require('./modules/es6.typed.float64-array');
require('./modules/es6.reflect.apply');
require('./modules/es6.reflect.construct');
require('./modules/es6.reflect.define-property');
require('./modules/es6.reflect.delete-property');
require('./modules/es6.reflect.enumerate');
require('./modules/es6.reflect.get');
require('./modules/es6.reflect.get-own-property-descriptor');
require('./modules/es6.reflect.get-prototype-of');
require('./modules/es6.reflect.has');
require('./modules/es6.reflect.is-extensible');
require('./modules/es6.reflect.own-keys');
require('./modules/es6.reflect.prevent-extensions');
require('./modules/es6.reflect.set');
require('./modules/es6.reflect.set-prototype-of');
require('./modules/es7.array.includes');
require('./modules/es7.array.flat-map');
require('./modules/es7.array.flatten');
require('./modules/es7.string.at');
require('./modules/es7.string.pad-start');
require('./modules/es7.string.pad-end');
require('./modules/es7.string.trim-left');
require('./modules/es7.string.trim-right');
require('./modules/es7.string.match-all');
require('./modules/es7.symbol.async-iterator');
require('./modules/es7.symbol.observable');
require('./modules/es7.object.get-own-property-descriptors');
require('./modules/es7.object.values');
require('./modules/es7.object.entries');
require('./modules/es7.object.define-getter');
require('./modules/es7.object.define-setter');
require('./modules/es7.object.lookup-getter');
require('./modules/es7.object.lookup-setter');
require('./modules/es7.map.to-json');
require('./modules/es7.set.to-json');
require('./modules/es7.map.of');
require('./modules/es7.set.of');
require('./modules/es7.weak-map.of');
require('./modules/es7.weak-set.of');
require('./modules/es7.map.from');
require('./modules/es7.set.from');
require('./modules/es7.weak-map.from');
require('./modules/es7.weak-set.from');
require('./modules/es7.global');
require('./modules/es7.system.global');
require('./modules/es7.error.is-error');
require('./modules/es7.math.clamp');
require('./modules/es7.math.deg-per-rad');
require('./modules/es7.math.degrees');
require('./modules/es7.math.fscale');
require('./modules/es7.math.iaddh');
require('./modules/es7.math.isubh');
require('./modules/es7.math.imulh');
require('./modules/es7.math.rad-per-deg');
require('./modules/es7.math.radians');
require('./modules/es7.math.scale');
require('./modules/es7.math.umulh');
require('./modules/es7.math.signbit');
require('./modules/es7.promise.finally');
require('./modules/es7.promise.try');
require('./modules/es7.reflect.define-metadata');
require('./modules/es7.reflect.delete-metadata');
require('./modules/es7.reflect.get-metadata');
require('./modules/es7.reflect.get-metadata-keys');
require('./modules/es7.reflect.get-own-metadata');
require('./modules/es7.reflect.get-own-metadata-keys');
require('./modules/es7.reflect.has-metadata');
require('./modules/es7.reflect.has-own-metadata');
require('./modules/es7.reflect.metadata');
require('./modules/es7.asap');
require('./modules/es7.observable');
require('./modules/web.timers');
require('./modules/web.immediate');
require('./modules/web.dom.iterable');
module.exports = require('./modules/_core');

},{"./modules/es6.symbol":"../../node_modules/core-js/modules/es6.symbol.js","./modules/es6.object.create":"../../node_modules/core-js/modules/es6.object.create.js","./modules/es6.object.define-property":"../../node_modules/core-js/modules/es6.object.define-property.js","./modules/es6.object.define-properties":"../../node_modules/core-js/modules/es6.object.define-properties.js","./modules/es6.object.get-own-property-descriptor":"../../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js","./modules/es6.object.get-prototype-of":"../../node_modules/core-js/modules/es6.object.get-prototype-of.js","./modules/es6.object.keys":"../../node_modules/core-js/modules/es6.object.keys.js","./modules/es6.object.get-own-property-names":"../../node_modules/core-js/modules/es6.object.get-own-property-names.js","./modules/es6.object.freeze":"../../node_modules/core-js/modules/es6.object.freeze.js","./modules/es6.object.seal":"../../node_modules/core-js/modules/es6.object.seal.js","./modules/es6.object.prevent-extensions":"../../node_modules/core-js/modules/es6.object.prevent-extensions.js","./modules/es6.object.is-frozen":"../../node_modules/core-js/modules/es6.object.is-frozen.js","./modules/es6.object.is-sealed":"../../node_modules/core-js/modules/es6.object.is-sealed.js","./modules/es6.object.is-extensible":"../../node_modules/core-js/modules/es6.object.is-extensible.js","./modules/es6.object.assign":"../../node_modules/core-js/modules/es6.object.assign.js","./modules/es6.object.is":"../../node_modules/core-js/modules/es6.object.is.js","./modules/es6.object.set-prototype-of":"../../node_modules/core-js/modules/es6.object.set-prototype-of.js","./modules/es6.object.to-string":"../../node_modules/core-js/modules/es6.object.to-string.js","./modules/es6.function.bind":"../../node_modules/core-js/modules/es6.function.bind.js","./modules/es6.function.name":"../../node_modules/core-js/modules/es6.function.name.js","./modules/es6.function.has-instance":"../../node_modules/core-js/modules/es6.function.has-instance.js","./modules/es6.parse-int":"../../node_modules/core-js/modules/es6.parse-int.js","./modules/es6.parse-float":"../../node_modules/core-js/modules/es6.parse-float.js","./modules/es6.number.constructor":"../../node_modules/core-js/modules/es6.number.constructor.js","./modules/es6.number.to-fixed":"../../node_modules/core-js/modules/es6.number.to-fixed.js","./modules/es6.number.to-precision":"../../node_modules/core-js/modules/es6.number.to-precision.js","./modules/es6.number.epsilon":"../../node_modules/core-js/modules/es6.number.epsilon.js","./modules/es6.number.is-finite":"../../node_modules/core-js/modules/es6.number.is-finite.js","./modules/es6.number.is-integer":"../../node_modules/core-js/modules/es6.number.is-integer.js","./modules/es6.number.is-nan":"../../node_modules/core-js/modules/es6.number.is-nan.js","./modules/es6.number.is-safe-integer":"../../node_modules/core-js/modules/es6.number.is-safe-integer.js","./modules/es6.number.max-safe-integer":"../../node_modules/core-js/modules/es6.number.max-safe-integer.js","./modules/es6.number.min-safe-integer":"../../node_modules/core-js/modules/es6.number.min-safe-integer.js","./modules/es6.number.parse-float":"../../node_modules/core-js/modules/es6.number.parse-float.js","./modules/es6.number.parse-int":"../../node_modules/core-js/modules/es6.number.parse-int.js","./modules/es6.math.acosh":"../../node_modules/core-js/modules/es6.math.acosh.js","./modules/es6.math.asinh":"../../node_modules/core-js/modules/es6.math.asinh.js","./modules/es6.math.atanh":"../../node_modules/core-js/modules/es6.math.atanh.js","./modules/es6.math.cbrt":"../../node_modules/core-js/modules/es6.math.cbrt.js","./modules/es6.math.clz32":"../../node_modules/core-js/modules/es6.math.clz32.js","./modules/es6.math.cosh":"../../node_modules/core-js/modules/es6.math.cosh.js","./modules/es6.math.expm1":"../../node_modules/core-js/modules/es6.math.expm1.js","./modules/es6.math.fround":"../../node_modules/core-js/modules/es6.math.fround.js","./modules/es6.math.hypot":"../../node_modules/core-js/modules/es6.math.hypot.js","./modules/es6.math.imul":"../../node_modules/core-js/modules/es6.math.imul.js","./modules/es6.math.log10":"../../node_modules/core-js/modules/es6.math.log10.js","./modules/es6.math.log1p":"../../node_modules/core-js/modules/es6.math.log1p.js","./modules/es6.math.log2":"../../node_modules/core-js/modules/es6.math.log2.js","./modules/es6.math.sign":"../../node_modules/core-js/modules/es6.math.sign.js","./modules/es6.math.sinh":"../../node_modules/core-js/modules/es6.math.sinh.js","./modules/es6.math.tanh":"../../node_modules/core-js/modules/es6.math.tanh.js","./modules/es6.math.trunc":"../../node_modules/core-js/modules/es6.math.trunc.js","./modules/es6.string.from-code-point":"../../node_modules/core-js/modules/es6.string.from-code-point.js","./modules/es6.string.raw":"../../node_modules/core-js/modules/es6.string.raw.js","./modules/es6.string.trim":"../../node_modules/core-js/modules/es6.string.trim.js","./modules/es6.string.iterator":"../../node_modules/core-js/modules/es6.string.iterator.js","./modules/es6.string.code-point-at":"../../node_modules/core-js/modules/es6.string.code-point-at.js","./modules/es6.string.ends-with":"../../node_modules/core-js/modules/es6.string.ends-with.js","./modules/es6.string.includes":"../../node_modules/core-js/modules/es6.string.includes.js","./modules/es6.string.repeat":"../../node_modules/core-js/modules/es6.string.repeat.js","./modules/es6.string.starts-with":"../../node_modules/core-js/modules/es6.string.starts-with.js","./modules/es6.string.anchor":"../../node_modules/core-js/modules/es6.string.anchor.js","./modules/es6.string.big":"../../node_modules/core-js/modules/es6.string.big.js","./modules/es6.string.blink":"../../node_modules/core-js/modules/es6.string.blink.js","./modules/es6.string.bold":"../../node_modules/core-js/modules/es6.string.bold.js","./modules/es6.string.fixed":"../../node_modules/core-js/modules/es6.string.fixed.js","./modules/es6.string.fontcolor":"../../node_modules/core-js/modules/es6.string.fontcolor.js","./modules/es6.string.fontsize":"../../node_modules/core-js/modules/es6.string.fontsize.js","./modules/es6.string.italics":"../../node_modules/core-js/modules/es6.string.italics.js","./modules/es6.string.link":"../../node_modules/core-js/modules/es6.string.link.js","./modules/es6.string.small":"../../node_modules/core-js/modules/es6.string.small.js","./modules/es6.string.strike":"../../node_modules/core-js/modules/es6.string.strike.js","./modules/es6.string.sub":"../../node_modules/core-js/modules/es6.string.sub.js","./modules/es6.string.sup":"../../node_modules/core-js/modules/es6.string.sup.js","./modules/es6.date.now":"../../node_modules/core-js/modules/es6.date.now.js","./modules/es6.date.to-json":"../../node_modules/core-js/modules/es6.date.to-json.js","./modules/es6.date.to-iso-string":"../../node_modules/core-js/modules/es6.date.to-iso-string.js","./modules/es6.date.to-string":"../../node_modules/core-js/modules/es6.date.to-string.js","./modules/es6.date.to-primitive":"../../node_modules/core-js/modules/es6.date.to-primitive.js","./modules/es6.array.is-array":"../../node_modules/core-js/modules/es6.array.is-array.js","./modules/es6.array.from":"../../node_modules/core-js/modules/es6.array.from.js","./modules/es6.array.of":"../../node_modules/core-js/modules/es6.array.of.js","./modules/es6.array.join":"../../node_modules/core-js/modules/es6.array.join.js","./modules/es6.array.slice":"../../node_modules/core-js/modules/es6.array.slice.js","./modules/es6.array.sort":"../../node_modules/core-js/modules/es6.array.sort.js","./modules/es6.array.for-each":"../../node_modules/core-js/modules/es6.array.for-each.js","./modules/es6.array.map":"../../node_modules/core-js/modules/es6.array.map.js","./modules/es6.array.filter":"../../node_modules/core-js/modules/es6.array.filter.js","./modules/es6.array.some":"../../node_modules/core-js/modules/es6.array.some.js","./modules/es6.array.every":"../../node_modules/core-js/modules/es6.array.every.js","./modules/es6.array.reduce":"../../node_modules/core-js/modules/es6.array.reduce.js","./modules/es6.array.reduce-right":"../../node_modules/core-js/modules/es6.array.reduce-right.js","./modules/es6.array.index-of":"../../node_modules/core-js/modules/es6.array.index-of.js","./modules/es6.array.last-index-of":"../../node_modules/core-js/modules/es6.array.last-index-of.js","./modules/es6.array.copy-within":"../../node_modules/core-js/modules/es6.array.copy-within.js","./modules/es6.array.fill":"../../node_modules/core-js/modules/es6.array.fill.js","./modules/es6.array.find":"../../node_modules/core-js/modules/es6.array.find.js","./modules/es6.array.find-index":"../../node_modules/core-js/modules/es6.array.find-index.js","./modules/es6.array.species":"../../node_modules/core-js/modules/es6.array.species.js","./modules/es6.array.iterator":"../../node_modules/core-js/modules/es6.array.iterator.js","./modules/es6.regexp.constructor":"../../node_modules/core-js/modules/es6.regexp.constructor.js","./modules/es6.regexp.exec":"../../node_modules/core-js/modules/es6.regexp.exec.js","./modules/es6.regexp.to-string":"../../node_modules/core-js/modules/es6.regexp.to-string.js","./modules/es6.regexp.flags":"../../node_modules/core-js/modules/es6.regexp.flags.js","./modules/es6.regexp.match":"../../node_modules/core-js/modules/es6.regexp.match.js","./modules/es6.regexp.replace":"../../node_modules/core-js/modules/es6.regexp.replace.js","./modules/es6.regexp.search":"../../node_modules/core-js/modules/es6.regexp.search.js","./modules/es6.regexp.split":"../../node_modules/core-js/modules/es6.regexp.split.js","./modules/es6.promise":"../../node_modules/core-js/modules/es6.promise.js","./modules/es6.map":"../../node_modules/core-js/modules/es6.map.js","./modules/es6.set":"../../node_modules/core-js/modules/es6.set.js","./modules/es6.weak-map":"../../node_modules/core-js/modules/es6.weak-map.js","./modules/es6.weak-set":"../../node_modules/core-js/modules/es6.weak-set.js","./modules/es6.typed.array-buffer":"../../node_modules/core-js/modules/es6.typed.array-buffer.js","./modules/es6.typed.data-view":"../../node_modules/core-js/modules/es6.typed.data-view.js","./modules/es6.typed.int8-array":"../../node_modules/core-js/modules/es6.typed.int8-array.js","./modules/es6.typed.uint8-array":"../../node_modules/core-js/modules/es6.typed.uint8-array.js","./modules/es6.typed.uint8-clamped-array":"../../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js","./modules/es6.typed.int16-array":"../../node_modules/core-js/modules/es6.typed.int16-array.js","./modules/es6.typed.uint16-array":"../../node_modules/core-js/modules/es6.typed.uint16-array.js","./modules/es6.typed.int32-array":"../../node_modules/core-js/modules/es6.typed.int32-array.js","./modules/es6.typed.uint32-array":"../../node_modules/core-js/modules/es6.typed.uint32-array.js","./modules/es6.typed.float32-array":"../../node_modules/core-js/modules/es6.typed.float32-array.js","./modules/es6.typed.float64-array":"../../node_modules/core-js/modules/es6.typed.float64-array.js","./modules/es6.reflect.apply":"../../node_modules/core-js/modules/es6.reflect.apply.js","./modules/es6.reflect.construct":"../../node_modules/core-js/modules/es6.reflect.construct.js","./modules/es6.reflect.define-property":"../../node_modules/core-js/modules/es6.reflect.define-property.js","./modules/es6.reflect.delete-property":"../../node_modules/core-js/modules/es6.reflect.delete-property.js","./modules/es6.reflect.enumerate":"../../node_modules/core-js/modules/es6.reflect.enumerate.js","./modules/es6.reflect.get":"../../node_modules/core-js/modules/es6.reflect.get.js","./modules/es6.reflect.get-own-property-descriptor":"../../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js","./modules/es6.reflect.get-prototype-of":"../../node_modules/core-js/modules/es6.reflect.get-prototype-of.js","./modules/es6.reflect.has":"../../node_modules/core-js/modules/es6.reflect.has.js","./modules/es6.reflect.is-extensible":"../../node_modules/core-js/modules/es6.reflect.is-extensible.js","./modules/es6.reflect.own-keys":"../../node_modules/core-js/modules/es6.reflect.own-keys.js","./modules/es6.reflect.prevent-extensions":"../../node_modules/core-js/modules/es6.reflect.prevent-extensions.js","./modules/es6.reflect.set":"../../node_modules/core-js/modules/es6.reflect.set.js","./modules/es6.reflect.set-prototype-of":"../../node_modules/core-js/modules/es6.reflect.set-prototype-of.js","./modules/es7.array.includes":"../../node_modules/core-js/modules/es7.array.includes.js","./modules/es7.array.flat-map":"../../node_modules/core-js/modules/es7.array.flat-map.js","./modules/es7.array.flatten":"../../node_modules/core-js/modules/es7.array.flatten.js","./modules/es7.string.at":"../../node_modules/core-js/modules/es7.string.at.js","./modules/es7.string.pad-start":"../../node_modules/core-js/modules/es7.string.pad-start.js","./modules/es7.string.pad-end":"../../node_modules/core-js/modules/es7.string.pad-end.js","./modules/es7.string.trim-left":"../../node_modules/core-js/modules/es7.string.trim-left.js","./modules/es7.string.trim-right":"../../node_modules/core-js/modules/es7.string.trim-right.js","./modules/es7.string.match-all":"../../node_modules/core-js/modules/es7.string.match-all.js","./modules/es7.symbol.async-iterator":"../../node_modules/core-js/modules/es7.symbol.async-iterator.js","./modules/es7.symbol.observable":"../../node_modules/core-js/modules/es7.symbol.observable.js","./modules/es7.object.get-own-property-descriptors":"../../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js","./modules/es7.object.values":"../../node_modules/core-js/modules/es7.object.values.js","./modules/es7.object.entries":"../../node_modules/core-js/modules/es7.object.entries.js","./modules/es7.object.define-getter":"../../node_modules/core-js/modules/es7.object.define-getter.js","./modules/es7.object.define-setter":"../../node_modules/core-js/modules/es7.object.define-setter.js","./modules/es7.object.lookup-getter":"../../node_modules/core-js/modules/es7.object.lookup-getter.js","./modules/es7.object.lookup-setter":"../../node_modules/core-js/modules/es7.object.lookup-setter.js","./modules/es7.map.to-json":"../../node_modules/core-js/modules/es7.map.to-json.js","./modules/es7.set.to-json":"../../node_modules/core-js/modules/es7.set.to-json.js","./modules/es7.map.of":"../../node_modules/core-js/modules/es7.map.of.js","./modules/es7.set.of":"../../node_modules/core-js/modules/es7.set.of.js","./modules/es7.weak-map.of":"../../node_modules/core-js/modules/es7.weak-map.of.js","./modules/es7.weak-set.of":"../../node_modules/core-js/modules/es7.weak-set.of.js","./modules/es7.map.from":"../../node_modules/core-js/modules/es7.map.from.js","./modules/es7.set.from":"../../node_modules/core-js/modules/es7.set.from.js","./modules/es7.weak-map.from":"../../node_modules/core-js/modules/es7.weak-map.from.js","./modules/es7.weak-set.from":"../../node_modules/core-js/modules/es7.weak-set.from.js","./modules/es7.global":"../../node_modules/core-js/modules/es7.global.js","./modules/es7.system.global":"../../node_modules/core-js/modules/es7.system.global.js","./modules/es7.error.is-error":"../../node_modules/core-js/modules/es7.error.is-error.js","./modules/es7.math.clamp":"../../node_modules/core-js/modules/es7.math.clamp.js","./modules/es7.math.deg-per-rad":"../../node_modules/core-js/modules/es7.math.deg-per-rad.js","./modules/es7.math.degrees":"../../node_modules/core-js/modules/es7.math.degrees.js","./modules/es7.math.fscale":"../../node_modules/core-js/modules/es7.math.fscale.js","./modules/es7.math.iaddh":"../../node_modules/core-js/modules/es7.math.iaddh.js","./modules/es7.math.isubh":"../../node_modules/core-js/modules/es7.math.isubh.js","./modules/es7.math.imulh":"../../node_modules/core-js/modules/es7.math.imulh.js","./modules/es7.math.rad-per-deg":"../../node_modules/core-js/modules/es7.math.rad-per-deg.js","./modules/es7.math.radians":"../../node_modules/core-js/modules/es7.math.radians.js","./modules/es7.math.scale":"../../node_modules/core-js/modules/es7.math.scale.js","./modules/es7.math.umulh":"../../node_modules/core-js/modules/es7.math.umulh.js","./modules/es7.math.signbit":"../../node_modules/core-js/modules/es7.math.signbit.js","./modules/es7.promise.finally":"../../node_modules/core-js/modules/es7.promise.finally.js","./modules/es7.promise.try":"../../node_modules/core-js/modules/es7.promise.try.js","./modules/es7.reflect.define-metadata":"../../node_modules/core-js/modules/es7.reflect.define-metadata.js","./modules/es7.reflect.delete-metadata":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","./modules/es7.reflect.get-metadata":"../../node_modules/core-js/modules/es7.reflect.get-metadata.js","./modules/es7.reflect.get-metadata-keys":"../../node_modules/core-js/modules/es7.reflect.get-metadata-keys.js","./modules/es7.reflect.get-own-metadata":"../../node_modules/core-js/modules/es7.reflect.get-own-metadata.js","./modules/es7.reflect.get-own-metadata-keys":"../../node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js","./modules/es7.reflect.has-metadata":"../../node_modules/core-js/modules/es7.reflect.has-metadata.js","./modules/es7.reflect.has-own-metadata":"../../node_modules/core-js/modules/es7.reflect.has-own-metadata.js","./modules/es7.reflect.metadata":"../../node_modules/core-js/modules/es7.reflect.metadata.js","./modules/es7.asap":"../../node_modules/core-js/modules/es7.asap.js","./modules/es7.observable":"../../node_modules/core-js/modules/es7.observable.js","./modules/web.timers":"../../node_modules/core-js/modules/web.timers.js","./modules/web.immediate":"../../node_modules/core-js/modules/web.immediate.js","./modules/web.dom.iterable":"../../node_modules/core-js/modules/web.dom.iterable.js","./modules/_core":"../../node_modules/core-js/modules/_core.js"}],"../../node_modules/core-js/modules/_replacer.js":[function(require,module,exports) {
module.exports = function (regExp, replace) {
  var replacer = replace === Object(replace) ? function (part) {
    return replace[part];
  } : replace;
  return function (it) {
    return String(it).replace(regExp, replacer);
  };
};

},{}],"../../node_modules/core-js/modules/core.regexp.escape.js":[function(require,module,exports) {
// https://github.com/benjamingr/RexExp.escape
var $export = require('./_export');
var $re = require('./_replacer')(/[\\^$*+?.()|[\]{}]/g, '\\$&');

$export($export.S, 'RegExp', { escape: function escape(it) { return $re(it); } });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_replacer":"../../node_modules/core-js/modules/_replacer.js"}],"../../node_modules/core-js/fn/regexp/escape.js":[function(require,module,exports) {
require('../../modules/core.regexp.escape');
module.exports = require('../../modules/_core').RegExp.escape;

},{"../../modules/core.regexp.escape":"../../node_modules/core-js/modules/core.regexp.escape.js","../../modules/_core":"../../node_modules/core-js/modules/_core.js"}],"../../node_modules/babel-polyfill/lib/index.js":[function(require,module,exports) {
var global = arguments[3];

"use strict";

require("core-js/shim");

require("regenerator-runtime/runtime");

require("core-js/fn/regexp/escape");

if (global._babelPolyfill) {
  throw new Error("only one instance of babel-polyfill is allowed");
}
global._babelPolyfill = true;

var DEFINE_PROPERTY = "defineProperty";
function define(O, key, value) {
  O[key] || Object[DEFINE_PROPERTY](O, key, {
    writable: true,
    configurable: true,
    value: value
  });
}

define(String.prototype, "padLeft", "".padStart);
define(String.prototype, "padRight", "".padEnd);

"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
  [][key] && define(Array, key, Function.call.bind([][key]));
});
},{"core-js/shim":"../../node_modules/core-js/shim.js","regenerator-runtime/runtime":"../../node_modules/regenerator-runtime/runtime.js","core-js/fn/regexp/escape":"../../node_modules/core-js/fn/regexp/escape.js"}],"../../node_modules/object-assign/index.js":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
'use strict';
/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};
},{}],"../../node_modules/prop-types/lib/ReactPropTypesSecret.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],"../../node_modules/prop-types/checkPropTypes.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var printWarning = function () {};

if ("development" !== 'production') {
  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');

  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function (text) {
    var message = 'Warning: ' + text;

    if (typeof console !== 'undefined') {
      console.error(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */


function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if ("development" !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }

        if (error && !(error instanceof Error)) {
          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        }

        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;
          var stack = getStack ? getStack() : '';
          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
      }
    }
  }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */


checkPropTypes.resetWarningCache = function () {
  if ("development" !== 'production') {
    loggedTypeFailures = {};
  }
};

module.exports = checkPropTypes;
},{"./lib/ReactPropTypesSecret":"../../node_modules/prop-types/lib/ReactPropTypesSecret.js"}],"../../node_modules/react/cjs/react.development.js":[function(require,module,exports) {
/** @license React v16.8.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    var _assign = require('object-assign');

    var checkPropTypes = require('prop-types/checkPropTypes'); // TODO: this is special because it gets imported during build.


    var ReactVersion = '16.8.2'; // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.

    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    function getIteratorFn(maybeIterable) {
      if (maybeIterable === null || typeof maybeIterable !== 'object') {
        return null;
      }

      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

      if (typeof maybeIterator === 'function') {
        return maybeIterator;
      }

      return null;
    }
    /**
     * Use invariant() to assert state which your program assumes to be true.
     *
     * Provide sprintf-style format (only %s is supported) and arguments
     * to provide information about what broke and what you were
     * expecting.
     *
     * The invariant message will be stripped in production, but the invariant
     * will remain to ensure logic does not differ in production.
     */


    var validateFormat = function () {};

    {
      validateFormat = function (format) {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      };
    }

    function invariant(condition, format, a, b, c, d, e, f) {
      validateFormat(format);

      if (!condition) {
        var error = void 0;

        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }

        error.framesToPop = 1; // we don't care about invariant's own frame

        throw error;
      }
    } // Relying on the `invariant()` implementation lets us
    // preserve the format and params in the www builds.

    /**
     * Forked from fbjs/warning:
     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
     *
     * Only change is we use console.warn instead of console.error,
     * and do nothing when 'console' is not supported.
     * This really simplifies the code.
     * ---
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var lowPriorityWarning = function () {};

    {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });

        if (typeof console !== 'undefined') {
          console.warn(message);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarning = function (condition, format) {
        if (format === undefined) {
          throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }
    var lowPriorityWarning$1 = lowPriorityWarning;
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */

    var warningWithoutStack = function () {};

    {
      warningWithoutStack = function (condition, format) {
        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        if (format === undefined) {
          throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (args.length > 8) {
          // Check before the condition to catch violations early.
          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
        }

        if (condition) {
          return;
        }

        if (typeof console !== 'undefined') {
          var argsWithFormat = args.map(function (item) {
            return '' + item;
          });
          argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
          // breaks IE9: https://github.com/facebook/react/issues/13610

          Function.prototype.apply.call(console.error, console, argsWithFormat);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function () {
            return args[argIndex++];
          });
          throw new Error(message);
        } catch (x) {}
      };
    }
    var warningWithoutStack$1 = warningWithoutStack;
    var didWarnStateUpdateForUnmountedComponent = {};

    function warnNoop(publicInstance, callerName) {
      {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
        var warningKey = componentName + '.' + callerName;

        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
          return;
        }

        warningWithoutStack$1(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
      }
    }
    /**
     * This is the abstract API for an update queue.
     */


    var ReactNoopUpdateQueue = {
      /**
       * Checks whether or not this composite component is mounted.
       * @param {ReactClass} publicInstance The instance we want to test.
       * @return {boolean} True if mounted, false otherwise.
       * @protected
       * @final
       */
      isMounted: function (publicInstance) {
        return false;
      },

      /**
       * Forces an update. This should only be invoked when it is known with
       * certainty that we are **not** in a DOM transaction.
       *
       * You may want to call this when you know that some deeper aspect of the
       * component's state has changed but `setState` was not called.
       *
       * This will not invoke `shouldComponentUpdate`, but it will invoke
       * `componentWillUpdate` and `componentDidUpdate`.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {?function} callback Called after component is updated.
       * @param {?string} callerName name of the calling function in the public API.
       * @internal
       */
      enqueueForceUpdate: function (publicInstance, callback, callerName) {
        warnNoop(publicInstance, 'forceUpdate');
      },

      /**
       * Replaces all of the state. Always use this or `setState` to mutate state.
       * You should treat `this.state` as immutable.
       *
       * There is no guarantee that `this.state` will be immediately updated, so
       * accessing `this.state` after calling this method may return the old value.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {object} completeState Next state.
       * @param {?function} callback Called after component is updated.
       * @param {?string} callerName name of the calling function in the public API.
       * @internal
       */
      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
        warnNoop(publicInstance, 'replaceState');
      },

      /**
       * Sets a subset of the state. This only exists because _pendingState is
       * internal. This provides a merging strategy that is not available to deep
       * properties which is confusing. TODO: Expose pendingState or don't use it
       * during the merge.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {object} partialState Next partial state to be merged with state.
       * @param {?function} callback Called after component is updated.
       * @param {?string} Name of the calling function in the public API.
       * @internal
       */
      enqueueSetState: function (publicInstance, partialState, callback, callerName) {
        warnNoop(publicInstance, 'setState');
      }
    };
    var emptyObject = {};
    {
      Object.freeze(emptyObject);
    }
    /**
     * Base class helpers for the updating state of a component.
     */

    function Component(props, context, updater) {
      this.props = props;
      this.context = context; // If a component has string refs, we will assign a different object later.

      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
      // renderer.

      this.updater = updater || ReactNoopUpdateQueue;
    }

    Component.prototype.isReactComponent = {};
    /**
     * Sets a subset of the state. Always use this to mutate
     * state. You should treat `this.state` as immutable.
     *
     * There is no guarantee that `this.state` will be immediately updated, so
     * accessing `this.state` after calling this method may return the old value.
     *
     * There is no guarantee that calls to `setState` will run synchronously,
     * as they may eventually be batched together.  You can provide an optional
     * callback that will be executed when the call to setState is actually
     * completed.
     *
     * When a function is provided to setState, it will be called at some point in
     * the future (not synchronously). It will be called with the up to date
     * component arguments (state, props, context). These values can be different
     * from this.* because your function may be called after receiveProps but before
     * shouldComponentUpdate, and this new state, props, and context will not yet be
     * assigned to this.
     *
     * @param {object|function} partialState Next partial state or function to
     *        produce next partial state to be merged with current state.
     * @param {?function} callback Called after state is updated.
     * @final
     * @protected
     */

    Component.prototype.setState = function (partialState, callback) {
      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
      this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };
    /**
     * Forces an update. This should only be invoked when it is known with
     * certainty that we are **not** in a DOM transaction.
     *
     * You may want to call this when you know that some deeper aspect of the
     * component's state has changed but `setState` was not called.
     *
     * This will not invoke `shouldComponentUpdate`, but it will invoke
     * `componentWillUpdate` and `componentDidUpdate`.
     *
     * @param {?function} callback Called after update is complete.
     * @final
     * @protected
     */


    Component.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };
    /**
     * Deprecated APIs. These APIs used to exist on classic React classes but since
     * we would like to deprecate them, we're not going to move them over to this
     * modern base class. Instead, we define a getter that warns if it's accessed.
     */


    {
      var deprecatedAPIs = {
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
      };

      var defineDeprecationWarning = function (methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
          get: function () {
            lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
            return undefined;
          }
        });
      };

      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }

    function ComponentDummy() {}

    ComponentDummy.prototype = Component.prototype;
    /**
     * Convenience component with default shallow equality check for sCU.
     */

    function PureComponent(props, context, updater) {
      this.props = props;
      this.context = context; // If a component has string refs, we will assign a different object later.

      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }

    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

    _assign(pureComponentPrototype, Component.prototype);

    pureComponentPrototype.isPureReactComponent = true; // an immutable object with a single mutable value

    function createRef() {
      var refObject = {
        current: null
      };
      {
        Object.seal(refObject);
      }
      return refObject;
    }
    /**
     * Keeps track of the current dispatcher.
     */


    var ReactCurrentDispatcher = {
      /**
       * @internal
       * @type {ReactComponent}
       */
      current: null
    };
    /**
     * Keeps track of the current owner.
     *
     * The current owner is the component who should own any components that are
     * currently being constructed.
     */

    var ReactCurrentOwner = {
      /**
       * @internal
       * @type {ReactComponent}
       */
      current: null
    };
    var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

    var describeComponentFrame = function (name, source, ownerName) {
      var sourceInfo = '';

      if (source) {
        var path = source.fileName;
        var fileName = path.replace(BEFORE_SLASH_RE, '');
        {
          // In DEV, include code for a common special case:
          // prefer "folder/index.js" instead of just "index.js".
          if (/^index\./.test(fileName)) {
            var match = path.match(BEFORE_SLASH_RE);

            if (match) {
              var pathBeforeSlash = match[1];

              if (pathBeforeSlash) {
                var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
                fileName = folderName + '/' + fileName;
              }
            }
          }
        }
        sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
      } else if (ownerName) {
        sourceInfo = ' (created by ' + ownerName + ')';
      }

      return '\n    in ' + (name || 'Unknown') + sourceInfo;
    };

    var Resolved = 1;

    function refineResolvedLazyComponent(lazyComponent) {
      return lazyComponent._status === Resolved ? lazyComponent._result : null;
    }

    function getWrappedName(outerType, innerType, wrapperName) {
      var functionName = innerType.displayName || innerType.name || '';
      return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
    }

    function getComponentName(type) {
      if (type == null) {
        // Host root, text node or just invalid type.
        return null;
      }

      {
        if (typeof type.tag === 'number') {
          warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
        }
      }

      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      switch (type) {
        case REACT_CONCURRENT_MODE_TYPE:
          return 'ConcurrentMode';

        case REACT_FRAGMENT_TYPE:
          return 'Fragment';

        case REACT_PORTAL_TYPE:
          return 'Portal';

        case REACT_PROFILER_TYPE:
          return 'Profiler';

        case REACT_STRICT_MODE_TYPE:
          return 'StrictMode';

        case REACT_SUSPENSE_TYPE:
          return 'Suspense';
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_CONTEXT_TYPE:
            return 'Context.Consumer';

          case REACT_PROVIDER_TYPE:
            return 'Context.Provider';

          case REACT_FORWARD_REF_TYPE:
            return getWrappedName(type, type.render, 'ForwardRef');

          case REACT_MEMO_TYPE:
            return getComponentName(type.type);

          case REACT_LAZY_TYPE:
            {
              var thenable = type;
              var resolvedThenable = refineResolvedLazyComponent(thenable);

              if (resolvedThenable) {
                return getComponentName(resolvedThenable);
              }
            }
        }
      }

      return null;
    }

    var ReactDebugCurrentFrame = {};
    var currentlyValidatingElement = null;

    function setCurrentlyValidatingElement(element) {
      {
        currentlyValidatingElement = element;
      }
    }

    {
      // Stack implementation injected by the current renderer.
      ReactDebugCurrentFrame.getCurrentStack = null;

      ReactDebugCurrentFrame.getStackAddendum = function () {
        var stack = ''; // Add an extra top frame while an element is being validated

        if (currentlyValidatingElement) {
          var name = getComponentName(currentlyValidatingElement.type);
          var owner = currentlyValidatingElement._owner;
          stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
        } // Delegate to the injected renderer-specific implementation


        var impl = ReactDebugCurrentFrame.getCurrentStack;

        if (impl) {
          stack += impl() || '';
        }

        return stack;
      };
    }
    var ReactSharedInternals = {
      ReactCurrentDispatcher: ReactCurrentDispatcher,
      ReactCurrentOwner: ReactCurrentOwner,
      // Used by renderers to avoid bundling object-assign twice in UMD bundles:
      assign: _assign
    };
    {
      _assign(ReactSharedInternals, {
        // These should not be included in production.
        ReactDebugCurrentFrame: ReactDebugCurrentFrame,
        // Shim for React DOM 16.0.0 which still destructured (but not used) this.
        // TODO: remove in React 17.0.
        ReactComponentTreeHook: {}
      });
    }
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */

    var warning = warningWithoutStack$1;
    {
      warning = function (condition, format) {
        if (condition) {
          return;
        }

        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
      };
    }
    var warning$1 = warning;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    var specialPropKeyWarningShown = void 0;
    var specialPropRefWarningShown = void 0;

    function hasValidRef(config) {
      {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }

    function hasValidKey(config) {
      {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }

    function defineKeyPropWarningGetter(props, displayName) {
      var warnAboutAccessingKey = function () {
        if (!specialPropKeyWarningShown) {
          specialPropKeyWarningShown = true;
          warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };

      warnAboutAccessingKey.isReactWarning = true;
      Object.defineProperty(props, 'key', {
        get: warnAboutAccessingKey,
        configurable: true
      });
    }

    function defineRefPropWarningGetter(props, displayName) {
      var warnAboutAccessingRef = function () {
        if (!specialPropRefWarningShown) {
          specialPropRefWarningShown = true;
          warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };

      warnAboutAccessingRef.isReactWarning = true;
      Object.defineProperty(props, 'ref', {
        get: warnAboutAccessingRef,
        configurable: true
      });
    }
    /**
     * Factory method to create a new React element. This no longer adheres to
     * the class pattern, so do not use new to call it. Also, no instanceof check
     * will work. Instead test $$typeof field against Symbol.for('react.element') to check
     * if something is a React Element.
     *
     * @param {*} type
     * @param {*} key
     * @param {string|object} ref
     * @param {*} self A *temporary* helper to detect places where `this` is
     * different from the `owner` when React.createElement is called, so that we
     * can warn. We want to get rid of owner and replace string `ref`s with arrow
     * functions, and as long as `this` and owner are the same, there will be no
     * change in behavior.
     * @param {*} source An annotation object (added by a transpiler or otherwise)
     * indicating filename, line number, and/or other information.
     * @param {*} owner
     * @param {*} props
     * @internal
     */


    var ReactElement = function (type, key, ref, self, source, owner, props) {
      var element = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: REACT_ELEMENT_TYPE,
        // Built-in properties that belong on the element
        type: type,
        key: key,
        ref: ref,
        props: props,
        // Record the component responsible for creating this element.
        _owner: owner
      };
      {
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.

        Object.defineProperty(element._store, 'validated', {
          configurable: false,
          enumerable: false,
          writable: true,
          value: false
        }); // self and source are DEV only properties.

        Object.defineProperty(element, '_self', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.

        Object.defineProperty(element, '_source', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: source
        });

        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }
      return element;
    };
    /**
     * Create and return a new ReactElement of the given type.
     * See https://reactjs.org/docs/react-api.html#createelement
     */


    function createElement(type, config, children) {
      var propName = void 0; // Reserved names are extracted

      var props = {};
      var key = null;
      var ref = null;
      var self = null;
      var source = null;

      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
        }

        if (hasValidKey(config)) {
          key = '' + config.key;
        }

        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      } // Children can be more than one argument, and those are transferred onto
      // the newly allocated props object.


      var childrenLength = arguments.length - 2;

      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);

        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }

        {
          if (Object.freeze) {
            Object.freeze(childArray);
          }
        }
        props.children = childArray;
      } // Resolve default props


      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;

        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }

      {
        if (key || ref) {
          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

          if (key) {
            defineKeyPropWarningGetter(props, displayName);
          }

          if (ref) {
            defineRefPropWarningGetter(props, displayName);
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    /**
     * Return a function that produces ReactElements of a given type.
     * See https://reactjs.org/docs/react-api.html#createfactory
     */


    function cloneAndReplaceKey(oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
      return newElement;
    }
    /**
     * Clone and return a new ReactElement using element as the starting point.
     * See https://reactjs.org/docs/react-api.html#cloneelement
     */


    function cloneElement(element, config, children) {
      !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;
      var propName = void 0; // Original props are copied

      var props = _assign({}, element.props); // Reserved names are extracted


      var key = element.key;
      var ref = element.ref; // Self is preserved since the owner is preserved.

      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
      // transpiler, and the original source is probably a better indicator of the
      // true owner.

      var source = element._source; // Owner will be preserved, unless ref is overridden

      var owner = element._owner;

      if (config != null) {
        if (hasValidRef(config)) {
          // Silently steal the ref from the parent.
          ref = config.ref;
          owner = ReactCurrentOwner.current;
        }

        if (hasValidKey(config)) {
          key = '' + config.key;
        } // Remaining properties override existing props


        var defaultProps = void 0;

        if (element.type && element.type.defaultProps) {
          defaultProps = element.type.defaultProps;
        }

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            if (config[propName] === undefined && defaultProps !== undefined) {
              // Resolve default props
              props[propName] = defaultProps[propName];
            } else {
              props[propName] = config[propName];
            }
          }
        }
      } // Children can be more than one argument, and those are transferred onto
      // the newly allocated props object.


      var childrenLength = arguments.length - 2;

      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);

        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }

        props.children = childArray;
      }

      return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
     * Verifies the object is a ReactElement.
     * See https://reactjs.org/docs/react-api.html#isvalidelement
     * @param {?object} object
     * @return {boolean} True if `object` is a ReactElement.
     * @final
     */


    function isValidElement(object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }

    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    /**
     * Escape and wrap key so it is safe to use as a reactid
     *
     * @param {string} key to be escaped.
     * @return {string} the escaped key.
     */

    function escape(key) {
      var escapeRegex = /[=:]/g;
      var escaperLookup = {
        '=': '=0',
        ':': '=2'
      };
      var escapedString = ('' + key).replace(escapeRegex, function (match) {
        return escaperLookup[match];
      });
      return '$' + escapedString;
    }
    /**
     * TODO: Test that a single child and an array with one item have the same key
     * pattern.
     */


    var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;

    function escapeUserProvidedKey(text) {
      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
    }

    var POOL_SIZE = 10;
    var traverseContextPool = [];

    function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
      if (traverseContextPool.length) {
        var traverseContext = traverseContextPool.pop();
        traverseContext.result = mapResult;
        traverseContext.keyPrefix = keyPrefix;
        traverseContext.func = mapFunction;
        traverseContext.context = mapContext;
        traverseContext.count = 0;
        return traverseContext;
      } else {
        return {
          result: mapResult,
          keyPrefix: keyPrefix,
          func: mapFunction,
          context: mapContext,
          count: 0
        };
      }
    }

    function releaseTraverseContext(traverseContext) {
      traverseContext.result = null;
      traverseContext.keyPrefix = null;
      traverseContext.func = null;
      traverseContext.context = null;
      traverseContext.count = 0;

      if (traverseContextPool.length < POOL_SIZE) {
        traverseContextPool.push(traverseContext);
      }
    }
    /**
     * @param {?*} children Children tree container.
     * @param {!string} nameSoFar Name of the key path so far.
     * @param {!function} callback Callback to invoke with each child found.
     * @param {?*} traverseContext Used to pass information throughout the traversal
     * process.
     * @return {!number} The number of children in this subtree.
     */


    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;

      if (type === 'undefined' || type === 'boolean') {
        // All of the above are perceived as null.
        children = null;
      }

      var invokeCallback = false;

      if (children === null) {
        invokeCallback = true;
      } else {
        switch (type) {
          case 'string':
          case 'number':
            invokeCallback = true;
            break;

          case 'object':
            switch (children.$$typeof) {
              case REACT_ELEMENT_TYPE:
              case REACT_PORTAL_TYPE:
                invokeCallback = true;
            }

        }
      }

      if (invokeCallback) {
        callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array
        // so that it's consistent if the number of children grows.
        nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }

      var child = void 0;
      var nextName = void 0;
      var subtreeCount = 0; // Count of children found in the current subtree.

      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          {
            // Warn about using Maps as children
            if (iteratorFn === children.entries) {
              !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
              didWarnAboutMaps = true;
            }
          }
          var iterator = iteratorFn.call(children);
          var step = void 0;
          var ii = 0;

          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getComponentKey(child, ii++);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        } else if (type === 'object') {
          var addendum = '';
          {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
          }
          var childrenString = '' + children;
          invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
        }
      }

      return subtreeCount;
    }
    /**
     * Traverses children that are typically specified as `props.children`, but
     * might also be specified through attributes:
     *
     * - `traverseAllChildren(this.props.children, ...)`
     * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
     *
     * The `traverseContext` is an optional argument that is passed through the
     * entire traversal. It can be used to store accumulations or anything else that
     * the callback might find relevant.
     *
     * @param {?*} children Children tree object.
     * @param {!function} callback To invoke upon traversing each child.
     * @param {?*} traverseContext Context for traversal.
     * @return {!number} The number of children in this subtree.
     */


    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }

      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    /**
     * Generate a key string that identifies a component within a set.
     *
     * @param {*} component A component that could contain a manual key.
     * @param {number} index Index that is used if a manual key is not provided.
     * @return {string}
     */


    function getComponentKey(component, index) {
      // Do some typechecking here since we call this blindly. We want to ensure
      // that we don't block potential future ES APIs.
      if (typeof component === 'object' && component !== null && component.key != null) {
        // Explicit key
        return escape(component.key);
      } // Implicit key determined by the index in the set


      return index.toString(36);
    }

    function forEachSingleChild(bookKeeping, child, name) {
      var func = bookKeeping.func,
          context = bookKeeping.context;
      func.call(context, child, bookKeeping.count++);
    }
    /**
     * Iterates through children that are typically specified as `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
     *
     * The provided forEachFunc(child, index) will be called for each
     * leaf child.
     *
     * @param {?*} children Children tree container.
     * @param {function(*, int)} forEachFunc
     * @param {*} forEachContext Context for forEachContext.
     */


    function forEachChildren(children, forEachFunc, forEachContext) {
      if (children == null) {
        return children;
      }

      var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
      traverseAllChildren(children, forEachSingleChild, traverseContext);
      releaseTraverseContext(traverseContext);
    }

    function mapSingleChildIntoContext(bookKeeping, child, childKey) {
      var result = bookKeeping.result,
          keyPrefix = bookKeeping.keyPrefix,
          func = bookKeeping.func,
          context = bookKeeping.context;
      var mappedChild = func.call(context, child, bookKeeping.count++);

      if (Array.isArray(mappedChild)) {
        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
          return c;
        });
      } else if (mappedChild != null) {
        if (isValidElement(mappedChild)) {
          mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
          // traverseAllChildren used to do for objects as children
          keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
        }

        result.push(mappedChild);
      }
    }

    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
      var escapedPrefix = '';

      if (prefix != null) {
        escapedPrefix = escapeUserProvidedKey(prefix) + '/';
      }

      var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
      releaseTraverseContext(traverseContext);
    }
    /**
     * Maps children that are typically specified as `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenmap
     *
     * The provided mapFunction(child, key, index) will be called for each
     * leaf child.
     *
     * @param {?*} children Children tree container.
     * @param {function(*, int)} func The map function.
     * @param {*} context Context for mapFunction.
     * @return {object} Object containing the ordered map of results.
     */


    function mapChildren(children, func, context) {
      if (children == null) {
        return children;
      }

      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, func, context);
      return result;
    }
    /**
     * Count the number of children that are typically specified as
     * `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrencount
     *
     * @param {?*} children Children tree container.
     * @return {number} The number of children.
     */


    function countChildren(children) {
      return traverseAllChildren(children, function () {
        return null;
      }, null);
    }
    /**
     * Flatten a children object (typically specified as `props.children`) and
     * return an array with appropriately re-keyed children.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
     */


    function toArray(children) {
      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
        return child;
      });
      return result;
    }
    /**
     * Returns the first child in a collection of children and verifies that there
     * is only one child in the collection.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenonly
     *
     * The current implementation of this function assumes that a single child gets
     * passed without a wrapper, but the purpose of this helper function is to
     * abstract away the particular structure of children.
     *
     * @param {?object} children Child collection structure.
     * @return {ReactElement} The first and only `ReactElement` contained in the
     * structure.
     */


    function onlyChild(children) {
      !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
      return children;
    }

    function createContext(defaultValue, calculateChangedBits) {
      if (calculateChangedBits === undefined) {
        calculateChangedBits = null;
      } else {
        {
          !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
        }
      }

      var context = {
        $$typeof: REACT_CONTEXT_TYPE,
        _calculateChangedBits: calculateChangedBits,
        // As a workaround to support multiple concurrent renderers, we categorize
        // some renderers as primary and others as secondary. We only expect
        // there to be two concurrent renderers at most: React Native (primary) and
        // Fabric (secondary); React DOM (primary) and React ART (secondary).
        // Secondary renderers store their context values on separate fields.
        _currentValue: defaultValue,
        _currentValue2: defaultValue,
        // Used to track how many concurrent renderers this context currently
        // supports within in a single renderer. Such as parallel server rendering.
        _threadCount: 0,
        // These are circular
        Provider: null,
        Consumer: null
      };
      context.Provider = {
        $$typeof: REACT_PROVIDER_TYPE,
        _context: context
      };
      var hasWarnedAboutUsingNestedContextConsumers = false;
      var hasWarnedAboutUsingConsumerProvider = false;
      {
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
          $$typeof: REACT_CONTEXT_TYPE,
          _context: context,
          _calculateChangedBits: context._calculateChangedBits
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

        Object.defineProperties(Consumer, {
          Provider: {
            get: function () {
              if (!hasWarnedAboutUsingConsumerProvider) {
                hasWarnedAboutUsingConsumerProvider = true;
                warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
              }

              return context.Provider;
            },
            set: function (_Provider) {
              context.Provider = _Provider;
            }
          },
          _currentValue: {
            get: function () {
              return context._currentValue;
            },
            set: function (_currentValue) {
              context._currentValue = _currentValue;
            }
          },
          _currentValue2: {
            get: function () {
              return context._currentValue2;
            },
            set: function (_currentValue2) {
              context._currentValue2 = _currentValue2;
            }
          },
          _threadCount: {
            get: function () {
              return context._threadCount;
            },
            set: function (_threadCount) {
              context._threadCount = _threadCount;
            }
          },
          Consumer: {
            get: function () {
              if (!hasWarnedAboutUsingNestedContextConsumers) {
                hasWarnedAboutUsingNestedContextConsumers = true;
                warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
              }

              return context.Consumer;
            }
          }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

        context.Consumer = Consumer;
      }
      {
        context._currentRenderer = null;
        context._currentRenderer2 = null;
      }
      return context;
    }

    function lazy(ctor) {
      var lazyType = {
        $$typeof: REACT_LAZY_TYPE,
        _ctor: ctor,
        // React uses these fields to store the result.
        _status: -1,
        _result: null
      };
      {
        // In production, this would just set it on the object.
        var defaultProps = void 0;
        var propTypes = void 0;
        Object.defineProperties(lazyType, {
          defaultProps: {
            configurable: true,
            get: function () {
              return defaultProps;
            },
            set: function (newDefaultProps) {
              warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
              defaultProps = newDefaultProps; // Match production behavior more closely:

              Object.defineProperty(lazyType, 'defaultProps', {
                enumerable: true
              });
            }
          },
          propTypes: {
            configurable: true,
            get: function () {
              return propTypes;
            },
            set: function (newPropTypes) {
              warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
              propTypes = newPropTypes; // Match production behavior more closely:

              Object.defineProperty(lazyType, 'propTypes', {
                enumerable: true
              });
            }
          }
        });
      }
      return lazyType;
    }

    function forwardRef(render) {
      {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
          warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
        } else if (typeof render !== 'function') {
          warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
        } else {
          !( // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object
          render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;
        }

        if (render != null) {
          !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
        }
      }
      return {
        $$typeof: REACT_FORWARD_REF_TYPE,
        render: render
      };
    }

    function isValidElementType(type) {
      return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
    }

    function memo(type, compare) {
      {
        if (!isValidElementType(type)) {
          warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
        }
      }
      return {
        $$typeof: REACT_MEMO_TYPE,
        type: type,
        compare: compare === undefined ? null : compare
      };
    }

    function resolveDispatcher() {
      var dispatcher = ReactCurrentDispatcher.current;
      !(dispatcher !== null) ? invariant(false, 'Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)') : void 0;
      return dispatcher;
    }

    function useContext(Context, unstable_observedBits) {
      var dispatcher = resolveDispatcher();
      {
        !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0; // TODO: add a more generic warning for invalid values.

        if (Context._context !== undefined) {
          var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
          // and nobody should be using this in existing code.

          if (realContext.Consumer === Context) {
            warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
          } else if (realContext.Provider === Context) {
            warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
          }
        }
      }
      return dispatcher.useContext(Context, unstable_observedBits);
    }

    function useState(initialState) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useState(initialState);
    }

    function useReducer(reducer, initialArg, init) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useReducer(reducer, initialArg, init);
    }

    function useRef(initialValue) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useRef(initialValue);
    }

    function useEffect(create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useEffect(create, inputs);
    }

    function useLayoutEffect(create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useLayoutEffect(create, inputs);
    }

    function useCallback(callback, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useCallback(callback, inputs);
    }

    function useMemo(create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useMemo(create, inputs);
    }

    function useImperativeHandle(ref, create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useImperativeHandle(ref, create, inputs);
    }

    function useDebugValue(value, formatterFn) {
      {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
      }
    }
    /**
     * ReactElementValidator provides a wrapper around a element factory
     * which validates the props passed to the element. This is intended to be
     * used only in DEV and could be replaced by a static type checker for languages
     * that support it.
     */


    var propTypesMisspellWarningShown = void 0;
    {
      propTypesMisspellWarningShown = false;
    }

    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner.current) {
        var name = getComponentName(ReactCurrentOwner.current.type);

        if (name) {
          return '\n\nCheck the render method of `' + name + '`.';
        }
      }

      return '';
    }

    function getSourceInfoErrorAddendum(elementProps) {
      if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
        var source = elementProps.__source;
        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
        var lineNumber = source.lineNumber;
        return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
      }

      return '';
    }
    /**
     * Warn if there's no key explicitly set on dynamic arrays of children or
     * object keys are not valid. This allows us to keep track of children between
     * updates.
     */


    var ownerHasKeyUseWarning = {};

    function getCurrentComponentErrorInfo(parentType) {
      var info = getDeclarationErrorAddendum();

      if (!info) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

        if (parentName) {
          info = '\n\nCheck the top-level render call using <' + parentName + '>.';
        }
      }

      return info;
    }
    /**
     * Warn if the element doesn't have an explicit key assigned to it.
     * This element is in an array. The array could grow and shrink or be
     * reordered. All children that haven't already been validated are required to
     * have a "key" property assigned to it. Error statuses are cached so a warning
     * will only be shown once.
     *
     * @internal
     * @param {ReactElement} element Element that requires a key.
     * @param {*} parentType element's parent's type.
     */


    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }

      element._store.validated = true;
      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
        return;
      }

      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
      // property, it may be the creator of the child that's responsible for
      // assigning it a key.

      var childOwner = '';

      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
        // Give the component that originally created this child.
        childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';
      }

      setCurrentlyValidatingElement(element);
      {
        warning$1(false, 'Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
      }
      setCurrentlyValidatingElement(null);
    }
    /**
     * Ensure that every element either is passed in a static location, in an
     * array with an explicit keys property defined, or in an object literal
     * with valid key property.
     *
     * @internal
     * @param {ReactNode} node Statically passed child of any type.
     * @param {*} parentType node's parent's type.
     */


    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }

      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];

          if (isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (isValidElement(node)) {
        // This element was passed in a valid location.
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = getIteratorFn(node);

        if (typeof iteratorFn === 'function') {
          // Entry iterators used to provide implicit keys,
          // but now we print a separate warning for them later.
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step = void 0;

            while (!(step = iterator.next()).done) {
              if (isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }
    /**
     * Given an element, validate that its props follow the propTypes definition,
     * provided by the type.
     *
     * @param {ReactElement} element
     */


    function validatePropTypes(element) {
      var type = element.type;

      if (type === null || type === undefined || typeof type === 'string') {
        return;
      }

      var name = getComponentName(type);
      var propTypes = void 0;

      if (typeof type === 'function') {
        propTypes = type.propTypes;
      } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
      // Inner props are checked in the reconciler.
      type.$$typeof === REACT_MEMO_TYPE)) {
        propTypes = type.propTypes;
      } else {
        return;
      }

      if (propTypes) {
        setCurrentlyValidatingElement(element);
        checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
        setCurrentlyValidatingElement(null);
      } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
        propTypesMisspellWarningShown = true;
        warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
      }

      if (typeof type.getDefaultProps === 'function') {
        !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
      }
    }
    /**
     * Given a fragment, validate that it can only be provided with fragment props
     * @param {ReactElement} fragment
     */


    function validateFragmentProps(fragment) {
      setCurrentlyValidatingElement(fragment);
      var keys = Object.keys(fragment.props);

      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];

        if (key !== 'children' && key !== 'key') {
          warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
          break;
        }
      }

      if (fragment.ref !== null) {
        warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');
      }

      setCurrentlyValidatingElement(null);
    }

    function createElementWithValidation(type, props, children) {
      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
      // succeed and there will likely be errors in render.

      if (!validType) {
        var info = '';

        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
        }

        var sourceInfo = getSourceInfoErrorAddendum(props);

        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        var typeString = void 0;

        if (type === null) {
          typeString = 'null';
        } else if (Array.isArray(type)) {
          typeString = 'array';
        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
          typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';
          info = ' Did you accidentally export a JSX literal instead of a component?';
        } else {
          typeString = typeof type;
        }

        warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
      }

      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
      // TODO: Drop this when these are no longer allowed as the type argument.

      if (element == null) {
        return element;
      } // Skip key warning if the type isn't valid since our key validation logic
      // doesn't expect a non-string/function type and can throw confusing errors.
      // We don't want exception behavior to differ between dev and prod.
      // (Rendering will throw with a helpful message and as soon as the type is
      // fixed, the key warnings will appear.)


      if (validType) {
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], type);
        }
      }

      if (type === REACT_FRAGMENT_TYPE) {
        validateFragmentProps(element);
      } else {
        validatePropTypes(element);
      }

      return element;
    }

    function createFactoryWithValidation(type) {
      var validatedFactory = createElementWithValidation.bind(null, type);
      validatedFactory.type = type; // Legacy hook: remove it

      {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
      return validatedFactory;
    }

    function cloneElementWithValidation(element, props, children) {
      var newElement = cloneElement.apply(this, arguments);

      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], newElement.type);
      }

      validatePropTypes(newElement);
      return newElement;
    } // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
    // In some cases, StrictMode should also double-render lifecycles.
    // This can be confusing for tests though,
    // And it can be bad for performance in production.
    // This feature flag can be used to control the behavior:
    // To preserve the "Pause on caught exceptions" behavior of the debugger, we
    // replay the begin phase of a failed component inside invokeGuardedCallback.
    // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
    // Gather advanced timing metrics for Profiler subtrees.
    // Trace which interactions trigger each commit.
    // Only used in www builds.
    // TODO: true? Here it might just be false.
    // Only used in www builds.
    // Only used in www builds.
    // React Fire: prevent the value and checked attributes from syncing
    // with their related DOM properties
    // These APIs will no longer be "unstable" in the upcoming 16.7 release,
    // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.


    var enableStableConcurrentModeAPIs = false;
    var React = {
      Children: {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
      },
      createRef: createRef,
      Component: Component,
      PureComponent: PureComponent,
      createContext: createContext,
      forwardRef: forwardRef,
      lazy: lazy,
      memo: memo,
      useCallback: useCallback,
      useContext: useContext,
      useEffect: useEffect,
      useImperativeHandle: useImperativeHandle,
      useDebugValue: useDebugValue,
      useLayoutEffect: useLayoutEffect,
      useMemo: useMemo,
      useReducer: useReducer,
      useRef: useRef,
      useState: useState,
      Fragment: REACT_FRAGMENT_TYPE,
      StrictMode: REACT_STRICT_MODE_TYPE,
      Suspense: REACT_SUSPENSE_TYPE,
      createElement: createElementWithValidation,
      cloneElement: cloneElementWithValidation,
      createFactory: createFactoryWithValidation,
      isValidElement: isValidElement,
      version: ReactVersion,
      unstable_ConcurrentMode: REACT_CONCURRENT_MODE_TYPE,
      unstable_Profiler: REACT_PROFILER_TYPE,
      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals
    }; // Note: some APIs are added with feature flags.
    // Make sure that stable builds for open source
    // don't modify the React object to avoid deopts.
    // Also let's not expose their names in stable builds.

    if (enableStableConcurrentModeAPIs) {
      React.ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
      React.Profiler = REACT_PROFILER_TYPE;
      React.unstable_ConcurrentMode = undefined;
      React.unstable_Profiler = undefined;
    }

    var React$2 = Object.freeze({
      default: React
    });
    var React$3 = React$2 && React || React$2; // TODO: decide on the top-level export form.
    // This is hacky but makes it work with both Rollup and Jest.

    var react = React$3.default || React$3;
    module.exports = react;
  })();
}
},{"object-assign":"../../node_modules/object-assign/index.js","prop-types/checkPropTypes":"../../node_modules/prop-types/checkPropTypes.js"}],"../../node_modules/react/index.js":[function(require,module,exports) {
'use strict';

if ("development" === 'production') {
  module.exports = require('./cjs/react.production.min.js');
} else {
  module.exports = require('./cjs/react.development.js');
}
},{"./cjs/react.development.js":"../../node_modules/react/cjs/react.development.js"}],"../../node_modules/scheduler/cjs/scheduler.development.js":[function(require,module,exports) {
var global = arguments[3];
/** @license React v0.13.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    var enableSchedulerDebugging = false;
    /* eslint-disable no-var */
    // TODO: Use symbols?

    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5; // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111

    var maxSigned31BitInt = 1073741823; // Times out immediately

    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

    var USER_BLOCKING_PRIORITY = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

    var IDLE_PRIORITY = maxSigned31BitInt; // Callbacks are stored as a circular, doubly linked list.

    var firstCallbackNode = null;
    var currentDidTimeout = false; // Pausing the scheduler is useful for debugging.

    var isSchedulerPaused = false;
    var currentPriorityLevel = NormalPriority;
    var currentEventStartTime = -1;
    var currentExpirationTime = -1; // This is set when a callback is being executed, to prevent re-entrancy.

    var isExecutingCallback = false;
    var isHostCallbackScheduled = false;
    var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

    function ensureHostCallbackIsScheduled() {
      if (isExecutingCallback) {
        // Don't schedule work yet; wait until the next time we yield.
        return;
      } // Schedule the host callback using the earliest expiration in the list.


      var expirationTime = firstCallbackNode.expirationTime;

      if (!isHostCallbackScheduled) {
        isHostCallbackScheduled = true;
      } else {
        // Cancel the existing host callback.
        cancelHostCallback();
      }

      requestHostCallback(flushWork, expirationTime);
    }

    function flushFirstCallback() {
      var flushedNode = firstCallbackNode; // Remove the node from the list before calling the callback. That way the
      // list is in a consistent state even if the callback throws.

      var next = firstCallbackNode.next;

      if (firstCallbackNode === next) {
        // This is the last callback in the list.
        firstCallbackNode = null;
        next = null;
      } else {
        var lastCallbackNode = firstCallbackNode.previous;
        firstCallbackNode = lastCallbackNode.next = next;
        next.previous = lastCallbackNode;
      }

      flushedNode.next = flushedNode.previous = null; // Now it's safe to call the callback.

      var callback = flushedNode.callback;
      var expirationTime = flushedNode.expirationTime;
      var priorityLevel = flushedNode.priorityLevel;
      var previousPriorityLevel = currentPriorityLevel;
      var previousExpirationTime = currentExpirationTime;
      currentPriorityLevel = priorityLevel;
      currentExpirationTime = expirationTime;
      var continuationCallback;

      try {
        continuationCallback = callback();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
        currentExpirationTime = previousExpirationTime;
      } // A callback may return a continuation. The continuation should be scheduled
      // with the same priority and expiration as the just-finished callback.


      if (typeof continuationCallback === 'function') {
        var continuationNode = {
          callback: continuationCallback,
          priorityLevel: priorityLevel,
          expirationTime: expirationTime,
          next: null,
          previous: null
        }; // Insert the new callback into the list, sorted by its expiration. This is
        // almost the same as the code in `scheduleCallback`, except the callback
        // is inserted into the list *before* callbacks of equal expiration instead
        // of after.

        if (firstCallbackNode === null) {
          // This is the first callback in the list.
          firstCallbackNode = continuationNode.next = continuationNode.previous = continuationNode;
        } else {
          var nextAfterContinuation = null;
          var node = firstCallbackNode;

          do {
            if (node.expirationTime >= expirationTime) {
              // This callback expires at or after the continuation. We will insert
              // the continuation *before* this callback.
              nextAfterContinuation = node;
              break;
            }

            node = node.next;
          } while (node !== firstCallbackNode);

          if (nextAfterContinuation === null) {
            // No equal or lower priority callback was found, which means the new
            // callback is the lowest priority callback in the list.
            nextAfterContinuation = firstCallbackNode;
          } else if (nextAfterContinuation === firstCallbackNode) {
            // The new callback is the highest priority callback in the list.
            firstCallbackNode = continuationNode;
            ensureHostCallbackIsScheduled();
          }

          var previous = nextAfterContinuation.previous;
          previous.next = nextAfterContinuation.previous = continuationNode;
          continuationNode.next = nextAfterContinuation;
          continuationNode.previous = previous;
        }
      }
    }

    function flushImmediateWork() {
      if ( // Confirm we've exited the outer most event handler
      currentEventStartTime === -1 && firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority) {
        isExecutingCallback = true;

        try {
          do {
            flushFirstCallback();
          } while ( // Keep flushing until there are no more immediate callbacks
          firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority);
        } finally {
          isExecutingCallback = false;

          if (firstCallbackNode !== null) {
            // There's still work remaining. Request another callback.
            ensureHostCallbackIsScheduled();
          } else {
            isHostCallbackScheduled = false;
          }
        }
      }
    }

    function flushWork(didTimeout) {
      // Exit right away if we're currently paused
      if (enableSchedulerDebugging && isSchedulerPaused) {
        return;
      }

      isExecutingCallback = true;
      var previousDidTimeout = currentDidTimeout;
      currentDidTimeout = didTimeout;

      try {
        if (didTimeout) {
          // Flush all the expired callbacks without yielding.
          while (firstCallbackNode !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {
            // TODO Wrap in feature flag
            // Read the current time. Flush all the callbacks that expire at or
            // earlier than that time. Then read the current time again and repeat.
            // This optimizes for as few performance.now calls as possible.
            var currentTime = exports.unstable_now();

            if (firstCallbackNode.expirationTime <= currentTime) {
              do {
                flushFirstCallback();
              } while (firstCallbackNode !== null && firstCallbackNode.expirationTime <= currentTime && !(enableSchedulerDebugging && isSchedulerPaused));

              continue;
            }

            break;
          }
        } else {
          // Keep flushing callbacks until we run out of time in the frame.
          if (firstCallbackNode !== null) {
            do {
              if (enableSchedulerDebugging && isSchedulerPaused) {
                break;
              }

              flushFirstCallback();
            } while (firstCallbackNode !== null && !shouldYieldToHost());
          }
        }
      } finally {
        isExecutingCallback = false;
        currentDidTimeout = previousDidTimeout;

        if (firstCallbackNode !== null) {
          // There's still work remaining. Request another callback.
          ensureHostCallbackIsScheduled();
        } else {
          isHostCallbackScheduled = false;
        } // Before exiting, flush all the immediate work that was scheduled.


        flushImmediateWork();
      }
    }

    function unstable_runWithPriority(priorityLevel, eventHandler) {
      switch (priorityLevel) {
        case ImmediatePriority:
        case UserBlockingPriority:
        case NormalPriority:
        case LowPriority:
        case IdlePriority:
          break;

        default:
          priorityLevel = NormalPriority;
      }

      var previousPriorityLevel = currentPriorityLevel;
      var previousEventStartTime = currentEventStartTime;
      currentPriorityLevel = priorityLevel;
      currentEventStartTime = exports.unstable_now();

      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
        currentEventStartTime = previousEventStartTime; // Before exiting, flush all the immediate work that was scheduled.

        flushImmediateWork();
      }
    }

    function unstable_next(eventHandler) {
      var priorityLevel = void 0;

      switch (currentPriorityLevel) {
        case ImmediatePriority:
        case UserBlockingPriority:
        case NormalPriority:
          // Shift down to normal priority
          priorityLevel = NormalPriority;
          break;

        default:
          // Anything lower than normal priority should remain at the current level.
          priorityLevel = currentPriorityLevel;
          break;
      }

      var previousPriorityLevel = currentPriorityLevel;
      var previousEventStartTime = currentEventStartTime;
      currentPriorityLevel = priorityLevel;
      currentEventStartTime = exports.unstable_now();

      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
        currentEventStartTime = previousEventStartTime; // Before exiting, flush all the immediate work that was scheduled.

        flushImmediateWork();
      }
    }

    function unstable_wrapCallback(callback) {
      var parentPriorityLevel = currentPriorityLevel;
      return function () {
        // This is a fork of runWithPriority, inlined for performance.
        var previousPriorityLevel = currentPriorityLevel;
        var previousEventStartTime = currentEventStartTime;
        currentPriorityLevel = parentPriorityLevel;
        currentEventStartTime = exports.unstable_now();

        try {
          return callback.apply(this, arguments);
        } finally {
          currentPriorityLevel = previousPriorityLevel;
          currentEventStartTime = previousEventStartTime;
          flushImmediateWork();
        }
      };
    }

    function unstable_scheduleCallback(callback, deprecated_options) {
      var startTime = currentEventStartTime !== -1 ? currentEventStartTime : exports.unstable_now();
      var expirationTime;

      if (typeof deprecated_options === 'object' && deprecated_options !== null && typeof deprecated_options.timeout === 'number') {
        // FIXME: Remove this branch once we lift expiration times out of React.
        expirationTime = startTime + deprecated_options.timeout;
      } else {
        switch (currentPriorityLevel) {
          case ImmediatePriority:
            expirationTime = startTime + IMMEDIATE_PRIORITY_TIMEOUT;
            break;

          case UserBlockingPriority:
            expirationTime = startTime + USER_BLOCKING_PRIORITY;
            break;

          case IdlePriority:
            expirationTime = startTime + IDLE_PRIORITY;
            break;

          case LowPriority:
            expirationTime = startTime + LOW_PRIORITY_TIMEOUT;
            break;

          case NormalPriority:
          default:
            expirationTime = startTime + NORMAL_PRIORITY_TIMEOUT;
        }
      }

      var newNode = {
        callback: callback,
        priorityLevel: currentPriorityLevel,
        expirationTime: expirationTime,
        next: null,
        previous: null
      }; // Insert the new callback into the list, ordered first by expiration, then
      // by insertion. So the new callback is inserted any other callback with
      // equal expiration.

      if (firstCallbackNode === null) {
        // This is the first callback in the list.
        firstCallbackNode = newNode.next = newNode.previous = newNode;
        ensureHostCallbackIsScheduled();
      } else {
        var next = null;
        var node = firstCallbackNode;

        do {
          if (node.expirationTime > expirationTime) {
            // The new callback expires before this one.
            next = node;
            break;
          }

          node = node.next;
        } while (node !== firstCallbackNode);

        if (next === null) {
          // No callback with a later expiration was found, which means the new
          // callback has the latest expiration in the list.
          next = firstCallbackNode;
        } else if (next === firstCallbackNode) {
          // The new callback has the earliest expiration in the entire list.
          firstCallbackNode = newNode;
          ensureHostCallbackIsScheduled();
        }

        var previous = next.previous;
        previous.next = next.previous = newNode;
        newNode.next = next;
        newNode.previous = previous;
      }

      return newNode;
    }

    function unstable_pauseExecution() {
      isSchedulerPaused = true;
    }

    function unstable_continueExecution() {
      isSchedulerPaused = false;

      if (firstCallbackNode !== null) {
        ensureHostCallbackIsScheduled();
      }
    }

    function unstable_getFirstCallbackNode() {
      return firstCallbackNode;
    }

    function unstable_cancelCallback(callbackNode) {
      var next = callbackNode.next;

      if (next === null) {
        // Already cancelled.
        return;
      }

      if (next === callbackNode) {
        // This is the only scheduled callback. Clear the list.
        firstCallbackNode = null;
      } else {
        // Remove the callback from its position in the list.
        if (callbackNode === firstCallbackNode) {
          firstCallbackNode = next;
        }

        var previous = callbackNode.previous;
        previous.next = next;
        next.previous = previous;
      }

      callbackNode.next = callbackNode.previous = null;
    }

    function unstable_getCurrentPriorityLevel() {
      return currentPriorityLevel;
    }

    function unstable_shouldYield() {
      return !currentDidTimeout && (firstCallbackNode !== null && firstCallbackNode.expirationTime < currentExpirationTime || shouldYieldToHost());
    } // The remaining code is essentially a polyfill for requestIdleCallback. It
    // works by scheduling a requestAnimationFrame, storing the time for the start
    // of the frame, then scheduling a postMessage which gets scheduled after paint.
    // Within the postMessage handler do as much work as possible until time + frame
    // rate. By separating the idle call into a separate event tick we ensure that
    // layout, paint and other browser work is counted against the available time.
    // The frame rate is dynamically adjusted.
    // We capture a local reference to any global, in case it gets polyfilled after
    // this module is initially evaluated. We want to be using a
    // consistent implementation.


    var localDate = Date; // This initialization code may run even on server environments if a component
    // just imports ReactDOM (e.g. for findDOMNode). Some environments might not
    // have setTimeout or clearTimeout. However, we always expect them to be defined
    // on the client. https://github.com/facebook/react/pull/13088

    var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined; // We don't expect either of these to necessarily be defined, but we will error
    // later if they are missing on the client.

    var localRequestAnimationFrame = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;
    var localCancelAnimationFrame = typeof cancelAnimationFrame === 'function' ? cancelAnimationFrame : undefined; // requestAnimationFrame does not run when the tab is in the background. If
    // we're backgrounded we prefer for that work to happen so that the page
    // continues to load in the background. So we also schedule a 'setTimeout' as
    // a fallback.
    // TODO: Need a better heuristic for backgrounded work.

    var ANIMATION_FRAME_TIMEOUT = 100;
    var rAFID;
    var rAFTimeoutID;

    var requestAnimationFrameWithTimeout = function (callback) {
      // schedule rAF and also a setTimeout
      rAFID = localRequestAnimationFrame(function (timestamp) {
        // cancel the setTimeout
        localClearTimeout(rAFTimeoutID);
        callback(timestamp);
      });
      rAFTimeoutID = localSetTimeout(function () {
        // cancel the requestAnimationFrame
        localCancelAnimationFrame(rAFID);
        callback(exports.unstable_now());
      }, ANIMATION_FRAME_TIMEOUT);
    };

    if (hasNativePerformanceNow) {
      var Performance = performance;

      exports.unstable_now = function () {
        return Performance.now();
      };
    } else {
      exports.unstable_now = function () {
        return localDate.now();
      };
    }

    var requestHostCallback;
    var cancelHostCallback;
    var shouldYieldToHost;
    var globalValue = null;

    if (typeof window !== 'undefined') {
      globalValue = window;
    } else if (typeof global !== 'undefined') {
      globalValue = global;
    }

    if (globalValue && globalValue._schedMock) {
      // Dynamic injection, only for testing purposes.
      var globalImpl = globalValue._schedMock;
      requestHostCallback = globalImpl[0];
      cancelHostCallback = globalImpl[1];
      shouldYieldToHost = globalImpl[2];
      exports.unstable_now = globalImpl[3];
    } else if ( // If Scheduler runs in a non-DOM environment, it falls back to a naive
    // implementation using setTimeout.
    typeof window === 'undefined' || // Check if MessageChannel is supported, too.
    typeof MessageChannel !== 'function') {
      // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
      // fallback to a naive implementation.
      var _callback = null;

      var _flushCallback = function (didTimeout) {
        if (_callback !== null) {
          try {
            _callback(didTimeout);
          } finally {
            _callback = null;
          }
        }
      };

      requestHostCallback = function (cb, ms) {
        if (_callback !== null) {
          // Protect against re-entrancy.
          setTimeout(requestHostCallback, 0, cb);
        } else {
          _callback = cb;
          setTimeout(_flushCallback, 0, false);
        }
      };

      cancelHostCallback = function () {
        _callback = null;
      };

      shouldYieldToHost = function () {
        return false;
      };
    } else {
      if (typeof console !== 'undefined') {
        // TODO: Remove fb.me link
        if (typeof localRequestAnimationFrame !== 'function') {
          console.error("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
        }

        if (typeof localCancelAnimationFrame !== 'function') {
          console.error("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
        }
      }

      var scheduledHostCallback = null;
      var isMessageEventScheduled = false;
      var timeoutTime = -1;
      var isAnimationFrameScheduled = false;
      var isFlushingHostCallback = false;
      var frameDeadline = 0; // We start out assuming that we run at 30fps but then the heuristic tracking
      // will adjust this value to a faster fps if we get more frequent animation
      // frames.

      var previousFrameTime = 33;
      var activeFrameTime = 33;

      shouldYieldToHost = function () {
        return frameDeadline <= exports.unstable_now();
      }; // We use the postMessage trick to defer idle work until after the repaint.


      var channel = new MessageChannel();
      var port = channel.port2;

      channel.port1.onmessage = function (event) {
        isMessageEventScheduled = false;
        var prevScheduledCallback = scheduledHostCallback;
        var prevTimeoutTime = timeoutTime;
        scheduledHostCallback = null;
        timeoutTime = -1;
        var currentTime = exports.unstable_now();
        var didTimeout = false;

        if (frameDeadline - currentTime <= 0) {
          // There's no time left in this idle period. Check if the callback has
          // a timeout and whether it's been exceeded.
          if (prevTimeoutTime !== -1 && prevTimeoutTime <= currentTime) {
            // Exceeded the timeout. Invoke the callback even though there's no
            // time left.
            didTimeout = true;
          } else {
            // No timeout.
            if (!isAnimationFrameScheduled) {
              // Schedule another animation callback so we retry later.
              isAnimationFrameScheduled = true;
              requestAnimationFrameWithTimeout(animationTick);
            } // Exit without invoking the callback.


            scheduledHostCallback = prevScheduledCallback;
            timeoutTime = prevTimeoutTime;
            return;
          }
        }

        if (prevScheduledCallback !== null) {
          isFlushingHostCallback = true;

          try {
            prevScheduledCallback(didTimeout);
          } finally {
            isFlushingHostCallback = false;
          }
        }
      };

      var animationTick = function (rafTime) {
        if (scheduledHostCallback !== null) {
          // Eagerly schedule the next animation callback at the beginning of the
          // frame. If the scheduler queue is not empty at the end of the frame, it
          // will continue flushing inside that callback. If the queue *is* empty,
          // then it will exit immediately. Posting the callback at the start of the
          // frame ensures it's fired within the earliest possible frame. If we
          // waited until the end of the frame to post the callback, we risk the
          // browser skipping a frame and not firing the callback until the frame
          // after that.
          requestAnimationFrameWithTimeout(animationTick);
        } else {
          // No pending work. Exit.
          isAnimationFrameScheduled = false;
          return;
        }

        var nextFrameTime = rafTime - frameDeadline + activeFrameTime;

        if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
          if (nextFrameTime < 8) {
            // Defensive coding. We don't support higher frame rates than 120hz.
            // If the calculated frame time gets lower than 8, it is probably a bug.
            nextFrameTime = 8;
          } // If one frame goes long, then the next one can be short to catch up.
          // If two frames are short in a row, then that's an indication that we
          // actually have a higher frame rate than what we're currently optimizing.
          // We adjust our heuristic dynamically accordingly. For example, if we're
          // running on 120hz display or 90hz VR display.
          // Take the max of the two in case one of them was an anomaly due to
          // missed frame deadlines.


          activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
        } else {
          previousFrameTime = nextFrameTime;
        }

        frameDeadline = rafTime + activeFrameTime;

        if (!isMessageEventScheduled) {
          isMessageEventScheduled = true;
          port.postMessage(undefined);
        }
      };

      requestHostCallback = function (callback, absoluteTimeout) {
        scheduledHostCallback = callback;
        timeoutTime = absoluteTimeout;

        if (isFlushingHostCallback || absoluteTimeout < 0) {
          // Don't wait for the next frame. Continue working ASAP, in a new event.
          port.postMessage(undefined);
        } else if (!isAnimationFrameScheduled) {
          // If rAF didn't already schedule one, we need to schedule a frame.
          // TODO: If this rAF doesn't materialize because the browser throttles, we
          // might want to still have setTimeout trigger rIC as a backup to ensure
          // that we keep performing work.
          isAnimationFrameScheduled = true;
          requestAnimationFrameWithTimeout(animationTick);
        }
      };

      cancelHostCallback = function () {
        scheduledHostCallback = null;
        isMessageEventScheduled = false;
        timeoutTime = -1;
      };
    }

    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_next = unstable_next;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_wrapCallback = unstable_wrapCallback;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_shouldYield = unstable_shouldYield;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
  })();
}
},{}],"../../node_modules/scheduler/index.js":[function(require,module,exports) {
'use strict';

if ("development" === 'production') {
  module.exports = require('./cjs/scheduler.production.min.js');
} else {
  module.exports = require('./cjs/scheduler.development.js');
}
},{"./cjs/scheduler.development.js":"../../node_modules/scheduler/cjs/scheduler.development.js"}],"../../node_modules/scheduler/cjs/scheduler-tracing.development.js":[function(require,module,exports) {
/** @license React v0.13.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
      value: true
    }); // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
    // In some cases, StrictMode should also double-render lifecycles.
    // This can be confusing for tests though,
    // And it can be bad for performance in production.
    // This feature flag can be used to control the behavior:
    // To preserve the "Pause on caught exceptions" behavior of the debugger, we
    // replay the begin phase of a failed component inside invokeGuardedCallback.
    // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
    // Gather advanced timing metrics for Profiler subtrees.
    // Trace which interactions trigger each commit.

    var enableSchedulerTracing = true; // Only used in www builds.
    // TODO: true? Here it might just be false.
    // Only used in www builds.
    // Only used in www builds.
    // React Fire: prevent the value and checked attributes from syncing
    // with their related DOM properties
    // These APIs will no longer be "unstable" in the upcoming 16.7 release,
    // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.

    var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.

    var interactionIDCounter = 0;
    var threadIDCounter = 0; // Set of currently traced interactions.
    // Interactions "stack"–
    // Meaning that newly traced interactions are appended to the previously active set.
    // When an interaction goes out of scope, the previous set (if any) is restored.

    exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.

    exports.__subscriberRef = null;

    if (enableSchedulerTracing) {
      exports.__interactionsRef = {
        current: new Set()
      };
      exports.__subscriberRef = {
        current: null
      };
    }

    function unstable_clear(callback) {
      if (!enableSchedulerTracing) {
        return callback();
      }

      var prevInteractions = exports.__interactionsRef.current;
      exports.__interactionsRef.current = new Set();

      try {
        return callback();
      } finally {
        exports.__interactionsRef.current = prevInteractions;
      }
    }

    function unstable_getCurrent() {
      if (!enableSchedulerTracing) {
        return null;
      } else {
        return exports.__interactionsRef.current;
      }
    }

    function unstable_getThreadID() {
      return ++threadIDCounter;
    }

    function unstable_trace(name, timestamp, callback) {
      var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;

      if (!enableSchedulerTracing) {
        return callback();
      }

      var interaction = {
        __count: 1,
        id: interactionIDCounter++,
        name: name,
        timestamp: timestamp
      };
      var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.
      // To do that, clone the current interactions.
      // The previous set will be restored upon completion.

      var interactions = new Set(prevInteractions);
      interactions.add(interaction);
      exports.__interactionsRef.current = interactions;
      var subscriber = exports.__subscriberRef.current;
      var returnValue = void 0;

      try {
        if (subscriber !== null) {
          subscriber.onInteractionTraced(interaction);
        }
      } finally {
        try {
          if (subscriber !== null) {
            subscriber.onWorkStarted(interactions, threadID);
          }
        } finally {
          try {
            returnValue = callback();
          } finally {
            exports.__interactionsRef.current = prevInteractions;

            try {
              if (subscriber !== null) {
                subscriber.onWorkStopped(interactions, threadID);
              }
            } finally {
              interaction.__count--; // If no async work was scheduled for this interaction,
              // Notify subscribers that it's completed.

              if (subscriber !== null && interaction.__count === 0) {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              }
            }
          }
        }
      }

      return returnValue;
    }

    function unstable_wrap(callback) {
      var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;

      if (!enableSchedulerTracing) {
        return callback;
      }

      var wrappedInteractions = exports.__interactionsRef.current;
      var subscriber = exports.__subscriberRef.current;

      if (subscriber !== null) {
        subscriber.onWorkScheduled(wrappedInteractions, threadID);
      } // Update the pending async work count for the current interactions.
      // Update after calling subscribers in case of error.


      wrappedInteractions.forEach(function (interaction) {
        interaction.__count++;
      });
      var hasRun = false;

      function wrapped() {
        var prevInteractions = exports.__interactionsRef.current;
        exports.__interactionsRef.current = wrappedInteractions;
        subscriber = exports.__subscriberRef.current;

        try {
          var returnValue = void 0;

          try {
            if (subscriber !== null) {
              subscriber.onWorkStarted(wrappedInteractions, threadID);
            }
          } finally {
            try {
              returnValue = callback.apply(undefined, arguments);
            } finally {
              exports.__interactionsRef.current = prevInteractions;

              if (subscriber !== null) {
                subscriber.onWorkStopped(wrappedInteractions, threadID);
              }
            }
          }

          return returnValue;
        } finally {
          if (!hasRun) {
            // We only expect a wrapped function to be executed once,
            // But in the event that it's executed more than once–
            // Only decrement the outstanding interaction counts once.
            hasRun = true; // Update pending async counts for all wrapped interactions.
            // If this was the last scheduled async work for any of them,
            // Mark them as completed.

            wrappedInteractions.forEach(function (interaction) {
              interaction.__count--;

              if (subscriber !== null && interaction.__count === 0) {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              }
            });
          }
        }
      }

      wrapped.cancel = function cancel() {
        subscriber = exports.__subscriberRef.current;

        try {
          if (subscriber !== null) {
            subscriber.onWorkCanceled(wrappedInteractions, threadID);
          }
        } finally {
          // Update pending async counts for all wrapped interactions.
          // If this was the last scheduled async work for any of them,
          // Mark them as completed.
          wrappedInteractions.forEach(function (interaction) {
            interaction.__count--;

            if (subscriber && interaction.__count === 0) {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            }
          });
        }
      };

      return wrapped;
    }

    var subscribers = null;

    if (enableSchedulerTracing) {
      subscribers = new Set();
    }

    function unstable_subscribe(subscriber) {
      if (enableSchedulerTracing) {
        subscribers.add(subscriber);

        if (subscribers.size === 1) {
          exports.__subscriberRef.current = {
            onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
            onInteractionTraced: onInteractionTraced,
            onWorkCanceled: onWorkCanceled,
            onWorkScheduled: onWorkScheduled,
            onWorkStarted: onWorkStarted,
            onWorkStopped: onWorkStopped
          };
        }
      }
    }

    function unstable_unsubscribe(subscriber) {
      if (enableSchedulerTracing) {
        subscribers.delete(subscriber);

        if (subscribers.size === 0) {
          exports.__subscriberRef.current = null;
        }
      }
    }

    function onInteractionTraced(interaction) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onInteractionTraced(interaction);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onInteractionScheduledWorkCompleted(interaction) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkScheduled(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkScheduled(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkStarted(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkStarted(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkStopped(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkStopped(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkCanceled(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkCanceled(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    exports.unstable_clear = unstable_clear;
    exports.unstable_getCurrent = unstable_getCurrent;
    exports.unstable_getThreadID = unstable_getThreadID;
    exports.unstable_trace = unstable_trace;
    exports.unstable_wrap = unstable_wrap;
    exports.unstable_subscribe = unstable_subscribe;
    exports.unstable_unsubscribe = unstable_unsubscribe;
  })();
}
},{}],"../../node_modules/scheduler/tracing.js":[function(require,module,exports) {
'use strict';

if ("development" === 'production') {
  module.exports = require('./cjs/scheduler-tracing.production.min.js');
} else {
  module.exports = require('./cjs/scheduler-tracing.development.js');
}
},{"./cjs/scheduler-tracing.development.js":"../../node_modules/scheduler/cjs/scheduler-tracing.development.js"}],"../../node_modules/react-dom/cjs/react-dom.development.js":[function(require,module,exports) {
/** @license React v16.8.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    var React = require('react');

    var _assign = require('object-assign');

    var checkPropTypes = require('prop-types/checkPropTypes');

    var scheduler = require('scheduler');

    var tracing = require('scheduler/tracing');
    /**
     * Use invariant() to assert state which your program assumes to be true.
     *
     * Provide sprintf-style format (only %s is supported) and arguments
     * to provide information about what broke and what you were
     * expecting.
     *
     * The invariant message will be stripped in production, but the invariant
     * will remain to ensure logic does not differ in production.
     */


    var validateFormat = function () {};

    {
      validateFormat = function (format) {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      };
    }

    function invariant(condition, format, a, b, c, d, e, f) {
      validateFormat(format);

      if (!condition) {
        var error = void 0;

        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }

        error.framesToPop = 1; // we don't care about invariant's own frame

        throw error;
      }
    } // Relying on the `invariant()` implementation lets us
    // preserve the format and params in the www builds.


    !React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

    var invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {
      var funcArgs = Array.prototype.slice.call(arguments, 3);

      try {
        func.apply(context, funcArgs);
      } catch (error) {
        this.onError(error);
      }
    };

    {
      // In DEV mode, we swap out invokeGuardedCallback for a special version
      // that plays more nicely with the browser's DevTools. The idea is to preserve
      // "Pause on exceptions" behavior. Because React wraps all user-provided
      // functions in invokeGuardedCallback, and the production version of
      // invokeGuardedCallback uses a try-catch, all user exceptions are treated
      // like caught exceptions, and the DevTools won't pause unless the developer
      // takes the extra step of enabling pause on caught exceptions. This is
      // unintuitive, though, because even though React has caught the error, from
      // the developer's perspective, the error is uncaught.
      //
      // To preserve the expected "Pause on exceptions" behavior, we don't use a
      // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
      // DOM node, and call the user-provided callback from inside an event handler
      // for that fake event. If the callback throws, the error is "captured" using
      // a global event handler. But because the error happens in a different
      // event loop context, it does not interrupt the normal program flow.
      // Effectively, this gives us try-catch behavior without actually using
      // try-catch. Neat!
      // Check that the browser supports the APIs we need to implement our special
      // DEV version of invokeGuardedCallback
      if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');

        var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
          // If document doesn't exist we know for sure we will crash in this method
          // when we call document.createEvent(). However this can cause confusing
          // errors: https://github.com/facebookincubator/create-react-app/issues/3482
          // So we preemptively throw with a better message instead.
          !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;
          var evt = document.createEvent('Event'); // Keeps track of whether the user-provided callback threw an error. We
          // set this to true at the beginning, then set it to false right after
          // calling the function. If the function errors, `didError` will never be
          // set to false. This strategy works even if the browser is flaky and
          // fails to call our global error handler, because it doesn't rely on
          // the error event at all.

          var didError = true; // Keeps track of the value of window.event so that we can reset it
          // during the callback to let user code access window.event in the
          // browsers that support it.

          var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
          // dispatching: https://github.com/facebook/react/issues/13688

          var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event'); // Create an event handler for our fake event. We will synchronously
          // dispatch our fake event using `dispatchEvent`. Inside the handler, we
          // call the user-provided callback.

          var funcArgs = Array.prototype.slice.call(arguments, 3);

          function callCallback() {
            // We immediately remove the callback from event listeners so that
            // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
            // nested call would trigger the fake event handlers of any call higher
            // in the stack.
            fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
            // window.event assignment in both IE <= 10 as they throw an error
            // "Member not found" in strict mode, and in Firefox which does not
            // support window.event.

            if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
              window.event = windowEvent;
            }

            func.apply(context, funcArgs);
            didError = false;
          } // Create a global error event handler. We use this to capture the value
          // that was thrown. It's possible that this error handler will fire more
          // than once; for example, if non-React code also calls `dispatchEvent`
          // and a handler for that event throws. We should be resilient to most of
          // those cases. Even if our error event handler fires more than once, the
          // last error event is always used. If the callback actually does error,
          // we know that the last error event is the correct one, because it's not
          // possible for anything else to have happened in between our callback
          // erroring and the code that follows the `dispatchEvent` call below. If
          // the callback doesn't error, but the error event was fired, we know to
          // ignore it because `didError` will be false, as described above.


          var error = void 0; // Use this to track whether the error event is ever called.

          var didSetError = false;
          var isCrossOriginError = false;

          function handleWindowError(event) {
            error = event.error;
            didSetError = true;

            if (error === null && event.colno === 0 && event.lineno === 0) {
              isCrossOriginError = true;
            }

            if (event.defaultPrevented) {
              // Some other error handler has prevented default.
              // Browsers silence the error report if this happens.
              // We'll remember this to later decide whether to log it or not.
              if (error != null && typeof error === 'object') {
                try {
                  error._suppressLogging = true;
                } catch (inner) {// Ignore.
                }
              }
            }
          } // Create a fake event type.


          var evtType = 'react-' + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

          window.addEventListener('error', handleWindowError);
          fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
          // errors, it will trigger our global error handler.

          evt.initEvent(evtType, false, false);
          fakeNode.dispatchEvent(evt);

          if (windowEventDescriptor) {
            Object.defineProperty(window, 'event', windowEventDescriptor);
          }

          if (didError) {
            if (!didSetError) {
              // The callback errored, but the error event never fired.
              error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
            } else if (isCrossOriginError) {
              error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
            }

            this.onError(error);
          } // Remove our event listeners


          window.removeEventListener('error', handleWindowError);
        };

        invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
      }
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl; // Used by Fiber to simulate a try-catch.

    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.

    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
      onError: function (error) {
        hasError = true;
        caughtError = error;
      }
    };
    /**
     * Call a function while guarding against errors that happens within it.
     * Returns an error if it throws, otherwise null.
     *
     * In production, this is implemented using a try-catch. The reason we don't
     * use a try-catch directly is so that we can swap out a different
     * implementation in DEV mode.
     *
     * @param {String} name of the guard to use for logging or debugging
     * @param {Function} func The function to invoke
     * @param {*} context The context to use when calling the function
     * @param {...*} args Arguments for function
     */

    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
      hasError = false;
      caughtError = null;
      invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
     * Same as invokeGuardedCallback, but instead of returning an error, it stores
     * it in a global so it can be rethrown by `rethrowCaughtError` later.
     * TODO: See if caughtError and rethrowError can be unified.
     *
     * @param {String} name of the guard to use for logging or debugging
     * @param {Function} func The function to invoke
     * @param {*} context The context to use when calling the function
     * @param {...*} args Arguments for function
     */


    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
      invokeGuardedCallback.apply(this, arguments);

      if (hasError) {
        var error = clearCaughtError();

        if (!hasRethrowError) {
          hasRethrowError = true;
          rethrowError = error;
        }
      }
    }
    /**
     * During execution of guarded functions we will capture the first error which
     * we will rethrow to be handled by the top level error handler.
     */


    function rethrowCaughtError() {
      if (hasRethrowError) {
        var error = rethrowError;
        hasRethrowError = false;
        rethrowError = null;
        throw error;
      }
    }

    function hasCaughtError() {
      return hasError;
    }

    function clearCaughtError() {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
        return error;
      } else {
        invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
      }
    }
    /**
     * Injectable ordering of event plugins.
     */


    var eventPluginOrder = null;
    /**
     * Injectable mapping from names to event plugin modules.
     */

    var namesToPlugins = {};
    /**
     * Recomputes the plugin list using the injected plugins and plugin ordering.
     *
     * @private
     */

    function recomputePluginOrdering() {
      if (!eventPluginOrder) {
        // Wait until an `eventPluginOrder` is injected.
        return;
      }

      for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName];
        var pluginIndex = eventPluginOrder.indexOf(pluginName);
        !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;

        if (plugins[pluginIndex]) {
          continue;
        }

        !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
        plugins[pluginIndex] = pluginModule;
        var publishedEvents = pluginModule.eventTypes;

        for (var eventName in publishedEvents) {
          !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
        }
      }
    }
    /**
     * Publishes an event so that it can be dispatched by the supplied plugin.
     *
     * @param {object} dispatchConfig Dispatch configuration for the event.
     * @param {object} PluginModule Plugin publishing the event.
     * @return {boolean} True if the event was successfully published.
     * @private
     */


    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
      !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
      eventNameDispatchConfigs[eventName] = dispatchConfig;
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
            var phasedRegistrationName = phasedRegistrationNames[phaseName];
            publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
          }
        }

        return true;
      } else if (dispatchConfig.registrationName) {
        publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
        return true;
      }

      return false;
    }
    /**
     * Publishes a registration name that is used to identify dispatched events.
     *
     * @param {string} registrationName Registration name to add.
     * @param {object} PluginModule Plugin publishing the event.
     * @private
     */


    function publishRegistrationName(registrationName, pluginModule, eventName) {
      !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
      registrationNameModules[registrationName] = pluginModule;
      registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
      {
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;

        if (registrationName === 'onDoubleClick') {
          possibleRegistrationNames.ondblclick = registrationName;
        }
      }
    }
    /**
     * Registers plugins so that they can extract and dispatch events.
     *
     * @see {EventPluginHub}
     */

    /**
     * Ordered list of injected plugins.
     */


    var plugins = [];
    /**
     * Mapping from event name to dispatch config
     */

    var eventNameDispatchConfigs = {};
    /**
     * Mapping from registration name to plugin module
     */

    var registrationNameModules = {};
    /**
     * Mapping from registration name to event name
     */

    var registrationNameDependencies = {};
    /**
     * Mapping from lowercase registration names to the properly cased version,
     * used to warn in the case of missing event handlers. Available
     * only in true.
     * @type {Object}
     */

    var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true

    /**
     * Injects an ordering of plugins (by plugin name). This allows the ordering
     * to be decoupled from injection of the actual plugins so that ordering is
     * always deterministic regardless of packaging, on-the-fly injection, etc.
     *
     * @param {array} InjectedEventPluginOrder
     * @internal
     * @see {EventPluginHub.injection.injectEventPluginOrder}
     */

    function injectEventPluginOrder(injectedEventPluginOrder) {
      !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0; // Clone the ordering so it cannot be dynamically mutated.

      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    }
    /**
     * Injects plugins to be used by `EventPluginHub`. The plugin names must be
     * in the ordering injected by `injectEventPluginOrder`.
     *
     * Plugins can be injected as part of page initialization or on-the-fly.
     *
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     * @internal
     * @see {EventPluginHub.injection.injectEventPluginsByName}
     */


    function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false;

      for (var pluginName in injectedNamesToPlugins) {
        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          continue;
        }

        var pluginModule = injectedNamesToPlugins[pluginName];

        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
          !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
          namesToPlugins[pluginName] = pluginModule;
          isOrderingDirty = true;
        }
      }

      if (isOrderingDirty) {
        recomputePluginOrdering();
      }
    }
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var warningWithoutStack = function () {};

    {
      warningWithoutStack = function (condition, format) {
        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        if (format === undefined) {
          throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (args.length > 8) {
          // Check before the condition to catch violations early.
          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
        }

        if (condition) {
          return;
        }

        if (typeof console !== 'undefined') {
          var argsWithFormat = args.map(function (item) {
            return '' + item;
          });
          argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
          // breaks IE9: https://github.com/facebook/react/issues/13610

          Function.prototype.apply.call(console.error, console, argsWithFormat);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function () {
            return args[argIndex++];
          });
          throw new Error(message);
        } catch (x) {}
      };
    }
    var warningWithoutStack$1 = warningWithoutStack;
    var getFiberCurrentPropsFromNode = null;
    var getInstanceFromNode = null;
    var getNodeFromInstance = null;

    function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {
      getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
      getInstanceFromNode = getInstanceFromNodeImpl;
      getNodeFromInstance = getNodeFromInstanceImpl;
      {
        !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
      }
    }

    var validateEventDispatches = void 0;
    {
      validateEventDispatches = function (event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchInstances = event._dispatchInstances;
        var listenersIsArr = Array.isArray(dispatchListeners);
        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
        var instancesIsArr = Array.isArray(dispatchInstances);
        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
        !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;
      };
    }
    /**
     * Dispatch the event to the listener.
     * @param {SyntheticEvent} event SyntheticEvent to handle
     * @param {function} listener Application-level callback
     * @param {*} inst Internal component instance
     */

    function executeDispatch(event, listener, inst) {
      var type = event.type || 'unknown-event';
      event.currentTarget = getNodeFromInstance(inst);
      invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
      event.currentTarget = null;
    }
    /**
     * Standard/simple iteration through an event's collected dispatches.
     */


    function executeDispatchesInOrder(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;
      {
        validateEventDispatches(event);
      }

      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          } // Listeners and Instances are two parallel arrays that are always in sync.


          executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);
        }
      } else if (dispatchListeners) {
        executeDispatch(event, dispatchListeners, dispatchInstances);
      }

      event._dispatchListeners = null;
      event._dispatchInstances = null;
    }
    /**
     * @see executeDispatchesInOrderStopAtTrueImpl
     */

    /**
     * Execution of a "direct" dispatch - there must be at most one dispatch
     * accumulated on the event or it is considered an error. It doesn't really make
     * sense for an event with multiple dispatches (bubbled) to keep track of the
     * return values at each dispatch execution, but it does tend to make sense when
     * dealing with "direct" dispatches.
     *
     * @return {*} The return value of executing the single dispatch.
     */

    /**
     * @param {SyntheticEvent} event
     * @return {boolean} True iff number of dispatches accumulated is greater than 0.
     */

    /**
     * Accumulates items that must not be null or undefined into the first one. This
     * is used to conserve memory by avoiding array allocations, and thus sacrifices
     * API cleanness. Since `current` can be null before being passed in and not
     * null after this function, make sure to assign it back to `current`:
     *
     * `a = accumulateInto(a, b);`
     *
     * This API should be sparingly used. Try `accumulate` for something cleaner.
     *
     * @return {*|array<*>} An accumulation of items.
     */


    function accumulateInto(current, next) {
      !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

      if (current == null) {
        return next;
      } // Both are not empty. Warning: Never call x.concat(y) when you are not
      // certain that x is an Array (x could be a string with concat method).


      if (Array.isArray(current)) {
        if (Array.isArray(next)) {
          current.push.apply(current, next);
          return current;
        }

        current.push(next);
        return current;
      }

      if (Array.isArray(next)) {
        // A bit too dangerous to mutate `next`.
        return [current].concat(next);
      }

      return [current, next];
    }
    /**
     * @param {array} arr an "accumulation" of items which is either an Array or
     * a single item. Useful when paired with the `accumulate` module. This is a
     * simple utility that allows us to reason about a collection of items, but
     * handling the case when there is exactly one item (and we do not need to
     * allocate an array).
     * @param {function} cb Callback invoked with each element or a collection.
     * @param {?} [scope] Scope used as `this` in a callback.
     */


    function forEachAccumulated(arr, cb, scope) {
      if (Array.isArray(arr)) {
        arr.forEach(cb, scope);
      } else if (arr) {
        cb.call(scope, arr);
      }
    }
    /**
     * Internal queue of events that have accumulated their dispatches and are
     * waiting to have their dispatches executed.
     */


    var eventQueue = null;
    /**
     * Dispatches an event and releases it back into the pool, unless persistent.
     *
     * @param {?object} event Synthetic event to be dispatched.
     * @private
     */

    var executeDispatchesAndRelease = function (event) {
      if (event) {
        executeDispatchesInOrder(event);

        if (!event.isPersistent()) {
          event.constructor.release(event);
        }
      }
    };

    var executeDispatchesAndReleaseTopLevel = function (e) {
      return executeDispatchesAndRelease(e);
    };

    function isInteractive(tag) {
      return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }

    function shouldPreventMouseEvent(name, type, props) {
      switch (name) {
        case 'onClick':
        case 'onClickCapture':
        case 'onDoubleClick':
        case 'onDoubleClickCapture':
        case 'onMouseDown':
        case 'onMouseDownCapture':
        case 'onMouseMove':
        case 'onMouseMoveCapture':
        case 'onMouseUp':
        case 'onMouseUpCapture':
          return !!(props.disabled && isInteractive(type));

        default:
          return false;
      }
    }
    /**
     * This is a unified interface for event plugins to be installed and configured.
     *
     * Event plugins can implement the following properties:
     *
     *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
     *     Required. When a top-level event is fired, this method is expected to
     *     extract synthetic events that will in turn be queued and dispatched.
     *
     *   `eventTypes` {object}
     *     Optional, plugins that fire events must publish a mapping of registration
     *     names that are used to register listeners. Values of this mapping must
     *     be objects that contain `registrationName` or `phasedRegistrationNames`.
     *
     *   `executeDispatch` {function(object, function, string)}
     *     Optional, allows plugins to override how an event gets dispatched. By
     *     default, the listener is simply invoked.
     *
     * Each plugin that is injected into `EventsPluginHub` is immediately operable.
     *
     * @public
     */

    /**
     * Methods for injecting dependencies.
     */


    var injection = {
      /**
       * @param {array} InjectedEventPluginOrder
       * @public
       */
      injectEventPluginOrder: injectEventPluginOrder,

      /**
       * @param {object} injectedNamesToPlugins Map from names to plugin modules.
       */
      injectEventPluginsByName: injectEventPluginsByName
    };
    /**
     * @param {object} inst The instance, which is the source of events.
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @return {?function} The stored callback.
     */

    function getListener(inst, registrationName) {
      var listener = void 0; // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
      // live here; needs to be moved to a better place soon

      var stateNode = inst.stateNode;

      if (!stateNode) {
        // Work in progress (ex: onload events in incremental mode).
        return null;
      }

      var props = getFiberCurrentPropsFromNode(stateNode);

      if (!props) {
        // Work in progress.
        return null;
      }

      listener = props[registrationName];

      if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
        return null;
      }

      !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
      return listener;
    }
    /**
     * Allows registered plugins an opportunity to extract events from top-level
     * native browser events.
     *
     * @return {*} An accumulation of synthetic events.
     * @internal
     */


    function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var events = null;

      for (var i = 0; i < plugins.length; i++) {
        // Not every plugin in the ordering may be loaded at runtime.
        var possiblePlugin = plugins[i];

        if (possiblePlugin) {
          var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);

          if (extractedEvents) {
            events = accumulateInto(events, extractedEvents);
          }
        }
      }

      return events;
    }

    function runEventsInBatch(events) {
      if (events !== null) {
        eventQueue = accumulateInto(eventQueue, events);
      } // Set `eventQueue` to null before processing it so that we can tell if more
      // events get enqueued while processing.


      var processingEventQueue = eventQueue;
      eventQueue = null;

      if (!processingEventQueue) {
        return;
      }

      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
      !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0; // This would be a good time to rethrow if any of the event handlers threw.

      rethrowCaughtError();
    }

    function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      runEventsInBatch(events);
    }

    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class

    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedSuspenseComponent = 18;
    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = '__reactInternalInstance$' + randomKey;
    var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

    function precacheFiberNode(hostInst, node) {
      node[internalInstanceKey] = hostInst;
    }
    /**
     * Given a DOM node, return the closest ReactDOMComponent or
     * ReactDOMTextComponent instance ancestor.
     */


    function getClosestInstanceFromNode(node) {
      if (node[internalInstanceKey]) {
        return node[internalInstanceKey];
      }

      while (!node[internalInstanceKey]) {
        if (node.parentNode) {
          node = node.parentNode;
        } else {
          // Top of the tree. This node must not be part of a React tree (or is
          // unmounted, potentially).
          return null;
        }
      }

      var inst = node[internalInstanceKey];

      if (inst.tag === HostComponent || inst.tag === HostText) {
        // In Fiber, this will always be the deepest root.
        return inst;
      }

      return null;
    }
    /**
     * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
     * instance, or null if the node was not rendered by this React.
     */


    function getInstanceFromNode$1(node) {
      var inst = node[internalInstanceKey];

      if (inst) {
        if (inst.tag === HostComponent || inst.tag === HostText) {
          return inst;
        } else {
          return null;
        }
      }

      return null;
    }
    /**
     * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
     * DOM node.
     */


    function getNodeFromInstance$1(inst) {
      if (inst.tag === HostComponent || inst.tag === HostText) {
        // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
      } // Without this first invariant, passing a non-DOM-component triggers the next
      // invariant for a missing parent, which is super confusing.


      invariant(false, 'getNodeFromInstance: Invalid argument.');
    }

    function getFiberCurrentPropsFromNode$1(node) {
      return node[internalEventHandlersKey] || null;
    }

    function updateFiberProps(node, props) {
      node[internalEventHandlersKey] = props;
    }

    function getParent(inst) {
      do {
        inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        // That is depending on if we want nested subtrees (layers) to bubble
        // events to their parent. We could also go through parentNode on the
        // host node but that wouldn't work for React Native and doesn't let us
        // do the portal feature.
      } while (inst && inst.tag !== HostComponent);

      if (inst) {
        return inst;
      }

      return null;
    }
    /**
     * Return the lowest common ancestor of A and B, or null if they are in
     * different trees.
     */


    function getLowestCommonAncestor(instA, instB) {
      var depthA = 0;

      for (var tempA = instA; tempA; tempA = getParent(tempA)) {
        depthA++;
      }

      var depthB = 0;

      for (var tempB = instB; tempB; tempB = getParent(tempB)) {
        depthB++;
      } // If A is deeper, crawl up.


      while (depthA - depthB > 0) {
        instA = getParent(instA);
        depthA--;
      } // If B is deeper, crawl up.


      while (depthB - depthA > 0) {
        instB = getParent(instB);
        depthB--;
      } // Walk in lockstep until we find a match.


      var depth = depthA;

      while (depth--) {
        if (instA === instB || instA === instB.alternate) {
          return instA;
        }

        instA = getParent(instA);
        instB = getParent(instB);
      }

      return null;
    }
    /**
     * Return if A is an ancestor of B.
     */

    /**
     * Return the parent instance of the passed-in instance.
     */

    /**
     * Simulates the traversal of a two-phase, capture/bubble event dispatch.
     */


    function traverseTwoPhase(inst, fn, arg) {
      var path = [];

      while (inst) {
        path.push(inst);
        inst = getParent(inst);
      }

      var i = void 0;

      for (i = path.length; i-- > 0;) {
        fn(path[i], 'captured', arg);
      }

      for (i = 0; i < path.length; i++) {
        fn(path[i], 'bubbled', arg);
      }
    }
    /**
     * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
     * should would receive a `mouseEnter` or `mouseLeave` event.
     *
     * Does not invoke the callback on the nearest common ancestor because nothing
     * "entered" or "left" that element.
     */


    function traverseEnterLeave(from, to, fn, argFrom, argTo) {
      var common = from && to ? getLowestCommonAncestor(from, to) : null;
      var pathFrom = [];

      while (true) {
        if (!from) {
          break;
        }

        if (from === common) {
          break;
        }

        var alternate = from.alternate;

        if (alternate !== null && alternate === common) {
          break;
        }

        pathFrom.push(from);
        from = getParent(from);
      }

      var pathTo = [];

      while (true) {
        if (!to) {
          break;
        }

        if (to === common) {
          break;
        }

        var _alternate = to.alternate;

        if (_alternate !== null && _alternate === common) {
          break;
        }

        pathTo.push(to);
        to = getParent(to);
      }

      for (var i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], 'bubbled', argFrom);
      }

      for (var _i = pathTo.length; _i-- > 0;) {
        fn(pathTo[_i], 'captured', argTo);
      }
    }
    /**
     * Some event types have a notion of different registration names for different
     * "phases" of propagation. This finds listeners by a given phase.
     */


    function listenerAtPhase(inst, event, propagationPhase) {
      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
      return getListener(inst, registrationName);
    }
    /**
     * A small set of propagation patterns, each of which will accept a small amount
     * of information, and generate a set of "dispatch ready event objects" - which
     * are sets of events that have already been annotated with a set of dispatched
     * listener functions/ids. The API is designed this way to discourage these
     * propagation strategies from actually executing the dispatches, since we
     * always want to collect the entire set of dispatches before executing even a
     * single one.
     */

    /**
     * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
     * here, allows us to not have to bind or create functions for each event.
     * Mutating the event's members allows us to not have to create a wrapping
     * "dispatch" object that pairs the event with the listener.
     */


    function accumulateDirectionalDispatches(inst, phase, event) {
      {
        !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;
      }
      var listener = listenerAtPhase(inst, event, phase);

      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
      }
    }
    /**
     * Collect dispatches (must be entirely collected before dispatching - see unit
     * tests). Lazily allocate the array to conserve memory.  We must loop through
     * each event and perform the traversal for each one. We cannot perform a
     * single traversal for the entire collection of events because each event may
     * have a different target.
     */


    function accumulateTwoPhaseDispatchesSingle(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
      }
    }
    /**
     * Accumulates without regard to direction, does not look for phased
     * registration names. Same as `accumulateDirectDispatchesSingle` but without
     * requiring that the `dispatchMarker` be the same as the dispatched ID.
     */


    function accumulateDispatches(inst, ignoredDirection, event) {
      if (inst && event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName;
        var listener = getListener(inst, registrationName);

        if (listener) {
          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
        }
      }
    }
    /**
     * Accumulates dispatches on an `SyntheticEvent`, but only for the
     * `dispatchMarker`.
     * @param {SyntheticEvent} event
     */


    function accumulateDirectDispatchesSingle(event) {
      if (event && event.dispatchConfig.registrationName) {
        accumulateDispatches(event._targetInst, null, event);
      }
    }

    function accumulateTwoPhaseDispatches(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
    }

    function accumulateEnterLeaveDispatches(leave, enter, from, to) {
      traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
    }

    function accumulateDirectDispatches(events) {
      forEachAccumulated(events, accumulateDirectDispatchesSingle);
    }

    var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement); // Do not uses the below two methods directly!
    // Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
    // (It is the only module that is allowed to access these methods.)

    function unsafeCastStringToDOMTopLevelType(topLevelType) {
      return topLevelType;
    }

    function unsafeCastDOMTopLevelTypeToString(topLevelType) {
      return topLevelType;
    }
    /**
     * Generate a mapping of standard vendor prefixes using the defined style property and event name.
     *
     * @param {string} styleProp
     * @param {string} eventName
     * @returns {object}
     */


    function makePrefixMap(styleProp, eventName) {
      var prefixes = {};
      prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
      prefixes['Webkit' + styleProp] = 'webkit' + eventName;
      prefixes['Moz' + styleProp] = 'moz' + eventName;
      return prefixes;
    }
    /**
     * A list of event names to a configurable list of vendor prefixes.
     */


    var vendorPrefixes = {
      animationend: makePrefixMap('Animation', 'AnimationEnd'),
      animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
      animationstart: makePrefixMap('Animation', 'AnimationStart'),
      transitionend: makePrefixMap('Transition', 'TransitionEnd')
    };
    /**
     * Event names that have already been detected and prefixed (if applicable).
     */

    var prefixedEventNames = {};
    /**
     * Element to check for prefixes on.
     */

    var style = {};
    /**
     * Bootstrap if a DOM exists.
     */

    if (canUseDOM) {
      style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
      // the un-prefixed "animation" and "transition" properties are defined on the
      // style object but the events that fire will still be prefixed, so we need
      // to check if the un-prefixed events are usable, and if not remove them from the map.

      if (!('AnimationEvent' in window)) {
        delete vendorPrefixes.animationend.animation;
        delete vendorPrefixes.animationiteration.animation;
        delete vendorPrefixes.animationstart.animation;
      } // Same as above


      if (!('TransitionEvent' in window)) {
        delete vendorPrefixes.transitionend.transition;
      }
    }
    /**
     * Attempts to determine the correct vendor prefixed event name.
     *
     * @param {string} eventName
     * @returns {string}
     */


    function getVendorPrefixedEventName(eventName) {
      if (prefixedEventNames[eventName]) {
        return prefixedEventNames[eventName];
      } else if (!vendorPrefixes[eventName]) {
        return eventName;
      }

      var prefixMap = vendorPrefixes[eventName];

      for (var styleProp in prefixMap) {
        if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
          return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
      }

      return eventName;
    }
    /**
     * To identify top level events in ReactDOM, we use constants defined by this
     * module. This is the only module that uses the unsafe* methods to express
     * that the constants actually correspond to the browser event names. This lets
     * us save some bundle size by avoiding a top level type -> event name map.
     * The rest of ReactDOM code should import top level types from this file.
     */


    var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
    var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
    var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
    var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
    var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
    var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
    var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
    var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
    var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
    var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
    var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
    var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
    var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
    var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
    var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
    var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
    var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
    var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
    var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
    var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
    var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
    var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
    var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
    var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
    var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
    var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
    var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
    var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
    var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
    var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
    var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
    var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
    var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
    var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
    var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
    var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
    var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
    var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
    var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
    var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
    var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
    var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
    var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
    var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
    var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
    var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
    var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
    var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
    var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
    var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
    var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
    var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
    var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
    var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
    var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');
    var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
    var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
    var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
    var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
    var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
    var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
    var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
    var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
    var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
    var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
    var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
    var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
    var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
    var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
    var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
    var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
    var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
    var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
    var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
    var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
    var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
    var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
    var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
    var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
    var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel'); // List of events that need to be individually attached to media elements.
    // Note that events in this list will *not* be listened to at the top level
    // unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.

    var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

    function getRawEventName(topLevelType) {
      return unsafeCastDOMTopLevelTypeToString(topLevelType);
    }
    /**
     * These variables store information about text content of a target node,
     * allowing comparison of content before and after a given event.
     *
     * Identify the node where selection currently begins, then observe
     * both its text content and its current position in the DOM. Since the
     * browser may natively replace the target node during composition, we can
     * use its position to find its replacement.
     *
     *
     */


    var root = null;
    var startText = null;
    var fallbackText = null;

    function initialize(nativeEventTarget) {
      root = nativeEventTarget;
      startText = getText();
      return true;
    }

    function reset() {
      root = null;
      startText = null;
      fallbackText = null;
    }

    function getData() {
      if (fallbackText) {
        return fallbackText;
      }

      var start = void 0;
      var startValue = startText;
      var startLength = startValue.length;
      var end = void 0;
      var endValue = getText();
      var endLength = endValue.length;

      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }

      var minEnd = startLength - start;

      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }

      var sliceTail = end > 1 ? 1 - end : undefined;
      fallbackText = endValue.slice(start, sliceTail);
      return fallbackText;
    }

    function getText() {
      if ('value' in root) {
        return root.value;
      }

      return root.textContent;
    }
    /* eslint valid-typeof: 0 */


    var EVENT_POOL_SIZE = 10;
    /**
     * @interface Event
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var EventInterface = {
      type: null,
      target: null,
      // currentTarget is set when dispatching; no use in copying it here
      currentTarget: function () {
        return null;
      },
      eventPhase: null,
      bubbles: null,
      cancelable: null,
      timeStamp: function (event) {
        return event.timeStamp || Date.now();
      },
      defaultPrevented: null,
      isTrusted: null
    };

    function functionThatReturnsTrue() {
      return true;
    }

    function functionThatReturnsFalse() {
      return false;
    }
    /**
     * Synthetic events are dispatched by event plugins, typically in response to a
     * top-level event delegation handler.
     *
     * These systems should generally use pooling to reduce the frequency of garbage
     * collection. The system should check `isPersistent` to determine whether the
     * event should be released into the pool after being dispatched. Users that
     * need a persisted event should invoke `persist`.
     *
     * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
     * normalizing browser quirks. Subclasses do not necessarily have to implement a
     * DOM interface; custom application-specific events can also subclass this.
     *
     * @param {object} dispatchConfig Configuration used to dispatch this event.
     * @param {*} targetInst Marker identifying the event target.
     * @param {object} nativeEvent Native browser event.
     * @param {DOMEventTarget} nativeEventTarget Target node.
     */


    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
      {
        // these have a getter/setter for warnings
        delete this.nativeEvent;
        delete this.preventDefault;
        delete this.stopPropagation;
        delete this.isDefaultPrevented;
        delete this.isPropagationStopped;
      }
      this.dispatchConfig = dispatchConfig;
      this._targetInst = targetInst;
      this.nativeEvent = nativeEvent;
      var Interface = this.constructor.Interface;

      for (var propName in Interface) {
        if (!Interface.hasOwnProperty(propName)) {
          continue;
        }

        {
          delete this[propName]; // this has a getter/setter for warnings
        }
        var normalize = Interface[propName];

        if (normalize) {
          this[propName] = normalize(nativeEvent);
        } else {
          if (propName === 'target') {
            this.target = nativeEventTarget;
          } else {
            this[propName] = nativeEvent[propName];
          }
        }
      }

      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

      if (defaultPrevented) {
        this.isDefaultPrevented = functionThatReturnsTrue;
      } else {
        this.isDefaultPrevented = functionThatReturnsFalse;
      }

      this.isPropagationStopped = functionThatReturnsFalse;
      return this;
    }

    _assign(SyntheticEvent.prototype, {
      preventDefault: function () {
        this.defaultPrevented = true;
        var event = this.nativeEvent;

        if (!event) {
          return;
        }

        if (event.preventDefault) {
          event.preventDefault();
        } else if (typeof event.returnValue !== 'unknown') {
          event.returnValue = false;
        }

        this.isDefaultPrevented = functionThatReturnsTrue;
      },
      stopPropagation: function () {
        var event = this.nativeEvent;

        if (!event) {
          return;
        }

        if (event.stopPropagation) {
          event.stopPropagation();
        } else if (typeof event.cancelBubble !== 'unknown') {
          // The ChangeEventPlugin registers a "propertychange" event for
          // IE. This event does not support bubbling or cancelling, and
          // any references to cancelBubble throw "Member not found".  A
          // typeof check of "unknown" circumvents this issue (and is also
          // IE specific).
          event.cancelBubble = true;
        }

        this.isPropagationStopped = functionThatReturnsTrue;
      },

      /**
       * We release all dispatched `SyntheticEvent`s after each event loop, adding
       * them back into the pool. This allows a way to hold onto a reference that
       * won't be added back into the pool.
       */
      persist: function () {
        this.isPersistent = functionThatReturnsTrue;
      },

      /**
       * Checks if this event should be released back into the pool.
       *
       * @return {boolean} True if this should not be released, false otherwise.
       */
      isPersistent: functionThatReturnsFalse,

      /**
       * `PooledClass` looks for `destructor` on each instance it releases.
       */
      destructor: function () {
        var Interface = this.constructor.Interface;

        for (var propName in Interface) {
          {
            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
          }
        }

        this.dispatchConfig = null;
        this._targetInst = null;
        this.nativeEvent = null;
        this.isDefaultPrevented = functionThatReturnsFalse;
        this.isPropagationStopped = functionThatReturnsFalse;
        this._dispatchListeners = null;
        this._dispatchInstances = null;
        {
          Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
          Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));
          Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));
          Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));
          Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));
        }
      }
    });

    SyntheticEvent.Interface = EventInterface;
    /**
     * Helper to reduce boilerplate when creating subclasses.
     */

    SyntheticEvent.extend = function (Interface) {
      var Super = this;

      var E = function () {};

      E.prototype = Super.prototype;
      var prototype = new E();

      function Class() {
        return Super.apply(this, arguments);
      }

      _assign(prototype, Class.prototype);

      Class.prototype = prototype;
      Class.prototype.constructor = Class;
      Class.Interface = _assign({}, Super.Interface, Interface);
      Class.extend = Super.extend;
      addEventPoolingTo(Class);
      return Class;
    };

    addEventPoolingTo(SyntheticEvent);
    /**
     * Helper to nullify syntheticEvent instance properties when destructing
     *
     * @param {String} propName
     * @param {?object} getVal
     * @return {object} defineProperty object
     */

    function getPooledWarningPropertyDefinition(propName, getVal) {
      var isFunction = typeof getVal === 'function';
      return {
        configurable: true,
        set: set,
        get: get
      };

      function set(val) {
        var action = isFunction ? 'setting the method' : 'setting the property';
        warn(action, 'This is effectively a no-op');
        return val;
      }

      function get() {
        var action = isFunction ? 'accessing the method' : 'accessing the property';
        var result = isFunction ? 'This is a no-op function' : 'This is set to null';
        warn(action, result);
        return getVal;
      }

      function warn(action, result) {
        var warningCondition = false;
        !warningCondition ? warningWithoutStack$1(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
      }
    }

    function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
      var EventConstructor = this;

      if (EventConstructor.eventPool.length) {
        var instance = EventConstructor.eventPool.pop();
        EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
        return instance;
      }

      return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
    }

    function releasePooledEvent(event) {
      var EventConstructor = this;
      !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance into a pool of a different type.') : void 0;
      event.destructor();

      if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
        EventConstructor.eventPool.push(event);
      }
    }

    function addEventPoolingTo(EventConstructor) {
      EventConstructor.eventPool = [];
      EventConstructor.getPooled = getPooledEvent;
      EventConstructor.release = releasePooledEvent;
    }
    /**
     * @interface Event
     * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
     */


    var SyntheticCompositionEvent = SyntheticEvent.extend({
      data: null
    });
    /**
     * @interface Event
     * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
     *      /#events-inputevents
     */

    var SyntheticInputEvent = SyntheticEvent.extend({
      data: null
    });
    var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
    var documentMode = null;

    if (canUseDOM && 'documentMode' in document) {
      documentMode = document.documentMode;
    } // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.


    var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.

    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE); // Events and their corresponding property names.

    var eventTypes = {
      beforeInput: {
        phasedRegistrationNames: {
          bubbled: 'onBeforeInput',
          captured: 'onBeforeInputCapture'
        },
        dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
      },
      compositionEnd: {
        phasedRegistrationNames: {
          bubbled: 'onCompositionEnd',
          captured: 'onCompositionEndCapture'
        },
        dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
      },
      compositionStart: {
        phasedRegistrationNames: {
          bubbled: 'onCompositionStart',
          captured: 'onCompositionStartCapture'
        },
        dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
      },
      compositionUpdate: {
        phasedRegistrationNames: {
          bubbled: 'onCompositionUpdate',
          captured: 'onCompositionUpdateCapture'
        },
        dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
      }
    }; // Track whether we've ever handled a keypress on the space key.

    var hasSpaceKeypress = false;
    /**
     * Return whether a native keypress event is assumed to be a command.
     * This is required because Firefox fires `keypress` events for key commands
     * (cut, copy, select-all, etc.) even though no character is inserted.
     */

    function isKeypressCommand(nativeEvent) {
      return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
     * Translate native top level events into event types.
     *
     * @param {string} topLevelType
     * @return {object}
     */


    function getCompositionEventType(topLevelType) {
      switch (topLevelType) {
        case TOP_COMPOSITION_START:
          return eventTypes.compositionStart;

        case TOP_COMPOSITION_END:
          return eventTypes.compositionEnd;

        case TOP_COMPOSITION_UPDATE:
          return eventTypes.compositionUpdate;
      }
    }
    /**
     * Does our fallback best-guess model think this event signifies that
     * composition has begun?
     *
     * @param {string} topLevelType
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isFallbackCompositionStart(topLevelType, nativeEvent) {
      return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
     * Does our fallback mode think that this event is the end of composition?
     *
     * @param {string} topLevelType
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isFallbackCompositionEnd(topLevelType, nativeEvent) {
      switch (topLevelType) {
        case TOP_KEY_UP:
          // Command keys insert or clear IME input.
          return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

        case TOP_KEY_DOWN:
          // Expect IME keyCode on each keydown. If we get any other
          // code we must have exited earlier.
          return nativeEvent.keyCode !== START_KEYCODE;

        case TOP_KEY_PRESS:
        case TOP_MOUSE_DOWN:
        case TOP_BLUR:
          // Events are not possible without cancelling IME.
          return true;

        default:
          return false;
      }
    }
    /**
     * Google Input Tools provides composition data via a CustomEvent,
     * with the `data` property populated in the `detail` object. If this
     * is available on the event object, use it. If not, this is a plain
     * composition event and we have nothing special to extract.
     *
     * @param {object} nativeEvent
     * @return {?string}
     */


    function getDataFromCustomEvent(nativeEvent) {
      var detail = nativeEvent.detail;

      if (typeof detail === 'object' && 'data' in detail) {
        return detail.data;
      }

      return null;
    }
    /**
     * Check if a composition event was triggered by Korean IME.
     * Our fallback mode does not work well with IE's Korean IME,
     * so just use native composition events when Korean IME is used.
     * Although CompositionEvent.locale property is deprecated,
     * it is available in IE, where our fallback mode is enabled.
     *
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isUsingKoreanIME(nativeEvent) {
      return nativeEvent.locale === 'ko';
    } // Track the current IME composition status, if any.


    var isComposing = false;
    /**
     * @return {?object} A SyntheticCompositionEvent.
     */

    function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var eventType = void 0;
      var fallbackData = void 0;

      if (canUseCompositionEvent) {
        eventType = getCompositionEventType(topLevelType);
      } else if (!isComposing) {
        if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
          eventType = eventTypes.compositionStart;
        }
      } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionEnd;
      }

      if (!eventType) {
        return null;
      }

      if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
        // The current composition is stored statically and must not be
        // overwritten while composition continues.
        if (!isComposing && eventType === eventTypes.compositionStart) {
          isComposing = initialize(nativeEventTarget);
        } else if (eventType === eventTypes.compositionEnd) {
          if (isComposing) {
            fallbackData = getData();
          }
        }
      }

      var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

      if (fallbackData) {
        // Inject data generated from fallback path into the synthetic event.
        // This matches the property of native CompositionEventInterface.
        event.data = fallbackData;
      } else {
        var customData = getDataFromCustomEvent(nativeEvent);

        if (customData !== null) {
          event.data = customData;
        }
      }

      accumulateTwoPhaseDispatches(event);
      return event;
    }
    /**
     * @param {TopLevelType} topLevelType Number from `TopLevelType`.
     * @param {object} nativeEvent Native browser event.
     * @return {?string} The string corresponding to this `beforeInput` event.
     */


    function getNativeBeforeInputChars(topLevelType, nativeEvent) {
      switch (topLevelType) {
        case TOP_COMPOSITION_END:
          return getDataFromCustomEvent(nativeEvent);

        case TOP_KEY_PRESS:
          /**
           * If native `textInput` events are available, our goal is to make
           * use of them. However, there is a special case: the spacebar key.
           * In Webkit, preventing default on a spacebar `textInput` event
           * cancels character insertion, but it *also* causes the browser
           * to fall back to its default spacebar behavior of scrolling the
           * page.
           *
           * Tracking at:
           * https://code.google.com/p/chromium/issues/detail?id=355103
           *
           * To avoid this issue, use the keypress event as if no `textInput`
           * event is available.
           */
          var which = nativeEvent.which;

          if (which !== SPACEBAR_CODE) {
            return null;
          }

          hasSpaceKeypress = true;
          return SPACEBAR_CHAR;

        case TOP_TEXT_INPUT:
          // Record the characters to be added to the DOM.
          var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
          // it at the keypress level and bail immediately. Android Chrome
          // doesn't give us keycodes, so we need to ignore it.

          if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
            return null;
          }

          return chars;

        default:
          // For other native event types, do nothing.
          return null;
      }
    }
    /**
     * For browsers that do not provide the `textInput` event, extract the
     * appropriate string to use for SyntheticInputEvent.
     *
     * @param {number} topLevelType Number from `TopLevelEventTypes`.
     * @param {object} nativeEvent Native browser event.
     * @return {?string} The fallback string for this `beforeInput` event.
     */


    function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
      // If we are currently composing (IME) and using a fallback to do so,
      // try to extract the composed characters from the fallback object.
      // If composition event is available, we extract a string only at
      // compositionevent, otherwise extract it at fallback events.
      if (isComposing) {
        if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
          var chars = getData();
          reset();
          isComposing = false;
          return chars;
        }

        return null;
      }

      switch (topLevelType) {
        case TOP_PASTE:
          // If a paste event occurs after a keypress, throw out the input
          // chars. Paste events should not lead to BeforeInput events.
          return null;

        case TOP_KEY_PRESS:
          /**
           * As of v27, Firefox may fire keypress events even when no character
           * will be inserted. A few possibilities:
           *
           * - `which` is `0`. Arrow keys, Esc key, etc.
           *
           * - `which` is the pressed key code, but no char is available.
           *   Ex: 'AltGr + d` in Polish. There is no modified character for
           *   this key combination and no character is inserted into the
           *   document, but FF fires the keypress for char code `100` anyway.
           *   No `input` event will occur.
           *
           * - `which` is the pressed key code, but a command combination is
           *   being used. Ex: `Cmd+C`. No character is inserted, and no
           *   `input` event will occur.
           */
          if (!isKeypressCommand(nativeEvent)) {
            // IE fires the `keypress` event when a user types an emoji via
            // Touch keyboard of Windows.  In such a case, the `char` property
            // holds an emoji character like `\uD83D\uDE0A`.  Because its length
            // is 2, the property `which` does not represent an emoji correctly.
            // In such a case, we directly return the `char` property instead of
            // using `which`.
            if (nativeEvent.char && nativeEvent.char.length > 1) {
              return nativeEvent.char;
            } else if (nativeEvent.which) {
              return String.fromCharCode(nativeEvent.which);
            }
          }

          return null;

        case TOP_COMPOSITION_END:
          return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

        default:
          return null;
      }
    }
    /**
     * Extract a SyntheticInputEvent for `beforeInput`, based on either native
     * `textInput` or fallback behavior.
     *
     * @return {?object} A SyntheticInputEvent.
     */


    function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var chars = void 0;

      if (canUseTextInputEvent) {
        chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
      } else {
        chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
      } // If no characters are being inserted, no BeforeInput event should
      // be fired.


      if (!chars) {
        return null;
      }

      var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
      event.data = chars;
      accumulateTwoPhaseDispatches(event);
      return event;
    }
    /**
     * Create an `onBeforeInput` event to match
     * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
     *
     * This event plugin is based on the native `textInput` event
     * available in Chrome, Safari, Opera, and IE. This event fires after
     * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
     *
     * `beforeInput` is spec'd but not implemented in any browsers, and
     * the `input` event does not provide any useful information about what has
     * actually been added, contrary to the spec. Thus, `textInput` is the best
     * available event to identify the characters that have actually been inserted
     * into the target node.
     *
     * This plugin is also responsible for emitting `composition` events, thus
     * allowing us to share composition fallback code for both `beforeInput` and
     * `composition` event types.
     */


    var BeforeInputEventPlugin = {
      eventTypes: eventTypes,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

        if (composition === null) {
          return beforeInput;
        }

        if (beforeInput === null) {
          return composition;
        }

        return [composition, beforeInput];
      }
    }; // Use to restore controlled state after a change event has fired.

    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;

    function restoreStateOfTarget(target) {
      // We perform this translation at the end of the event loop so that we
      // always receive the correct fiber here
      var internalInstance = getInstanceFromNode(target);

      if (!internalInstance) {
        // Unmounted
        return;
      }

      !(typeof restoreImpl === 'function') ? invariant(false, 'setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
      restoreImpl(internalInstance.stateNode, internalInstance.type, props);
    }

    function setRestoreImplementation(impl) {
      restoreImpl = impl;
    }

    function enqueueStateRestore(target) {
      if (restoreTarget) {
        if (restoreQueue) {
          restoreQueue.push(target);
        } else {
          restoreQueue = [target];
        }
      } else {
        restoreTarget = target;
      }
    }

    function needsStateRestore() {
      return restoreTarget !== null || restoreQueue !== null;
    }

    function restoreStateIfNeeded() {
      if (!restoreTarget) {
        return;
      }

      var target = restoreTarget;
      var queuedTargets = restoreQueue;
      restoreTarget = null;
      restoreQueue = null;
      restoreStateOfTarget(target);

      if (queuedTargets) {
        for (var i = 0; i < queuedTargets.length; i++) {
          restoreStateOfTarget(queuedTargets[i]);
        }
      }
    } // Used as a way to call batchedUpdates when we don't have a reference to
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults


    var _batchedUpdatesImpl = function (fn, bookkeeping) {
      return fn(bookkeeping);
    };

    var _interactiveUpdatesImpl = function (fn, a, b) {
      return fn(a, b);
    };

    var _flushInteractiveUpdatesImpl = function () {};

    var isBatching = false;

    function batchedUpdates(fn, bookkeeping) {
      if (isBatching) {
        // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(bookkeeping);
      }

      isBatching = true;

      try {
        return _batchedUpdatesImpl(fn, bookkeeping);
      } finally {
        // Here we wait until all updates have propagated, which is important
        // when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        // Then we restore state of any controlled component.
        isBatching = false;
        var controlledComponentsHavePendingUpdates = needsStateRestore();

        if (controlledComponentsHavePendingUpdates) {
          // If a controlled event was fired, we may need to restore the state of
          // the DOM node back to the controlled value. This is necessary when React
          // bails out of the update without touching the DOM.
          _flushInteractiveUpdatesImpl();

          restoreStateIfNeeded();
        }
      }
    }

    function interactiveUpdates(fn, a, b) {
      return _interactiveUpdatesImpl(fn, a, b);
    }

    function setBatchingImplementation(batchedUpdatesImpl, interactiveUpdatesImpl, flushInteractiveUpdatesImpl) {
      _batchedUpdatesImpl = batchedUpdatesImpl;
      _interactiveUpdatesImpl = interactiveUpdatesImpl;
      _flushInteractiveUpdatesImpl = flushInteractiveUpdatesImpl;
    }
    /**
     * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
     */


    var supportedInputTypes = {
      color: true,
      date: true,
      datetime: true,
      'datetime-local': true,
      email: true,
      month: true,
      number: true,
      password: true,
      range: true,
      search: true,
      tel: true,
      text: true,
      time: true,
      url: true,
      week: true
    };

    function isTextInputElement(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

      if (nodeName === 'input') {
        return !!supportedInputTypes[elem.type];
      }

      if (nodeName === 'textarea') {
        return true;
      }

      return false;
    }
    /**
     * HTML nodeType values that represent the type of the node
     */


    var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
     * Gets the target node from a native browser event by accounting for
     * inconsistencies in browser DOM APIs.
     *
     * @param {object} nativeEvent Native browser event.
     * @return {DOMEventTarget} Target node.
     */

    function getEventTarget(nativeEvent) {
      // Fallback to nativeEvent.srcElement for IE9
      // https://github.com/facebook/react/issues/12506
      var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

      if (target.correspondingUseElement) {
        target = target.correspondingUseElement;
      } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
      // @see http://www.quirksmode.org/js/events_properties.html


      return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */


    function isEventSupported(eventNameSuffix) {
      if (!canUseDOM) {
        return false;
      }

      var eventName = 'on' + eventNameSuffix;
      var isSupported = eventName in document;

      if (!isSupported) {
        var element = document.createElement('div');
        element.setAttribute(eventName, 'return;');
        isSupported = typeof element[eventName] === 'function';
      }

      return isSupported;
    }

    function isCheckable(elem) {
      var type = elem.type;
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
    }

    function getTracker(node) {
      return node._valueTracker;
    }

    function detachTracker(node) {
      node._valueTracker = null;
    }

    function getValueFromNode(node) {
      var value = '';

      if (!node) {
        return value;
      }

      if (isCheckable(node)) {
        value = node.checked ? 'true' : 'false';
      } else {
        value = node.value;
      }

      return value;
    }

    function trackValueOnNode(node) {
      var valueField = isCheckable(node) ? 'checked' : 'value';
      var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
      var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
      // and don't track value will cause over reporting of changes,
      // but it's better then a hard failure
      // (needed for certain tests that spyOn input values and Safari)

      if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
        return;
      }

      var get = descriptor.get,
          set = descriptor.set;
      Object.defineProperty(node, valueField, {
        configurable: true,
        get: function () {
          return get.call(this);
        },
        set: function (value) {
          currentValue = '' + value;
          set.call(this, value);
        }
      }); // We could've passed this the first time
      // but it triggers a bug in IE11 and Edge 14/15.
      // Calling defineProperty() again should be equivalent.
      // https://github.com/facebook/react/issues/11768

      Object.defineProperty(node, valueField, {
        enumerable: descriptor.enumerable
      });
      var tracker = {
        getValue: function () {
          return currentValue;
        },
        setValue: function (value) {
          currentValue = '' + value;
        },
        stopTracking: function () {
          detachTracker(node);
          delete node[valueField];
        }
      };
      return tracker;
    }

    function track(node) {
      if (getTracker(node)) {
        return;
      } // TODO: Once it's just Fiber we can move this to node._wrapperState


      node._valueTracker = trackValueOnNode(node);
    }

    function updateValueIfChanged(node) {
      if (!node) {
        return false;
      }

      var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
      // that trying again will succeed

      if (!tracker) {
        return true;
      }

      var lastValue = tracker.getValue();
      var nextValue = getValueFromNode(node);

      if (nextValue !== lastValue) {
        tracker.setValue(nextValue);
        return true;
      }

      return false;
    }

    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED; // Prevent newer renderers from RTE when used with older react package versions.
    // Current owner and dispatcher used to share the same ref,
    // but PR #14548 split them out to better support the react-debug-tools package.

    if (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {
      ReactSharedInternals.ReactCurrentDispatcher = {
        current: null
      };
    }

    var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

    var describeComponentFrame = function (name, source, ownerName) {
      var sourceInfo = '';

      if (source) {
        var path = source.fileName;
        var fileName = path.replace(BEFORE_SLASH_RE, '');
        {
          // In DEV, include code for a common special case:
          // prefer "folder/index.js" instead of just "index.js".
          if (/^index\./.test(fileName)) {
            var match = path.match(BEFORE_SLASH_RE);

            if (match) {
              var pathBeforeSlash = match[1];

              if (pathBeforeSlash) {
                var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
                fileName = folderName + '/' + fileName;
              }
            }
          }
        }
        sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
      } else if (ownerName) {
        sourceInfo = ' (created by ' + ownerName + ')';
      }

      return '\n    in ' + (name || 'Unknown') + sourceInfo;
    }; // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.


    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    function getIteratorFn(maybeIterable) {
      if (maybeIterable === null || typeof maybeIterable !== 'object') {
        return null;
      }

      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

      if (typeof maybeIterator === 'function') {
        return maybeIterator;
      }

      return null;
    }

    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;

    function refineResolvedLazyComponent(lazyComponent) {
      return lazyComponent._status === Resolved ? lazyComponent._result : null;
    }

    function getWrappedName(outerType, innerType, wrapperName) {
      var functionName = innerType.displayName || innerType.name || '';
      return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
    }

    function getComponentName(type) {
      if (type == null) {
        // Host root, text node or just invalid type.
        return null;
      }

      {
        if (typeof type.tag === 'number') {
          warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
        }
      }

      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      switch (type) {
        case REACT_CONCURRENT_MODE_TYPE:
          return 'ConcurrentMode';

        case REACT_FRAGMENT_TYPE:
          return 'Fragment';

        case REACT_PORTAL_TYPE:
          return 'Portal';

        case REACT_PROFILER_TYPE:
          return 'Profiler';

        case REACT_STRICT_MODE_TYPE:
          return 'StrictMode';

        case REACT_SUSPENSE_TYPE:
          return 'Suspense';
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_CONTEXT_TYPE:
            return 'Context.Consumer';

          case REACT_PROVIDER_TYPE:
            return 'Context.Provider';

          case REACT_FORWARD_REF_TYPE:
            return getWrappedName(type, type.render, 'ForwardRef');

          case REACT_MEMO_TYPE:
            return getComponentName(type.type);

          case REACT_LAZY_TYPE:
            {
              var thenable = type;
              var resolvedThenable = refineResolvedLazyComponent(thenable);

              if (resolvedThenable) {
                return getComponentName(resolvedThenable);
              }
            }
        }
      }

      return null;
    }

    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

    function describeFiber(fiber) {
      switch (fiber.tag) {
        case HostRoot:
        case HostPortal:
        case HostText:
        case Fragment:
        case ContextProvider:
        case ContextConsumer:
          return '';

        default:
          var owner = fiber._debugOwner;
          var source = fiber._debugSource;
          var name = getComponentName(fiber.type);
          var ownerName = null;

          if (owner) {
            ownerName = getComponentName(owner.type);
          }

          return describeComponentFrame(name, source, ownerName);
      }
    }

    function getStackByFiberInDevAndProd(workInProgress) {
      var info = '';
      var node = workInProgress;

      do {
        info += describeFiber(node);
        node = node.return;
      } while (node);

      return info;
    }

    var current = null;
    var phase = null;

    function getCurrentFiberOwnerNameInDevOrNull() {
      {
        if (current === null) {
          return null;
        }

        var owner = current._debugOwner;

        if (owner !== null && typeof owner !== 'undefined') {
          return getComponentName(owner.type);
        }
      }
      return null;
    }

    function getCurrentFiberStackInDev() {
      {
        if (current === null) {
          return '';
        } // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.


        return getStackByFiberInDevAndProd(current);
      }
      return '';
    }

    function resetCurrentFiber() {
      {
        ReactDebugCurrentFrame.getCurrentStack = null;
        current = null;
        phase = null;
      }
    }

    function setCurrentFiber(fiber) {
      {
        ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
        current = fiber;
        phase = null;
      }
    }

    function setCurrentPhase(lifeCyclePhase) {
      {
        phase = lifeCyclePhase;
      }
    }
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var warning = warningWithoutStack$1;
    {
      warning = function (condition, format) {
        if (condition) {
          return;
        }

        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
      };
    }
    var warning$1 = warning; // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.

    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the whitelist are presumed to have this type.

    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.

    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.

    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.

    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.

    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.

    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */

    var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
    /* eslint-enable max-len */

    var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
    var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};

    function isAttributeNameSafe(attributeName) {
      if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
        return true;
      }

      if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
        return false;
      }

      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
        validatedAttributeNameCache[attributeName] = true;
        return true;
      }

      illegalAttributeNameCache[attributeName] = true;
      {
        warning$1(false, 'Invalid attribute name: `%s`', attributeName);
      }
      return false;
    }

    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
      if (propertyInfo !== null) {
        return propertyInfo.type === RESERVED;
      }

      if (isCustomComponentTag) {
        return false;
      }

      if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
        return true;
      }

      return false;
    }

    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
      if (propertyInfo !== null && propertyInfo.type === RESERVED) {
        return false;
      }

      switch (typeof value) {
        case 'function': // $FlowIssue symbol is perfectly valid here

        case 'symbol':
          // eslint-disable-line
          return true;

        case 'boolean':
          {
            if (isCustomComponentTag) {
              return false;
            }

            if (propertyInfo !== null) {
              return !propertyInfo.acceptsBooleans;
            } else {
              var prefix = name.toLowerCase().slice(0, 5);
              return prefix !== 'data-' && prefix !== 'aria-';
            }
          }

        default:
          return false;
      }
    }

    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
      if (value === null || typeof value === 'undefined') {
        return true;
      }

      if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
        return true;
      }

      if (isCustomComponentTag) {
        return false;
      }

      if (propertyInfo !== null) {
        switch (propertyInfo.type) {
          case BOOLEAN:
            return !value;

          case OVERLOADED_BOOLEAN:
            return value === false;

          case NUMERIC:
            return isNaN(value);

          case POSITIVE_NUMERIC:
            return isNaN(value) || value < 1;
        }
      }

      return false;
    }

    function getPropertyInfo(name) {
      return properties.hasOwnProperty(name) ? properties[name] : null;
    }

    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
      this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
      this.attributeName = attributeName;
      this.attributeNamespace = attributeNamespace;
      this.mustUseProperty = mustUseProperty;
      this.propertyName = name;
      this.type = type;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.


    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

    ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
    // elements (not just inputs). Now that ReactDOMInput assigns to the
    // defaultValue property -- do we need this?
    'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
      name, // attributeName
      null);
    } // attributeNamespace
    ); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.

    [['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
      var name = _ref[0],
          attributeName = _ref[1];
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, // attributeName
      null);
    } // attributeNamespace
    ); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).

    ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null);
    } // attributeNamespace
    ); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.

    ['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
      name, // attributeName
      null);
    } // attributeNamespace
    ); // These are HTML boolean attributes.

    ['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
    // on the client side because the browsers are inconsistent. Instead we call focus().
    'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
    'itemScope'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null);
    } // attributeNamespace
    ); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.

    ['checked', // Note: `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`. We have special logic for handling this.
    'multiple', 'muted', 'selected'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
      name, // attributeName
      null);
    } // attributeNamespace
    ); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.

    ['capture', 'download'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
      name, // attributeName
      null);
    } // attributeNamespace
    ); // These are HTML attributes that must be positive numbers.

    ['cols', 'rows', 'size', 'span'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
      name, // attributeName
      null);
    } // attributeNamespace
    ); // These are HTML attributes that must be numbers.

    ['rowSpan', 'start'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null);
    } // attributeNamespace
    );
    var CAMELIZE = /[\-\:]([a-z])/g;

    var capitalize = function (token) {
      return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML whitelist.
    // Some of these attributes can be hard to find. This list was created by
    // scrapping the MDN documentation.


    ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, null);
    } // attributeNamespace
    ); // String SVG attributes with the xlink namespace.

    ['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, 'http://www.w3.org/1999/xlink');
    }); // String SVG attributes with the xml namespace.

    ['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, 'http://www.w3.org/XML/1998/namespace');
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.

    ['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
      properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
      attributeName.toLowerCase(), // attributeName
      null);
    } // attributeNamespace
    );
    /**
     * Get the value for a property on a node. Only used in DEV for SSR validation.
     * The "expected" argument is used as a hint of what the expected value is.
     * Some properties have multiple equivalent values.
     */

    function getValueForProperty(node, name, expected, propertyInfo) {
      {
        if (propertyInfo.mustUseProperty) {
          var propertyName = propertyInfo.propertyName;
          return node[propertyName];
        } else {
          var attributeName = propertyInfo.attributeName;
          var stringValue = null;

          if (propertyInfo.type === OVERLOADED_BOOLEAN) {
            if (node.hasAttribute(attributeName)) {
              var value = node.getAttribute(attributeName);

              if (value === '') {
                return true;
              }

              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                return value;
              }

              if (value === '' + expected) {
                return expected;
              }

              return value;
            }
          } else if (node.hasAttribute(attributeName)) {
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
              // We had an attribute but shouldn't have had one, so read it
              // for the error message.
              return node.getAttribute(attributeName);
            }

            if (propertyInfo.type === BOOLEAN) {
              // If this was a boolean, it doesn't matter what the value is
              // the fact that we have it is the same as the expected.
              return expected;
            } // Even if this property uses a namespace we use getAttribute
            // because we assume its namespaced name is the same as our config.
            // To use getAttributeNS we need the local name which we don't have
            // in our config atm.


            stringValue = node.getAttribute(attributeName);
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return stringValue === null ? expected : stringValue;
          } else if (stringValue === '' + expected) {
            return expected;
          } else {
            return stringValue;
          }
        }
      }
    }
    /**
     * Get the value for a attribute on a node. Only used in DEV for SSR validation.
     * The third argument is used as a hint of what the expected value is. Some
     * attributes have multiple equivalent values.
     */


    function getValueForAttribute(node, name, expected) {
      {
        if (!isAttributeNameSafe(name)) {
          return;
        }

        if (!node.hasAttribute(name)) {
          return expected === undefined ? undefined : null;
        }

        var value = node.getAttribute(name);

        if (value === '' + expected) {
          return expected;
        }

        return value;
      }
    }
    /**
     * Sets the value for a property on a node.
     *
     * @param {DOMElement} node
     * @param {string} name
     * @param {*} value
     */


    function setValueForProperty(node, name, value, isCustomComponentTag) {
      var propertyInfo = getPropertyInfo(name);

      if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
        return;
      }

      if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
        value = null;
      } // If the prop isn't in the special list, treat it as a simple attribute.


      if (isCustomComponentTag || propertyInfo === null) {
        if (isAttributeNameSafe(name)) {
          var _attributeName = name;

          if (value === null) {
            node.removeAttribute(_attributeName);
          } else {
            node.setAttribute(_attributeName, '' + value);
          }
        }

        return;
      }

      var mustUseProperty = propertyInfo.mustUseProperty;

      if (mustUseProperty) {
        var propertyName = propertyInfo.propertyName;

        if (value === null) {
          var type = propertyInfo.type;
          node[propertyName] = type === BOOLEAN ? false : '';
        } else {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propertyName] = value;
        }

        return;
      } // The rest are treated as attributes with special cases.


      var attributeName = propertyInfo.attributeName,
          attributeNamespace = propertyInfo.attributeNamespace;

      if (value === null) {
        node.removeAttribute(attributeName);
      } else {
        var _type = propertyInfo.type;
        var attributeValue = void 0;

        if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
          attributeValue = '';
        } else {
          // `setAttribute` with objects becomes only `[object]` in IE8/9,
          // ('' + value) makes it output the correct toString()-value.
          attributeValue = '' + value;
        }

        if (attributeNamespace) {
          node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
        } else {
          node.setAttribute(attributeName, attributeValue);
        }
      }
    } // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.


    function toString(value) {
      return '' + value;
    }

    function getToStringValue(value) {
      switch (typeof value) {
        case 'boolean':
        case 'number':
        case 'object':
        case 'string':
        case 'undefined':
          return value;

        default:
          // function, symbol are assigned as empty strings
          return '';
      }
    }

    var ReactDebugCurrentFrame$1 = null;
    var ReactControlledValuePropTypes = {
      checkPropTypes: null
    };
    {
      ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
      var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
      };
      var propTypes = {
        value: function (props, propName, componentName) {
          if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null) {
            return null;
          }

          return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
        },
        checked: function (props, propName, componentName) {
          if (props.onChange || props.readOnly || props.disabled || props[propName] == null) {
            return null;
          }

          return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
        }
      };
      /**
       * Provide a linked `value` attribute for controlled forms. You should not use
       * this outside of the ReactDOM controlled form components.
       */

      ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {
        checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$1.getStackAddendum);
      };
    }
    var enableUserTimingAPI = true; // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:

    var debugRenderPhaseSideEffects = false; // In some cases, StrictMode should also double-render lifecycles.
    // This can be confusing for tests though,
    // And it can be bad for performance in production.
    // This feature flag can be used to control the behavior:

    var debugRenderPhaseSideEffectsForStrictMode = true; // To preserve the "Pause on caught exceptions" behavior of the debugger, we
    // replay the begin phase of a failed component inside invokeGuardedCallback.

    var replayFailedUnitOfWorkWithInvokeGuardedCallback = true; // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

    var warnAboutDeprecatedLifecycles = false; // Gather advanced timing metrics for Profiler subtrees.

    var enableProfilerTimer = true; // Trace which interactions trigger each commit.

    var enableSchedulerTracing = true; // Only used in www builds.

    var enableSuspenseServerRenderer = false; // TODO: true? Here it might just be false.
    // Only used in www builds.
    // Only used in www builds.
    // React Fire: prevent the value and checked attributes from syncing
    // with their related DOM properties

    var disableInputAttributeSyncing = false; // These APIs will no longer be "unstable" in the upcoming 16.7 release,
    // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.

    var enableStableConcurrentModeAPIs = false;
    var warnAboutShorthandPropertyCollision = false; // TODO: direct imports like some-package/src/* are bad. Fix me.

    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;

    function isControlled(props) {
      var usesChecked = props.type === 'checkbox' || props.type === 'radio';
      return usesChecked ? props.checked != null : props.value != null;
    }
    /**
     * Implements an <input> host component that allows setting these optional
     * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
     *
     * If `checked` or `value` are not supplied (or null/undefined), user actions
     * that affect the checked state or value will trigger updates to the element.
     *
     * If they are supplied (and not null/undefined), the rendered element will not
     * trigger updates to the element. Instead, the props must change in order for
     * the rendered element to be updated.
     *
     * The rendered element will be initialized as unchecked (or `defaultChecked`)
     * with an empty value (or `defaultValue`).
     *
     * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
     */


    function getHostProps(element, props) {
      var node = element;
      var checked = props.checked;

      var hostProps = _assign({}, props, {
        defaultChecked: undefined,
        defaultValue: undefined,
        value: undefined,
        checked: checked != null ? checked : node._wrapperState.initialChecked
      });

      return hostProps;
    }

    function initWrapperState(element, props) {
      {
        ReactControlledValuePropTypes.checkPropTypes('input', props);

        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
          warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
          didWarnCheckedDefaultChecked = true;
        }

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
          warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
          didWarnValueDefaultValue = true;
        }
      }
      var node = element;
      var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
      node._wrapperState = {
        initialChecked: props.checked != null ? props.checked : props.defaultChecked,
        initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
        controlled: isControlled(props)
      };
    }

    function updateChecked(element, props) {
      var node = element;
      var checked = props.checked;

      if (checked != null) {
        setValueForProperty(node, 'checked', checked, false);
      }
    }

    function updateWrapper(element, props) {
      var node = element;
      {
        var _controlled = isControlled(props);

        if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
          warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
          didWarnUncontrolledToControlled = true;
        }

        if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
          warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
          didWarnControlledToUncontrolled = true;
        }
      }
      updateChecked(element, props);
      var value = getToStringValue(props.value);
      var type = props.type;

      if (value != null) {
        if (type === 'number') {
          if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
          // eslint-disable-next-line
          node.value != value) {
            node.value = toString(value);
          }
        } else if (node.value !== toString(value)) {
          node.value = toString(value);
        }
      } else if (type === 'submit' || type === 'reset') {
        // Submit/reset inputs need the attribute removed completely to avoid
        // blank-text buttons.
        node.removeAttribute('value');
        return;
      }

      if (disableInputAttributeSyncing) {
        // When not syncing the value attribute, React only assigns a new value
        // whenever the defaultValue React prop has changed. When not present,
        // React does nothing
        if (props.hasOwnProperty('defaultValue')) {
          setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        }
      } else {
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty('value')) {
          setDefaultValue(node, props.type, value);
        } else if (props.hasOwnProperty('defaultValue')) {
          setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        }
      }

      if (disableInputAttributeSyncing) {
        // When not syncing the checked attribute, the attribute is directly
        // controllable from the defaultValue React property. It needs to be
        // updated as new props come in.
        if (props.defaultChecked == null) {
          node.removeAttribute('checked');
        } else {
          node.defaultChecked = !!props.defaultChecked;
        }
      } else {
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) {
          node.defaultChecked = !!props.defaultChecked;
        }
      }
    }

    function postMountWrapper(element, props, isHydrating) {
      var node = element; // Do not assign value if it is already set. This prevents user text input
      // from being lost during SSR hydration.

      if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
        var type = props.type;
        var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
        // default value provided by the browser. See: #12872

        if (isButton && (props.value === undefined || props.value === null)) {
          return;
        }

        var _initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.


        if (!isHydrating) {
          if (disableInputAttributeSyncing) {
            var value = getToStringValue(props.value); // When not syncing the value attribute, the value property points
            // directly to the React prop. Only assign it if it exists.

            if (value != null) {
              // Always assign on buttons so that it is possible to assign an
              // empty string to clear button text.
              //
              // Otherwise, do not re-assign the value property if is empty. This
              // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
              // prematurely marking required inputs as invalid. Equality is compared
              // to the current value in case the browser provided value is not an
              // empty string.
              if (isButton || value !== node.value) {
                node.value = toString(value);
              }
            }
          } else {
            // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            if (_initialValue !== node.value) {
              node.value = _initialValue;
            }
          }
        }

        if (disableInputAttributeSyncing) {
          // When not syncing the value attribute, assign the value attribute
          // directly from the defaultValue React property (when present)
          var defaultValue = getToStringValue(props.defaultValue);

          if (defaultValue != null) {
            node.defaultValue = toString(defaultValue);
          }
        } else {
          // Otherwise, the value attribute is synchronized to the property,
          // so we assign defaultValue to the same thing as the value property
          // assignment step above.
          node.defaultValue = _initialValue;
        }
      } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
      // this is needed to work around a chrome bug where setting defaultChecked
      // will sometimes influence the value of checked (even after detachment).
      // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
      // We need to temporarily unset name to avoid disrupting radio button groups.


      var name = node.name;

      if (name !== '') {
        node.name = '';
      }

      if (disableInputAttributeSyncing) {
        // When not syncing the checked attribute, the checked property
        // never gets assigned. It must be manually set. We don't want
        // to do this when hydrating so that existing user input isn't
        // modified
        if (!isHydrating) {
          updateChecked(element, props);
        } // Only assign the checked attribute if it is defined. This saves
        // a DOM write when controlling the checked attribute isn't needed
        // (text inputs, submit/reset)


        if (props.hasOwnProperty('defaultChecked')) {
          node.defaultChecked = !node.defaultChecked;
          node.defaultChecked = !!props.defaultChecked;
        }
      } else {
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
      }

      if (name !== '') {
        node.name = name;
      }
    }

    function restoreControlledState(element, props) {
      var node = element;
      updateWrapper(node, props);
      updateNamedCousins(node, props);
    }

    function updateNamedCousins(rootNode, props) {
      var name = props.name;

      if (props.type === 'radio' && name != null) {
        var queryRoot = rootNode;

        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        } // If `rootNode.form` was non-null, then we could try `form.elements`,
        // but that sometimes behaves strangely in IE8. We could also try using
        // `form.getElementsByName`, but that will only return direct children
        // and won't include inputs that use the HTML5 `form=` attribute. Since
        // the input might not even be in a form. It might not even be in the
        // document. Let's just use the local `querySelectorAll` to ensure we don't
        // miss anything.


        var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

        for (var i = 0; i < group.length; i++) {
          var otherNode = group[i];

          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          } // This will throw if radio buttons rendered by different copies of React
          // and the same name are rendered into the same form (same as #1939).
          // That's probably okay; we don't support it just as we don't support
          // mixing React radio buttons with non-React ones.


          var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
          !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0; // We need update the tracked value on the named cousin since the value
          // was changed but the input saw no event or value set

          updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
          // was previously checked to update will cause it to be come re-checked
          // as appropriate.

          updateWrapper(otherNode, otherProps);
        }
      }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253


    function setDefaultValue(node, type, value) {
      if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      type !== 'number' || node.ownerDocument.activeElement !== node) {
        if (value == null) {
          node.defaultValue = toString(node._wrapperState.initialValue);
        } else if (node.defaultValue !== toString(value)) {
          node.defaultValue = toString(value);
        }
      }
    }

    var eventTypes$1 = {
      change: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        },
        dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
      }
    };

    function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
      var event = SyntheticEvent.getPooled(eventTypes$1.change, inst, nativeEvent, target);
      event.type = 'change'; // Flag this event loop as needing state restore.

      enqueueStateRestore(target);
      accumulateTwoPhaseDispatches(event);
      return event;
    }
    /**
     * For IE shims
     */


    var activeElement = null;
    var activeElementInst = null;
    /**
     * SECTION: handle `change` event
     */

    function shouldUseChangeEvent(elem) {
      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }

    function manualDispatchChangeEvent(nativeEvent) {
      var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
      // other events and have it go through ReactBrowserEventEmitter. Since it
      // doesn't, we manually listen for the events and so we have to enqueue and
      // process the abstract event manually.
      //
      // Batching is necessary here in order to ensure that all event handlers run
      // before the next rerender (including event handlers attached to ancestor
      // elements instead of directly on the input). Without this, controlled
      // components don't work properly in conjunction with event bubbling because
      // the component is rerendered and the value reverted before all the event
      // handlers can run. See https://github.com/facebook/react/issues/708.

      batchedUpdates(runEventInBatch, event);
    }

    function runEventInBatch(event) {
      runEventsInBatch(event);
    }

    function getInstIfValueChanged(targetInst) {
      var targetNode = getNodeFromInstance$1(targetInst);

      if (updateValueIfChanged(targetNode)) {
        return targetInst;
      }
    }

    function getTargetInstForChangeEvent(topLevelType, targetInst) {
      if (topLevelType === TOP_CHANGE) {
        return targetInst;
      }
    }
    /**
     * SECTION: handle `input` event
     */


    var isInputEventSupported = false;

    if (canUseDOM) {
      // IE9 claims to support the input event but fails to trigger it when
      // deleting text, so we ignore its input events.
      isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    }
    /**
     * (For IE <=9) Starts tracking propertychange events on the passed-in element
     * and override the value property so that we can distinguish user events from
     * value changes in JS.
     */


    function startWatchingForValueChange(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    /**
     * (For IE <=9) Removes the event listeners from the currently-tracked element,
     * if any exists.
     */


    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }

      activeElement.detachEvent('onpropertychange', handlePropertyChange);
      activeElement = null;
      activeElementInst = null;
    }
    /**
     * (For IE <=9) Handles a propertychange event, sending a `change` event if
     * the value of the active element has changed.
     */


    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== 'value') {
        return;
      }

      if (getInstIfValueChanged(activeElementInst)) {
        manualDispatchChangeEvent(nativeEvent);
      }
    }

    function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
      if (topLevelType === TOP_FOCUS) {
        // In IE9, propertychange fires for most input events but is buggy and
        // doesn't fire when text is deleted, but conveniently, selectionchange
        // appears to fire in all of the remaining cases so we catch those and
        // forward the event if the value has changed
        // In either case, we don't want to call the event handler if the value
        // is changed from JS so we redefine a setter for `.value` that updates
        // our activeElementValue variable, allowing us to ignore those changes
        //
        // stopWatching() should be a noop here but we call it just in case we
        // missed a blur event somehow.
        stopWatchingForValueChange();
        startWatchingForValueChange(target, targetInst);
      } else if (topLevelType === TOP_BLUR) {
        stopWatchingForValueChange();
      }
    } // For IE8 and IE9.


    function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
      if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
        // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
      }
    }
    /**
     * SECTION: handle `click` event
     */


    function shouldUseClickEvent(elem) {
      // Use the `click` event to detect changes to checkbox and radio inputs.
      // This approach works across all browsers, whereas `change` does not fire
      // until `blur` in IE8.
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }

    function getTargetInstForClickEvent(topLevelType, targetInst) {
      if (topLevelType === TOP_CLICK) {
        return getInstIfValueChanged(targetInst);
      }
    }

    function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
      if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
        return getInstIfValueChanged(targetInst);
      }
    }

    function handleControlledInputBlur(node) {
      var state = node._wrapperState;

      if (!state || !state.controlled || node.type !== 'number') {
        return;
      }

      if (!disableInputAttributeSyncing) {
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, 'number', node.value);
      }
    }
    /**
     * This plugin creates an `onChange` event that normalizes change events
     * across form elements. This event fires at a time when it's possible to
     * change the element's value without seeing a flicker.
     *
     * Supported elements are:
     * - input (see `isTextInputElement`)
     * - textarea
     * - select
     */


    var ChangeEventPlugin = {
      eventTypes: eventTypes$1,
      _isInputEventSupported: isInputEventSupported,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;
        var getTargetInstFunc = void 0,
            handleEventFunc = void 0;

        if (shouldUseChangeEvent(targetNode)) {
          getTargetInstFunc = getTargetInstForChangeEvent;
        } else if (isTextInputElement(targetNode)) {
          if (isInputEventSupported) {
            getTargetInstFunc = getTargetInstForInputOrChangeEvent;
          } else {
            getTargetInstFunc = getTargetInstForInputEventPolyfill;
            handleEventFunc = handleEventsForInputEventPolyfill;
          }
        } else if (shouldUseClickEvent(targetNode)) {
          getTargetInstFunc = getTargetInstForClickEvent;
        }

        if (getTargetInstFunc) {
          var inst = getTargetInstFunc(topLevelType, targetInst);

          if (inst) {
            var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
            return event;
          }
        }

        if (handleEventFunc) {
          handleEventFunc(topLevelType, targetNode, targetInst);
        } // When blurring, set the value attribute for number inputs


        if (topLevelType === TOP_BLUR) {
          handleControlledInputBlur(targetNode);
        }
      }
    };
    /**
     * Module that is injectable into `EventPluginHub`, that specifies a
     * deterministic ordering of `EventPlugin`s. A convenient way to reason about
     * plugins, without having to package every one of them. This is better than
     * having plugins be ordered in the same order that they are injected because
     * that ordering would be influenced by the packaging order.
     * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
     * preventing default on events is convenient in `SimpleEventPlugin` handlers.
     */

    var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
    var SyntheticUIEvent = SyntheticEvent.extend({
      view: null,
      detail: null
    });
    var modifierKeyToProp = {
      Alt: 'altKey',
      Control: 'ctrlKey',
      Meta: 'metaKey',
      Shift: 'shiftKey'
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.

    /**
     * Translation from modifier key to the associated property in the event.
     * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
     */

    function modifierStateGetter(keyArg) {
      var syntheticEvent = this;
      var nativeEvent = syntheticEvent.nativeEvent;

      if (nativeEvent.getModifierState) {
        return nativeEvent.getModifierState(keyArg);
      }

      var keyProp = modifierKeyToProp[keyArg];
      return keyProp ? !!nativeEvent[keyProp] : false;
    }

    function getEventModifierState(nativeEvent) {
      return modifierStateGetter;
    }

    var previousScreenX = 0;
    var previousScreenY = 0; // Use flags to signal movementX/Y has already been set

    var isMovementXSet = false;
    var isMovementYSet = false;
    /**
     * @interface MouseEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticMouseEvent = SyntheticUIEvent.extend({
      screenX: null,
      screenY: null,
      clientX: null,
      clientY: null,
      pageX: null,
      pageY: null,
      ctrlKey: null,
      shiftKey: null,
      altKey: null,
      metaKey: null,
      getModifierState: getEventModifierState,
      button: null,
      buttons: null,
      relatedTarget: function (event) {
        return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
      },
      movementX: function (event) {
        if ('movementX' in event) {
          return event.movementX;
        }

        var screenX = previousScreenX;
        previousScreenX = event.screenX;

        if (!isMovementXSet) {
          isMovementXSet = true;
          return 0;
        }

        return event.type === 'mousemove' ? event.screenX - screenX : 0;
      },
      movementY: function (event) {
        if ('movementY' in event) {
          return event.movementY;
        }

        var screenY = previousScreenY;
        previousScreenY = event.screenY;

        if (!isMovementYSet) {
          isMovementYSet = true;
          return 0;
        }

        return event.type === 'mousemove' ? event.screenY - screenY : 0;
      }
    });
    /**
     * @interface PointerEvent
     * @see http://www.w3.org/TR/pointerevents/
     */

    var SyntheticPointerEvent = SyntheticMouseEvent.extend({
      pointerId: null,
      width: null,
      height: null,
      pressure: null,
      tangentialPressure: null,
      tiltX: null,
      tiltY: null,
      twist: null,
      pointerType: null,
      isPrimary: null
    });
    var eventTypes$2 = {
      mouseEnter: {
        registrationName: 'onMouseEnter',
        dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
      },
      mouseLeave: {
        registrationName: 'onMouseLeave',
        dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
      },
      pointerEnter: {
        registrationName: 'onPointerEnter',
        dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
      },
      pointerLeave: {
        registrationName: 'onPointerLeave',
        dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
      }
    };
    var EnterLeaveEventPlugin = {
      eventTypes: eventTypes$2,

      /**
       * For almost every interaction we care about, there will be both a top-level
       * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
       * we do not extract duplicate events. However, moving the mouse into the
       * browser from outside will not fire a `mouseout` event. In this case, we use
       * the `mouseover` top-level event.
       */
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
        var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

        if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
          return null;
        }

        if (!isOutEvent && !isOverEvent) {
          // Must not be a mouse or pointer in or out - ignoring.
          return null;
        }

        var win = void 0;

        if (nativeEventTarget.window === nativeEventTarget) {
          // `nativeEventTarget` is probably a window object.
          win = nativeEventTarget;
        } else {
          // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
          var doc = nativeEventTarget.ownerDocument;

          if (doc) {
            win = doc.defaultView || doc.parentWindow;
          } else {
            win = window;
          }
        }

        var from = void 0;
        var to = void 0;

        if (isOutEvent) {
          from = targetInst;
          var related = nativeEvent.relatedTarget || nativeEvent.toElement;
          to = related ? getClosestInstanceFromNode(related) : null;
        } else {
          // Moving to a node from outside the window.
          from = null;
          to = targetInst;
        }

        if (from === to) {
          // Nothing pertains to our managed components.
          return null;
        }

        var eventInterface = void 0,
            leaveEventType = void 0,
            enterEventType = void 0,
            eventTypePrefix = void 0;

        if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
          eventInterface = SyntheticMouseEvent;
          leaveEventType = eventTypes$2.mouseLeave;
          enterEventType = eventTypes$2.mouseEnter;
          eventTypePrefix = 'mouse';
        } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
          eventInterface = SyntheticPointerEvent;
          leaveEventType = eventTypes$2.pointerLeave;
          enterEventType = eventTypes$2.pointerEnter;
          eventTypePrefix = 'pointer';
        }

        var fromNode = from == null ? win : getNodeFromInstance$1(from);
        var toNode = to == null ? win : getNodeFromInstance$1(to);
        var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
        leave.type = eventTypePrefix + 'leave';
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
        enter.type = eventTypePrefix + 'enter';
        enter.target = toNode;
        enter.relatedTarget = fromNode;
        accumulateEnterLeaveDispatches(leave, enter, from, to);
        return [leave, enter];
      }
    };
    /**
     * inlined Object.is polyfill to avoid requiring consumers ship their own
     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
     */

    function is(x, y) {
      return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
      ;
    }

    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
    /**
     * Performs equality by iterating through keys on an object and returning false
     * when any key has values which are not strictly equal between the arguments.
     * Returns true when the values of all keys are strictly equal.
     */

    function shallowEqual(objA, objB) {
      if (is(objA, objB)) {
        return true;
      }

      if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
        return false;
      }

      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);

      if (keysA.length !== keysB.length) {
        return false;
      } // Test for A's keys different from B.


      for (var i = 0; i < keysA.length; i++) {
        if (!hasOwnProperty$1.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
          return false;
        }
      }

      return true;
    }
    /**
     * `ReactInstanceMap` maintains a mapping from a public facing stateful
     * instance (key) and the internal representation (value). This allows public
     * methods to accept the user facing instance as an argument and map them back
     * to internal methods.
     *
     * Note that this module is currently shared and assumed to be stateless.
     * If this becomes an actual Map, that will break.
     */

    /**
     * This API should be called `delete` but we'd have to make sure to always
     * transform these to strings for IE support. When this transform is fully
     * supported we can rename it.
     */


    function get(key) {
      return key._reactInternalFiber;
    }

    function has(key) {
      return key._reactInternalFiber !== undefined;
    }

    function set(key, value) {
      key._reactInternalFiber = value;
    } // Don't change these two values. They're used by React Dev Tools.


    var NoEffect =
    /*              */
    0;
    var PerformedWork =
    /*         */
    1; // You can change the rest (and add more).

    var Placement =
    /*             */
    2;
    var Update =
    /*                */
    4;
    var PlacementAndUpdate =
    /*    */
    6;
    var Deletion =
    /*              */
    8;
    var ContentReset =
    /*          */
    16;
    var Callback =
    /*              */
    32;
    var DidCapture =
    /*            */
    64;
    var Ref =
    /*                   */
    128;
    var Snapshot =
    /*              */
    256;
    var Passive =
    /*               */
    512; // Passive & Update & Callback & Ref & Snapshot

    var LifecycleEffectMask =
    /*   */
    932; // Union of all host effects

    var HostEffectMask =
    /*        */
    1023;
    var Incomplete =
    /*            */
    1024;
    var ShouldCapture =
    /*         */
    2048;
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var MOUNTING = 1;
    var MOUNTED = 2;
    var UNMOUNTED = 3;

    function isFiberMountedImpl(fiber) {
      var node = fiber;

      if (!fiber.alternate) {
        // If there is no alternate, this might be a new tree that isn't inserted
        // yet. If it is, then it will have a pending insertion effect on it.
        if ((node.effectTag & Placement) !== NoEffect) {
          return MOUNTING;
        }

        while (node.return) {
          node = node.return;

          if ((node.effectTag & Placement) !== NoEffect) {
            return MOUNTING;
          }
        }
      } else {
        while (node.return) {
          node = node.return;
        }
      }

      if (node.tag === HostRoot) {
        // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return MOUNTED;
      } // If we didn't hit the root, that means that we're in an disconnected tree
      // that has been unmounted.


      return UNMOUNTED;
    }

    function isFiberMounted(fiber) {
      return isFiberMountedImpl(fiber) === MOUNTED;
    }

    function isMounted(component) {
      {
        var owner = ReactCurrentOwner$1.current;

        if (owner !== null && owner.tag === ClassComponent) {
          var ownerFiber = owner;
          var instance = ownerFiber.stateNode;
          !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;
          instance._warnedAboutRefsInRender = true;
        }
      }
      var fiber = get(component);

      if (!fiber) {
        return false;
      }

      return isFiberMountedImpl(fiber) === MOUNTED;
    }

    function assertIsMounted(fiber) {
      !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
    }

    function findCurrentFiberUsingSlowPath(fiber) {
      var alternate = fiber.alternate;

      if (!alternate) {
        // If there is no alternate, then we only need to check if it is mounted.
        var state = isFiberMountedImpl(fiber);
        !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;

        if (state === MOUNTING) {
          return null;
        }

        return fiber;
      } // If we have two possible branches, we'll walk backwards up to the root
      // to see what path the root points to. On the way we may hit one of the
      // special cases and we'll deal with them.


      var a = fiber;
      var b = alternate;

      while (true) {
        var parentA = a.return;
        var parentB = parentA ? parentA.alternate : null;

        if (!parentA || !parentB) {
          // We're at the root.
          break;
        } // If both copies of the parent fiber point to the same child, we can
        // assume that the child is current. This happens when we bailout on low
        // priority: the bailed out fiber's child reuses the current child.


        if (parentA.child === parentB.child) {
          var child = parentA.child;

          while (child) {
            if (child === a) {
              // We've determined that A is the current branch.
              assertIsMounted(parentA);
              return fiber;
            }

            if (child === b) {
              // We've determined that B is the current branch.
              assertIsMounted(parentA);
              return alternate;
            }

            child = child.sibling;
          } // We should never have an alternate for any mounting node. So the only
          // way this could possibly happen is if this was unmounted, if at all.


          invariant(false, 'Unable to find node on an unmounted component.');
        }

        if (a.return !== b.return) {
          // The return pointer of A and the return pointer of B point to different
          // fibers. We assume that return pointers never criss-cross, so A must
          // belong to the child set of A.return, and B must belong to the child
          // set of B.return.
          a = parentA;
          b = parentB;
        } else {
          // The return pointers point to the same fiber. We'll have to use the
          // default, slow path: scan the child sets of each parent alternate to see
          // which child belongs to which set.
          //
          // Search parent A's child set
          var didFindChild = false;
          var _child = parentA.child;

          while (_child) {
            if (_child === a) {
              didFindChild = true;
              a = parentA;
              b = parentB;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentA;
              a = parentB;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) {
            // Search parent B's child set
            _child = parentB.child;

            while (_child) {
              if (_child === a) {
                didFindChild = true;
                a = parentB;
                b = parentA;
                break;
              }

              if (_child === b) {
                didFindChild = true;
                b = parentB;
                a = parentA;
                break;
              }

              _child = _child.sibling;
            }

            !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
          }
        }

        !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      } // If the root is not a host container, we're in a disconnected tree. I.e.
      // unmounted.


      !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;

      if (a.stateNode.current === a) {
        // We've determined that A is the current branch.
        return fiber;
      } // Otherwise B has to be current branch.


      return alternate;
    }

    function findCurrentHostFiber(parent) {
      var currentParent = findCurrentFiberUsingSlowPath(parent);

      if (!currentParent) {
        return null;
      } // Next we'll drill down this component to find the first HostComponent/Text.


      var node = currentParent;

      while (true) {
        if (node.tag === HostComponent || node.tag === HostText) {
          return node;
        } else if (node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === currentParent) {
          return null;
        }

        while (!node.sibling) {
          if (!node.return || node.return === currentParent) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      } // Flow needs the return null here, but ESLint complains about it.
      // eslint-disable-next-line no-unreachable


      return null;
    }

    function findCurrentHostFiberWithNoPortals(parent) {
      var currentParent = findCurrentFiberUsingSlowPath(parent);

      if (!currentParent) {
        return null;
      } // Next we'll drill down this component to find the first HostComponent/Text.


      var node = currentParent;

      while (true) {
        if (node.tag === HostComponent || node.tag === HostText) {
          return node;
        } else if (node.child && node.tag !== HostPortal) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === currentParent) {
          return null;
        }

        while (!node.sibling) {
          if (!node.return || node.return === currentParent) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      } // Flow needs the return null here, but ESLint complains about it.
      // eslint-disable-next-line no-unreachable


      return null;
    }

    function addEventBubbleListener(element, eventType, listener) {
      element.addEventListener(eventType, listener, false);
    }

    function addEventCaptureListener(element, eventType, listener) {
      element.addEventListener(eventType, listener, true);
    }
    /**
     * @interface Event
     * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
     * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
     */


    var SyntheticAnimationEvent = SyntheticEvent.extend({
      animationName: null,
      elapsedTime: null,
      pseudoElement: null
    });
    /**
     * @interface Event
     * @see http://www.w3.org/TR/clipboard-apis/
     */

    var SyntheticClipboardEvent = SyntheticEvent.extend({
      clipboardData: function (event) {
        return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
      }
    });
    /**
     * @interface FocusEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticFocusEvent = SyntheticUIEvent.extend({
      relatedTarget: null
    });
    /**
     * `charCode` represents the actual "character code" and is safe to use with
     * `String.fromCharCode`. As such, only keys that correspond to printable
     * characters produce a valid `charCode`, the only exception to this is Enter.
     * The Tab-key is considered non-printable and does not have a `charCode`,
     * presumably because it does not produce a tab-character in browsers.
     *
     * @param {object} nativeEvent Native browser event.
     * @return {number} Normalized `charCode` property.
     */

    function getEventCharCode(nativeEvent) {
      var charCode = void 0;
      var keyCode = nativeEvent.keyCode;

      if ('charCode' in nativeEvent) {
        charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

        if (charCode === 0 && keyCode === 13) {
          charCode = 13;
        }
      } else {
        // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
      } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
      // report Enter as charCode 10 when ctrl is pressed.


      if (charCode === 10) {
        charCode = 13;
      } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
      // Must not discard the (non-)printable Enter-key.


      if (charCode >= 32 || charCode === 13) {
        return charCode;
      }

      return 0;
    }
    /**
     * Normalization of deprecated HTML5 `key` values
     * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
     */


    var normalizeKey = {
      Esc: 'Escape',
      Spacebar: ' ',
      Left: 'ArrowLeft',
      Up: 'ArrowUp',
      Right: 'ArrowRight',
      Down: 'ArrowDown',
      Del: 'Delete',
      Win: 'OS',
      Menu: 'ContextMenu',
      Apps: 'ContextMenu',
      Scroll: 'ScrollLock',
      MozPrintableKey: 'Unidentified'
    };
    /**
     * Translation from legacy `keyCode` to HTML5 `key`
     * Only special keys supported, all others depend on keyboard layout or browser
     * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
     */

    var translateToKey = {
      '8': 'Backspace',
      '9': 'Tab',
      '12': 'Clear',
      '13': 'Enter',
      '16': 'Shift',
      '17': 'Control',
      '18': 'Alt',
      '19': 'Pause',
      '20': 'CapsLock',
      '27': 'Escape',
      '32': ' ',
      '33': 'PageUp',
      '34': 'PageDown',
      '35': 'End',
      '36': 'Home',
      '37': 'ArrowLeft',
      '38': 'ArrowUp',
      '39': 'ArrowRight',
      '40': 'ArrowDown',
      '45': 'Insert',
      '46': 'Delete',
      '112': 'F1',
      '113': 'F2',
      '114': 'F3',
      '115': 'F4',
      '116': 'F5',
      '117': 'F6',
      '118': 'F7',
      '119': 'F8',
      '120': 'F9',
      '121': 'F10',
      '122': 'F11',
      '123': 'F12',
      '144': 'NumLock',
      '145': 'ScrollLock',
      '224': 'Meta'
    };
    /**
     * @param {object} nativeEvent Native browser event.
     * @return {string} Normalized `key` property.
     */

    function getEventKey(nativeEvent) {
      if (nativeEvent.key) {
        // Normalize inconsistent values reported by browsers due to
        // implementations of a working draft specification.
        // FireFox implements `key` but returns `MozPrintableKey` for all
        // printable characters (normalized to `Unidentified`), ignore it.
        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

        if (key !== 'Unidentified') {
          return key;
        }
      } // Browser does not implement `key`, polyfill as much of it as we can.


      if (nativeEvent.type === 'keypress') {
        var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
        // thus be captured by `keypress`, no other non-printable key should.

        return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
      }

      if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
        // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || 'Unidentified';
      }

      return '';
    }
    /**
     * @interface KeyboardEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */


    var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
      key: getEventKey,
      location: null,
      ctrlKey: null,
      shiftKey: null,
      altKey: null,
      metaKey: null,
      repeat: null,
      locale: null,
      getModifierState: getEventModifierState,
      // Legacy Interface
      charCode: function (event) {
        // `charCode` is the result of a KeyPress event and represents the value of
        // the actual printable character.
        // KeyPress is deprecated, but its replacement is not yet final and not
        // implemented in any major browser. Only KeyPress has charCode.
        if (event.type === 'keypress') {
          return getEventCharCode(event);
        }

        return 0;
      },
      keyCode: function (event) {
        // `keyCode` is the result of a KeyDown/Up event and represents the value of
        // physical keyboard key.
        // The actual meaning of the value depends on the users' keyboard layout
        // which cannot be detected. Assuming that it is a US keyboard layout
        // provides a surprisingly accurate mapping for US and European users.
        // Due to this, it is left to the user to implement at this time.
        if (event.type === 'keydown' || event.type === 'keyup') {
          return event.keyCode;
        }

        return 0;
      },
      which: function (event) {
        // `which` is an alias for either `keyCode` or `charCode` depending on the
        // type of the event.
        if (event.type === 'keypress') {
          return getEventCharCode(event);
        }

        if (event.type === 'keydown' || event.type === 'keyup') {
          return event.keyCode;
        }

        return 0;
      }
    });
    /**
     * @interface DragEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticDragEvent = SyntheticMouseEvent.extend({
      dataTransfer: null
    });
    /**
     * @interface TouchEvent
     * @see http://www.w3.org/TR/touch-events/
     */

    var SyntheticTouchEvent = SyntheticUIEvent.extend({
      touches: null,
      targetTouches: null,
      changedTouches: null,
      altKey: null,
      metaKey: null,
      ctrlKey: null,
      shiftKey: null,
      getModifierState: getEventModifierState
    });
    /**
     * @interface Event
     * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
     * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
     */

    var SyntheticTransitionEvent = SyntheticEvent.extend({
      propertyName: null,
      elapsedTime: null,
      pseudoElement: null
    });
    /**
     * @interface WheelEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticWheelEvent = SyntheticMouseEvent.extend({
      deltaX: function (event) {
        return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
        'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
      },
      deltaY: function (event) {
        return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
        'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
        'wheelDelta' in event ? -event.wheelDelta : 0;
      },
      deltaZ: null,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: null
    });
    /**
     * Turns
     * ['abort', ...]
     * into
     * eventTypes = {
     *   'abort': {
     *     phasedRegistrationNames: {
     *       bubbled: 'onAbort',
     *       captured: 'onAbortCapture',
     *     },
     *     dependencies: [TOP_ABORT],
     *   },
     *   ...
     * };
     * topLevelEventsToDispatchConfig = new Map([
     *   [TOP_ABORT, { sameConfig }],
     * ]);
     */

    var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_AUX_CLICK, 'auxClick'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];
    var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];
    var eventTypes$4 = {};
    var topLevelEventsToDispatchConfig = {};

    function addEventTypeNameToConfig(_ref, isInteractive) {
      var topEvent = _ref[0],
          event = _ref[1];
      var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
      var onEvent = 'on' + capitalizedEvent;
      var type = {
        phasedRegistrationNames: {
          bubbled: onEvent,
          captured: onEvent + 'Capture'
        },
        dependencies: [topEvent],
        isInteractive: isInteractive
      };
      eventTypes$4[event] = type;
      topLevelEventsToDispatchConfig[topEvent] = type;
    }

    interactiveEventTypeNames.forEach(function (eventTuple) {
      addEventTypeNameToConfig(eventTuple, true);
    });
    nonInteractiveEventTypeNames.forEach(function (eventTuple) {
      addEventTypeNameToConfig(eventTuple, false);
    }); // Only used in DEV for exhaustiveness validation.

    var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];
    var SimpleEventPlugin = {
      eventTypes: eventTypes$4,
      isInteractiveTopLevelEventType: function (topLevelType) {
        var config = topLevelEventsToDispatchConfig[topLevelType];
        return config !== undefined && config.isInteractive === true;
      },
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];

        if (!dispatchConfig) {
          return null;
        }

        var EventConstructor = void 0;

        switch (topLevelType) {
          case TOP_KEY_PRESS:
            // Firefox creates a keypress event for function keys too. This removes
            // the unwanted keypress events. Enter is however both printable and
            // non-printable. One would expect Tab to be as well (but it isn't).
            if (getEventCharCode(nativeEvent) === 0) {
              return null;
            }

          /* falls through */

          case TOP_KEY_DOWN:
          case TOP_KEY_UP:
            EventConstructor = SyntheticKeyboardEvent;
            break;

          case TOP_BLUR:
          case TOP_FOCUS:
            EventConstructor = SyntheticFocusEvent;
            break;

          case TOP_CLICK:
            // Firefox creates a click event on right mouse clicks. This removes the
            // unwanted click events.
            if (nativeEvent.button === 2) {
              return null;
            }

          /* falls through */

          case TOP_AUX_CLICK:
          case TOP_DOUBLE_CLICK:
          case TOP_MOUSE_DOWN:
          case TOP_MOUSE_MOVE:
          case TOP_MOUSE_UP: // TODO: Disabled elements should not respond to mouse events

          /* falls through */

          case TOP_MOUSE_OUT:
          case TOP_MOUSE_OVER:
          case TOP_CONTEXT_MENU:
            EventConstructor = SyntheticMouseEvent;
            break;

          case TOP_DRAG:
          case TOP_DRAG_END:
          case TOP_DRAG_ENTER:
          case TOP_DRAG_EXIT:
          case TOP_DRAG_LEAVE:
          case TOP_DRAG_OVER:
          case TOP_DRAG_START:
          case TOP_DROP:
            EventConstructor = SyntheticDragEvent;
            break;

          case TOP_TOUCH_CANCEL:
          case TOP_TOUCH_END:
          case TOP_TOUCH_MOVE:
          case TOP_TOUCH_START:
            EventConstructor = SyntheticTouchEvent;
            break;

          case TOP_ANIMATION_END:
          case TOP_ANIMATION_ITERATION:
          case TOP_ANIMATION_START:
            EventConstructor = SyntheticAnimationEvent;
            break;

          case TOP_TRANSITION_END:
            EventConstructor = SyntheticTransitionEvent;
            break;

          case TOP_SCROLL:
            EventConstructor = SyntheticUIEvent;
            break;

          case TOP_WHEEL:
            EventConstructor = SyntheticWheelEvent;
            break;

          case TOP_COPY:
          case TOP_CUT:
          case TOP_PASTE:
            EventConstructor = SyntheticClipboardEvent;
            break;

          case TOP_GOT_POINTER_CAPTURE:
          case TOP_LOST_POINTER_CAPTURE:
          case TOP_POINTER_CANCEL:
          case TOP_POINTER_DOWN:
          case TOP_POINTER_MOVE:
          case TOP_POINTER_OUT:
          case TOP_POINTER_OVER:
          case TOP_POINTER_UP:
            EventConstructor = SyntheticPointerEvent;
            break;

          default:
            {
              if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
                warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
              }
            } // HTML Events
            // @see http://www.w3.org/TR/html5/index.html#events-0

            EventConstructor = SyntheticEvent;
            break;
        }

        var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        accumulateTwoPhaseDispatches(event);
        return event;
      }
    };
    var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;
    var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
    var callbackBookkeepingPool = [];
    /**
     * Find the deepest React component completely containing the root of the
     * passed-in instance (for use when entire React trees are nested within each
     * other). If React trees are not nested, returns null.
     */

    function findRootContainerNode(inst) {
      // TODO: It may be a good idea to cache this to prevent unnecessary DOM
      // traversal, but caching is difficult to do correctly without using a
      // mutation observer to listen for all DOM changes.
      while (inst.return) {
        inst = inst.return;
      }

      if (inst.tag !== HostRoot) {
        // This can happen if we're in a detached tree.
        return null;
      }

      return inst.stateNode.containerInfo;
    } // Used to store ancestor hierarchy in top level callback


    function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
      if (callbackBookkeepingPool.length) {
        var instance = callbackBookkeepingPool.pop();
        instance.topLevelType = topLevelType;
        instance.nativeEvent = nativeEvent;
        instance.targetInst = targetInst;
        return instance;
      }

      return {
        topLevelType: topLevelType,
        nativeEvent: nativeEvent,
        targetInst: targetInst,
        ancestors: []
      };
    }

    function releaseTopLevelCallbackBookKeeping(instance) {
      instance.topLevelType = null;
      instance.nativeEvent = null;
      instance.targetInst = null;
      instance.ancestors.length = 0;

      if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
        callbackBookkeepingPool.push(instance);
      }
    }

    function handleTopLevel(bookKeeping) {
      var targetInst = bookKeeping.targetInst; // Loop through the hierarchy, in case there's any nested components.
      // It's important that we build the array of ancestors before calling any
      // event handlers, because event handlers can modify the DOM, leading to
      // inconsistencies with ReactMount's node cache. See #1105.

      var ancestor = targetInst;

      do {
        if (!ancestor) {
          bookKeeping.ancestors.push(ancestor);
          break;
        }

        var root = findRootContainerNode(ancestor);

        if (!root) {
          break;
        }

        bookKeeping.ancestors.push(ancestor);
        ancestor = getClosestInstanceFromNode(root);
      } while (ancestor);

      for (var i = 0; i < bookKeeping.ancestors.length; i++) {
        targetInst = bookKeeping.ancestors[i];
        runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
      }
    } // TODO: can we stop exporting these?


    var _enabled = true;

    function setEnabled(enabled) {
      _enabled = !!enabled;
    }

    function isEnabled() {
      return _enabled;
    }
    /**
     * Traps top-level events by using event bubbling.
     *
     * @param {number} topLevelType Number from `TopLevelEventTypes`.
     * @param {object} element Element on which to attach listener.
     * @return {?object} An object with a remove function which will forcefully
     *                  remove the listener.
     * @internal
     */


    function trapBubbledEvent(topLevelType, element) {
      if (!element) {
        return null;
      }

      var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;
      addEventBubbleListener(element, getRawEventName(topLevelType), // Check if interactive and wrap in interactiveUpdates
      dispatch.bind(null, topLevelType));
    }
    /**
     * Traps a top-level event by using event capturing.
     *
     * @param {number} topLevelType Number from `TopLevelEventTypes`.
     * @param {object} element Element on which to attach listener.
     * @return {?object} An object with a remove function which will forcefully
     *                  remove the listener.
     * @internal
     */


    function trapCapturedEvent(topLevelType, element) {
      if (!element) {
        return null;
      }

      var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;
      addEventCaptureListener(element, getRawEventName(topLevelType), // Check if interactive and wrap in interactiveUpdates
      dispatch.bind(null, topLevelType));
    }

    function dispatchInteractiveEvent(topLevelType, nativeEvent) {
      interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
    }

    function dispatchEvent(topLevelType, nativeEvent) {
      if (!_enabled) {
        return;
      }

      var nativeEventTarget = getEventTarget(nativeEvent);
      var targetInst = getClosestInstanceFromNode(nativeEventTarget);

      if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
        // If we get an event (ex: img onload) before committing that
        // component's mount, ignore it for now (that is, treat it as if it was an
        // event on a non-React tree). We might also consider queueing events and
        // dispatching them after the mount.
        targetInst = null;
      }

      var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

      try {
        // Event queue being processed in the same cycle allows
        // `preventDefault`.
        batchedUpdates(handleTopLevel, bookKeeping);
      } finally {
        releaseTopLevelCallbackBookKeeping(bookKeeping);
      }
    }
    /**
     * Summary of `ReactBrowserEventEmitter` event handling:
     *
     *  - Top-level delegation is used to trap most native browser events. This
     *    may only occur in the main thread and is the responsibility of
     *    ReactDOMEventListener, which is injected and can therefore support
     *    pluggable event sources. This is the only work that occurs in the main
     *    thread.
     *
     *  - We normalize and de-duplicate events to account for browser quirks. This
     *    may be done in the worker thread.
     *
     *  - Forward these native events (with the associated top-level type used to
     *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
     *    to extract any synthetic events.
     *
     *  - The `EventPluginHub` will then process each event by annotating them with
     *    "dispatches", a sequence of listeners and IDs that care about that event.
     *
     *  - The `EventPluginHub` then dispatches the events.
     *
     * Overview of React and the event system:
     *
     * +------------+    .
     * |    DOM     |    .
     * +------------+    .
     *       |           .
     *       v           .
     * +------------+    .
     * | ReactEvent |    .
     * |  Listener  |    .
     * +------------+    .                         +-----------+
     *       |           .               +--------+|SimpleEvent|
     *       |           .               |         |Plugin     |
     * +-----|------+    .               v         +-----------+
     * |     |      |    .    +--------------+                    +------------+
     * |     +-----------.--->|EventPluginHub|                    |    Event   |
     * |            |    .    |              |     +-----------+  | Propagators|
     * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
     * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
     * |            |    .    |              |     +-----------+  |  utilities |
     * |     +-----------.--->|              |                    +------------+
     * |     |      |    .    +--------------+
     * +-----|------+    .                ^        +-----------+
     *       |           .                |        |Enter/Leave|
     *       +           .                +-------+|Plugin     |
     * +-------------+   .                         +-----------+
     * | application |   .
     * |-------------|   .
     * |             |   .
     * |             |   .
     * +-------------+   .
     *                   .
     *    React Core     .  General Purpose Event Plugin System
     */


    var alreadyListeningTo = {};
    var reactTopListenersCounter = 0;
    /**
     * To ensure no conflicts with other potential React instances on the page
     */

    var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

    function getListeningForDocument(mountAt) {
      // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
      // directly.
      if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
        mountAt[topListenersIDKey] = reactTopListenersCounter++;
        alreadyListeningTo[mountAt[topListenersIDKey]] = {};
      }

      return alreadyListeningTo[mountAt[topListenersIDKey]];
    }
    /**
     * We listen for bubbled touch events on the document object.
     *
     * Firefox v8.01 (and possibly others) exhibited strange behavior when
     * mounting `onmousemove` events at some node that was not the document
     * element. The symptoms were that if your mouse is not moving over something
     * contained within that mount point (for example on the background) the
     * top-level listeners for `onmousemove` won't be called. However, if you
     * register the `mousemove` on the document object, then it will of course
     * catch all `mousemove`s. This along with iOS quirks, justifies restricting
     * top-level listeners to the document object only, at least for these
     * movement types of events and possibly all events.
     *
     * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
     *
     * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
     * they bubble to document.
     *
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @param {object} mountAt Container where to mount the listener
     */


    function listenTo(registrationName, mountAt) {
      var isListening = getListeningForDocument(mountAt);
      var dependencies = registrationNameDependencies[registrationName];

      for (var i = 0; i < dependencies.length; i++) {
        var dependency = dependencies[i];

        if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
          switch (dependency) {
            case TOP_SCROLL:
              trapCapturedEvent(TOP_SCROLL, mountAt);
              break;

            case TOP_FOCUS:
            case TOP_BLUR:
              trapCapturedEvent(TOP_FOCUS, mountAt);
              trapCapturedEvent(TOP_BLUR, mountAt); // We set the flag for a single dependency later in this function,
              // but this ensures we mark both as attached rather than just one.

              isListening[TOP_BLUR] = true;
              isListening[TOP_FOCUS] = true;
              break;

            case TOP_CANCEL:
            case TOP_CLOSE:
              if (isEventSupported(getRawEventName(dependency))) {
                trapCapturedEvent(dependency, mountAt);
              }

              break;

            case TOP_INVALID:
            case TOP_SUBMIT:
            case TOP_RESET:
              // We listen to them on the target DOM elements.
              // Some of them bubble so we don't want them to fire twice.
              break;

            default:
              // By default, listen on the top level to all non-media events.
              // Media events don't bubble so adding the listener wouldn't do anything.
              var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;

              if (!isMediaEvent) {
                trapBubbledEvent(dependency, mountAt);
              }

              break;
          }

          isListening[dependency] = true;
        }
      }
    }

    function isListeningToAllDependencies(registrationName, mountAt) {
      var isListening = getListeningForDocument(mountAt);
      var dependencies = registrationNameDependencies[registrationName];

      for (var i = 0; i < dependencies.length; i++) {
        var dependency = dependencies[i];

        if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
          return false;
        }
      }

      return true;
    }

    function getActiveElement(doc) {
      doc = doc || (typeof document !== 'undefined' ? document : undefined);

      if (typeof doc === 'undefined') {
        return null;
      }

      try {
        return doc.activeElement || doc.body;
      } catch (e) {
        return doc.body;
      }
    }
    /**
     * Given any node return the first leaf node without children.
     *
     * @param {DOMElement|DOMTextNode} node
     * @return {DOMElement|DOMTextNode}
     */


    function getLeafNode(node) {
      while (node && node.firstChild) {
        node = node.firstChild;
      }

      return node;
    }
    /**
     * Get the next sibling within a container. This will walk up the
     * DOM if a node's siblings have been exhausted.
     *
     * @param {DOMElement|DOMTextNode} node
     * @return {?DOMElement|DOMTextNode}
     */


    function getSiblingNode(node) {
      while (node) {
        if (node.nextSibling) {
          return node.nextSibling;
        }

        node = node.parentNode;
      }
    }
    /**
     * Get object describing the nodes which contain characters at offset.
     *
     * @param {DOMElement|DOMTextNode} root
     * @param {number} offset
     * @return {?object}
     */


    function getNodeForCharacterOffset(root, offset) {
      var node = getLeafNode(root);
      var nodeStart = 0;
      var nodeEnd = 0;

      while (node) {
        if (node.nodeType === TEXT_NODE) {
          nodeEnd = nodeStart + node.textContent.length;

          if (nodeStart <= offset && nodeEnd >= offset) {
            return {
              node: node,
              offset: offset - nodeStart
            };
          }

          nodeStart = nodeEnd;
        }

        node = getLeafNode(getSiblingNode(node));
      }
    }
    /**
     * @param {DOMElement} outerNode
     * @return {?object}
     */


    function getOffsets(outerNode) {
      var ownerDocument = outerNode.ownerDocument;
      var win = ownerDocument && ownerDocument.defaultView || window;
      var selection = win.getSelection && win.getSelection();

      if (!selection || selection.rangeCount === 0) {
        return null;
      }

      var anchorNode = selection.anchorNode,
          anchorOffset = selection.anchorOffset,
          focusNode = selection.focusNode,
          focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
      // up/down buttons on an <input type="number">. Anonymous divs do not seem to
      // expose properties, triggering a "Permission denied error" if any of its
      // properties are accessed. The only seemingly possible way to avoid erroring
      // is to access a property that typically works for non-anonymous divs and
      // catch any error that may otherwise arise. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

      try {
        /* eslint-disable no-unused-expressions */
        anchorNode.nodeType;
        focusNode.nodeType;
        /* eslint-enable no-unused-expressions */
      } catch (e) {
        return null;
      }

      return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
     * Returns {start, end} where `start` is the character/codepoint index of
     * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
     * `end` is the index of (focusNode, focusOffset).
     *
     * Returns null if you pass in garbage input but we should probably just crash.
     *
     * Exported only for testing.
     */


    function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
      var length = 0;
      var start = -1;
      var end = -1;
      var indexWithinAnchor = 0;
      var indexWithinFocus = 0;
      var node = outerNode;
      var parentNode = null;

      outer: while (true) {
        var next = null;

        while (true) {
          if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
            start = length + anchorOffset;
          }

          if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
            end = length + focusOffset;
          }

          if (node.nodeType === TEXT_NODE) {
            length += node.nodeValue.length;
          }

          if ((next = node.firstChild) === null) {
            break;
          } // Moving from `node` to its first child `next`.


          parentNode = node;
          node = next;
        }

        while (true) {
          if (node === outerNode) {
            // If `outerNode` has children, this is always the second time visiting
            // it. If it has no children, this is still the first loop, and the only
            // valid selection is anchorNode and focusNode both equal to this node
            // and both offsets 0, in which case we will have handled above.
            break outer;
          }

          if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
            start = length;
          }

          if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
            end = length;
          }

          if ((next = node.nextSibling) !== null) {
            break;
          }

          node = parentNode;
          parentNode = node.parentNode;
        } // Moving from `node` to its next sibling `next`.


        node = next;
      }

      if (start === -1 || end === -1) {
        // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
      }

      return {
        start: start,
        end: end
      };
    }
    /**
     * In modern non-IE browsers, we can support both forward and backward
     * selections.
     *
     * Note: IE10+ supports the Selection object, but it does not support
     * the `extend` method, which means that even in modern IE, it's not possible
     * to programmatically create a backward selection. Thus, for all IE
     * versions, we use the old IE API to create our selections.
     *
     * @param {DOMElement|DOMTextNode} node
     * @param {object} offsets
     */


    function setOffsets(node, offsets) {
      var doc = node.ownerDocument || document;
      var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
      // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
      // fails when pasting 100+ items)

      if (!win.getSelection) {
        return;
      }

      var selection = win.getSelection();
      var length = node.textContent.length;
      var start = Math.min(offsets.start, length);
      var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
      // Flip backward selections, so we can set with a single range.

      if (!selection.extend && start > end) {
        var temp = end;
        end = start;
        start = temp;
      }

      var startMarker = getNodeForCharacterOffset(node, start);
      var endMarker = getNodeForCharacterOffset(node, end);

      if (startMarker && endMarker) {
        if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
          return;
        }

        var range = doc.createRange();
        range.setStart(startMarker.node, startMarker.offset);
        selection.removeAllRanges();

        if (start > end) {
          selection.addRange(range);
          selection.extend(endMarker.node, endMarker.offset);
        } else {
          range.setEnd(endMarker.node, endMarker.offset);
          selection.addRange(range);
        }
      }
    }

    function isTextNode(node) {
      return node && node.nodeType === TEXT_NODE;
    }

    function containsNode(outerNode, innerNode) {
      if (!outerNode || !innerNode) {
        return false;
      } else if (outerNode === innerNode) {
        return true;
      } else if (isTextNode(outerNode)) {
        return false;
      } else if (isTextNode(innerNode)) {
        return containsNode(outerNode, innerNode.parentNode);
      } else if ('contains' in outerNode) {
        return outerNode.contains(innerNode);
      } else if (outerNode.compareDocumentPosition) {
        return !!(outerNode.compareDocumentPosition(innerNode) & 16);
      } else {
        return false;
      }
    }

    function isInDocument(node) {
      return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }

    function getActiveElementDeep() {
      var win = window;
      var element = getActiveElement();

      while (element instanceof win.HTMLIFrameElement) {
        // Accessing the contentDocument of a HTMLIframeElement can cause the browser
        // to throw, e.g. if it has a cross-origin src attribute
        try {
          win = element.contentDocument.defaultView;
        } catch (e) {
          return element;
        }

        element = getActiveElement(win.document);
      }

      return element;
    }
    /**
     * @ReactInputSelection: React input selection module. Based on Selection.js,
     * but modified to be suitable for react and has a couple of bug fixes (doesn't
     * assume buttons have range selections allowed).
     * Input selection module for React.
     */

    /**
     * @hasSelectionCapabilities: we get the element types that support selection
     * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
     * and `selectionEnd` rows.
     */


    function hasSelectionCapabilities(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
    }

    function getSelectionInformation() {
      var focusedElem = getActiveElementDeep();
      return {
        focusedElem: focusedElem,
        selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
      };
    }
    /**
     * @restoreSelection: If any selection information was potentially lost,
     * restore it. This is useful when performing operations that could remove dom
     * nodes and place them back in, resulting in focus being lost.
     */


    function restoreSelection(priorSelectionInformation) {
      var curFocusedElem = getActiveElementDeep();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;

      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
          setSelection(priorFocusedElem, priorSelectionRange);
        } // Focusing a node can change the scroll position, which is undesirable


        var ancestors = [];
        var ancestor = priorFocusedElem;

        while (ancestor = ancestor.parentNode) {
          if (ancestor.nodeType === ELEMENT_NODE) {
            ancestors.push({
              element: ancestor,
              left: ancestor.scrollLeft,
              top: ancestor.scrollTop
            });
          }
        }

        if (typeof priorFocusedElem.focus === 'function') {
          priorFocusedElem.focus();
        }

        for (var i = 0; i < ancestors.length; i++) {
          var info = ancestors[i];
          info.element.scrollLeft = info.left;
          info.element.scrollTop = info.top;
        }
      }
    }
    /**
     * @getSelection: Gets the selection bounds of a focused textarea, input or
     * contentEditable node.
     * -@input: Look up selection bounds of this input
     * -@return {start: selectionStart, end: selectionEnd}
     */


    function getSelection$1(input) {
      var selection = void 0;

      if ('selectionStart' in input) {
        // Modern browser with input or textarea.
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else {
        // Content editable or old IE textarea.
        selection = getOffsets(input);
      }

      return selection || {
        start: 0,
        end: 0
      };
    }
    /**
     * @setSelection: Sets the selection bounds of a textarea or input and focuses
     * the input.
     * -@input     Set selection bounds of this input or textarea
     * -@offsets   Object of same form that is returned from get*
     */


    function setSelection(input, offsets) {
      var start = offsets.start,
          end = offsets.end;

      if (end === undefined) {
        end = start;
      }

      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else {
        setOffsets(input, offsets);
      }
    }

    var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
    var eventTypes$3 = {
      select: {
        phasedRegistrationNames: {
          bubbled: 'onSelect',
          captured: 'onSelectCapture'
        },
        dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
      }
    };
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
     * Get an object which is a unique representation of the current selection.
     *
     * The return value will not be consistent across nodes or browsers, but
     * two identical selections on the same node will return identical objects.
     *
     * @param {DOMElement} node
     * @return {object}
     */

    function getSelection(node) {
      if ('selectionStart' in node && hasSelectionCapabilities(node)) {
        return {
          start: node.selectionStart,
          end: node.selectionEnd
        };
      } else {
        var win = node.ownerDocument && node.ownerDocument.defaultView || window;
        var selection = win.getSelection();
        return {
          anchorNode: selection.anchorNode,
          anchorOffset: selection.anchorOffset,
          focusNode: selection.focusNode,
          focusOffset: selection.focusOffset
        };
      }
    }
    /**
     * Get document associated with the event target.
     *
     * @param {object} nativeEventTarget
     * @return {Document}
     */


    function getEventTargetDocument(eventTarget) {
      return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
     * Poll selection to see whether it's changed.
     *
     * @param {object} nativeEvent
     * @param {object} nativeEventTarget
     * @return {?SyntheticEvent}
     */


    function constructSelectEvent(nativeEvent, nativeEventTarget) {
      // Ensure we have the right element, and that the user is not dragging a
      // selection (this matches native `select` event behavior). In HTML5, select
      // fires only on input and textarea thus if there's no focused element we
      // won't dispatch.
      var doc = getEventTargetDocument(nativeEventTarget);

      if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
        return null;
      } // Only fire when selection has actually changed.


      var currentSelection = getSelection(activeElement$1);

      if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
        lastSelection = currentSelection;
        var syntheticEvent = SyntheticEvent.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);
        syntheticEvent.type = 'select';
        syntheticEvent.target = activeElement$1;
        accumulateTwoPhaseDispatches(syntheticEvent);
        return syntheticEvent;
      }

      return null;
    }
    /**
     * This plugin creates an `onSelect` event that normalizes select events
     * across form elements.
     *
     * Supported elements are:
     * - input (see `isTextInputElement`)
     * - textarea
     * - contentEditable
     *
     * This differs from native browser implementations in the following ways:
     * - Fires on contentEditable fields as well as inputs.
     * - Fires for collapsed selection.
     * - Fires after user input.
     */


    var SelectEventPlugin = {
      eventTypes: eventTypes$3,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var doc = getEventTargetDocument(nativeEventTarget); // Track whether all listeners exists for this plugin. If none exist, we do
        // not extract events. See #3639.

        if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
          return null;
        }

        var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

        switch (topLevelType) {
          // Track the input node that has focus.
          case TOP_FOCUS:
            if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
              activeElement$1 = targetNode;
              activeElementInst$1 = targetInst;
              lastSelection = null;
            }

            break;

          case TOP_BLUR:
            activeElement$1 = null;
            activeElementInst$1 = null;
            lastSelection = null;
            break;
          // Don't fire the event while the user is dragging. This matches the
          // semantics of the native select event.

          case TOP_MOUSE_DOWN:
            mouseDown = true;
            break;

          case TOP_CONTEXT_MENU:
          case TOP_MOUSE_UP:
          case TOP_DRAG_END:
            mouseDown = false;
            return constructSelectEvent(nativeEvent, nativeEventTarget);
          // Chrome and IE fire non-standard event when selection is changed (and
          // sometimes when it hasn't). IE's event fires out of order with respect
          // to key and input events on deletion, so we discard it.
          //
          // Firefox doesn't support selectionchange, so check selection status
          // after each key entry. The selection changes after keydown and before
          // keyup, but we check on keydown as well in the case of holding down a
          // key, when multiple keydown events are fired but only one keyup is.
          // This is also our approach for IE handling, for the reason above.

          case TOP_SELECTION_CHANGE:
            if (skipSelectionChangeEvent) {
              break;
            }

          // falls through

          case TOP_KEY_DOWN:
          case TOP_KEY_UP:
            return constructSelectEvent(nativeEvent, nativeEventTarget);
        }

        return null;
      }
    };
    /**
     * Inject modules for resolving DOM hierarchy and plugin ordering.
     */

    injection.injectEventPluginOrder(DOMEventPluginOrder);
    setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);
    /**
     * Some important event plugins included by default (without having to require
     * them).
     */

    injection.injectEventPluginsByName({
      SimpleEventPlugin: SimpleEventPlugin,
      EnterLeaveEventPlugin: EnterLeaveEventPlugin,
      ChangeEventPlugin: ChangeEventPlugin,
      SelectEventPlugin: SelectEventPlugin,
      BeforeInputEventPlugin: BeforeInputEventPlugin
    });
    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;

    function flattenChildren(children) {
      var content = ''; // Flatten children. We'll warn if they are invalid
      // during validateProps() which runs for hydration too.
      // Note that this would throw on non-element objects.
      // Elements are stringified (which is normally irrelevant
      // but matters for <fbt>).

      React.Children.forEach(children, function (child) {
        if (child == null) {
          return;
        }

        content += child; // Note: we don't warn about invalid children here.
        // Instead, this is done separately below so that
        // it happens during the hydration codepath too.
      });
      return content;
    }
    /**
     * Implements an <option> host component that warns when `selected` is set.
     */


    function validateProps(element, props) {
      {
        // This mirrors the codepath above, but runs for hydration too.
        // Warn about invalid children here so that client and hydration are consistent.
        // TODO: this seems like it could cause a DEV-only throw for hydration
        // if children contains a non-element object. We should try to avoid that.
        if (typeof props.children === 'object' && props.children !== null) {
          React.Children.forEach(props.children, function (child) {
            if (child == null) {
              return;
            }

            if (typeof child === 'string' || typeof child === 'number') {
              return;
            }

            if (typeof child.type !== 'string') {
              return;
            }

            if (!didWarnInvalidChild) {
              didWarnInvalidChild = true;
              warning$1(false, 'Only strings and numbers are supported as <option> children.');
            }
          });
        } // TODO: Remove support for `selected` in <option>.


        if (props.selected != null && !didWarnSelectedSetOnOption) {
          warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
          didWarnSelectedSetOnOption = true;
        }
      }
    }

    function postMountWrapper$1(element, props) {
      // value="" should make a value attribute (#6219)
      if (props.value != null) {
        element.setAttribute('value', toString(getToStringValue(props.value)));
      }
    }

    function getHostProps$1(element, props) {
      var hostProps = _assign({
        children: undefined
      }, props);

      var content = flattenChildren(props.children);

      if (content) {
        hostProps.children = content;
      }

      return hostProps;
    } // TODO: direct imports like some-package/src/* are bad. Fix me.


    var didWarnValueDefaultValue$1 = void 0;
    {
      didWarnValueDefaultValue$1 = false;
    }

    function getDeclarationErrorAddendum() {
      var ownerName = getCurrentFiberOwnerNameInDevOrNull();

      if (ownerName) {
        return '\n\nCheck the render method of `' + ownerName + '`.';
      }

      return '';
    }

    var valuePropNames = ['value', 'defaultValue'];
    /**
     * Validation function for `value` and `defaultValue`.
     */

    function checkSelectPropTypes(props) {
      ReactControlledValuePropTypes.checkPropTypes('select', props);

      for (var i = 0; i < valuePropNames.length; i++) {
        var propName = valuePropNames[i];

        if (props[propName] == null) {
          continue;
        }

        var isArray = Array.isArray(props[propName]);

        if (props.multiple && !isArray) {
          warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
        } else if (!props.multiple && isArray) {
          warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
        }
      }
    }

    function updateOptions(node, multiple, propValue, setDefaultSelected) {
      var options = node.options;

      if (multiple) {
        var selectedValues = propValue;
        var selectedValue = {};

        for (var i = 0; i < selectedValues.length; i++) {
          // Prefix to avoid chaos with special keys.
          selectedValue['$' + selectedValues[i]] = true;
        }

        for (var _i = 0; _i < options.length; _i++) {
          var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

          if (options[_i].selected !== selected) {
            options[_i].selected = selected;
          }

          if (selected && setDefaultSelected) {
            options[_i].defaultSelected = true;
          }
        }
      } else {
        // Do not set `select.value` as exact behavior isn't consistent across all
        // browsers for all cases.
        var _selectedValue = toString(getToStringValue(propValue));

        var defaultSelected = null;

        for (var _i2 = 0; _i2 < options.length; _i2++) {
          if (options[_i2].value === _selectedValue) {
            options[_i2].selected = true;

            if (setDefaultSelected) {
              options[_i2].defaultSelected = true;
            }

            return;
          }

          if (defaultSelected === null && !options[_i2].disabled) {
            defaultSelected = options[_i2];
          }
        }

        if (defaultSelected !== null) {
          defaultSelected.selected = true;
        }
      }
    }
    /**
     * Implements a <select> host component that allows optionally setting the
     * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
     * stringable. If `multiple` is true, the prop must be an array of stringables.
     *
     * If `value` is not supplied (or null/undefined), user actions that change the
     * selected option will trigger updates to the rendered options.
     *
     * If it is supplied (and not null/undefined), the rendered options will not
     * update in response to user actions. Instead, the `value` prop must change in
     * order for the rendered options to update.
     *
     * If `defaultValue` is provided, any options with the supplied values will be
     * selected.
     */


    function getHostProps$2(element, props) {
      return _assign({}, props, {
        value: undefined
      });
    }

    function initWrapperState$1(element, props) {
      var node = element;
      {
        checkSelectPropTypes(props);
      }
      node._wrapperState = {
        wasMultiple: !!props.multiple
      };
      {
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
          warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
          didWarnValueDefaultValue$1 = true;
        }
      }
    }

    function postMountWrapper$2(element, props) {
      var node = element;
      node.multiple = !!props.multiple;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      } else if (props.defaultValue != null) {
        updateOptions(node, !!props.multiple, props.defaultValue, true);
      }
    }

    function postUpdateWrapper(element, props) {
      var node = element;
      var wasMultiple = node._wrapperState.wasMultiple;
      node._wrapperState.wasMultiple = !!props.multiple;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      } else if (wasMultiple !== !!props.multiple) {
        // For simplicity, reapply `defaultValue` if `multiple` is toggled.
        if (props.defaultValue != null) {
          updateOptions(node, !!props.multiple, props.defaultValue, true);
        } else {
          // Revert the select back to its default unselected state.
          updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
        }
      }
    }

    function restoreControlledState$2(element, props) {
      var node = element;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      }
    }

    var didWarnValDefaultVal = false;
    /**
     * Implements a <textarea> host component that allows setting `value`, and
     * `defaultValue`. This differs from the traditional DOM API because value is
     * usually set as PCDATA children.
     *
     * If `value` is not supplied (or null/undefined), user actions that affect the
     * value will trigger updates to the element.
     *
     * If `value` is supplied (and not null/undefined), the rendered element will
     * not trigger updates to the element. Instead, the `value` prop must change in
     * order for the rendered element to be updated.
     *
     * The rendered element will be initialized with an empty value, the prop
     * `defaultValue` if specified, or the children content (deprecated).
     */

    function getHostProps$3(element, props) {
      var node = element;
      !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0; // Always set children to the same thing. In IE9, the selection range will
      // get reset if `textContent` is mutated.  We could add a check in setTextContent
      // to only set the value if/when the value differs from the node value (which would
      // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
      // solution. The value can be a boolean or object so that's why it's forced
      // to be a string.

      var hostProps = _assign({}, props, {
        value: undefined,
        defaultValue: undefined,
        children: toString(node._wrapperState.initialValue)
      });

      return hostProps;
    }

    function initWrapperState$2(element, props) {
      var node = element;
      {
        ReactControlledValuePropTypes.checkPropTypes('textarea', props);

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
          warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnValDefaultVal = true;
        }
      }
      var initialValue = props.value; // Only bother fetching default value if we're going to use it

      if (initialValue == null) {
        var defaultValue = props.defaultValue; // TODO (yungsters): Remove support for children content in <textarea>.

        var children = props.children;

        if (children != null) {
          {
            warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
          }
          !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;

          if (Array.isArray(children)) {
            !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
            children = children[0];
          }

          defaultValue = children;
        }

        if (defaultValue == null) {
          defaultValue = '';
        }

        initialValue = defaultValue;
      }

      node._wrapperState = {
        initialValue: getToStringValue(initialValue)
      };
    }

    function updateWrapper$1(element, props) {
      var node = element;
      var value = getToStringValue(props.value);
      var defaultValue = getToStringValue(props.defaultValue);

      if (value != null) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

        if (newValue !== node.value) {
          node.value = newValue;
        }

        if (props.defaultValue == null && node.defaultValue !== newValue) {
          node.defaultValue = newValue;
        }
      }

      if (defaultValue != null) {
        node.defaultValue = toString(defaultValue);
      }
    }

    function postMountWrapper$3(element, props) {
      var node = element; // This is in postMount because we need access to the DOM node, which is not
      // available until after the component has mounted.

      var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
      // initial value. In IE10/IE11 there is a bug where the placeholder attribute
      // will populate textContent as well.
      // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

      if (textContent === node._wrapperState.initialValue) {
        node.value = textContent;
      }
    }

    function restoreControlledState$3(element, props) {
      // DOM component is still mounted; update
      updateWrapper$1(element, props);
    }

    var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
    var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
    var Namespaces = {
      html: HTML_NAMESPACE$1,
      mathml: MATH_NAMESPACE,
      svg: SVG_NAMESPACE
    }; // Assumes there is no parent namespace.

    function getIntrinsicNamespace(type) {
      switch (type) {
        case 'svg':
          return SVG_NAMESPACE;

        case 'math':
          return MATH_NAMESPACE;

        default:
          return HTML_NAMESPACE$1;
      }
    }

    function getChildNamespace(parentNamespace, type) {
      if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
        // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
      }

      if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
        // We're leaving SVG.
        return HTML_NAMESPACE$1;
      } // By default, pass namespace below.


      return parentNamespace;
    }
    /* globals MSApp */

    /**
     * Create a function which has 'unsafe' privileges (required by windows8 apps)
     */


    var createMicrosoftUnsafeLocalFunction = function (func) {
      if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
        return function (arg0, arg1, arg2, arg3) {
          MSApp.execUnsafeLocalFunction(function () {
            return func(arg0, arg1, arg2, arg3);
          });
        };
      } else {
        return func;
      }
    }; // SVG temp container for IE lacking innerHTML


    var reusableSVGContainer = void 0;
    /**
     * Set the innerHTML property of a node
     *
     * @param {DOMElement} node
     * @param {string} html
     * @internal
     */

    var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
      // IE does not have innerHTML for SVG nodes, so instead we inject the
      // new markup in a temp node and then move the child nodes across into
      // the target node
      if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
        reusableSVGContainer = reusableSVGContainer || document.createElement('div');
        reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
        var svgNode = reusableSVGContainer.firstChild;

        while (node.firstChild) {
          node.removeChild(node.firstChild);
        }

        while (svgNode.firstChild) {
          node.appendChild(svgNode.firstChild);
        }
      } else {
        node.innerHTML = html;
      }
    });
    /**
     * Set the textContent property of a node. For text updates, it's faster
     * to set the `nodeValue` of the Text node directly instead of using
     * `.textContent` which will remove the existing node and create a new one.
     *
     * @param {DOMElement} node
     * @param {string} text
     * @internal
     */

    var setTextContent = function (node, text) {
      if (text) {
        var firstChild = node.firstChild;

        if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
          firstChild.nodeValue = text;
          return;
        }
      }

      node.textContent = text;
    }; // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js


    var shorthandToLonghand = {
      animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
      background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
      backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
      border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
      borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
      borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
      borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
      borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
      borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
      borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
      borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
      borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
      borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
      borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
      borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
      borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
      borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
      columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
      columns: ['columnCount', 'columnWidth'],
      flex: ['flexBasis', 'flexGrow', 'flexShrink'],
      flexFlow: ['flexDirection', 'flexWrap'],
      font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
      fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
      gap: ['columnGap', 'rowGap'],
      grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
      gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
      gridColumn: ['gridColumnEnd', 'gridColumnStart'],
      gridColumnGap: ['columnGap'],
      gridGap: ['columnGap', 'rowGap'],
      gridRow: ['gridRowEnd', 'gridRowStart'],
      gridRowGap: ['rowGap'],
      gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
      listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
      margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
      marker: ['markerEnd', 'markerMid', 'markerStart'],
      mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
      maskPosition: ['maskPositionX', 'maskPositionY'],
      outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
      overflow: ['overflowX', 'overflowY'],
      padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
      placeContent: ['alignContent', 'justifyContent'],
      placeItems: ['alignItems', 'justifyItems'],
      placeSelf: ['alignSelf', 'justifySelf'],
      textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
      textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
      transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
      wordWrap: ['overflowWrap']
    };
    /**
     * CSS properties which accept numbers but are not in units of "px".
     */

    var isUnitlessNumber = {
      animationIterationCount: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      columns: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridArea: true,
      gridRow: true,
      gridRowEnd: true,
      gridRowSpan: true,
      gridRowStart: true,
      gridColumn: true,
      gridColumnEnd: true,
      gridColumnSpan: true,
      gridColumnStart: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      // SVG-related properties
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true
    };
    /**
     * @param {string} prefix vendor-specific prefix, eg: Webkit
     * @param {string} key style name, eg: transitionDuration
     * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
     * WebkitTransitionDuration
     */

    function prefixKey(prefix, key) {
      return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
     * Support style names that may come passed in prefixed by adding permutations
     * of vendor prefixes.
     */


    var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.

    Object.keys(isUnitlessNumber).forEach(function (prop) {
      prefixes.forEach(function (prefix) {
        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
      });
    });
    /**
     * Convert a value into the proper css writable value. The style name `name`
     * should be logical (no hyphens), as specified
     * in `CSSProperty.isUnitlessNumber`.
     *
     * @param {string} name CSS property name such as `topMargin`.
     * @param {*} value CSS property value such as `10px`.
     * @return {string} Normalized style value with dimensions applied.
     */

    function dangerousStyleValue(name, value, isCustomProperty) {
      // Note that we've removed escapeTextForBrowser() calls here since the
      // whole string will be escaped when the attribute is injected into
      // the markup. If you provide unsafe user data here they can inject
      // arbitrary CSS which may be problematic (I couldn't repro this):
      // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
      // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
      // This is not an XSS hole but instead a potential CSS injection issue
      // which has lead to a greater discussion about how we're going to
      // trust URLs moving forward. See #2115901
      var isEmpty = value == null || typeof value === 'boolean' || value === '';

      if (isEmpty) {
        return '';
      }

      if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
        return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
      }

      return ('' + value).trim();
    }

    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
     * Hyphenates a camelcased CSS property name, for example:
     *
     *   > hyphenateStyleName('backgroundColor')
     *   < "background-color"
     *   > hyphenateStyleName('MozTransition')
     *   < "-moz-transition"
     *   > hyphenateStyleName('msTransition')
     *   < "-ms-transition"
     *
     * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
     * is converted to `-ms-`.
     */

    function hyphenateStyleName(name) {
      return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
    }

    var warnValidStyle = function () {};

    {
      // 'msTransform' is correct, but the other prefixes should be capitalized
      var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
      var msPattern$1 = /^-ms-/;
      var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

      var badStyleValueWithSemicolonPattern = /;\s*$/;
      var warnedStyleNames = {};
      var warnedStyleValues = {};
      var warnedForNaNValue = false;
      var warnedForInfinityValue = false;

      var camelize = function (string) {
        return string.replace(hyphenPattern, function (_, character) {
          return character.toUpperCase();
        });
      };

      var warnHyphenatedStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }

        warnedStyleNames[name] = true;
        warning$1(false, 'Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
        // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, 'ms-')));
      };

      var warnBadVendoredStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }

        warnedStyleNames[name] = true;
        warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
      };

      var warnStyleValueWithSemicolon = function (name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
          return;
        }

        warnedStyleValues[value] = true;
        warning$1(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
      };

      var warnStyleValueIsNaN = function (name, value) {
        if (warnedForNaNValue) {
          return;
        }

        warnedForNaNValue = true;
        warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);
      };

      var warnStyleValueIsInfinity = function (name, value) {
        if (warnedForInfinityValue) {
          return;
        }

        warnedForInfinityValue = true;
        warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);
      };

      warnValidStyle = function (name, value) {
        if (name.indexOf('-') > -1) {
          warnHyphenatedStyleName(name);
        } else if (badVendoredStyleNamePattern.test(name)) {
          warnBadVendoredStyleName(name);
        } else if (badStyleValueWithSemicolonPattern.test(value)) {
          warnStyleValueWithSemicolon(name, value);
        }

        if (typeof value === 'number') {
          if (isNaN(value)) {
            warnStyleValueIsNaN(name, value);
          } else if (!isFinite(value)) {
            warnStyleValueIsInfinity(name, value);
          }
        }
      };
    }
    var warnValidStyle$1 = warnValidStyle;
    /**
     * Operations for dealing with CSS properties.
     */

    /**
     * This creates a string that is expected to be equivalent to the style
     * attribute generated by server-side rendering. It by-passes warnings and
     * security checks so it's not safe to use this value for anything other than
     * comparison. It is only used in DEV for SSR validation.
     */

    function createDangerousStringForStyles(styles) {
      {
        var serialized = '';
        var delimiter = '';

        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }

          var styleValue = styles[styleName];

          if (styleValue != null) {
            var isCustomProperty = styleName.indexOf('--') === 0;
            serialized += delimiter + hyphenateStyleName(styleName) + ':';
            serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
            delimiter = ';';
          }
        }

        return serialized || null;
      }
    }
    /**
     * Sets the value for multiple styles on a node.  If a value is specified as
     * '' (empty string), the corresponding style property will be unset.
     *
     * @param {DOMElement} node
     * @param {object} styles
     */


    function setValueForStyles(node, styles) {
      var style = node.style;

      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }

        var isCustomProperty = styleName.indexOf('--') === 0;
        {
          if (!isCustomProperty) {
            warnValidStyle$1(styleName, styles[styleName]);
          }
        }
        var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

        if (styleName === 'float') {
          styleName = 'cssFloat';
        }

        if (isCustomProperty) {
          style.setProperty(styleName, styleValue);
        } else {
          style[styleName] = styleValue;
        }
      }
    }

    function isValueEmpty(value) {
      return value == null || typeof value === 'boolean' || value === '';
    }
    /**
     * Given {color: 'red', overflow: 'hidden'} returns {
     *   color: 'color',
     *   overflowX: 'overflow',
     *   overflowY: 'overflow',
     * }. This can be read as "the overflowY property was set by the overflow
     * shorthand". That is, the values are the property that each was derived from.
     */


    function expandShorthandMap(styles) {
      var expanded = {};

      for (var key in styles) {
        var longhands = shorthandToLonghand[key] || [key];

        for (var i = 0; i < longhands.length; i++) {
          expanded[longhands[i]] = key;
        }
      }

      return expanded;
    }
    /**
     * When mixing shorthand and longhand property names, we warn during updates if
     * we expect an incorrect result to occur. In particular, we warn for:
     *
     * Updating a shorthand property (longhand gets overwritten):
     *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
     *   becomes .style.font = 'baz'
     * Removing a shorthand property (longhand gets lost too):
     *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
     *   becomes .style.font = ''
     * Removing a longhand property (should revert to shorthand; doesn't):
     *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
     *   becomes .style.fontVariant = ''
     */


    function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
      if (!warnAboutShorthandPropertyCollision) {
        return;
      }

      if (!nextStyles) {
        return;
      }

      var expandedUpdates = expandShorthandMap(styleUpdates);
      var expandedStyles = expandShorthandMap(nextStyles);
      var warnedAbout = {};

      for (var key in expandedUpdates) {
        var originalKey = expandedUpdates[key];
        var correctOriginalKey = expandedStyles[key];

        if (correctOriginalKey && originalKey !== correctOriginalKey) {
          var warningKey = originalKey + ',' + correctOriginalKey;

          if (warnedAbout[warningKey]) {
            continue;
          }

          warnedAbout[warningKey] = true;
          warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
        }
      }
    } // For HTML, certain tags should omit their close tag. We keep a whitelist for
    // those special-case tags.


    var omittedCloseTags = {
      area: true,
      base: true,
      br: true,
      col: true,
      embed: true,
      hr: true,
      img: true,
      input: true,
      keygen: true,
      link: true,
      meta: true,
      param: true,
      source: true,
      track: true,
      wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

    }; // For HTML, certain tags cannot have children. This has the same purpose as
    // `omittedCloseTags` except that `menuitem` should still have its closing tag.

    var voidElementTags = _assign({
      menuitem: true
    }, omittedCloseTags); // TODO: We can remove this if we add invariantWithStack()
    // or add stack by default to invariants where possible.


    var HTML$1 = '__html';
    var ReactDebugCurrentFrame$2 = null;
    {
      ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;
    }

    function assertValidProps(tag, props) {
      if (!props) {
        return;
      } // Note the use of `==` which checks for null or undefined.


      if (voidElementTags[tag]) {
        !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;
      }

      if (props.dangerouslySetInnerHTML != null) {
        !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
        !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
      }

      {
        !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
      }
      !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;
    }

    function isCustomComponent(tagName, props) {
      if (tagName.indexOf('-') === -1) {
        return typeof props.is === 'string';
      }

      switch (tagName) {
        // These are reserved SVG and MathML elements.
        // We don't mind this whitelist too much because we expect it to never grow.
        // The alternative is to track the namespace in a few places which is convoluted.
        // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
        case 'annotation-xml':
        case 'color-profile':
        case 'font-face':
        case 'font-face-src':
        case 'font-face-uri':
        case 'font-face-format':
        case 'font-face-name':
        case 'missing-glyph':
          return false;

        default:
          return true;
      }
    } // When adding attributes to the HTML or SVG whitelist, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.


    var possibleStandardNames = {
      // HTML
      accept: 'accept',
      acceptcharset: 'acceptCharset',
      'accept-charset': 'acceptCharset',
      accesskey: 'accessKey',
      action: 'action',
      allowfullscreen: 'allowFullScreen',
      alt: 'alt',
      as: 'as',
      async: 'async',
      autocapitalize: 'autoCapitalize',
      autocomplete: 'autoComplete',
      autocorrect: 'autoCorrect',
      autofocus: 'autoFocus',
      autoplay: 'autoPlay',
      autosave: 'autoSave',
      capture: 'capture',
      cellpadding: 'cellPadding',
      cellspacing: 'cellSpacing',
      challenge: 'challenge',
      charset: 'charSet',
      checked: 'checked',
      children: 'children',
      cite: 'cite',
      class: 'className',
      classid: 'classID',
      classname: 'className',
      cols: 'cols',
      colspan: 'colSpan',
      content: 'content',
      contenteditable: 'contentEditable',
      contextmenu: 'contextMenu',
      controls: 'controls',
      controlslist: 'controlsList',
      coords: 'coords',
      crossorigin: 'crossOrigin',
      dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
      data: 'data',
      datetime: 'dateTime',
      default: 'default',
      defaultchecked: 'defaultChecked',
      defaultvalue: 'defaultValue',
      defer: 'defer',
      dir: 'dir',
      disabled: 'disabled',
      download: 'download',
      draggable: 'draggable',
      enctype: 'encType',
      for: 'htmlFor',
      form: 'form',
      formmethod: 'formMethod',
      formaction: 'formAction',
      formenctype: 'formEncType',
      formnovalidate: 'formNoValidate',
      formtarget: 'formTarget',
      frameborder: 'frameBorder',
      headers: 'headers',
      height: 'height',
      hidden: 'hidden',
      high: 'high',
      href: 'href',
      hreflang: 'hrefLang',
      htmlfor: 'htmlFor',
      httpequiv: 'httpEquiv',
      'http-equiv': 'httpEquiv',
      icon: 'icon',
      id: 'id',
      innerhtml: 'innerHTML',
      inputmode: 'inputMode',
      integrity: 'integrity',
      is: 'is',
      itemid: 'itemID',
      itemprop: 'itemProp',
      itemref: 'itemRef',
      itemscope: 'itemScope',
      itemtype: 'itemType',
      keyparams: 'keyParams',
      keytype: 'keyType',
      kind: 'kind',
      label: 'label',
      lang: 'lang',
      list: 'list',
      loop: 'loop',
      low: 'low',
      manifest: 'manifest',
      marginwidth: 'marginWidth',
      marginheight: 'marginHeight',
      max: 'max',
      maxlength: 'maxLength',
      media: 'media',
      mediagroup: 'mediaGroup',
      method: 'method',
      min: 'min',
      minlength: 'minLength',
      multiple: 'multiple',
      muted: 'muted',
      name: 'name',
      nomodule: 'noModule',
      nonce: 'nonce',
      novalidate: 'noValidate',
      open: 'open',
      optimum: 'optimum',
      pattern: 'pattern',
      placeholder: 'placeholder',
      playsinline: 'playsInline',
      poster: 'poster',
      preload: 'preload',
      profile: 'profile',
      radiogroup: 'radioGroup',
      readonly: 'readOnly',
      referrerpolicy: 'referrerPolicy',
      rel: 'rel',
      required: 'required',
      reversed: 'reversed',
      role: 'role',
      rows: 'rows',
      rowspan: 'rowSpan',
      sandbox: 'sandbox',
      scope: 'scope',
      scoped: 'scoped',
      scrolling: 'scrolling',
      seamless: 'seamless',
      selected: 'selected',
      shape: 'shape',
      size: 'size',
      sizes: 'sizes',
      span: 'span',
      spellcheck: 'spellCheck',
      src: 'src',
      srcdoc: 'srcDoc',
      srclang: 'srcLang',
      srcset: 'srcSet',
      start: 'start',
      step: 'step',
      style: 'style',
      summary: 'summary',
      tabindex: 'tabIndex',
      target: 'target',
      title: 'title',
      type: 'type',
      usemap: 'useMap',
      value: 'value',
      width: 'width',
      wmode: 'wmode',
      wrap: 'wrap',
      // SVG
      about: 'about',
      accentheight: 'accentHeight',
      'accent-height': 'accentHeight',
      accumulate: 'accumulate',
      additive: 'additive',
      alignmentbaseline: 'alignmentBaseline',
      'alignment-baseline': 'alignmentBaseline',
      allowreorder: 'allowReorder',
      alphabetic: 'alphabetic',
      amplitude: 'amplitude',
      arabicform: 'arabicForm',
      'arabic-form': 'arabicForm',
      ascent: 'ascent',
      attributename: 'attributeName',
      attributetype: 'attributeType',
      autoreverse: 'autoReverse',
      azimuth: 'azimuth',
      basefrequency: 'baseFrequency',
      baselineshift: 'baselineShift',
      'baseline-shift': 'baselineShift',
      baseprofile: 'baseProfile',
      bbox: 'bbox',
      begin: 'begin',
      bias: 'bias',
      by: 'by',
      calcmode: 'calcMode',
      capheight: 'capHeight',
      'cap-height': 'capHeight',
      clip: 'clip',
      clippath: 'clipPath',
      'clip-path': 'clipPath',
      clippathunits: 'clipPathUnits',
      cliprule: 'clipRule',
      'clip-rule': 'clipRule',
      color: 'color',
      colorinterpolation: 'colorInterpolation',
      'color-interpolation': 'colorInterpolation',
      colorinterpolationfilters: 'colorInterpolationFilters',
      'color-interpolation-filters': 'colorInterpolationFilters',
      colorprofile: 'colorProfile',
      'color-profile': 'colorProfile',
      colorrendering: 'colorRendering',
      'color-rendering': 'colorRendering',
      contentscripttype: 'contentScriptType',
      contentstyletype: 'contentStyleType',
      cursor: 'cursor',
      cx: 'cx',
      cy: 'cy',
      d: 'd',
      datatype: 'datatype',
      decelerate: 'decelerate',
      descent: 'descent',
      diffuseconstant: 'diffuseConstant',
      direction: 'direction',
      display: 'display',
      divisor: 'divisor',
      dominantbaseline: 'dominantBaseline',
      'dominant-baseline': 'dominantBaseline',
      dur: 'dur',
      dx: 'dx',
      dy: 'dy',
      edgemode: 'edgeMode',
      elevation: 'elevation',
      enablebackground: 'enableBackground',
      'enable-background': 'enableBackground',
      end: 'end',
      exponent: 'exponent',
      externalresourcesrequired: 'externalResourcesRequired',
      fill: 'fill',
      fillopacity: 'fillOpacity',
      'fill-opacity': 'fillOpacity',
      fillrule: 'fillRule',
      'fill-rule': 'fillRule',
      filter: 'filter',
      filterres: 'filterRes',
      filterunits: 'filterUnits',
      floodopacity: 'floodOpacity',
      'flood-opacity': 'floodOpacity',
      floodcolor: 'floodColor',
      'flood-color': 'floodColor',
      focusable: 'focusable',
      fontfamily: 'fontFamily',
      'font-family': 'fontFamily',
      fontsize: 'fontSize',
      'font-size': 'fontSize',
      fontsizeadjust: 'fontSizeAdjust',
      'font-size-adjust': 'fontSizeAdjust',
      fontstretch: 'fontStretch',
      'font-stretch': 'fontStretch',
      fontstyle: 'fontStyle',
      'font-style': 'fontStyle',
      fontvariant: 'fontVariant',
      'font-variant': 'fontVariant',
      fontweight: 'fontWeight',
      'font-weight': 'fontWeight',
      format: 'format',
      from: 'from',
      fx: 'fx',
      fy: 'fy',
      g1: 'g1',
      g2: 'g2',
      glyphname: 'glyphName',
      'glyph-name': 'glyphName',
      glyphorientationhorizontal: 'glyphOrientationHorizontal',
      'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
      glyphorientationvertical: 'glyphOrientationVertical',
      'glyph-orientation-vertical': 'glyphOrientationVertical',
      glyphref: 'glyphRef',
      gradienttransform: 'gradientTransform',
      gradientunits: 'gradientUnits',
      hanging: 'hanging',
      horizadvx: 'horizAdvX',
      'horiz-adv-x': 'horizAdvX',
      horizoriginx: 'horizOriginX',
      'horiz-origin-x': 'horizOriginX',
      ideographic: 'ideographic',
      imagerendering: 'imageRendering',
      'image-rendering': 'imageRendering',
      in2: 'in2',
      in: 'in',
      inlist: 'inlist',
      intercept: 'intercept',
      k1: 'k1',
      k2: 'k2',
      k3: 'k3',
      k4: 'k4',
      k: 'k',
      kernelmatrix: 'kernelMatrix',
      kernelunitlength: 'kernelUnitLength',
      kerning: 'kerning',
      keypoints: 'keyPoints',
      keysplines: 'keySplines',
      keytimes: 'keyTimes',
      lengthadjust: 'lengthAdjust',
      letterspacing: 'letterSpacing',
      'letter-spacing': 'letterSpacing',
      lightingcolor: 'lightingColor',
      'lighting-color': 'lightingColor',
      limitingconeangle: 'limitingConeAngle',
      local: 'local',
      markerend: 'markerEnd',
      'marker-end': 'markerEnd',
      markerheight: 'markerHeight',
      markermid: 'markerMid',
      'marker-mid': 'markerMid',
      markerstart: 'markerStart',
      'marker-start': 'markerStart',
      markerunits: 'markerUnits',
      markerwidth: 'markerWidth',
      mask: 'mask',
      maskcontentunits: 'maskContentUnits',
      maskunits: 'maskUnits',
      mathematical: 'mathematical',
      mode: 'mode',
      numoctaves: 'numOctaves',
      offset: 'offset',
      opacity: 'opacity',
      operator: 'operator',
      order: 'order',
      orient: 'orient',
      orientation: 'orientation',
      origin: 'origin',
      overflow: 'overflow',
      overlineposition: 'overlinePosition',
      'overline-position': 'overlinePosition',
      overlinethickness: 'overlineThickness',
      'overline-thickness': 'overlineThickness',
      paintorder: 'paintOrder',
      'paint-order': 'paintOrder',
      panose1: 'panose1',
      'panose-1': 'panose1',
      pathlength: 'pathLength',
      patterncontentunits: 'patternContentUnits',
      patterntransform: 'patternTransform',
      patternunits: 'patternUnits',
      pointerevents: 'pointerEvents',
      'pointer-events': 'pointerEvents',
      points: 'points',
      pointsatx: 'pointsAtX',
      pointsaty: 'pointsAtY',
      pointsatz: 'pointsAtZ',
      prefix: 'prefix',
      preservealpha: 'preserveAlpha',
      preserveaspectratio: 'preserveAspectRatio',
      primitiveunits: 'primitiveUnits',
      property: 'property',
      r: 'r',
      radius: 'radius',
      refx: 'refX',
      refy: 'refY',
      renderingintent: 'renderingIntent',
      'rendering-intent': 'renderingIntent',
      repeatcount: 'repeatCount',
      repeatdur: 'repeatDur',
      requiredextensions: 'requiredExtensions',
      requiredfeatures: 'requiredFeatures',
      resource: 'resource',
      restart: 'restart',
      result: 'result',
      results: 'results',
      rotate: 'rotate',
      rx: 'rx',
      ry: 'ry',
      scale: 'scale',
      security: 'security',
      seed: 'seed',
      shaperendering: 'shapeRendering',
      'shape-rendering': 'shapeRendering',
      slope: 'slope',
      spacing: 'spacing',
      specularconstant: 'specularConstant',
      specularexponent: 'specularExponent',
      speed: 'speed',
      spreadmethod: 'spreadMethod',
      startoffset: 'startOffset',
      stddeviation: 'stdDeviation',
      stemh: 'stemh',
      stemv: 'stemv',
      stitchtiles: 'stitchTiles',
      stopcolor: 'stopColor',
      'stop-color': 'stopColor',
      stopopacity: 'stopOpacity',
      'stop-opacity': 'stopOpacity',
      strikethroughposition: 'strikethroughPosition',
      'strikethrough-position': 'strikethroughPosition',
      strikethroughthickness: 'strikethroughThickness',
      'strikethrough-thickness': 'strikethroughThickness',
      string: 'string',
      stroke: 'stroke',
      strokedasharray: 'strokeDasharray',
      'stroke-dasharray': 'strokeDasharray',
      strokedashoffset: 'strokeDashoffset',
      'stroke-dashoffset': 'strokeDashoffset',
      strokelinecap: 'strokeLinecap',
      'stroke-linecap': 'strokeLinecap',
      strokelinejoin: 'strokeLinejoin',
      'stroke-linejoin': 'strokeLinejoin',
      strokemiterlimit: 'strokeMiterlimit',
      'stroke-miterlimit': 'strokeMiterlimit',
      strokewidth: 'strokeWidth',
      'stroke-width': 'strokeWidth',
      strokeopacity: 'strokeOpacity',
      'stroke-opacity': 'strokeOpacity',
      suppresscontenteditablewarning: 'suppressContentEditableWarning',
      suppresshydrationwarning: 'suppressHydrationWarning',
      surfacescale: 'surfaceScale',
      systemlanguage: 'systemLanguage',
      tablevalues: 'tableValues',
      targetx: 'targetX',
      targety: 'targetY',
      textanchor: 'textAnchor',
      'text-anchor': 'textAnchor',
      textdecoration: 'textDecoration',
      'text-decoration': 'textDecoration',
      textlength: 'textLength',
      textrendering: 'textRendering',
      'text-rendering': 'textRendering',
      to: 'to',
      transform: 'transform',
      typeof: 'typeof',
      u1: 'u1',
      u2: 'u2',
      underlineposition: 'underlinePosition',
      'underline-position': 'underlinePosition',
      underlinethickness: 'underlineThickness',
      'underline-thickness': 'underlineThickness',
      unicode: 'unicode',
      unicodebidi: 'unicodeBidi',
      'unicode-bidi': 'unicodeBidi',
      unicoderange: 'unicodeRange',
      'unicode-range': 'unicodeRange',
      unitsperem: 'unitsPerEm',
      'units-per-em': 'unitsPerEm',
      unselectable: 'unselectable',
      valphabetic: 'vAlphabetic',
      'v-alphabetic': 'vAlphabetic',
      values: 'values',
      vectoreffect: 'vectorEffect',
      'vector-effect': 'vectorEffect',
      version: 'version',
      vertadvy: 'vertAdvY',
      'vert-adv-y': 'vertAdvY',
      vertoriginx: 'vertOriginX',
      'vert-origin-x': 'vertOriginX',
      vertoriginy: 'vertOriginY',
      'vert-origin-y': 'vertOriginY',
      vhanging: 'vHanging',
      'v-hanging': 'vHanging',
      videographic: 'vIdeographic',
      'v-ideographic': 'vIdeographic',
      viewbox: 'viewBox',
      viewtarget: 'viewTarget',
      visibility: 'visibility',
      vmathematical: 'vMathematical',
      'v-mathematical': 'vMathematical',
      vocab: 'vocab',
      widths: 'widths',
      wordspacing: 'wordSpacing',
      'word-spacing': 'wordSpacing',
      writingmode: 'writingMode',
      'writing-mode': 'writingMode',
      x1: 'x1',
      x2: 'x2',
      x: 'x',
      xchannelselector: 'xChannelSelector',
      xheight: 'xHeight',
      'x-height': 'xHeight',
      xlinkactuate: 'xlinkActuate',
      'xlink:actuate': 'xlinkActuate',
      xlinkarcrole: 'xlinkArcrole',
      'xlink:arcrole': 'xlinkArcrole',
      xlinkhref: 'xlinkHref',
      'xlink:href': 'xlinkHref',
      xlinkrole: 'xlinkRole',
      'xlink:role': 'xlinkRole',
      xlinkshow: 'xlinkShow',
      'xlink:show': 'xlinkShow',
      xlinktitle: 'xlinkTitle',
      'xlink:title': 'xlinkTitle',
      xlinktype: 'xlinkType',
      'xlink:type': 'xlinkType',
      xmlbase: 'xmlBase',
      'xml:base': 'xmlBase',
      xmllang: 'xmlLang',
      'xml:lang': 'xmlLang',
      xmlns: 'xmlns',
      'xml:space': 'xmlSpace',
      xmlnsxlink: 'xmlnsXlink',
      'xmlns:xlink': 'xmlnsXlink',
      xmlspace: 'xmlSpace',
      y1: 'y1',
      y2: 'y2',
      y: 'y',
      ychannelselector: 'yChannelSelector',
      z: 'z',
      zoomandpan: 'zoomAndPan'
    };
    var ariaProperties = {
      'aria-current': 0,
      // state
      'aria-details': 0,
      'aria-disabled': 0,
      // state
      'aria-hidden': 0,
      // state
      'aria-invalid': 0,
      // state
      'aria-keyshortcuts': 0,
      'aria-label': 0,
      'aria-roledescription': 0,
      // Widget Attributes
      'aria-autocomplete': 0,
      'aria-checked': 0,
      'aria-expanded': 0,
      'aria-haspopup': 0,
      'aria-level': 0,
      'aria-modal': 0,
      'aria-multiline': 0,
      'aria-multiselectable': 0,
      'aria-orientation': 0,
      'aria-placeholder': 0,
      'aria-pressed': 0,
      'aria-readonly': 0,
      'aria-required': 0,
      'aria-selected': 0,
      'aria-sort': 0,
      'aria-valuemax': 0,
      'aria-valuemin': 0,
      'aria-valuenow': 0,
      'aria-valuetext': 0,
      // Live Region Attributes
      'aria-atomic': 0,
      'aria-busy': 0,
      'aria-live': 0,
      'aria-relevant': 0,
      // Drag-and-Drop Attributes
      'aria-dropeffect': 0,
      'aria-grabbed': 0,
      // Relationship Attributes
      'aria-activedescendant': 0,
      'aria-colcount': 0,
      'aria-colindex': 0,
      'aria-colspan': 0,
      'aria-controls': 0,
      'aria-describedby': 0,
      'aria-errormessage': 0,
      'aria-flowto': 0,
      'aria-labelledby': 0,
      'aria-owns': 0,
      'aria-posinset': 0,
      'aria-rowcount': 0,
      'aria-rowindex': 0,
      'aria-rowspan': 0,
      'aria-setsize': 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty$2 = Object.prototype.hasOwnProperty;

    function validateProperty(tagName, name) {
      if (hasOwnProperty$2.call(warnedProperties, name) && warnedProperties[name]) {
        return true;
      }

      if (rARIACamel.test(name)) {
        var ariaName = 'aria-' + name.slice(4).toLowerCase();
        var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
        // DOM properties, then it is an invalid aria-* attribute.

        if (correctName == null) {
          warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
          warnedProperties[name] = true;
          return true;
        } // aria-* attributes should be lowercase; suggest the lowercase version.


        if (name !== correctName) {
          warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
          warnedProperties[name] = true;
          return true;
        }
      }

      if (rARIA.test(name)) {
        var lowerCasedName = name.toLowerCase();
        var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
        // DOM properties, then it is an invalid aria-* attribute.

        if (standardName == null) {
          warnedProperties[name] = true;
          return false;
        } // aria-* attributes should be lowercase; suggest the lowercase version.


        if (name !== standardName) {
          warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
          warnedProperties[name] = true;
          return true;
        }
      }

      return true;
    }

    function warnInvalidARIAProps(type, props) {
      var invalidProps = [];

      for (var key in props) {
        var isValid = validateProperty(type, key);

        if (!isValid) {
          invalidProps.push(key);
        }
      }

      var unknownPropString = invalidProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');

      if (invalidProps.length === 1) {
        warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
      } else if (invalidProps.length > 1) {
        warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
      }
    }

    function validateProperties(type, props) {
      if (isCustomComponent(type, props)) {
        return;
      }

      warnInvalidARIAProps(type, props);
    }

    var didWarnValueNull = false;

    function validateProperties$1(type, props) {
      if (type !== 'input' && type !== 'textarea' && type !== 'select') {
        return;
      }

      if (props != null && props.value === null && !didWarnValueNull) {
        didWarnValueNull = true;

        if (type === 'select' && props.multiple) {
          warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
        } else {
          warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
        }
      }
    }

    var validateProperty$1 = function () {};

    {
      var warnedProperties$1 = {};
      var _hasOwnProperty = Object.prototype.hasOwnProperty;
      var EVENT_NAME_REGEX = /^on./;
      var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
      var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
      var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

      validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
        if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
          return true;
        }

        var lowerCasedName = name.toLowerCase();

        if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
          warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
          warnedProperties$1[name] = true;
          return true;
        } // We can't rely on the event system being injected on the server.


        if (canUseEventSystem) {
          if (registrationNameModules.hasOwnProperty(name)) {
            return true;
          }

          var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

          if (registrationName != null) {
            warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
            warnedProperties$1[name] = true;
            return true;
          }

          if (EVENT_NAME_REGEX.test(name)) {
            warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);
            warnedProperties$1[name] = true;
            return true;
          }
        } else if (EVENT_NAME_REGEX.test(name)) {
          // If no event plugins have been injected, we are in a server environment.
          // So we can't tell if the event name is correct for sure, but we can filter
          // out known bad ones like `onclick`. We can't suggest a specific replacement though.
          if (INVALID_EVENT_NAME_REGEX.test(name)) {
            warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
          }

          warnedProperties$1[name] = true;
          return true;
        } // Let the ARIA attribute hook validate ARIA attributes


        if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
          return true;
        }

        if (lowerCasedName === 'innerhtml') {
          warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
          warnedProperties$1[name] = true;
          return true;
        }

        if (lowerCasedName === 'aria') {
          warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
          warnedProperties$1[name] = true;
          return true;
        }

        if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
          warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
          warnedProperties$1[name] = true;
          return true;
        }

        if (typeof value === 'number' && isNaN(value)) {
          warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
          warnedProperties$1[name] = true;
          return true;
        }

        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
          var standardName = possibleStandardNames[lowerCasedName];

          if (standardName !== name) {
            warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
            warnedProperties$1[name] = true;
            return true;
          }
        } else if (!isReserved && name !== lowerCasedName) {
          // Unknown attributes should have lowercase casing since that's how they
          // will be cased anyway with server rendering.
          warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
          warnedProperties$1[name] = true;
          return true;
        }

        if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
          if (value) {
            warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
          } else {
            warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
          }

          warnedProperties$1[name] = true;
          return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props


        if (isReserved) {
          return true;
        } // Warn when a known attribute is a bad type


        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
          warnedProperties$1[name] = true;
          return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop


        if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
          warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
          warnedProperties$1[name] = true;
          return true;
        }

        return true;
      };
    }

    var warnUnknownProperties = function (type, props, canUseEventSystem) {
      var unknownProps = [];

      for (var key in props) {
        var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);

        if (!isValid) {
          unknownProps.push(key);
        }
      }

      var unknownPropString = unknownProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');

      if (unknownProps.length === 1) {
        warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
      } else if (unknownProps.length > 1) {
        warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
      }
    };

    function validateProperties$2(type, props, canUseEventSystem) {
      if (isCustomComponent(type, props)) {
        return;
      }

      warnUnknownProperties(type, props, canUseEventSystem);
    } // TODO: direct imports like some-package/src/* are bad. Fix me.


    var didWarnInvalidHydration = false;
    var didWarnShadyDOM = false;
    var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
    var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
    var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
    var AUTOFOCUS = 'autoFocus';
    var CHILDREN = 'children';
    var STYLE$1 = 'style';
    var HTML = '__html';
    var HTML_NAMESPACE = Namespaces.html;
    var warnedUnknownTags = void 0;
    var suppressHydrationWarning = void 0;
    var validatePropertiesInDevelopment = void 0;
    var warnForTextDifference = void 0;
    var warnForPropDifference = void 0;
    var warnForExtraAttributes = void 0;
    var warnForInvalidEventListener = void 0;
    var canDiffStyleForHydrationWarning = void 0;
    var normalizeMarkupForTextOrAttribute = void 0;
    var normalizeHTML = void 0;
    {
      warnedUnknownTags = {
        // Chrome is the only major browser not shipping <time>. But as of July
        // 2017 it intends to ship it due to widespread usage. We intentionally
        // *don't* warn for <time> even if it's unrecognized by Chrome because
        // it soon will be, and many apps have been using it anyway.
        time: true,
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
      };

      validatePropertiesInDevelopment = function (type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props,
        /* canUseEventSystem */
        true);
      }; // IE 11 parses & normalizes the style attribute as opposed to other
      // browsers. It adds spaces and sorts the properties in some
      // non-alphabetical order. Handling that would require sorting CSS
      // properties in the client & server versions or applying
      // `expectedStyle` to a temporary DOM node to read its `style` attribute
      // normalized. Since it only affects IE, we're skipping style warnings
      // in that browser completely in favor of doing all that work.
      // See https://github.com/facebook/react/issues/11807


      canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
      // It also can turn \u0000 into \uFFFD inside attributes.
      // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
      // If we have a mismatch, it might be caused by that.
      // We will still patch up in this case but not fire the warning.

      var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
      var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

      normalizeMarkupForTextOrAttribute = function (markup) {
        var markupString = typeof markup === 'string' ? markup : '' + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
      };

      warnForTextDifference = function (serverText, clientText) {
        if (didWarnInvalidHydration) {
          return;
        }

        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

        if (normalizedServerText === normalizedClientText) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
      };

      warnForPropDifference = function (propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) {
          return;
        }

        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

        if (normalizedServerValue === normalizedClientValue) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
      };

      warnForExtraAttributes = function (attributeNames) {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function (name) {
          names.push(name);
        });
        warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);
      };

      warnForInvalidEventListener = function (registrationName, listener) {
        if (listener === false) {
          warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
        } else {
          warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
        }
      }; // Parse the HTML and read it back to normalize the HTML string so that it
      // can be used for comparison.


      normalizeHTML = function (parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
      };
    }

    function ensureListeningTo(rootContainerElement, registrationName) {
      var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
      var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
      listenTo(registrationName, doc);
    }

    function getOwnerDocumentFromRootContainer(rootContainerElement) {
      return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }

    function noop() {}

    function trapClickOnNonInteractiveElement(node) {
      // Mobile Safari does not fire properly bubble click events on
      // non-interactive elements, which means delegated click listeners do not
      // fire. The workaround for this bug involves attaching an empty click
      // listener on the target node.
      // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
      // Just set it using the onclick property so that we don't have to manage any
      // bookkeeping for it. Not sure if we need to clear it when the listener is
      // removed.
      // TODO: Only do this for the relevant Safaris maybe?
      node.onclick = noop;
    }

    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
      for (var propKey in nextProps) {
        if (!nextProps.hasOwnProperty(propKey)) {
          continue;
        }

        var nextProp = nextProps[propKey];

        if (propKey === STYLE$1) {
          {
            if (nextProp) {
              // Freeze the next style object so that we can assume it won't be
              // mutated. We have already warned for this in the past.
              Object.freeze(nextProp);
            }
          } // Relies on `updateStylesByID` not mutating `styleUpdates`.

          setValueForStyles(domElement, nextProp);
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          var nextHtml = nextProp ? nextProp[HTML] : undefined;

          if (nextHtml != null) {
            setInnerHTML(domElement, nextHtml);
          }
        } else if (propKey === CHILDREN) {
          if (typeof nextProp === 'string') {
            // Avoid setting initial textContent when the text is empty. In IE11 setting
            // textContent on a <textarea> will cause the placeholder to not
            // show within the <textarea> until it has been focused and blurred again.
            // https://github.com/facebook/react/issues/6731#issuecomment-254874553
            var canSetTextContent = tag !== 'textarea' || nextProp !== '';

            if (canSetTextContent) {
              setTextContent(domElement, nextProp);
            }
          } else if (typeof nextProp === 'number') {
            setTextContent(domElement, '' + nextProp);
          }
        } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
        } else if (propKey === AUTOFOCUS) {// We polyfill it separately on the client during commit.
          // We could have excluded it in the property list instead of
          // adding a special case here, but then it wouldn't be emitted
          // on server rendering (but we *do* want to emit it in SSR).
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            if (true && typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            ensureListeningTo(rootContainerElement, propKey);
          }
        } else if (nextProp != null) {
          setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
      }
    }

    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
      // TODO: Handle wasCustomComponentTag
      for (var i = 0; i < updatePayload.length; i += 2) {
        var propKey = updatePayload[i];
        var propValue = updatePayload[i + 1];

        if (propKey === STYLE$1) {
          setValueForStyles(domElement, propValue);
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          setInnerHTML(domElement, propValue);
        } else if (propKey === CHILDREN) {
          setTextContent(domElement, propValue);
        } else {
          setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
      }
    }

    function createElement(type, props, rootContainerElement, parentNamespace) {
      var isCustomComponentTag = void 0; // We create tags in the namespace of their parent container, except HTML
      // tags get no namespace.

      var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
      var domElement = void 0;
      var namespaceURI = parentNamespace;

      if (namespaceURI === HTML_NAMESPACE) {
        namespaceURI = getIntrinsicNamespace(type);
      }

      if (namespaceURI === HTML_NAMESPACE) {
        {
          isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
          // allow <SVG> or <mATH>.

          !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
        }

        if (type === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
          // This is guaranteed to yield a script element.

          var firstChild = div.firstChild;
          domElement = div.removeChild(firstChild);
        } else if (typeof props.is === 'string') {
          // $FlowIssue `createElement` should be updated for Web Components
          domElement = ownerDocument.createElement(type, {
            is: props.is
          });
        } else {
          // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple`
          // attribute on `select`s needs to be added before `option`s are inserted. This prevents
          // a bug where the `select` does not scroll to the correct option because singular
          // `select` elements automatically pick the first item.
          // See https://github.com/facebook/react/issues/13222

          if (type === 'select' && props.multiple) {
            var node = domElement;
            node.multiple = true;
          }
        }
      } else {
        domElement = ownerDocument.createElementNS(namespaceURI, type);
      }

      {
        if (namespaceURI === HTML_NAMESPACE) {
          if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
            warnedUnknownTags[type] = true;
            warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
          }
        }
      }
      return domElement;
    }

    function createTextNode(text, rootContainerElement) {
      return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }

    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
      var isCustomComponentTag = isCustomComponent(tag, rawProps);
      {
        validatePropertiesInDevelopment(tag, rawProps);

        if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
          warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnShadyDOM = true;
        }
      } // TODO: Make sure that we check isMounted before firing any of these events.

      var props = void 0;

      switch (tag) {
        case 'iframe':
        case 'object':
          trapBubbledEvent(TOP_LOAD, domElement);
          props = rawProps;
          break;

        case 'video':
        case 'audio':
          // Create listener for each media event
          for (var i = 0; i < mediaEventTypes.length; i++) {
            trapBubbledEvent(mediaEventTypes[i], domElement);
          }

          props = rawProps;
          break;

        case 'source':
          trapBubbledEvent(TOP_ERROR, domElement);
          props = rawProps;
          break;

        case 'img':
        case 'image':
        case 'link':
          trapBubbledEvent(TOP_ERROR, domElement);
          trapBubbledEvent(TOP_LOAD, domElement);
          props = rawProps;
          break;

        case 'form':
          trapBubbledEvent(TOP_RESET, domElement);
          trapBubbledEvent(TOP_SUBMIT, domElement);
          props = rawProps;
          break;

        case 'details':
          trapBubbledEvent(TOP_TOGGLE, domElement);
          props = rawProps;
          break;

        case 'input':
          initWrapperState(domElement, rawProps);
          props = getHostProps(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'option':
          validateProps(domElement, rawProps);
          props = getHostProps$1(domElement, rawProps);
          break;

        case 'select':
          initWrapperState$1(domElement, rawProps);
          props = getHostProps$2(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'textarea':
          initWrapperState$2(domElement, rawProps);
          props = getHostProps$3(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        default:
          props = rawProps;
      }

      assertValidProps(tag, props);
      setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

      switch (tag) {
        case 'input':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper(domElement, rawProps, false);
          break;

        case 'textarea':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper$3(domElement, rawProps);
          break;

        case 'option':
          postMountWrapper$1(domElement, rawProps);
          break;

        case 'select':
          postMountWrapper$2(domElement, rawProps);
          break;

        default:
          if (typeof props.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }
    } // Calculate the diff between the two objects.


    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
      {
        validatePropertiesInDevelopment(tag, nextRawProps);
      }
      var updatePayload = null;
      var lastProps = void 0;
      var nextProps = void 0;

      switch (tag) {
        case 'input':
          lastProps = getHostProps(domElement, lastRawProps);
          nextProps = getHostProps(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'option':
          lastProps = getHostProps$1(domElement, lastRawProps);
          nextProps = getHostProps$1(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'select':
          lastProps = getHostProps$2(domElement, lastRawProps);
          nextProps = getHostProps$2(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'textarea':
          lastProps = getHostProps$3(domElement, lastRawProps);
          nextProps = getHostProps$3(domElement, nextRawProps);
          updatePayload = [];
          break;

        default:
          lastProps = lastRawProps;
          nextProps = nextRawProps;

          if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }

      assertValidProps(tag, nextProps);
      var propKey = void 0;
      var styleName = void 0;
      var styleUpdates = null;

      for (propKey in lastProps) {
        if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
          continue;
        }

        if (propKey === STYLE$1) {
          var lastStyle = lastProps[propKey];

          for (styleName in lastStyle) {
            if (lastStyle.hasOwnProperty(styleName)) {
              if (!styleUpdates) {
                styleUpdates = {};
              }

              styleUpdates[styleName] = '';
            }
          }
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {// Noop. This is handled by the clear text mechanism.
        } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
        } else if (propKey === AUTOFOCUS) {// Noop. It doesn't work on updates anyway.
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          // This is a special case. If any listener updates we need to ensure
          // that the "current" fiber pointer gets updated so we need a commit
          // to update this element.
          if (!updatePayload) {
            updatePayload = [];
          }
        } else {
          // For all other deleted properties we add it to the queue. We use
          // the whitelist in the commit phase instead.
          (updatePayload = updatePayload || []).push(propKey, null);
        }
      }

      for (propKey in nextProps) {
        var nextProp = nextProps[propKey];
        var lastProp = lastProps != null ? lastProps[propKey] : undefined;

        if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
          continue;
        }

        if (propKey === STYLE$1) {
          {
            if (nextProp) {
              // Freeze the next style object so that we can assume it won't be
              // mutated. We have already warned for this in the past.
              Object.freeze(nextProp);
            }
          }

          if (lastProp) {
            // Unset styles on `lastProp` but not on `nextProp`.
            for (styleName in lastProp) {
              if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                if (!styleUpdates) {
                  styleUpdates = {};
                }

                styleUpdates[styleName] = '';
              }
            } // Update styles that changed since `lastProp`.


            for (styleName in nextProp) {
              if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                if (!styleUpdates) {
                  styleUpdates = {};
                }

                styleUpdates[styleName] = nextProp[styleName];
              }
            }
          } else {
            // Relies on `updateStylesByID` not mutating `styleUpdates`.
            if (!styleUpdates) {
              if (!updatePayload) {
                updatePayload = [];
              }

              updatePayload.push(propKey, styleUpdates);
            }

            styleUpdates = nextProp;
          }
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          var nextHtml = nextProp ? nextProp[HTML] : undefined;
          var lastHtml = lastProp ? lastProp[HTML] : undefined;

          if (nextHtml != null) {
            if (lastHtml !== nextHtml) {
              (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
            }
          } else {// TODO: It might be too late to clear this if we have children
            // inserted already.
          }
        } else if (propKey === CHILDREN) {
          if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
            (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
          }
        } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            // We eagerly listen to this even though we haven't committed yet.
            if (true && typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            ensureListeningTo(rootContainerElement, propKey);
          }

          if (!updatePayload && lastProp !== nextProp) {
            // This is a special case. If any listener updates we need to ensure
            // that the "current" props pointer gets updated so we need a commit
            // to update this element.
            updatePayload = [];
          }
        } else {
          // For any other property we always add it to the queue and then we
          // filter it out using the whitelist during the commit.
          (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
      }

      if (styleUpdates) {
        {
          validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);
        }
        (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);
      }

      return updatePayload;
    } // Apply the diff.


    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
      // Update checked *before* name.
      // In the middle of an update, it is possible to have multiple checked.
      // When a checked radio tries to change name, browser makes another radio's checked false.
      if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
        updateChecked(domElement, nextRawProps);
      }

      var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
      var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

      updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
      // changed.

      switch (tag) {
        case 'input':
          // Update the wrapper around inputs *after* updating props. This has to
          // happen after `updateDOMProperties`. Otherwise HTML5 input validations
          // raise warnings and prevent the new value from being assigned.
          updateWrapper(domElement, nextRawProps);
          break;

        case 'textarea':
          updateWrapper$1(domElement, nextRawProps);
          break;

        case 'select':
          // <select> value update needs to occur after <option> children
          // reconciliation
          postUpdateWrapper(domElement, nextRawProps);
          break;
      }
    }

    function getPossibleStandardName(propName) {
      {
        var lowerCasedName = propName.toLowerCase();

        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
          return null;
        }

        return possibleStandardNames[lowerCasedName] || null;
      }
      return null;
    }

    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
      var isCustomComponentTag = void 0;
      var extraAttributeNames = void 0;
      {
        suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);

        if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
          warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnShadyDOM = true;
        }
      } // TODO: Make sure that we check isMounted before firing any of these events.

      switch (tag) {
        case 'iframe':
        case 'object':
          trapBubbledEvent(TOP_LOAD, domElement);
          break;

        case 'video':
        case 'audio':
          // Create listener for each media event
          for (var i = 0; i < mediaEventTypes.length; i++) {
            trapBubbledEvent(mediaEventTypes[i], domElement);
          }

          break;

        case 'source':
          trapBubbledEvent(TOP_ERROR, domElement);
          break;

        case 'img':
        case 'image':
        case 'link':
          trapBubbledEvent(TOP_ERROR, domElement);
          trapBubbledEvent(TOP_LOAD, domElement);
          break;

        case 'form':
          trapBubbledEvent(TOP_RESET, domElement);
          trapBubbledEvent(TOP_SUBMIT, domElement);
          break;

        case 'details':
          trapBubbledEvent(TOP_TOGGLE, domElement);
          break;

        case 'input':
          initWrapperState(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'option':
          validateProps(domElement, rawProps);
          break;

        case 'select':
          initWrapperState$1(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'textarea':
          initWrapperState$2(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;
      }

      assertValidProps(tag, rawProps);
      {
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;

        for (var _i = 0; _i < attributes.length; _i++) {
          var name = attributes[_i].name.toLowerCase();

          switch (name) {
            // Built-in SSR attribute is whitelisted
            case 'data-reactroot':
              break;
            // Controlled attributes are not validated
            // TODO: Only ignore them on controlled tags.

            case 'value':
              break;

            case 'checked':
              break;

            case 'selected':
              break;

            default:
              // Intentionally use the original name.
              // See discussion in https://github.com/facebook/react/pull/10676.
              extraAttributeNames.add(attributes[_i].name);
          }
        }
      }
      var updatePayload = null;

      for (var propKey in rawProps) {
        if (!rawProps.hasOwnProperty(propKey)) {
          continue;
        }

        var nextProp = rawProps[propKey];

        if (propKey === CHILDREN) {
          // For text content children we compare against textContent. This
          // might match additional HTML that is hidden when we read it using
          // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
          // satisfies our requirement. Our requirement is not to produce perfect
          // HTML and attributes. Ideally we should preserve structure but it's
          // ok not to if the visible content is still enough to indicate what
          // even listeners these nodes might be wired up to.
          // TODO: Warn if there is more than a single textNode as a child.
          // TODO: Should we use domElement.firstChild.nodeValue to compare?
          if (typeof nextProp === 'string') {
            if (domElement.textContent !== nextProp) {
              if (true && !suppressHydrationWarning) {
                warnForTextDifference(domElement.textContent, nextProp);
              }

              updatePayload = [CHILDREN, nextProp];
            }
          } else if (typeof nextProp === 'number') {
            if (domElement.textContent !== '' + nextProp) {
              if (true && !suppressHydrationWarning) {
                warnForTextDifference(domElement.textContent, nextProp);
              }

              updatePayload = [CHILDREN, '' + nextProp];
            }
          }
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            if (true && typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            ensureListeningTo(rootContainerElement, propKey);
          }
        } else if (true && // Convince Flow we've calculated it (it's DEV-only in this method.)
        typeof isCustomComponentTag === 'boolean') {
          // Validate that the properties correspond to their expected values.
          var serverValue = void 0;
          var propertyInfo = getPropertyInfo(propKey);

          if (suppressHydrationWarning) {// Don't bother comparing. We're ignoring all these warnings.
          } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 || // Controlled attributes are not validated
          // TODO: Only ignore them on controlled tags.
          propKey === 'value' || propKey === 'checked' || propKey === 'selected') {// Noop
          } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
            var serverHTML = domElement.innerHTML;
            var nextHtml = nextProp ? nextProp[HTML] : undefined;
            var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');

            if (expectedHTML !== serverHTML) {
              warnForPropDifference(propKey, serverHTML, expectedHTML);
            }
          } else if (propKey === STYLE$1) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey);

            if (canDiffStyleForHydrationWarning) {
              var expectedStyle = createDangerousStringForStyles(nextProp);
              serverValue = domElement.getAttribute('style');

              if (expectedStyle !== serverValue) {
                warnForPropDifference(propKey, serverValue, expectedStyle);
              }
            }
          } else if (isCustomComponentTag) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
            serverValue = getValueForAttribute(domElement, propKey, nextProp);

            if (nextProp !== serverValue) {
              warnForPropDifference(propKey, serverValue, nextProp);
            }
          } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
            var isMismatchDueToBadCasing = false;

            if (propertyInfo !== null) {
              // $FlowFixMe - Should be inferred as not undefined.
              extraAttributeNames.delete(propertyInfo.attributeName);
              serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
            } else {
              var ownNamespace = parentNamespace;

              if (ownNamespace === HTML_NAMESPACE) {
                ownNamespace = getIntrinsicNamespace(tag);
              }

              if (ownNamespace === HTML_NAMESPACE) {
                // $FlowFixMe - Should be inferred as not undefined.
                extraAttributeNames.delete(propKey.toLowerCase());
              } else {
                var standardName = getPossibleStandardName(propKey);

                if (standardName !== null && standardName !== propKey) {
                  // If an SVG prop is supplied with bad casing, it will
                  // be successfully parsed from HTML, but will produce a mismatch
                  // (and would be incorrectly rendered on the client).
                  // However, we already warn about bad casing elsewhere.
                  // So we'll skip the misleading extra mismatch warning in this case.
                  isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

                  extraAttributeNames.delete(standardName);
                } // $FlowFixMe - Should be inferred as not undefined.


                extraAttributeNames.delete(propKey);
              }

              serverValue = getValueForAttribute(domElement, propKey, nextProp);
            }

            if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
              warnForPropDifference(propKey, serverValue, nextProp);
            }
          }
        }
      }

      {
        // $FlowFixMe - Should be inferred as not undefined.
        if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
          // $FlowFixMe - Should be inferred as not undefined.
          warnForExtraAttributes(extraAttributeNames);
        }
      }

      switch (tag) {
        case 'input':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper(domElement, rawProps, true);
          break;

        case 'textarea':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper$3(domElement, rawProps);
          break;

        case 'select':
        case 'option':
          // For input and textarea we current always set the value property at
          // post mount to force it to diverge from attributes. However, for
          // option and select we don't quite do the same thing and select
          // is not resilient to the DOM state changing so we don't do that here.
          // TODO: Consider not doing this for input and textarea.
          break;

        default:
          if (typeof rawProps.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }

      return updatePayload;
    }

    function diffHydratedText(textNode, text) {
      var isDifferent = textNode.nodeValue !== text;
      return isDifferent;
    }

    function warnForUnmatchedText(textNode, text) {
      {
        warnForTextDifference(textNode.nodeValue, text);
      }
    }

    function warnForDeletedHydratableElement(parentNode, child) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
      }
    }

    function warnForDeletedHydratableText(parentNode, child) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
      }
    }

    function warnForInsertedHydratedElement(parentNode, tag, props) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
      }
    }

    function warnForInsertedHydratedText(parentNode, text) {
      {
        if (text === '') {
          // We expect to insert empty text nodes since they're not represented in
          // the HTML.
          // TODO: Remove this special case if we can just avoid inserting empty
          // text nodes.
          return;
        }

        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
      }
    }

    function restoreControlledState$1(domElement, tag, props) {
      switch (tag) {
        case 'input':
          restoreControlledState(domElement, props);
          return;

        case 'textarea':
          restoreControlledState$3(domElement, props);
          return;

        case 'select':
          restoreControlledState$2(domElement, props);
          return;
      }
    } // TODO: direct imports like some-package/src/* are bad. Fix me.


    var validateDOMNesting = function () {};

    var updatedAncestorInfo = function () {};

    {
      // This validation code was written based on the HTML5 parsing spec:
      // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
      //
      // Note: this does not catch all invalid nesting, nor does it try to (as it's
      // not clear what practical benefit doing so provides); instead, we warn only
      // for cases where the parser will give a parse tree differing from what React
      // intended. For example, <b><div></div></b> is invalid but we don't warn
      // because it still parses correctly; we do warn for other cases like nested
      // <p> tags where the beginning of the second element implicitly closes the
      // first, causing a confusing mess.
      // https://html.spec.whatwg.org/multipage/syntax.html#special
      var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

      var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
      // TODO: Distinguish by namespace here -- for <title>, including it here
      // errs on the side of fewer warnings
      'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

      var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

      var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
      var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };

      updatedAncestorInfo = function (oldInfo, tag) {
        var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);

        var info = {
          tag: tag
        };

        if (inScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.aTagInScope = null;
          ancestorInfo.buttonTagInScope = null;
          ancestorInfo.nobrTagInScope = null;
        }

        if (buttonScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.pTagInButtonScope = null;
        } // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
          ancestorInfo.listItemTagAutoclosing = null;
          ancestorInfo.dlItemTagAutoclosing = null;
        }

        ancestorInfo.current = info;

        if (tag === 'form') {
          ancestorInfo.formTag = info;
        }

        if (tag === 'a') {
          ancestorInfo.aTagInScope = info;
        }

        if (tag === 'button') {
          ancestorInfo.buttonTagInScope = info;
        }

        if (tag === 'nobr') {
          ancestorInfo.nobrTagInScope = info;
        }

        if (tag === 'p') {
          ancestorInfo.pTagInButtonScope = info;
        }

        if (tag === 'li') {
          ancestorInfo.listItemTagAutoclosing = info;
        }

        if (tag === 'dd' || tag === 'dt') {
          ancestorInfo.dlItemTagAutoclosing = info;
        }

        return ancestorInfo;
      };
      /**
       * Returns whether
       */


      var isTagValidWithParent = function (tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch (parentTag) {
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
          case 'select':
            return tag === 'option' || tag === 'optgroup' || tag === '#text';

          case 'optgroup':
            return tag === 'option' || tag === '#text';
          // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
          // but

          case 'option':
            return tag === '#text';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
          // No special behavior since these rules fall back to "in body" mode for
          // all except special table nodes which cause bad parsing behavior anyway.
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

          case 'tr':
            return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

          case 'tbody':
          case 'thead':
          case 'tfoot':
            return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

          case 'colgroup':
            return tag === 'col' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

          case 'table':
            return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

          case 'head':
            return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

          case 'html':
            return tag === 'head' || tag === 'body';

          case '#document':
            return tag === 'html';
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


        switch (tag) {
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

          case 'rp':
          case 'rt':
            return impliedEndTags.indexOf(parentTag) === -1;

          case 'body':
          case 'caption':
          case 'col':
          case 'colgroup':
          case 'frame':
          case 'head':
          case 'html':
          case 'tbody':
          case 'td':
          case 'tfoot':
          case 'th':
          case 'thead':
          case 'tr':
            // These tags are only valid with a few parents that have special child
            // parsing rules -- if we're down here, then none of those matched and
            // so we allow it only if we don't know what the parent is, as all other
            // cases are invalid.
            return parentTag == null;
        }

        return true;
      };
      /**
       * Returns whether
       */


      var findInvalidAncestorForTag = function (tag, ancestorInfo) {
        switch (tag) {
          case 'address':
          case 'article':
          case 'aside':
          case 'blockquote':
          case 'center':
          case 'details':
          case 'dialog':
          case 'dir':
          case 'div':
          case 'dl':
          case 'fieldset':
          case 'figcaption':
          case 'figure':
          case 'footer':
          case 'header':
          case 'hgroup':
          case 'main':
          case 'menu':
          case 'nav':
          case 'ol':
          case 'p':
          case 'section':
          case 'summary':
          case 'ul':
          case 'pre':
          case 'listing':
          case 'table':
          case 'hr':
          case 'xmp':
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return ancestorInfo.pTagInButtonScope;

          case 'form':
            return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

          case 'li':
            return ancestorInfo.listItemTagAutoclosing;

          case 'dd':
          case 'dt':
            return ancestorInfo.dlItemTagAutoclosing;

          case 'button':
            return ancestorInfo.buttonTagInScope;

          case 'a':
            // Spec says something about storing a list of markers, but it sounds
            // equivalent to this check.
            return ancestorInfo.aTagInScope;

          case 'nobr':
            return ancestorInfo.nobrTagInScope;
        }

        return null;
      };

      var didWarn = {};

      validateDOMNesting = function (childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;

        if (childText != null) {
          !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
          childTag = '#text';
        }

        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;

        if (!invalidParentOrAncestor) {
          return;
        }

        var ancestorTag = invalidParentOrAncestor.tag;
        var addendum = getCurrentFiberStackInDev();
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;

        if (didWarn[warnKey]) {
          return;
        }

        didWarn[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = '';

        if (childTag === '#text') {
          if (/\S/.test(childText)) {
            tagDisplayName = 'Text nodes';
          } else {
            tagDisplayName = 'Whitespace text nodes';
            whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
          }
        } else {
          tagDisplayName = '<' + childTag + '>';
        }

        if (invalidParent) {
          var info = '';

          if (ancestorTag === 'table' && childTag === 'tr') {
            info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
          }

          warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
        } else {
          warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
        }
      };
    } // Renderers that don't support persistence
    // can re-export everything from this module.

    function shim() {
      invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');
    } // Persistence (when unsupported)


    var supportsPersistence = false;
    var cloneInstance = shim;
    var createContainerChildSet = shim;
    var appendChildToContainerChildSet = shim;
    var finalizeContainerChildren = shim;
    var replaceContainerChildren = shim;
    var cloneHiddenInstance = shim;
    var cloneUnhiddenInstance = shim;
    var createHiddenTextInstance = shim;
    var SUPPRESS_HYDRATION_WARNING = void 0;
    {
      SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
    }
    var SUSPENSE_START_DATA = '$';
    var SUSPENSE_END_DATA = '/$';
    var STYLE = 'style';
    var eventsEnabled = null;
    var selectionInformation = null;

    function shouldAutoFocusHostComponent(type, props) {
      switch (type) {
        case 'button':
        case 'input':
        case 'select':
        case 'textarea':
          return !!props.autoFocus;
      }

      return false;
    }

    function getRootHostContext(rootContainerInstance) {
      var type = void 0;
      var namespace = void 0;
      var nodeType = rootContainerInstance.nodeType;

      switch (nodeType) {
        case DOCUMENT_NODE:
        case DOCUMENT_FRAGMENT_NODE:
          {
            type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
            var root = rootContainerInstance.documentElement;
            namespace = root ? root.namespaceURI : getChildNamespace(null, '');
            break;
          }

        default:
          {
            var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
            var ownNamespace = container.namespaceURI || null;
            type = container.tagName;
            namespace = getChildNamespace(ownNamespace, type);
            break;
          }
      }

      {
        var validatedTag = type.toLowerCase();

        var _ancestorInfo = updatedAncestorInfo(null, validatedTag);

        return {
          namespace: namespace,
          ancestorInfo: _ancestorInfo
        };
      }
      return namespace;
    }

    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
      {
        var parentHostContextDev = parentHostContext;

        var _namespace = getChildNamespace(parentHostContextDev.namespace, type);

        var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);

        return {
          namespace: _namespace,
          ancestorInfo: _ancestorInfo2
        };
      }
      var parentNamespace = parentHostContext;
      return getChildNamespace(parentNamespace, type);
    }

    function getPublicInstance(instance) {
      return instance;
    }

    function prepareForCommit(containerInfo) {
      eventsEnabled = isEnabled();
      selectionInformation = getSelectionInformation();
      setEnabled(false);
    }

    function resetAfterCommit(containerInfo) {
      restoreSelection(selectionInformation);
      selectionInformation = null;
      setEnabled(eventsEnabled);
      eventsEnabled = null;
    }

    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      var parentNamespace = void 0;
      {
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);

        if (typeof props.children === 'string' || typeof props.children === 'number') {
          var string = '' + props.children;
          var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
          validateDOMNesting(null, string, ownAncestorInfo);
        }

        parentNamespace = hostContextDev.namespace;
      }
      var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
      precacheFiberNode(internalInstanceHandle, domElement);
      updateFiberProps(domElement, props);
      return domElement;
    }

    function appendInitialChild(parentInstance, child) {
      parentInstance.appendChild(child);
    }

    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
      setInitialProperties(domElement, type, props, rootContainerInstance);
      return shouldAutoFocusHostComponent(type, props);
    }

    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
      {
        var hostContextDev = hostContext;

        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
          var string = '' + newProps.children;
          var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
          validateDOMNesting(null, string, ownAncestorInfo);
        }
      }
      return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
    }

    function shouldSetTextContent(type, props) {
      return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }

    function shouldDeprioritizeSubtree(type, props) {
      return !!props.hidden;
    }

    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
      {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
      }
      var textNode = createTextNode(text, rootContainerInstance);
      precacheFiberNode(internalInstanceHandle, textNode);
      return textNode;
    }

    var isPrimaryRenderer = true; // This initialization code may run even on server environments
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.

    var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
    var noTimeout = -1;
    var schedulePassiveEffects = scheduler.unstable_scheduleCallback;
    var cancelPassiveEffects = scheduler.unstable_cancelCallback; // -------------------
    //     Mutation
    // -------------------

    var supportsMutation = true;

    function commitMount(domElement, type, newProps, internalInstanceHandle) {
      // Despite the naming that might imply otherwise, this method only
      // fires if there is an `Update` effect scheduled during mounting.
      // This happens if `finalizeInitialChildren` returns `true` (which it
      // does to implement the `autoFocus` attribute on the client). But
      // there are also other cases when this might happen (such as patching
      // up text content during hydration mismatch). So we'll check this again.
      if (shouldAutoFocusHostComponent(type, newProps)) {
        domElement.focus();
      }
    }

    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
      // Update the props handle so that we know which props are the ones with
      // with current event handlers.
      updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.

      updateProperties(domElement, updatePayload, type, oldProps, newProps);
    }

    function resetTextContent(domElement) {
      setTextContent(domElement, '');
    }

    function commitTextUpdate(textInstance, oldText, newText) {
      textInstance.nodeValue = newText;
    }

    function appendChild(parentInstance, child) {
      parentInstance.appendChild(child);
    }

    function appendChildToContainer(container, child) {
      var parentNode = void 0;

      if (container.nodeType === COMMENT_NODE) {
        parentNode = container.parentNode;
        parentNode.insertBefore(child, container);
      } else {
        parentNode = container;
        parentNode.appendChild(child);
      } // This container might be used for a portal.
      // If something inside a portal is clicked, that click should bubble
      // through the React tree. However, on Mobile Safari the click would
      // never bubble through the *DOM* tree unless an ancestor with onclick
      // event exists. So we wouldn't see it and dispatch it.
      // This is why we ensure that non React root containers have inline onclick
      // defined.
      // https://github.com/facebook/react/issues/11918


      var reactRootContainer = container._reactRootContainer;

      if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
      }
    }

    function insertBefore(parentInstance, child, beforeChild) {
      parentInstance.insertBefore(child, beforeChild);
    }

    function insertInContainerBefore(container, child, beforeChild) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.insertBefore(child, beforeChild);
      } else {
        container.insertBefore(child, beforeChild);
      }
    }

    function removeChild(parentInstance, child) {
      parentInstance.removeChild(child);
    }

    function removeChildFromContainer(container, child) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.removeChild(child);
      } else {
        container.removeChild(child);
      }
    }

    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
      var node = suspenseInstance; // Delete all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      do {
        var nextNode = node.nextSibling;
        parentInstance.removeChild(node);

        if (nextNode && nextNode.nodeType === COMMENT_NODE) {
          var data = nextNode.data;

          if (data === SUSPENSE_END_DATA) {
            if (depth === 0) {
              parentInstance.removeChild(nextNode);
              return;
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_START_DATA) {
            depth++;
          }
        }

        node = nextNode;
      } while (node); // TODO: Warn, we didn't find the end comment boundary.

    }

    function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
      if (container.nodeType === COMMENT_NODE) {
        clearSuspenseBoundary(container.parentNode, suspenseInstance);
      } else if (container.nodeType === ELEMENT_NODE) {
        clearSuspenseBoundary(container, suspenseInstance);
      } else {// Document nodes should never contain suspense boundaries.
      }
    }

    function hideInstance(instance) {
      // TODO: Does this work for all element types? What about MathML? Should we
      // pass host context to this method?
      instance = instance;
      instance.style.display = 'none';
    }

    function hideTextInstance(textInstance) {
      textInstance.nodeValue = '';
    }

    function unhideInstance(instance, props) {
      instance = instance;
      var styleProp = props[STYLE];
      var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
      instance.style.display = dangerousStyleValue('display', display);
    }

    function unhideTextInstance(textInstance, text) {
      textInstance.nodeValue = text;
    } // -------------------
    //     Hydration
    // -------------------


    var supportsHydration = true;

    function canHydrateInstance(instance, type, props) {
      if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
        return null;
      } // This has now been refined to an element node.


      return instance;
    }

    function canHydrateTextInstance(instance, text) {
      if (text === '' || instance.nodeType !== TEXT_NODE) {
        // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
      } // This has now been refined to a text node.


      return instance;
    }

    function canHydrateSuspenseInstance(instance) {
      if (instance.nodeType !== COMMENT_NODE) {
        // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
      } // This has now been refined to a suspense node.


      return instance;
    }

    function getNextHydratableSibling(instance) {
      var node = instance.nextSibling; // Skip non-hydratable nodes.

      while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || node.nodeType !== COMMENT_NODE || node.data !== SUSPENSE_START_DATA)) {
        node = node.nextSibling;
      }

      return node;
    }

    function getFirstHydratableChild(parentInstance) {
      var next = parentInstance.firstChild; // Skip non-hydratable nodes.

      while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || next.nodeType !== COMMENT_NODE || next.data !== SUSPENSE_START_DATA)) {
        next = next.nextSibling;
      }

      return next;
    }

    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
      // get attached.

      updateFiberProps(instance, props);
      var parentNamespace = void 0;
      {
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
      }
      return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
    }

    function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, textInstance);
      return diffHydratedText(textInstance, text);
    }

    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
      var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      while (node) {
        if (node.nodeType === COMMENT_NODE) {
          var data = node.data;

          if (data === SUSPENSE_END_DATA) {
            if (depth === 0) {
              return getNextHydratableSibling(node);
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_START_DATA) {
            depth++;
          }
        }

        node = node.nextSibling;
      } // TODO: Warn, we didn't find the end comment boundary.


      return null;
    }

    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
      {
        warnForUnmatchedText(textInstance, text);
      }
    }

    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForUnmatchedText(textInstance, text);
      }
    }

    function didNotHydrateContainerInstance(parentContainer, instance) {
      {
        if (instance.nodeType === ELEMENT_NODE) {
          warnForDeletedHydratableElement(parentContainer, instance);
        } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
        } else {
          warnForDeletedHydratableText(parentContainer, instance);
        }
      }
    }

    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        if (instance.nodeType === ELEMENT_NODE) {
          warnForDeletedHydratableElement(parentInstance, instance);
        } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
        } else {
          warnForDeletedHydratableText(parentInstance, instance);
        }
      }
    }

    function didNotFindHydratableContainerInstance(parentContainer, type, props) {
      {
        warnForInsertedHydratedElement(parentContainer, type, props);
      }
    }

    function didNotFindHydratableContainerTextInstance(parentContainer, text) {
      {
        warnForInsertedHydratedText(parentContainer, text);
      }
    }

    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedElement(parentInstance, type, props);
      }
    }

    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedText(parentInstance, text);
      }
    }

    function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {// TODO: warnForInsertedHydratedSuspense(parentInstance);
      }
    } // Prefix measurements so that it's possible to filter them.
    // Longer prefixes are hard to read in DevTools.


    var reactEmoji = '\u269B';
    var warningEmoji = '\u26D4';
    var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function'; // Keep track of current fiber so that we know the path to unwind on pause.
    // TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?

    var currentFiber = null; // If we're in the middle of user code, which fiber and method is it?
    // Reusing `currentFiber` would be confusing for this because user code fiber
    // can change during commit phase too, but we don't need to unwind it (since
    // lifecycles in the commit phase don't resemble a tree).

    var currentPhase = null;
    var currentPhaseFiber = null; // Did lifecycle hook schedule an update? This is often a performance problem,
    // so we will keep track of it, and include it in the report.
    // Track commits caused by cascading updates.

    var isCommitting = false;
    var hasScheduledUpdateInCurrentCommit = false;
    var hasScheduledUpdateInCurrentPhase = false;
    var commitCountInCurrentWorkLoop = 0;
    var effectCountInCurrentCommit = 0;
    var isWaitingForCallback = false; // During commits, we only show a measurement once per method name
    // to avoid stretch the commit phase with measurement overhead.

    var labelsInCurrentCommit = new Set();

    var formatMarkName = function (markName) {
      return reactEmoji + ' ' + markName;
    };

    var formatLabel = function (label, warning) {
      var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';
      var suffix = warning ? ' Warning: ' + warning : '';
      return '' + prefix + label + suffix;
    };

    var beginMark = function (markName) {
      performance.mark(formatMarkName(markName));
    };

    var clearMark = function (markName) {
      performance.clearMarks(formatMarkName(markName));
    };

    var endMark = function (label, markName, warning) {
      var formattedMarkName = formatMarkName(markName);
      var formattedLabel = formatLabel(label, warning);

      try {
        performance.measure(formattedLabel, formattedMarkName);
      } catch (err) {} // If previous mark was missing for some reason, this will throw.
      // This could only happen if React crashed in an unexpected place earlier.
      // Don't pile on with more errors.
      // Clear marks immediately to avoid growing buffer.


      performance.clearMarks(formattedMarkName);
      performance.clearMeasures(formattedLabel);
    };

    var getFiberMarkName = function (label, debugID) {
      return label + ' (#' + debugID + ')';
    };

    var getFiberLabel = function (componentName, isMounted, phase) {
      if (phase === null) {
        // These are composite component total time measurements.
        return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
      } else {
        // Composite component methods.
        return componentName + '.' + phase;
      }
    };

    var beginFiberMark = function (fiber, phase) {
      var componentName = getComponentName(fiber.type) || 'Unknown';
      var debugID = fiber._debugID;
      var isMounted = fiber.alternate !== null;
      var label = getFiberLabel(componentName, isMounted, phase);

      if (isCommitting && labelsInCurrentCommit.has(label)) {
        // During the commit phase, we don't show duplicate labels because
        // there is a fixed overhead for every measurement, and we don't
        // want to stretch the commit phase beyond necessary.
        return false;
      }

      labelsInCurrentCommit.add(label);
      var markName = getFiberMarkName(label, debugID);
      beginMark(markName);
      return true;
    };

    var clearFiberMark = function (fiber, phase) {
      var componentName = getComponentName(fiber.type) || 'Unknown';
      var debugID = fiber._debugID;
      var isMounted = fiber.alternate !== null;
      var label = getFiberLabel(componentName, isMounted, phase);
      var markName = getFiberMarkName(label, debugID);
      clearMark(markName);
    };

    var endFiberMark = function (fiber, phase, warning) {
      var componentName = getComponentName(fiber.type) || 'Unknown';
      var debugID = fiber._debugID;
      var isMounted = fiber.alternate !== null;
      var label = getFiberLabel(componentName, isMounted, phase);
      var markName = getFiberMarkName(label, debugID);
      endMark(label, markName, warning);
    };

    var shouldIgnoreFiber = function (fiber) {
      // Host components should be skipped in the timeline.
      // We could check typeof fiber.type, but does this work with RN?
      switch (fiber.tag) {
        case HostRoot:
        case HostComponent:
        case HostText:
        case HostPortal:
        case Fragment:
        case ContextProvider:
        case ContextConsumer:
        case Mode:
          return true;

        default:
          return false;
      }
    };

    var clearPendingPhaseMeasurement = function () {
      if (currentPhase !== null && currentPhaseFiber !== null) {
        clearFiberMark(currentPhaseFiber, currentPhase);
      }

      currentPhaseFiber = null;
      currentPhase = null;
      hasScheduledUpdateInCurrentPhase = false;
    };

    var pauseTimers = function () {
      // Stops all currently active measurements so that they can be resumed
      // if we continue in a later deferred loop from the same unit of work.
      var fiber = currentFiber;

      while (fiber) {
        if (fiber._debugIsCurrentlyTiming) {
          endFiberMark(fiber, null, null);
        }

        fiber = fiber.return;
      }
    };

    var resumeTimersRecursively = function (fiber) {
      if (fiber.return !== null) {
        resumeTimersRecursively(fiber.return);
      }

      if (fiber._debugIsCurrentlyTiming) {
        beginFiberMark(fiber, null);
      }
    };

    var resumeTimers = function () {
      // Resumes all measurements that were active during the last deferred loop.
      if (currentFiber !== null) {
        resumeTimersRecursively(currentFiber);
      }
    };

    function recordEffect() {
      if (enableUserTimingAPI) {
        effectCountInCurrentCommit++;
      }
    }

    function recordScheduleUpdate() {
      if (enableUserTimingAPI) {
        if (isCommitting) {
          hasScheduledUpdateInCurrentCommit = true;
        }

        if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
          hasScheduledUpdateInCurrentPhase = true;
        }
      }
    }

    function startRequestCallbackTimer() {
      if (enableUserTimingAPI) {
        if (supportsUserTiming && !isWaitingForCallback) {
          isWaitingForCallback = true;
          beginMark('(Waiting for async callback...)');
        }
      }
    }

    function stopRequestCallbackTimer(didExpire, expirationTime) {
      if (enableUserTimingAPI) {
        if (supportsUserTiming) {
          isWaitingForCallback = false;
          var warning = didExpire ? 'React was blocked by main thread' : null;
          endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning);
        }
      }
    }

    function startWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // If we pause, this is the fiber to unwind from.


        currentFiber = fiber;

        if (!beginFiberMark(fiber, null)) {
          return;
        }

        fiber._debugIsCurrentlyTiming = true;
      }
    }

    function cancelWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // Remember we shouldn't complete measurement for this fiber.
        // Otherwise flamechart will be deep even for small updates.


        fiber._debugIsCurrentlyTiming = false;
        clearFiberMark(fiber, null);
      }
    }

    function stopWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // If we pause, its parent is the fiber to unwind from.


        currentFiber = fiber.return;

        if (!fiber._debugIsCurrentlyTiming) {
          return;
        }

        fiber._debugIsCurrentlyTiming = false;
        endFiberMark(fiber, null, null);
      }
    }

    function stopFailedWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // If we pause, its parent is the fiber to unwind from.


        currentFiber = fiber.return;

        if (!fiber._debugIsCurrentlyTiming) {
          return;
        }

        fiber._debugIsCurrentlyTiming = false;
        var warning = fiber.tag === SuspenseComponent || fiber.tag === DehydratedSuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';
        endFiberMark(fiber, null, warning);
      }
    }

    function startPhaseTimer(fiber, phase) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        clearPendingPhaseMeasurement();

        if (!beginFiberMark(fiber, phase)) {
          return;
        }

        currentPhaseFiber = fiber;
        currentPhase = phase;
      }
    }

    function stopPhaseTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        if (currentPhase !== null && currentPhaseFiber !== null) {
          var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
          endFiberMark(currentPhaseFiber, currentPhase, warning);
        }

        currentPhase = null;
        currentPhaseFiber = null;
      }
    }

    function startWorkLoopTimer(nextUnitOfWork) {
      if (enableUserTimingAPI) {
        currentFiber = nextUnitOfWork;

        if (!supportsUserTiming) {
          return;
        }

        commitCountInCurrentWorkLoop = 0; // This is top level call.
        // Any other measurements are performed within.

        beginMark('(React Tree Reconciliation)'); // Resume any measurements that were in progress during the last loop.

        resumeTimers();
      }
    }

    function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var warning = null;

        if (interruptedBy !== null) {
          if (interruptedBy.tag === HostRoot) {
            warning = 'A top-level update interrupted the previous render';
          } else {
            var componentName = getComponentName(interruptedBy.type) || 'Unknown';
            warning = 'An update to ' + componentName + ' interrupted the previous render';
          }
        } else if (commitCountInCurrentWorkLoop > 1) {
          warning = 'There were cascading updates';
        }

        commitCountInCurrentWorkLoop = 0;
        var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)'; // Pause any measurements until the next loop.

        pauseTimers();
        endMark(label, '(React Tree Reconciliation)', warning);
      }
    }

    function startCommitTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        isCommitting = true;
        hasScheduledUpdateInCurrentCommit = false;
        labelsInCurrentCommit.clear();
        beginMark('(Committing Changes)');
      }
    }

    function stopCommitTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var warning = null;

        if (hasScheduledUpdateInCurrentCommit) {
          warning = 'Lifecycle hook scheduled a cascading update';
        } else if (commitCountInCurrentWorkLoop > 0) {
          warning = 'Caused by a cascading update in earlier commit';
        }

        hasScheduledUpdateInCurrentCommit = false;
        commitCountInCurrentWorkLoop++;
        isCommitting = false;
        labelsInCurrentCommit.clear();
        endMark('(Committing Changes)', '(Committing Changes)', warning);
      }
    }

    function startCommitSnapshotEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        effectCountInCurrentCommit = 0;
        beginMark('(Committing Snapshot Effects)');
      }
    }

    function stopCommitSnapshotEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var count = effectCountInCurrentCommit;
        effectCountInCurrentCommit = 0;
        endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
      }
    }

    function startCommitHostEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        effectCountInCurrentCommit = 0;
        beginMark('(Committing Host Effects)');
      }
    }

    function stopCommitHostEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var count = effectCountInCurrentCommit;
        effectCountInCurrentCommit = 0;
        endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
      }
    }

    function startCommitLifeCyclesTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        effectCountInCurrentCommit = 0;
        beginMark('(Calling Lifecycle Methods)');
      }
    }

    function stopCommitLifeCyclesTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var count = effectCountInCurrentCommit;
        effectCountInCurrentCommit = 0;
        endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
      }
    }

    var valueStack = [];
    var fiberStack = void 0;
    {
      fiberStack = [];
    }
    var index = -1;

    function createCursor(defaultValue) {
      return {
        current: defaultValue
      };
    }

    function pop(cursor, fiber) {
      if (index < 0) {
        {
          warningWithoutStack$1(false, 'Unexpected pop.');
        }
        return;
      }

      {
        if (fiber !== fiberStack[index]) {
          warningWithoutStack$1(false, 'Unexpected Fiber popped.');
        }
      }
      cursor.current = valueStack[index];
      valueStack[index] = null;
      {
        fiberStack[index] = null;
      }
      index--;
    }

    function push(cursor, value, fiber) {
      index++;
      valueStack[index] = cursor.current;
      {
        fiberStack[index] = fiber;
      }
      cursor.current = value;
    }

    function checkThatStackIsEmpty() {
      {
        if (index !== -1) {
          warningWithoutStack$1(false, 'Expected an empty stack. Something was not reset properly.');
        }
      }
    }

    function resetStackAfterFatalErrorInDev() {
      {
        index = -1;
        valueStack.length = 0;
        fiberStack.length = 0;
      }
    }

    var warnedAboutMissingGetChildContext = void 0;
    {
      warnedAboutMissingGetChildContext = {};
    }
    var emptyContextObject = {};
    {
      Object.freeze(emptyContextObject);
    } // A cursor to the current merged context object on the stack.

    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.

    var previousContext = emptyContextObject;

    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
      if (didPushOwnContextIfProvider && isContextProvider(Component)) {
        // If the fiber is a context provider itself, when we read its context
        // we may have already pushed its own child context on the stack. A context
        // provider should not "see" its own child context. Therefore we read the
        // previous (parent) context instead for a context provider.
        return previousContext;
      }

      return contextStackCursor.current;
    }

    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
      var instance = workInProgress.stateNode;
      instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
      instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }

    function getMaskedContext(workInProgress, unmaskedContext) {
      var type = workInProgress.type;
      var contextTypes = type.contextTypes;

      if (!contextTypes) {
        return emptyContextObject;
      } // Avoid recreating masked context unless unmasked context has changed.
      // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
      // This may trigger infinite loops if componentWillReceiveProps calls setState.


      var instance = workInProgress.stateNode;

      if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
        return instance.__reactInternalMemoizedMaskedChildContext;
      }

      var context = {};

      for (var key in contextTypes) {
        context[key] = unmaskedContext[key];
      }

      {
        var name = getComponentName(type) || 'Unknown';
        checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);
      } // Cache unmasked context so we can avoid recreating masked context unless necessary.
      // Context is created before the class component is instantiated so check for instance.

      if (instance) {
        cacheContext(workInProgress, unmaskedContext, context);
      }

      return context;
    }

    function hasContextChanged() {
      return didPerformWorkStackCursor.current;
    }

    function isContextProvider(type) {
      var childContextTypes = type.childContextTypes;
      return childContextTypes !== null && childContextTypes !== undefined;
    }

    function popContext(fiber) {
      pop(didPerformWorkStackCursor, fiber);
      pop(contextStackCursor, fiber);
    }

    function popTopLevelContextObject(fiber) {
      pop(didPerformWorkStackCursor, fiber);
      pop(contextStackCursor, fiber);
    }

    function pushTopLevelContextObject(fiber, context, didChange) {
      !(contextStackCursor.current === emptyContextObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      push(contextStackCursor, context, fiber);
      push(didPerformWorkStackCursor, didChange, fiber);
    }

    function processChildContext(fiber, type, parentContext) {
      var instance = fiber.stateNode;
      var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
      // It has only been added in Fiber to match the (unintentional) behavior in Stack.

      if (typeof instance.getChildContext !== 'function') {
        {
          var componentName = getComponentName(type) || 'Unknown';

          if (!warnedAboutMissingGetChildContext[componentName]) {
            warnedAboutMissingGetChildContext[componentName] = true;
            warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
          }
        }
        return parentContext;
      }

      var childContext = void 0;
      {
        setCurrentPhase('getChildContext');
      }
      startPhaseTimer(fiber, 'getChildContext');
      childContext = instance.getChildContext();
      stopPhaseTimer();
      {
        setCurrentPhase(null);
      }

      for (var contextKey in childContext) {
        !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(type) || 'Unknown', contextKey) : void 0;
      }

      {
        var name = getComponentName(type) || 'Unknown';
        checkPropTypes(childContextTypes, childContext, 'child context', name, // In practice, there is one case in which we won't get a stack. It's when
        // somebody calls unstable_renderSubtreeIntoContainer() and we process
        // context from the parent component instance. The stack will be missing
        // because it's outside of the reconciliation, and so the pointer has not
        // been set. This is rare and doesn't matter. We'll also remove that API.
        getCurrentFiberStackInDev);
      }
      return _assign({}, parentContext, childContext);
    }

    function pushContextProvider(workInProgress) {
      var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
      // If the instance does not exist yet, we will push null at first,
      // and replace it on the stack later when invalidating the context.

      var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
      // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

      previousContext = contextStackCursor.current;
      push(contextStackCursor, memoizedMergedChildContext, workInProgress);
      push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
      return true;
    }

    function invalidateContextProvider(workInProgress, type, didChange) {
      var instance = workInProgress.stateNode;
      !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

      if (didChange) {
        // Merge parent and own context.
        // Skip this if we're not updating due to sCU.
        // This avoids unnecessarily recomputing memoized values.
        var mergedContext = processChildContext(workInProgress, type, previousContext);
        instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
        // It is important to unwind the context in the reverse order.

        pop(didPerformWorkStackCursor, workInProgress);
        pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

        push(contextStackCursor, mergedContext, workInProgress);
        push(didPerformWorkStackCursor, didChange, workInProgress);
      } else {
        pop(didPerformWorkStackCursor, workInProgress);
        push(didPerformWorkStackCursor, didChange, workInProgress);
      }
    }

    function findCurrentUnmaskedContext(fiber) {
      // Currently this is only used with renderSubtreeIntoContainer; not sure if it
      // makes sense elsewhere
      !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      var node = fiber;

      do {
        switch (node.tag) {
          case HostRoot:
            return node.stateNode.context;

          case ClassComponent:
            {
              var Component = node.type;

              if (isContextProvider(Component)) {
                return node.stateNode.__reactInternalMemoizedMergedChildContext;
              }

              break;
            }
        }

        node = node.return;
      } while (node !== null);

      invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.');
    }

    var onCommitFiberRoot = null;
    var onCommitFiberUnmount = null;
    var hasLoggedError = false;

    function catchErrors(fn) {
      return function (arg) {
        try {
          return fn(arg);
        } catch (err) {
          if (true && !hasLoggedError) {
            hasLoggedError = true;
            warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
          }
        }
      };
    }

    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';

    function injectInternals(internals) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        // No DevTools
        return false;
      }

      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

      if (hook.isDisabled) {
        // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
      }

      if (!hook.supportsFiber) {
        {
          warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
        } // DevTools exists, even though it doesn't support Fiber.

        return true;
      }

      try {
        var rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

        onCommitFiberRoot = catchErrors(function (root) {
          return hook.onCommitFiberRoot(rendererID, root);
        });
        onCommitFiberUnmount = catchErrors(function (fiber) {
          return hook.onCommitFiberUnmount(rendererID, fiber);
        });
      } catch (err) {
        // Catch all errors because it is unsafe to throw during initialization.
        {
          warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);
        }
      } // DevTools exists


      return true;
    }

    function onCommitRoot(root) {
      if (typeof onCommitFiberRoot === 'function') {
        onCommitFiberRoot(root);
      }
    }

    function onCommitUnmount(fiber) {
      if (typeof onCommitFiberUnmount === 'function') {
        onCommitFiberUnmount(fiber);
      }
    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111


    var maxSigned31BitInt = 1073741823;
    var NoWork = 0;
    var Never = 1;
    var Sync = maxSigned31BitInt;
    var UNIT_SIZE = 10;
    var MAGIC_NUMBER_OFFSET = maxSigned31BitInt - 1; // 1 unit of expiration time represents 10ms.

    function msToExpirationTime(ms) {
      // Always add an offset so that we don't clash with the magic number for NoWork.
      return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
    }

    function expirationTimeToMs(expirationTime) {
      return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
    }

    function ceiling(num, precision) {
      return ((num / precision | 0) + 1) * precision;
    }

    function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
      return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
    }

    var LOW_PRIORITY_EXPIRATION = 5000;
    var LOW_PRIORITY_BATCH_SIZE = 250;

    function computeAsyncExpiration(currentTime) {
      return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
    } // We intentionally set a higher expiration time for interactive updates in
    // dev than in production.
    //
    // If the main thread is being blocked so long that you hit the expiration,
    // it's a problem that could be solved with better scheduling.
    //
    // People will be more likely to notice this and fix it with the long
    // expiration time in development.
    //
    // In production we opt for better UX at the risk of masking scheduling
    // problems, by expiring fast.


    var HIGH_PRIORITY_EXPIRATION = 500;
    var HIGH_PRIORITY_BATCH_SIZE = 100;

    function computeInteractiveExpiration(currentTime) {
      return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
    }

    var NoContext = 0;
    var ConcurrentMode = 1;
    var StrictMode = 2;
    var ProfileMode = 4;
    var hasBadMapPolyfill = void 0;
    {
      hasBadMapPolyfill = false;

      try {
        var nonExtensibleObject = Object.preventExtensions({});
        var testMap = new Map([[nonExtensibleObject, null]]);
        var testSet = new Set([nonExtensibleObject]); // This is necessary for Rollup to not consider these unused.
        // https://github.com/rollup/rollup/issues/1771
        // TODO: we can remove these if Rollup fixes the bug.

        testMap.set(0, 0);
        testSet.add(0);
      } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
      }
    } // A Fiber is work on a Component that needs to be done or was done. There can
    // be more than one per component.

    var debugCounter = void 0;
    {
      debugCounter = 1;
    }

    function FiberNode(tag, pendingProps, key, mode) {
      // Instance
      this.tag = tag;
      this.key = key;
      this.elementType = null;
      this.type = null;
      this.stateNode = null; // Fiber

      this.return = null;
      this.child = null;
      this.sibling = null;
      this.index = 0;
      this.ref = null;
      this.pendingProps = pendingProps;
      this.memoizedProps = null;
      this.updateQueue = null;
      this.memoizedState = null;
      this.contextDependencies = null;
      this.mode = mode; // Effects

      this.effectTag = NoEffect;
      this.nextEffect = null;
      this.firstEffect = null;
      this.lastEffect = null;
      this.expirationTime = NoWork;
      this.childExpirationTime = NoWork;
      this.alternate = null;

      if (enableProfilerTimer) {
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).

        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
      }

      {
        this._debugID = debugCounter++;
        this._debugSource = null;
        this._debugOwner = null;
        this._debugIsCurrentlyTiming = false;

        if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
          Object.preventExtensions(this);
        }
      }
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.


    var createFiber = function (tag, pendingProps, key, mode) {
      // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
      return new FiberNode(tag, pendingProps, key, mode);
    };

    function shouldConstruct(Component) {
      var prototype = Component.prototype;
      return !!(prototype && prototype.isReactComponent);
    }

    function isSimpleFunctionComponent(type) {
      return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;
    }

    function resolveLazyComponentTag(Component) {
      if (typeof Component === 'function') {
        return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
      } else if (Component !== undefined && Component !== null) {
        var $$typeof = Component.$$typeof;

        if ($$typeof === REACT_FORWARD_REF_TYPE) {
          return ForwardRef;
        }

        if ($$typeof === REACT_MEMO_TYPE) {
          return MemoComponent;
        }
      }

      return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.


    function createWorkInProgress(current, pendingProps, expirationTime) {
      var workInProgress = current.alternate;

      if (workInProgress === null) {
        // We use a double buffering pooling technique because we know that we'll
        // only ever need at most two versions of a tree. We pool the "other" unused
        // node that we're free to reuse. This is lazily created to avoid allocating
        // extra objects for things that are never updated. It also allow us to
        // reclaim the extra memory if needed.
        workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
        workInProgress.elementType = current.elementType;
        workInProgress.type = current.type;
        workInProgress.stateNode = current.stateNode;
        {
          // DEV-only fields
          workInProgress._debugID = current._debugID;
          workInProgress._debugSource = current._debugSource;
          workInProgress._debugOwner = current._debugOwner;
        }
        workInProgress.alternate = current;
        current.alternate = workInProgress;
      } else {
        workInProgress.pendingProps = pendingProps; // We already have an alternate.
        // Reset the effect tag.

        workInProgress.effectTag = NoEffect; // The effect list is no longer valid.

        workInProgress.nextEffect = null;
        workInProgress.firstEffect = null;
        workInProgress.lastEffect = null;

        if (enableProfilerTimer) {
          // We intentionally reset, rather than copy, actualDuration & actualStartTime.
          // This prevents time from endlessly accumulating in new commits.
          // This has the downside of resetting values for different priority renders,
          // But works for yielding (the common case) and should support resuming.
          workInProgress.actualDuration = 0;
          workInProgress.actualStartTime = -1;
        }
      }

      workInProgress.childExpirationTime = current.childExpirationTime;
      workInProgress.expirationTime = current.expirationTime;
      workInProgress.child = current.child;
      workInProgress.memoizedProps = current.memoizedProps;
      workInProgress.memoizedState = current.memoizedState;
      workInProgress.updateQueue = current.updateQueue;
      workInProgress.contextDependencies = current.contextDependencies; // These will be overridden during the parent's reconciliation

      workInProgress.sibling = current.sibling;
      workInProgress.index = current.index;
      workInProgress.ref = current.ref;

      if (enableProfilerTimer) {
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
      }

      return workInProgress;
    }

    function createHostRootFiber(isConcurrent) {
      var mode = isConcurrent ? ConcurrentMode | StrictMode : NoContext;

      if (enableProfilerTimer && isDevToolsPresent) {
        // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
      }

      return createFiber(HostRoot, null, null, mode);
    }

    function createFiberFromTypeAndProps(type, // React$ElementType
    key, pendingProps, owner, mode, expirationTime) {
      var fiber = void 0;
      var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

      var resolvedType = type;

      if (typeof type === 'function') {
        if (shouldConstruct(type)) {
          fiberTag = ClassComponent;
        }
      } else if (typeof type === 'string') {
        fiberTag = HostComponent;
      } else {
        getTag: switch (type) {
          case REACT_FRAGMENT_TYPE:
            return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

          case REACT_CONCURRENT_MODE_TYPE:
            return createFiberFromMode(pendingProps, mode | ConcurrentMode | StrictMode, expirationTime, key);

          case REACT_STRICT_MODE_TYPE:
            return createFiberFromMode(pendingProps, mode | StrictMode, expirationTime, key);

          case REACT_PROFILER_TYPE:
            return createFiberFromProfiler(pendingProps, mode, expirationTime, key);

          case REACT_SUSPENSE_TYPE:
            return createFiberFromSuspense(pendingProps, mode, expirationTime, key);

          default:
            {
              if (typeof type === 'object' && type !== null) {
                switch (type.$$typeof) {
                  case REACT_PROVIDER_TYPE:
                    fiberTag = ContextProvider;
                    break getTag;

                  case REACT_CONTEXT_TYPE:
                    // This is a consumer
                    fiberTag = ContextConsumer;
                    break getTag;

                  case REACT_FORWARD_REF_TYPE:
                    fiberTag = ForwardRef;
                    break getTag;

                  case REACT_MEMO_TYPE:
                    fiberTag = MemoComponent;
                    break getTag;

                  case REACT_LAZY_TYPE:
                    fiberTag = LazyComponent;
                    resolvedType = null;
                    break getTag;
                }
              }

              var info = '';
              {
                if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
                  info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
                }

                var ownerName = owner ? getComponentName(owner.type) : null;

                if (ownerName) {
                  info += '\n\nCheck the render method of `' + ownerName + '`.';
                }
              }
              invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
            }
        }
      }

      fiber = createFiber(fiberTag, pendingProps, key, mode);
      fiber.elementType = type;
      fiber.type = resolvedType;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromElement(element, mode, expirationTime) {
      var owner = null;
      {
        owner = element._owner;
      }
      var type = element.type;
      var key = element.key;
      var pendingProps = element.props;
      var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);
      {
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
      }
      return fiber;
    }

    function createFiberFromFragment(elements, mode, expirationTime, key) {
      var fiber = createFiber(Fragment, elements, key, mode);
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
      {
        if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
          warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
        }
      }
      var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.

      fiber.elementType = REACT_PROFILER_TYPE;
      fiber.type = REACT_PROFILER_TYPE;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromMode(pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(Mode, pendingProps, key, mode); // TODO: The Mode fiber shouldn't have a type. It has a tag.

      var type = (mode & ConcurrentMode) === NoContext ? REACT_STRICT_MODE_TYPE : REACT_CONCURRENT_MODE_TYPE;
      fiber.elementType = type;
      fiber.type = type;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.

      var type = REACT_SUSPENSE_TYPE;
      fiber.elementType = type;
      fiber.type = type;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromText(content, mode, expirationTime) {
      var fiber = createFiber(HostText, content, null, mode);
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromHostInstanceForDeletion() {
      var fiber = createFiber(HostComponent, null, null, NoContext); // TODO: These should not need a type.

      fiber.elementType = 'DELETED';
      fiber.type = 'DELETED';
      return fiber;
    }

    function createFiberFromPortal(portal, mode, expirationTime) {
      var pendingProps = portal.children !== null ? portal.children : [];
      var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
      fiber.expirationTime = expirationTime;
      fiber.stateNode = {
        containerInfo: portal.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: portal.implementation
      };
      return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.


    function assignFiberPropertiesInDEV(target, source) {
      if (target === null) {
        // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoContext);
      } // This is intentionally written as a list of all properties.
      // We tried to use Object.assign() instead but this is called in
      // the hottest path, and Object.assign() was too slow:
      // https://github.com/facebook/react/issues/12502
      // This code is DEV-only so size is not a concern.


      target.tag = source.tag;
      target.key = source.key;
      target.elementType = source.elementType;
      target.type = source.type;
      target.stateNode = source.stateNode;
      target.return = source.return;
      target.child = source.child;
      target.sibling = source.sibling;
      target.index = source.index;
      target.ref = source.ref;
      target.pendingProps = source.pendingProps;
      target.memoizedProps = source.memoizedProps;
      target.updateQueue = source.updateQueue;
      target.memoizedState = source.memoizedState;
      target.contextDependencies = source.contextDependencies;
      target.mode = source.mode;
      target.effectTag = source.effectTag;
      target.nextEffect = source.nextEffect;
      target.firstEffect = source.firstEffect;
      target.lastEffect = source.lastEffect;
      target.expirationTime = source.expirationTime;
      target.childExpirationTime = source.childExpirationTime;
      target.alternate = source.alternate;

      if (enableProfilerTimer) {
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
      }

      target._debugID = source._debugID;
      target._debugSource = source._debugSource;
      target._debugOwner = source._debugOwner;
      target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
      return target;
    } // TODO: This should be lifted into the renderer.
    // The following attributes are only used by interaction tracing builds.
    // They enable interactions to be associated with their async work,
    // And expose interaction metadata to the React DevTools Profiler plugin.
    // Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.
    // Exported FiberRoot type includes all properties,
    // To avoid requiring potentially error-prone :any casts throughout the project.
    // Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).
    // The types are defined separately within this file to ensure they stay in sync.
    // (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)


    function createFiberRoot(containerInfo, isConcurrent, hydrate) {
      // Cyclic construction. This cheats the type system right now because
      // stateNode is any.
      var uninitializedFiber = createHostRootFiber(isConcurrent);
      var root = void 0;

      if (enableSchedulerTracing) {
        root = {
          current: uninitializedFiber,
          containerInfo: containerInfo,
          pendingChildren: null,
          earliestPendingTime: NoWork,
          latestPendingTime: NoWork,
          earliestSuspendedTime: NoWork,
          latestSuspendedTime: NoWork,
          latestPingedTime: NoWork,
          pingCache: null,
          didError: false,
          pendingCommitExpirationTime: NoWork,
          finishedWork: null,
          timeoutHandle: noTimeout,
          context: null,
          pendingContext: null,
          hydrate: hydrate,
          nextExpirationTimeToWorkOn: NoWork,
          expirationTime: NoWork,
          firstBatch: null,
          nextScheduledRoot: null,
          interactionThreadID: tracing.unstable_getThreadID(),
          memoizedInteractions: new Set(),
          pendingInteractionMap: new Map()
        };
      } else {
        root = {
          current: uninitializedFiber,
          containerInfo: containerInfo,
          pendingChildren: null,
          pingCache: null,
          earliestPendingTime: NoWork,
          latestPendingTime: NoWork,
          earliestSuspendedTime: NoWork,
          latestSuspendedTime: NoWork,
          latestPingedTime: NoWork,
          didError: false,
          pendingCommitExpirationTime: NoWork,
          finishedWork: null,
          timeoutHandle: noTimeout,
          context: null,
          pendingContext: null,
          hydrate: hydrate,
          nextExpirationTimeToWorkOn: NoWork,
          expirationTime: NoWork,
          firstBatch: null,
          nextScheduledRoot: null
        };
      }

      uninitializedFiber.stateNode = root; // The reason for the way the Flow types are structured in this file,
      // Is to avoid needing :any casts everywhere interaction tracing fields are used.
      // Unfortunately that requires an :any cast for non-interaction tracing capable builds.
      // $FlowFixMe Remove this :any cast and replace it with something better.

      return root;
    }
    /**
     * Forked from fbjs/warning:
     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
     *
     * Only change is we use console.warn instead of console.error,
     * and do nothing when 'console' is not supported.
     * This really simplifies the code.
     * ---
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var lowPriorityWarning = function () {};

    {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });

        if (typeof console !== 'undefined') {
          console.warn(message);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarning = function (condition, format) {
        if (format === undefined) {
          throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }
    var lowPriorityWarning$1 = lowPriorityWarning;
    var ReactStrictModeWarnings = {
      discardPendingWarnings: function () {},
      flushPendingDeprecationWarnings: function () {},
      flushPendingUnsafeLifecycleWarnings: function () {},
      recordDeprecationWarnings: function (fiber, instance) {},
      recordUnsafeLifecycleWarnings: function (fiber, instance) {},
      recordLegacyContextWarning: function (fiber, instance) {},
      flushLegacyContextWarning: function () {}
    };
    {
      var LIFECYCLE_SUGGESTIONS = {
        UNSAFE_componentWillMount: 'componentDidMount',
        UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',
        UNSAFE_componentWillUpdate: 'componentDidUpdate'
      };
      var pendingComponentWillMountWarnings = [];
      var pendingComponentWillReceivePropsWarnings = [];
      var pendingComponentWillUpdateWarnings = [];
      var pendingUnsafeLifecycleWarnings = new Map();
      var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

      var didWarnAboutDeprecatedLifecycles = new Set();
      var didWarnAboutUnsafeLifecycles = new Set();
      var didWarnAboutLegacyContext = new Set();

      var setToSortedString = function (set) {
        var array = [];
        set.forEach(function (value) {
          array.push(value);
        });
        return array.sort().join(', ');
      };

      ReactStrictModeWarnings.discardPendingWarnings = function () {
        pendingComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUnsafeLifecycleWarnings = new Map();
        pendingLegacyContextWarning = new Map();
      };

      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
        pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {
          var lifecyclesWarningMessages = [];
          Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {
            var lifecycleWarnings = lifecycleWarningsMap[lifecycle];

            if (lifecycleWarnings.length > 0) {
              var componentNames = new Set();
              lifecycleWarnings.forEach(function (fiber) {
                componentNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              var formatted = lifecycle.replace('UNSAFE_', '');
              var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
              var sortedComponentNames = setToSortedString(componentNames);
              lifecyclesWarningMessages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));
            }
          });

          if (lifecyclesWarningMessages.length > 0) {
            var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);
            warningWithoutStack$1(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\n\n%s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMessages.join('\n\n'));
          }
        });
        pendingUnsafeLifecycleWarnings = new Map();
      };

      var findStrictRoot = function (fiber) {
        var maybeStrictRoot = null;
        var node = fiber;

        while (node !== null) {
          if (node.mode & StrictMode) {
            maybeStrictRoot = node;
          }

          node = node.return;
        }

        return maybeStrictRoot;
      };

      ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {
        if (pendingComponentWillMountWarnings.length > 0) {
          var uniqueNames = new Set();
          pendingComponentWillMountWarnings.forEach(function (fiber) {
            uniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutDeprecatedLifecycles.add(fiber.type);
          });
          var sortedNames = setToSortedString(uniqueNames);
          lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);
          pendingComponentWillMountWarnings = [];
        }

        if (pendingComponentWillReceivePropsWarnings.length > 0) {
          var _uniqueNames = new Set();

          pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
            _uniqueNames.add(getComponentName(fiber.type) || 'Component');

            didWarnAboutDeprecatedLifecycles.add(fiber.type);
          });

          var _sortedNames = setToSortedString(_uniqueNames);

          lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);
          pendingComponentWillReceivePropsWarnings = [];
        }

        if (pendingComponentWillUpdateWarnings.length > 0) {
          var _uniqueNames2 = new Set();

          pendingComponentWillUpdateWarnings.forEach(function (fiber) {
            _uniqueNames2.add(getComponentName(fiber.type) || 'Component');

            didWarnAboutDeprecatedLifecycles.add(fiber.type);
          });

          var _sortedNames2 = setToSortedString(_uniqueNames2);

          lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);
          pendingComponentWillUpdateWarnings = [];
        }
      };

      ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {
        // Dedup strategy: Warn once per component.
        if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
          return;
        } // Don't warn about react-lifecycles-compat polyfilled components.


        if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
          pendingComponentWillMountWarnings.push(fiber);
        }

        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
          pendingComponentWillReceivePropsWarnings.push(fiber);
        }

        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
          pendingComponentWillUpdateWarnings.push(fiber);
        }
      };

      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
        var strictRoot = findStrictRoot(fiber);

        if (strictRoot === null) {
          warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
          return;
        } // Dedup strategy: Warn once per component.
        // This is difficult to track any other way since component names
        // are often vague and are likely to collide between 3rd party libraries.
        // An expand property is probably okay to use here since it's DEV-only,
        // and will only be set in the event of serious warnings.


        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
          return;
        }

        var warningsForRoot = void 0;

        if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
          warningsForRoot = {
            UNSAFE_componentWillMount: [],
            UNSAFE_componentWillReceiveProps: [],
            UNSAFE_componentWillUpdate: []
          };
          pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
        } else {
          warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);
        }

        var unsafeLifecycles = [];

        if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {
          unsafeLifecycles.push('UNSAFE_componentWillMount');
        }

        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
          unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
        }

        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {
          unsafeLifecycles.push('UNSAFE_componentWillUpdate');
        }

        if (unsafeLifecycles.length > 0) {
          unsafeLifecycles.forEach(function (lifecycle) {
            warningsForRoot[lifecycle].push(fiber);
          });
        }
      };

      ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
        var strictRoot = findStrictRoot(fiber);

        if (strictRoot === null) {
          warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
          return;
        } // Dedup strategy: Warn once per component.


        if (didWarnAboutLegacyContext.has(fiber.type)) {
          return;
        }

        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
          if (warningsForRoot === undefined) {
            warningsForRoot = [];
            pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
          }

          warningsForRoot.push(fiber);
        }
      };

      ReactStrictModeWarnings.flushLegacyContextWarning = function () {
        pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
          var uniqueNames = new Set();
          fiberArray.forEach(function (fiber) {
            uniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutLegacyContext.add(fiber.type);
          });
          var sortedNames = setToSortedString(uniqueNames);
          var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);
          warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);
        });
      };
    } // This lets us hook into Fiber to debug what it's doing.
    // See https://github.com/facebook/react/pull/8033.
    // This is not part of the public API, not even for React DevTools.
    // You may only inject a debugTool if you work on React Fiber itself.

    var ReactFiberInstrumentation = {
      debugTool: null
    };
    var ReactFiberInstrumentation_1 = ReactFiberInstrumentation; // TODO: Offscreen updates should never suspend. However, a promise that
    // suspended inside an offscreen subtree should be able to ping at the priority
    // of the outer render.

    function markPendingPriorityLevel(root, expirationTime) {
      // If there's a gap between completing a failed root and retrying it,
      // additional updates may be scheduled. Clear `didError`, in case the update
      // is sufficient to fix the error.
      root.didError = false; // Update the latest and earliest pending times

      var earliestPendingTime = root.earliestPendingTime;

      if (earliestPendingTime === NoWork) {
        // No other pending updates.
        root.earliestPendingTime = root.latestPendingTime = expirationTime;
      } else {
        if (earliestPendingTime < expirationTime) {
          // This is the earliest pending update.
          root.earliestPendingTime = expirationTime;
        } else {
          var latestPendingTime = root.latestPendingTime;

          if (latestPendingTime > expirationTime) {
            // This is the latest pending update
            root.latestPendingTime = expirationTime;
          }
        }
      }

      findNextExpirationTimeToWorkOn(expirationTime, root);
    }

    function markCommittedPriorityLevels(root, earliestRemainingTime) {
      root.didError = false;

      if (earliestRemainingTime === NoWork) {
        // Fast path. There's no remaining work. Clear everything.
        root.earliestPendingTime = NoWork;
        root.latestPendingTime = NoWork;
        root.earliestSuspendedTime = NoWork;
        root.latestSuspendedTime = NoWork;
        root.latestPingedTime = NoWork;
        findNextExpirationTimeToWorkOn(NoWork, root);
        return;
      }

      if (earliestRemainingTime < root.latestPingedTime) {
        root.latestPingedTime = NoWork;
      } // Let's see if the previous latest known pending level was just flushed.


      var latestPendingTime = root.latestPendingTime;

      if (latestPendingTime !== NoWork) {
        if (latestPendingTime > earliestRemainingTime) {
          // We've flushed all the known pending levels.
          root.earliestPendingTime = root.latestPendingTime = NoWork;
        } else {
          var earliestPendingTime = root.earliestPendingTime;

          if (earliestPendingTime > earliestRemainingTime) {
            // We've flushed the earliest known pending level. Set this to the
            // latest pending time.
            root.earliestPendingTime = root.latestPendingTime;
          }
        }
      } // Now let's handle the earliest remaining level in the whole tree. We need to
      // decide whether to treat it as a pending level or as suspended. Check
      // it falls within the range of known suspended levels.


      var earliestSuspendedTime = root.earliestSuspendedTime;

      if (earliestSuspendedTime === NoWork) {
        // There's no suspended work. Treat the earliest remaining level as a
        // pending level.
        markPendingPriorityLevel(root, earliestRemainingTime);
        findNextExpirationTimeToWorkOn(NoWork, root);
        return;
      }

      var latestSuspendedTime = root.latestSuspendedTime;

      if (earliestRemainingTime < latestSuspendedTime) {
        // The earliest remaining level is later than all the suspended work. That
        // means we've flushed all the suspended work.
        root.earliestSuspendedTime = NoWork;
        root.latestSuspendedTime = NoWork;
        root.latestPingedTime = NoWork; // There's no suspended work. Treat the earliest remaining level as a
        // pending level.

        markPendingPriorityLevel(root, earliestRemainingTime);
        findNextExpirationTimeToWorkOn(NoWork, root);
        return;
      }

      if (earliestRemainingTime > earliestSuspendedTime) {
        // The earliest remaining time is earlier than all the suspended work.
        // Treat it as a pending update.
        markPendingPriorityLevel(root, earliestRemainingTime);
        findNextExpirationTimeToWorkOn(NoWork, root);
        return;
      } // The earliest remaining time falls within the range of known suspended
      // levels. We should treat this as suspended work.


      findNextExpirationTimeToWorkOn(NoWork, root);
    }

    function hasLowerPriorityWork(root, erroredExpirationTime) {
      var latestPendingTime = root.latestPendingTime;
      var latestSuspendedTime = root.latestSuspendedTime;
      var latestPingedTime = root.latestPingedTime;
      return latestPendingTime !== NoWork && latestPendingTime < erroredExpirationTime || latestSuspendedTime !== NoWork && latestSuspendedTime < erroredExpirationTime || latestPingedTime !== NoWork && latestPingedTime < erroredExpirationTime;
    }

    function isPriorityLevelSuspended(root, expirationTime) {
      var earliestSuspendedTime = root.earliestSuspendedTime;
      var latestSuspendedTime = root.latestSuspendedTime;
      return earliestSuspendedTime !== NoWork && expirationTime <= earliestSuspendedTime && expirationTime >= latestSuspendedTime;
    }

    function markSuspendedPriorityLevel(root, suspendedTime) {
      root.didError = false;
      clearPing(root, suspendedTime); // First, check the known pending levels and update them if needed.

      var earliestPendingTime = root.earliestPendingTime;
      var latestPendingTime = root.latestPendingTime;

      if (earliestPendingTime === suspendedTime) {
        if (latestPendingTime === suspendedTime) {
          // Both known pending levels were suspended. Clear them.
          root.earliestPendingTime = root.latestPendingTime = NoWork;
        } else {
          // The earliest pending level was suspended. Clear by setting it to the
          // latest pending level.
          root.earliestPendingTime = latestPendingTime;
        }
      } else if (latestPendingTime === suspendedTime) {
        // The latest pending level was suspended. Clear by setting it to the
        // latest pending level.
        root.latestPendingTime = earliestPendingTime;
      } // Finally, update the known suspended levels.


      var earliestSuspendedTime = root.earliestSuspendedTime;
      var latestSuspendedTime = root.latestSuspendedTime;

      if (earliestSuspendedTime === NoWork) {
        // No other suspended levels.
        root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
      } else {
        if (earliestSuspendedTime < suspendedTime) {
          // This is the earliest suspended level.
          root.earliestSuspendedTime = suspendedTime;
        } else if (latestSuspendedTime > suspendedTime) {
          // This is the latest suspended level
          root.latestSuspendedTime = suspendedTime;
        }
      }

      findNextExpirationTimeToWorkOn(suspendedTime, root);
    }

    function markPingedPriorityLevel(root, pingedTime) {
      root.didError = false; // TODO: When we add back resuming, we need to ensure the progressed work
      // is thrown out and not reused during the restarted render. One way to
      // invalidate the progressed work is to restart at expirationTime + 1.

      var latestPingedTime = root.latestPingedTime;

      if (latestPingedTime === NoWork || latestPingedTime > pingedTime) {
        root.latestPingedTime = pingedTime;
      }

      findNextExpirationTimeToWorkOn(pingedTime, root);
    }

    function clearPing(root, completedTime) {
      var latestPingedTime = root.latestPingedTime;

      if (latestPingedTime >= completedTime) {
        root.latestPingedTime = NoWork;
      }
    }

    function findEarliestOutstandingPriorityLevel(root, renderExpirationTime) {
      var earliestExpirationTime = renderExpirationTime;
      var earliestPendingTime = root.earliestPendingTime;
      var earliestSuspendedTime = root.earliestSuspendedTime;

      if (earliestPendingTime > earliestExpirationTime) {
        earliestExpirationTime = earliestPendingTime;
      }

      if (earliestSuspendedTime > earliestExpirationTime) {
        earliestExpirationTime = earliestSuspendedTime;
      }

      return earliestExpirationTime;
    }

    function didExpireAtExpirationTime(root, currentTime) {
      var expirationTime = root.expirationTime;

      if (expirationTime !== NoWork && currentTime <= expirationTime) {
        // The root has expired. Flush all work up to the current time.
        root.nextExpirationTimeToWorkOn = currentTime;
      }
    }

    function findNextExpirationTimeToWorkOn(completedExpirationTime, root) {
      var earliestSuspendedTime = root.earliestSuspendedTime;
      var latestSuspendedTime = root.latestSuspendedTime;
      var earliestPendingTime = root.earliestPendingTime;
      var latestPingedTime = root.latestPingedTime; // Work on the earliest pending time. Failing that, work on the latest
      // pinged time.

      var nextExpirationTimeToWorkOn = earliestPendingTime !== NoWork ? earliestPendingTime : latestPingedTime; // If there is no pending or pinged work, check if there's suspended work
      // that's lower priority than what we just completed.

      if (nextExpirationTimeToWorkOn === NoWork && (completedExpirationTime === NoWork || latestSuspendedTime < completedExpirationTime)) {
        // The lowest priority suspended work is the work most likely to be
        // committed next. Let's start rendering it again, so that if it times out,
        // it's ready to commit.
        nextExpirationTimeToWorkOn = latestSuspendedTime;
      }

      var expirationTime = nextExpirationTimeToWorkOn;

      if (expirationTime !== NoWork && earliestSuspendedTime > expirationTime) {
        // Expire using the earliest known expiration time.
        expirationTime = earliestSuspendedTime;
      }

      root.nextExpirationTimeToWorkOn = nextExpirationTimeToWorkOn;
      root.expirationTime = expirationTime;
    }

    function resolveDefaultProps(Component, baseProps) {
      if (Component && Component.defaultProps) {
        // Resolve default props. Taken from ReactElement
        var props = _assign({}, baseProps);

        var defaultProps = Component.defaultProps;

        for (var propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }

        return props;
      }

      return baseProps;
    }

    function readLazyComponentType(lazyComponent) {
      var status = lazyComponent._status;
      var result = lazyComponent._result;

      switch (status) {
        case Resolved:
          {
            var Component = result;
            return Component;
          }

        case Rejected:
          {
            var error = result;
            throw error;
          }

        case Pending:
          {
            var thenable = result;
            throw thenable;
          }

        default:
          {
            lazyComponent._status = Pending;
            var ctor = lazyComponent._ctor;

            var _thenable = ctor();

            _thenable.then(function (moduleObject) {
              if (lazyComponent._status === Pending) {
                var defaultExport = moduleObject.default;
                {
                  if (defaultExport === undefined) {
                    warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + "const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                  }
                }
                lazyComponent._status = Resolved;
                lazyComponent._result = defaultExport;
              }
            }, function (error) {
              if (lazyComponent._status === Pending) {
                lazyComponent._status = Rejected;
                lazyComponent._result = error;
              }
            }); // Handle synchronous thenables.


            switch (lazyComponent._status) {
              case Resolved:
                return lazyComponent._result;

              case Rejected:
                throw lazyComponent._result;
            }

            lazyComponent._result = _thenable;
            throw _thenable;
          }
      }
    }

    var fakeInternalInstance = {};
    var isArray$1 = Array.isArray; // React.Component uses a shared frozen object by default.
    // We'll use it to determine whether we need to initialize legacy refs.

    var emptyRefsObject = new React.Component().refs;
    var didWarnAboutStateAssignmentForComponent = void 0;
    var didWarnAboutUninitializedState = void 0;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
    var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
    var didWarnAboutUndefinedDerivedState = void 0;
    var warnOnUndefinedDerivedState = void 0;
    var warnOnInvalidCallback$1 = void 0;
    var didWarnAboutDirectlyAssigningPropsToState = void 0;
    var didWarnAboutContextTypeAndContextTypes = void 0;
    var didWarnAboutInvalidateContextType = void 0;
    {
      didWarnAboutStateAssignmentForComponent = new Set();
      didWarnAboutUninitializedState = new Set();
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
      didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
      didWarnAboutDirectlyAssigningPropsToState = new Set();
      didWarnAboutUndefinedDerivedState = new Set();
      didWarnAboutContextTypeAndContextTypes = new Set();
      didWarnAboutInvalidateContextType = new Set();
      var didWarnOnInvalidCallback = new Set();

      warnOnInvalidCallback$1 = function (callback, callerName) {
        if (callback === null || typeof callback === 'function') {
          return;
        }

        var key = callerName + '_' + callback;

        if (!didWarnOnInvalidCallback.has(key)) {
          didWarnOnInvalidCallback.add(key);
          warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
        }
      };

      warnOnUndefinedDerivedState = function (type, partialState) {
        if (partialState === undefined) {
          var componentName = getComponentName(type) || 'Component';

          if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
            didWarnAboutUndefinedDerivedState.add(componentName);
            warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
          }
        }
      }; // This is so gross but it's at least non-critical and can be removed if
      // it causes problems. This is meant to give a nicer error message for
      // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
      // ...)) which otherwise throws a "_processChildContext is not a function"
      // exception.


      Object.defineProperty(fakeInternalInstance, '_processChildContext', {
        enumerable: false,
        value: function () {
          invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
        }
      });
      Object.freeze(fakeInternalInstance);
    }

    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
      var prevState = workInProgress.memoizedState;
      {
        if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          // Invoke the function an extra time to help detect side-effects.
          getDerivedStateFromProps(nextProps, prevState);
        }
      }
      var partialState = getDerivedStateFromProps(nextProps, prevState);
      {
        warnOnUndefinedDerivedState(ctor, partialState);
      } // Merge the partial state and the previous state.

      var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
      workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
      // base state.

      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null && workInProgress.expirationTime === NoWork) {
        updateQueue.baseState = memoizedState;
      }
    }

    var classComponentUpdater = {
      isMounted: isMounted,
      enqueueSetState: function (inst, payload, callback) {
        var fiber = get(inst);
        var currentTime = requestCurrentTime();
        var expirationTime = computeExpirationForFiber(currentTime, fiber);
        var update = createUpdate(expirationTime);
        update.payload = payload;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback$1(callback, 'setState');
          }
          update.callback = callback;
        }

        flushPassiveEffects();
        enqueueUpdate(fiber, update);
        scheduleWork(fiber, expirationTime);
      },
      enqueueReplaceState: function (inst, payload, callback) {
        var fiber = get(inst);
        var currentTime = requestCurrentTime();
        var expirationTime = computeExpirationForFiber(currentTime, fiber);
        var update = createUpdate(expirationTime);
        update.tag = ReplaceState;
        update.payload = payload;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback$1(callback, 'replaceState');
          }
          update.callback = callback;
        }

        flushPassiveEffects();
        enqueueUpdate(fiber, update);
        scheduleWork(fiber, expirationTime);
      },
      enqueueForceUpdate: function (inst, callback) {
        var fiber = get(inst);
        var currentTime = requestCurrentTime();
        var expirationTime = computeExpirationForFiber(currentTime, fiber);
        var update = createUpdate(expirationTime);
        update.tag = ForceUpdate;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback$1(callback, 'forceUpdate');
          }
          update.callback = callback;
        }

        flushPassiveEffects();
        enqueueUpdate(fiber, update);
        scheduleWork(fiber, expirationTime);
      }
    };

    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
      var instance = workInProgress.stateNode;

      if (typeof instance.shouldComponentUpdate === 'function') {
        startPhaseTimer(workInProgress, 'shouldComponentUpdate');
        var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
        stopPhaseTimer();
        {
          !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;
        }
        return shouldUpdate;
      }

      if (ctor.prototype && ctor.prototype.isPureReactComponent) {
        return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
      }

      return true;
    }

    function checkClassInstance(workInProgress, ctor, newProps) {
      var instance = workInProgress.stateNode;
      {
        var name = getComponentName(ctor) || 'Component';
        var renderPresent = instance.render;

        if (!renderPresent) {
          if (ctor.prototype && typeof ctor.prototype.render === 'function') {
            warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
          } else {
            warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
          }
        }

        var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
        !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
        var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
        !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
        var noInstancePropTypes = !instance.propTypes;
        !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
        var noInstanceContextType = !instance.contextType;
        !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;
        var noInstanceContextTypes = !instance.contextTypes;
        !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;

        if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
          didWarnAboutContextTypeAndContextTypes.add(ctor);
          warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
        }

        var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
        !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;

        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
          warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
        }

        var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
        !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
        var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
        !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
        var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
        !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
        var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
        !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
        var hasMutatedProps = instance.props !== newProps;
        !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
        var noInstanceDefaultProps = !instance.defaultProps;
        !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

        if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
          warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
        }

        var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
        !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
        var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';
        !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
        var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';
        !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
        var _state = instance.state;

        if (_state && (typeof _state !== 'object' || isArray$1(_state))) {
          warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);
        }

        if (typeof instance.getChildContext === 'function') {
          !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
        }
      }
    }

    function adoptClassInstance(workInProgress, instance) {
      instance.updater = classComponentUpdater;
      workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

      set(instance, workInProgress);
      {
        instance._reactInternalInstance = fakeInternalInstance;
      }
    }

    function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {
      var isLegacyContextConsumer = false;
      var unmaskedContext = emptyContextObject;
      var context = null;
      var contextType = ctor.contextType;

      if (typeof contextType === 'object' && contextType !== null) {
        {
          if (contextType.$$typeof !== REACT_CONTEXT_TYPE && !didWarnAboutInvalidateContextType.has(ctor)) {
            didWarnAboutInvalidateContextType.add(ctor);
            warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext(). ' + 'Did you accidentally pass the Context.Provider instead?', getComponentName(ctor) || 'Component');
          }
        }
        context = readContext(contextType);
      } else {
        unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        var contextTypes = ctor.contextTypes;
        isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
        context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
      } // Instantiate twice to help detect side-effects.


      {
        if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          new ctor(props, context); // eslint-disable-line no-new
        }
      }
      var instance = new ctor(props, context);
      var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
      adoptClassInstance(workInProgress, instance);
      {
        if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
          var componentName = getComponentName(ctor) || 'Component';

          if (!didWarnAboutUninitializedState.has(componentName)) {
            didWarnAboutUninitializedState.add(componentName);
            warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
          }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.


        if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
          var foundWillMountName = null;
          var foundWillReceivePropsName = null;
          var foundWillUpdateName = null;

          if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
            foundWillMountName = 'componentWillMount';
          } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
            foundWillMountName = 'UNSAFE_componentWillMount';
          }

          if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
            foundWillReceivePropsName = 'componentWillReceiveProps';
          } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
            foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
          }

          if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
            foundWillUpdateName = 'componentWillUpdate';
          } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
            foundWillUpdateName = 'UNSAFE_componentWillUpdate';
          }

          if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
            var _componentName = getComponentName(ctor) || 'Component';

            var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

            if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
              didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
              warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
            }
          }
        }
      } // Cache unmasked context so we can avoid recreating masked context unless necessary.
      // ReactFiberContext usually updates this cache but can't for newly-created instances.

      if (isLegacyContextConsumer) {
        cacheContext(workInProgress, unmaskedContext, context);
      }

      return instance;
    }

    function callComponentWillMount(workInProgress, instance) {
      startPhaseTimer(workInProgress, 'componentWillMount');
      var oldState = instance.state;

      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }

      stopPhaseTimer();

      if (oldState !== instance.state) {
        {
          warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
        }
        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
      }
    }

    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
      var oldState = instance.state;
      startPhaseTimer(workInProgress, 'componentWillReceiveProps');

      if (typeof instance.componentWillReceiveProps === 'function') {
        instance.componentWillReceiveProps(newProps, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
      }

      stopPhaseTimer();

      if (instance.state !== oldState) {
        {
          var componentName = getComponentName(workInProgress.type) || 'Component';

          if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
            didWarnAboutStateAssignmentForComponent.add(componentName);
            warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
          }
        }
        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
      }
    } // Invokes the mount life-cycles on a previously never rendered instance.


    function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
      {
        checkClassInstance(workInProgress, ctor, newProps);
      }
      var instance = workInProgress.stateNode;
      instance.props = newProps;
      instance.state = workInProgress.memoizedState;
      instance.refs = emptyRefsObject;
      var contextType = ctor.contextType;

      if (typeof contextType === 'object' && contextType !== null) {
        instance.context = readContext(contextType);
      } else {
        var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        instance.context = getMaskedContext(workInProgress, unmaskedContext);
      }

      {
        if (instance.state === newProps) {
          var componentName = getComponentName(ctor) || 'Component';

          if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
            didWarnAboutDirectlyAssigningPropsToState.add(componentName);
            warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
          }
        }

        if (workInProgress.mode & StrictMode) {
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        }

        if (warnAboutDeprecatedLifecycles) {
          ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);
        }
      }
      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null) {
        processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
        instance.state = workInProgress.memoizedState;
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        instance.state = workInProgress.memoizedState;
      } // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.


      if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
        callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
        // process them now.

        updateQueue = workInProgress.updateQueue;

        if (updateQueue !== null) {
          processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
          instance.state = workInProgress.memoizedState;
        }
      }

      if (typeof instance.componentDidMount === 'function') {
        workInProgress.effectTag |= Update;
      }
    }

    function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
      var instance = workInProgress.stateNode;
      var oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context;
      var contextType = ctor.contextType;
      var nextContext = void 0;

      if (typeof contextType === 'object' && contextType !== null) {
        nextContext = readContext(contextType);
      } else {
        var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
      var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
      // ever the previously attempted to render - not the "current". However,
      // during componentDidUpdate we pass the "current" props.
      // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.

      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
        if (oldProps !== newProps || oldContext !== nextContext) {
          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
      }

      resetHasForceUpdateBeforeProcessing();
      var oldState = workInProgress.memoizedState;
      var newState = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null) {
        processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
        newState = workInProgress.memoizedState;
      }

      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidMount === 'function') {
          workInProgress.effectTag |= Update;
        }

        return false;
      }

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        newState = workInProgress.memoizedState;
      }

      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

      if (shouldUpdate) {
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
          startPhaseTimer(workInProgress, 'componentWillMount');

          if (typeof instance.componentWillMount === 'function') {
            instance.componentWillMount();
          }

          if (typeof instance.UNSAFE_componentWillMount === 'function') {
            instance.UNSAFE_componentWillMount();
          }

          stopPhaseTimer();
        }

        if (typeof instance.componentDidMount === 'function') {
          workInProgress.effectTag |= Update;
        }
      } else {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidMount === 'function') {
          workInProgress.effectTag |= Update;
        } // If shouldComponentUpdate returned false, we should still update the
        // memoized state to indicate that this work can be reused.


        workInProgress.memoizedProps = newProps;
        workInProgress.memoizedState = newState;
      } // Update the existing instance's state, props, and context pointers even
      // if shouldComponentUpdate returns false.


      instance.props = newProps;
      instance.state = newState;
      instance.context = nextContext;
      return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.


    function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {
      var instance = workInProgress.stateNode;
      var oldProps = workInProgress.memoizedProps;
      instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);
      var oldContext = instance.context;
      var contextType = ctor.contextType;
      var nextContext = void 0;

      if (typeof contextType === 'object' && contextType !== null) {
        nextContext = readContext(contextType);
      } else {
        var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
      var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
      // ever the previously attempted to render - not the "current". However,
      // during componentDidUpdate we pass the "current" props.
      // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.

      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
        if (oldProps !== newProps || oldContext !== nextContext) {
          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
      }

      resetHasForceUpdateBeforeProcessing();
      var oldState = workInProgress.memoizedState;
      var newState = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null) {
        processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
        newState = workInProgress.memoizedState;
      }

      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Update;
          }
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Snapshot;
          }
        }

        return false;
      }

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        newState = workInProgress.memoizedState;
      }

      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

      if (shouldUpdate) {
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
          startPhaseTimer(workInProgress, 'componentWillUpdate');

          if (typeof instance.componentWillUpdate === 'function') {
            instance.componentWillUpdate(newProps, newState, nextContext);
          }

          if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
            instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
          }

          stopPhaseTimer();
        }

        if (typeof instance.componentDidUpdate === 'function') {
          workInProgress.effectTag |= Update;
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          workInProgress.effectTag |= Snapshot;
        }
      } else {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Update;
          }
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Snapshot;
          }
        } // If shouldComponentUpdate returned false, we should still update the
        // memoized props/state to indicate that this work can be reused.


        workInProgress.memoizedProps = newProps;
        workInProgress.memoizedState = newState;
      } // Update the existing instance's state, props, and context pointers even
      // if shouldComponentUpdate returns false.


      instance.props = newProps;
      instance.state = newState;
      instance.context = nextContext;
      return shouldUpdate;
    }

    var didWarnAboutMaps = void 0;
    var didWarnAboutGenerators = void 0;
    var didWarnAboutStringRefInStrictMode = void 0;
    var ownerHasKeyUseWarning = void 0;
    var ownerHasFunctionTypeWarning = void 0;

    var warnForMissingKey = function (child) {};

    {
      didWarnAboutMaps = false;
      didWarnAboutGenerators = false;
      didWarnAboutStringRefInStrictMode = {};
      /**
       * Warn if there's no key explicitly set on dynamic arrays of children or
       * object keys are not valid. This allows us to keep track of children between
       * updates.
       */

      ownerHasKeyUseWarning = {};
      ownerHasFunctionTypeWarning = {};

      warnForMissingKey = function (child) {
        if (child === null || typeof child !== 'object') {
          return;
        }

        if (!child._store || child._store.validated || child.key != null) {
          return;
        }

        !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        child._store.validated = true;
        var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();

        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
          return;
        }

        ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
        warning$1(false, 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.');
      };
    }
    var isArray = Array.isArray;

    function coerceRef(returnFiber, current$$1, element) {
      var mixedRef = element.ref;

      if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
        {
          if (returnFiber.mode & StrictMode) {
            var componentName = getComponentName(returnFiber.type) || 'Component';

            if (!didWarnAboutStringRefInStrictMode[componentName]) {
              warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackByFiberInDevAndProd(returnFiber));
              didWarnAboutStringRefInStrictMode[componentName] = true;
            }
          }
        }

        if (element._owner) {
          var owner = element._owner;
          var inst = void 0;

          if (owner) {
            var ownerFiber = owner;
            !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Function components cannot have refs. Did you mean to use React.forwardRef()?') : void 0;
            inst = ownerFiber.stateNode;
          }

          !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
          var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

          if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {
            return current$$1.ref;
          }

          var ref = function (value) {
            var refs = inst.refs;

            if (refs === emptyRefsObject) {
              // This is a lazy pooled frozen object, so we need to initialize.
              refs = inst.refs = {};
            }

            if (value === null) {
              delete refs[stringRef];
            } else {
              refs[stringRef] = value;
            }
          };

          ref._stringRef = stringRef;
          return ref;
        } else {
          !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function, a string, an object returned by React.createRef(), or null.') : void 0;
          !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;
        }
      }

      return mixedRef;
    }

    function throwOnInvalidObjectType(returnFiber, newChild) {
      if (returnFiber.type !== 'textarea') {
        var addendum = '';
        {
          addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();
        }
        invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
      }
    }

    function warnOnFunctionType() {
      var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();

      if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
        return;
      }

      ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;
      warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
    } // This wrapper function exists because I expect to clone the code in each path
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.


    function ChildReconciler(shouldTrackSideEffects) {
      function deleteChild(returnFiber, childToDelete) {
        if (!shouldTrackSideEffects) {
          // Noop.
          return;
        } // Deletions are added in reversed order so we add it to the front.
        // At this point, the return fiber's effect list is empty except for
        // deletions, so we can just append the deletion to the list. The remaining
        // effects aren't added until the complete phase. Once we implement
        // resuming, this may not be true.


        var last = returnFiber.lastEffect;

        if (last !== null) {
          last.nextEffect = childToDelete;
          returnFiber.lastEffect = childToDelete;
        } else {
          returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        }

        childToDelete.nextEffect = null;
        childToDelete.effectTag = Deletion;
      }

      function deleteRemainingChildren(returnFiber, currentFirstChild) {
        if (!shouldTrackSideEffects) {
          // Noop.
          return null;
        } // TODO: For the shouldClone case, this could be micro-optimized a bit by
        // assuming that after the first child we've already added everything.


        var childToDelete = currentFirstChild;

        while (childToDelete !== null) {
          deleteChild(returnFiber, childToDelete);
          childToDelete = childToDelete.sibling;
        }

        return null;
      }

      function mapRemainingChildren(returnFiber, currentFirstChild) {
        // Add the remaining children to a temporary map so that we can find them by
        // keys quickly. Implicit (null) keys get added to this set with their index
        var existingChildren = new Map();
        var existingChild = currentFirstChild;

        while (existingChild !== null) {
          if (existingChild.key !== null) {
            existingChildren.set(existingChild.key, existingChild);
          } else {
            existingChildren.set(existingChild.index, existingChild);
          }

          existingChild = existingChild.sibling;
        }

        return existingChildren;
      }

      function useFiber(fiber, pendingProps, expirationTime) {
        // We currently set sibling to null and index to 0 here because it is easy
        // to forget to do before returning it. E.g. for the single child case.
        var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
        clone.index = 0;
        clone.sibling = null;
        return clone;
      }

      function placeChild(newFiber, lastPlacedIndex, newIndex) {
        newFiber.index = newIndex;

        if (!shouldTrackSideEffects) {
          // Noop.
          return lastPlacedIndex;
        }

        var current$$1 = newFiber.alternate;

        if (current$$1 !== null) {
          var oldIndex = current$$1.index;

          if (oldIndex < lastPlacedIndex) {
            // This is a move.
            newFiber.effectTag = Placement;
            return lastPlacedIndex;
          } else {
            // This item can stay in place.
            return oldIndex;
          }
        } else {
          // This is an insertion.
          newFiber.effectTag = Placement;
          return lastPlacedIndex;
        }
      }

      function placeSingleChild(newFiber) {
        // This is simpler for the single child case. We only need to do a
        // placement for inserting new children.
        if (shouldTrackSideEffects && newFiber.alternate === null) {
          newFiber.effectTag = Placement;
        }

        return newFiber;
      }

      function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
        if (current$$1 === null || current$$1.tag !== HostText) {
          // Insert
          var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current$$1, textContent, expirationTime);
          existing.return = returnFiber;
          return existing;
        }
      }

      function updateElement(returnFiber, current$$1, element, expirationTime) {
        if (current$$1 !== null && current$$1.elementType === element.type) {
          // Move based on index
          var existing = useFiber(current$$1, element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, current$$1, element);
          existing.return = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          // Insert
          var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
          created.ref = coerceRef(returnFiber, current$$1, element);
          created.return = returnFiber;
          return created;
        }
      }

      function updatePortal(returnFiber, current$$1, portal, expirationTime) {
        if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
          // Insert
          var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current$$1, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        }
      }

      function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
        if (current$$1 === null || current$$1.tag !== Fragment) {
          // Insert
          var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current$$1, fragment, expirationTime);
          existing.return = returnFiber;
          return existing;
        }
      }

      function createChild(returnFiber, newChild, expirationTime) {
        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys. If the previous node is implicitly keyed
          // we can continue to replace it without aborting even if it is not a text
          // node.
          var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
          created.return = returnFiber;
          return created;
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);

                _created.ref = coerceRef(returnFiber, null, newChild);
                _created.return = returnFiber;
                return _created;
              }

            case REACT_PORTAL_TYPE:
              {
                var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);

                _created2.return = returnFiber;
                return _created2;
              }
          }

          if (isArray(newChild) || getIteratorFn(newChild)) {
            var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);

            _created3.return = returnFiber;
            return _created3;
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }
        return null;
      }

      function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
        // Update the fiber if the keys match, otherwise return null.
        var key = oldFiber !== null ? oldFiber.key : null;

        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys. If the previous node is implicitly keyed
          // we can continue to replace it without aborting even if it is not a text
          // node.
          if (key !== null) {
            return null;
          }

          return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                if (newChild.key === key) {
                  if (newChild.type === REACT_FRAGMENT_TYPE) {
                    return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
                  }

                  return updateElement(returnFiber, oldFiber, newChild, expirationTime);
                } else {
                  return null;
                }
              }

            case REACT_PORTAL_TYPE:
              {
                if (newChild.key === key) {
                  return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
                } else {
                  return null;
                }
              }
          }

          if (isArray(newChild) || getIteratorFn(newChild)) {
            if (key !== null) {
              return null;
            }

            return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }
        return null;
      }

      function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys, so we neither have to check the old nor
          // new node for the key. If both are text nodes, they match.
          var matchedFiber = existingChildren.get(newIdx) || null;
          return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

                if (newChild.type === REACT_FRAGMENT_TYPE) {
                  return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
                }

                return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
              }

            case REACT_PORTAL_TYPE:
              {
                var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

                return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
              }
          }

          if (isArray(newChild) || getIteratorFn(newChild)) {
            var _matchedFiber3 = existingChildren.get(newIdx) || null;

            return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }
        return null;
      }
      /**
       * Warns if there is a duplicate or missing key
       */


      function warnOnInvalidKey(child, knownKeys) {
        {
          if (typeof child !== 'object' || child === null) {
            return knownKeys;
          }

          switch (child.$$typeof) {
            case REACT_ELEMENT_TYPE:
            case REACT_PORTAL_TYPE:
              warnForMissingKey(child);
              var key = child.key;

              if (typeof key !== 'string') {
                break;
              }

              if (knownKeys === null) {
                knownKeys = new Set();
                knownKeys.add(key);
                break;
              }

              if (!knownKeys.has(key)) {
                knownKeys.add(key);
                break;
              }

              warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
              break;

            default:
              break;
          }
        }
        return knownKeys;
      }

      function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
        // This algorithm can't optimize by searching from both ends since we
        // don't have backpointers on fibers. I'm trying to see how far we can get
        // with that model. If it ends up not being worth the tradeoffs, we can
        // add it later.
        // Even with a two ended optimization, we'd want to optimize for the case
        // where there are few changes and brute force the comparison instead of
        // going for the Map. It'd like to explore hitting that path first in
        // forward-only mode and only go for the Map once we notice that we need
        // lots of look ahead. This doesn't handle reversal as well as two ended
        // search but that's unusual. Besides, for the two ended optimization to
        // work on Iterables, we'd need to copy the whole set.
        // In this first iteration, we'll just live with hitting the bad case
        // (adding everything to a Map) in for every insert/move.
        // If you change this code, also update reconcileChildrenIterator() which
        // uses the same algorithm.
        {
          // First, validate keys.
          var knownKeys = null;

          for (var i = 0; i < newChildren.length; i++) {
            var child = newChildren[i];
            knownKeys = warnOnInvalidKey(child, knownKeys);
          }
        }
        var resultingFirstChild = null;
        var previousNewFiber = null;
        var oldFiber = currentFirstChild;
        var lastPlacedIndex = 0;
        var newIdx = 0;
        var nextOldFiber = null;

        for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
          if (oldFiber.index > newIdx) {
            nextOldFiber = oldFiber;
            oldFiber = null;
          } else {
            nextOldFiber = oldFiber.sibling;
          }

          var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

          if (newFiber === null) {
            // TODO: This breaks on empty slots like null children. That's
            // unfortunate because it triggers the slow path all the time. We need
            // a better way to communicate whether this was a miss or null,
            // boolean, undefined, etc.
            if (oldFiber === null) {
              oldFiber = nextOldFiber;
            }

            break;
          }

          if (shouldTrackSideEffects) {
            if (oldFiber && newFiber.alternate === null) {
              // We matched the slot, but we didn't reuse the existing fiber, so we
              // need to delete the existing child.
              deleteChild(returnFiber, oldFiber);
            }
          }

          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

          if (previousNewFiber === null) {
            // TODO: Move out of the loop. This only happens for the first run.
            resultingFirstChild = newFiber;
          } else {
            // TODO: Defer siblings if we're not at the right index for this slot.
            // I.e. if we had null values before, then we want to defer this
            // for each null value. However, we also don't want to call updateSlot
            // with the previous one.
            previousNewFiber.sibling = newFiber;
          }

          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }

        if (newIdx === newChildren.length) {
          // We've reached the end of the new children. We can delete the rest.
          deleteRemainingChildren(returnFiber, oldFiber);
          return resultingFirstChild;
        }

        if (oldFiber === null) {
          // If we don't have any more existing children we can choose a fast path
          // since the rest will all be insertions.
          for (; newIdx < newChildren.length; newIdx++) {
            var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);

            if (!_newFiber) {
              continue;
            }

            lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              // TODO: Move out of the loop. This only happens for the first run.
              resultingFirstChild = _newFiber;
            } else {
              previousNewFiber.sibling = _newFiber;
            }

            previousNewFiber = _newFiber;
          }

          return resultingFirstChild;
        } // Add all children to a key map for quick lookups.


        var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

        for (; newIdx < newChildren.length; newIdx++) {
          var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);

          if (_newFiber2) {
            if (shouldTrackSideEffects) {
              if (_newFiber2.alternate !== null) {
                // The new fiber is a work in progress, but if there exists a
                // current, that means that we reused the fiber. We need to delete
                // it from the child list so that we don't add it to the deletion
                // list.
                existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
              }
            }

            lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              resultingFirstChild = _newFiber2;
            } else {
              previousNewFiber.sibling = _newFiber2;
            }

            previousNewFiber = _newFiber2;
          }
        }

        if (shouldTrackSideEffects) {
          // Any existing children that weren't consumed above were deleted. We need
          // to add them to the deletion list.
          existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        }

        return resultingFirstChild;
      }

      function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
        // This is the same implementation as reconcileChildrenArray(),
        // but using the iterator instead.
        var iteratorFn = getIteratorFn(newChildrenIterable);
        !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        {
          // We don't support rendering Generators because it's a mutation.
          // See https://github.com/facebook/react/issues/12995
          if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
          newChildrenIterable[Symbol.toStringTag] === 'Generator') {
            !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;
            didWarnAboutGenerators = true;
          } // Warn about using Maps as children


          if (newChildrenIterable.entries === iteratorFn) {
            !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
            didWarnAboutMaps = true;
          } // First, validate keys.
          // We'll get a different iterator later for the main pass.


          var _newChildren = iteratorFn.call(newChildrenIterable);

          if (_newChildren) {
            var knownKeys = null;

            var _step = _newChildren.next();

            for (; !_step.done; _step = _newChildren.next()) {
              var child = _step.value;
              knownKeys = warnOnInvalidKey(child, knownKeys);
            }
          }
        }
        var newChildren = iteratorFn.call(newChildrenIterable);
        !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;
        var resultingFirstChild = null;
        var previousNewFiber = null;
        var oldFiber = currentFirstChild;
        var lastPlacedIndex = 0;
        var newIdx = 0;
        var nextOldFiber = null;
        var step = newChildren.next();

        for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
          if (oldFiber.index > newIdx) {
            nextOldFiber = oldFiber;
            oldFiber = null;
          } else {
            nextOldFiber = oldFiber.sibling;
          }

          var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

          if (newFiber === null) {
            // TODO: This breaks on empty slots like null children. That's
            // unfortunate because it triggers the slow path all the time. We need
            // a better way to communicate whether this was a miss or null,
            // boolean, undefined, etc.
            if (!oldFiber) {
              oldFiber = nextOldFiber;
            }

            break;
          }

          if (shouldTrackSideEffects) {
            if (oldFiber && newFiber.alternate === null) {
              // We matched the slot, but we didn't reuse the existing fiber, so we
              // need to delete the existing child.
              deleteChild(returnFiber, oldFiber);
            }
          }

          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

          if (previousNewFiber === null) {
            // TODO: Move out of the loop. This only happens for the first run.
            resultingFirstChild = newFiber;
          } else {
            // TODO: Defer siblings if we're not at the right index for this slot.
            // I.e. if we had null values before, then we want to defer this
            // for each null value. However, we also don't want to call updateSlot
            // with the previous one.
            previousNewFiber.sibling = newFiber;
          }

          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }

        if (step.done) {
          // We've reached the end of the new children. We can delete the rest.
          deleteRemainingChildren(returnFiber, oldFiber);
          return resultingFirstChild;
        }

        if (oldFiber === null) {
          // If we don't have any more existing children we can choose a fast path
          // since the rest will all be insertions.
          for (; !step.done; newIdx++, step = newChildren.next()) {
            var _newFiber3 = createChild(returnFiber, step.value, expirationTime);

            if (_newFiber3 === null) {
              continue;
            }

            lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              // TODO: Move out of the loop. This only happens for the first run.
              resultingFirstChild = _newFiber3;
            } else {
              previousNewFiber.sibling = _newFiber3;
            }

            previousNewFiber = _newFiber3;
          }

          return resultingFirstChild;
        } // Add all children to a key map for quick lookups.


        var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

        for (; !step.done; newIdx++, step = newChildren.next()) {
          var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);

          if (_newFiber4 !== null) {
            if (shouldTrackSideEffects) {
              if (_newFiber4.alternate !== null) {
                // The new fiber is a work in progress, but if there exists a
                // current, that means that we reused the fiber. We need to delete
                // it from the child list so that we don't add it to the deletion
                // list.
                existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
              }
            }

            lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              resultingFirstChild = _newFiber4;
            } else {
              previousNewFiber.sibling = _newFiber4;
            }

            previousNewFiber = _newFiber4;
          }
        }

        if (shouldTrackSideEffects) {
          // Any existing children that weren't consumed above were deleted. We need
          // to add them to the deletion list.
          existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        }

        return resultingFirstChild;
      }

      function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
        // There's no need to check for keys on text nodes since we don't have a
        // way to define them.
        if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
          // We already have an existing node so let's just update it and delete
          // the rest.
          deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
          var existing = useFiber(currentFirstChild, textContent, expirationTime);
          existing.return = returnFiber;
          return existing;
        } // The existing first child is not a text node so we need to create one
        // and delete the existing ones.


        deleteRemainingChildren(returnFiber, currentFirstChild);
        var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
        created.return = returnFiber;
        return created;
      }

      function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
        var key = element.key;
        var child = currentFirstChild;

        while (child !== null) {
          // TODO: If key === null and child.key === null, then this only applies to
          // the first item in the list.
          if (child.key === key) {
            if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type) {
              deleteRemainingChildren(returnFiber, child.sibling);
              var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
              existing.ref = coerceRef(returnFiber, child, element);
              existing.return = returnFiber;
              {
                existing._debugSource = element._source;
                existing._debugOwner = element._owner;
              }
              return existing;
            } else {
              deleteRemainingChildren(returnFiber, child);
              break;
            }
          } else {
            deleteChild(returnFiber, child);
          }

          child = child.sibling;
        }

        if (element.type === REACT_FRAGMENT_TYPE) {
          var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
          created.return = returnFiber;
          return created;
        } else {
          var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);

          _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
          _created4.return = returnFiber;
          return _created4;
        }
      }

      function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
        var key = portal.key;
        var child = currentFirstChild;

        while (child !== null) {
          // TODO: If key === null and child.key === null, then this only applies to
          // the first item in the list.
          if (child.key === key) {
            if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
              deleteRemainingChildren(returnFiber, child.sibling);
              var existing = useFiber(child, portal.children || [], expirationTime);
              existing.return = returnFiber;
              return existing;
            } else {
              deleteRemainingChildren(returnFiber, child);
              break;
            }
          } else {
            deleteChild(returnFiber, child);
          }

          child = child.sibling;
        }

        var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
        created.return = returnFiber;
        return created;
      } // This API will tag the children with the side-effect of the reconciliation
      // itself. They will be added to the side-effect list as we pass through the
      // children and the parent.


      function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
        // This function is not recursive.
        // If the top level item is an array, we treat it as a set of children,
        // not as a fragment. Nested arrays on the other hand will be treated as
        // fragment nodes. Recursion happens at the normal flow.
        // Handle top level unkeyed fragments as if they were arrays.
        // This leads to an ambiguity between <>{[...]}</> and <>...</>.
        // We treat the ambiguous cases above the same.
        var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

        if (isUnkeyedTopLevelFragment) {
          newChild = newChild.props.children;
        } // Handle object types


        var isObject = typeof newChild === 'object' && newChild !== null;

        if (isObject) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));

            case REACT_PORTAL_TYPE:
              return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
          }
        }

        if (typeof newChild === 'string' || typeof newChild === 'number') {
          return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
        }

        if (isArray(newChild)) {
          return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
        }

        if (getIteratorFn(newChild)) {
          return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
        }

        if (isObject) {
          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }

        if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
          // If the new child is undefined, and the return fiber is a composite
          // component, throw an error. If Fiber return types are disabled,
          // we already threw above.
          switch (returnFiber.tag) {
            case ClassComponent:
              {
                {
                  var instance = returnFiber.stateNode;

                  if (instance.render._isMockFunction) {
                    // We allow auto-mocks to proceed as if they're returning null.
                    break;
                  }
                }
              }
            // Intentionally fall through to the next case, which handles both
            // functions and classes
            // eslint-disable-next-lined no-fallthrough

            case FunctionComponent:
              {
                var Component = returnFiber.type;
                invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
              }
          }
        } // Remaining cases are all treated as empty.


        return deleteRemainingChildren(returnFiber, currentFirstChild);
      }

      return reconcileChildFibers;
    }

    var reconcileChildFibers = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);

    function cloneChildFibers(current$$1, workInProgress) {
      !(current$$1 === null || workInProgress.child === current$$1.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

      if (workInProgress.child === null) {
        return;
      }

      var currentChild = workInProgress.child;
      var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
      workInProgress.child = newChild;
      newChild.return = workInProgress;

      while (currentChild.sibling !== null) {
        currentChild = currentChild.sibling;
        newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
        newChild.return = workInProgress;
      }

      newChild.sibling = null;
    }

    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);

    function requiredContext(c) {
      !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      return c;
    }

    function getRootHostContainer() {
      var rootInstance = requiredContext(rootInstanceStackCursor.current);
      return rootInstance;
    }

    function pushHostContainer(fiber, nextRootInstance) {
      // Push current root instance onto the stack;
      // This allows us to reset root when portals are popped.
      push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
      // This enables us to pop only Fibers that provide unique contexts.

      push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
      // However, we can't just call getRootHostContext() and push it because
      // we'd have a different number of entries on the stack depending on
      // whether getRootHostContext() throws somewhere in renderer code or not.
      // So we push an empty value first. This lets us safely unwind on errors.

      push(contextStackCursor$1, NO_CONTEXT, fiber);
      var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

      pop(contextStackCursor$1, fiber);
      push(contextStackCursor$1, nextRootContext, fiber);
    }

    function popHostContainer(fiber) {
      pop(contextStackCursor$1, fiber);
      pop(contextFiberStackCursor, fiber);
      pop(rootInstanceStackCursor, fiber);
    }

    function getHostContext() {
      var context = requiredContext(contextStackCursor$1.current);
      return context;
    }

    function pushHostContext(fiber) {
      var rootInstance = requiredContext(rootInstanceStackCursor.current);
      var context = requiredContext(contextStackCursor$1.current);
      var nextContext = getChildHostContext(context, fiber.type, rootInstance); // Don't push this Fiber's context unless it's unique.

      if (context === nextContext) {
        return;
      } // Track the context and the Fiber that provided it.
      // This enables us to pop only Fibers that provide unique contexts.


      push(contextFiberStackCursor, fiber, fiber);
      push(contextStackCursor$1, nextContext, fiber);
    }

    function popHostContext(fiber) {
      // Do not pop unless this Fiber provided the current context.
      // pushHostContext() only pushes Fibers that provide unique contexts.
      if (contextFiberStackCursor.current !== fiber) {
        return;
      }

      pop(contextStackCursor$1, fiber);
      pop(contextFiberStackCursor, fiber);
    }

    var NoEffect$1 =
    /*             */
    0;
    var UnmountSnapshot =
    /*      */
    2;
    var UnmountMutation =
    /*      */
    4;
    var MountMutation =
    /*        */
    8;
    var UnmountLayout =
    /*        */
    16;
    var MountLayout =
    /*          */
    32;
    var MountPassive =
    /*         */
    64;
    var UnmountPassive =
    /*       */
    128;
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var didWarnAboutMismatchedHooksForComponent = void 0;
    {
      didWarnAboutMismatchedHooksForComponent = new Set();
    } // These are set right before calling the component.

    var renderExpirationTime = NoWork; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.

    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.

    var firstCurrentHook = null;
    var currentHook = null;
    var nextCurrentHook = null;
    var firstWorkInProgressHook = null;
    var workInProgressHook = null;
    var nextWorkInProgressHook = null;
    var remainingExpirationTime = NoWork;
    var componentUpdateQueue = null;
    var sideEffectTag = 0; // Updates scheduled during render will trigger an immediate re-render at the
    // end of the current pass. We can't store these updates on the normal queue,
    // because if the work is aborted, they should be discarded. Because this is
    // a relatively rare case, we also don't want to add an additional field to
    // either the hook or queue object types. So we store them in a lazily create
    // map of queue -> render-phase updates, which are discarded once the component
    // completes without re-rendering.
    // Whether an update was scheduled during the currently executing render pass.

    var didScheduleRenderPhaseUpdate = false; // Lazily created map of render-phase updates

    var renderPhaseUpdates = null; // Counter to prevent infinite loops.

    var numberOfReRenders = 0;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

    var currentHookNameInDev = null;

    function warnOnHookMismatchInDev() {
      {
        var componentName = getComponentName(currentlyRenderingFiber$1.type);

        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
          didWarnAboutMismatchedHooksForComponent.add(componentName);
          var secondColumnStart = 22;
          var table = '';
          var prevHook = firstCurrentHook;
          var nextHook = firstWorkInProgressHook;
          var n = 1;

          while (prevHook !== null && nextHook !== null) {
            var oldHookName = prevHook._debugType;
            var newHookName = nextHook._debugType;
            var row = n + '. ' + oldHookName; // Extra space so second column lines up
            // lol @ IE not supporting String#repeat

            while (row.length < secondColumnStart) {
              row += ' ';
            }

            row += newHookName + '\n';
            table += row;
            prevHook = prevHook.next;
            nextHook = nextHook.next;
            n++;
          }

          warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\n\n' + '   Previous render    Next render\n' + '   -------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
        }
      }
    }

    function throwInvalidHookError() {
      invariant(false, 'Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)');
    }

    function areHookInputsEqual(nextDeps, prevDeps) {
      if (prevDeps === null) {
        {
          warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
        }
        return false;
      }

      {
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) {
          warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, '[' + nextDeps.join(', ') + ']', '[' + prevDeps.join(', ') + ']');
        }
      }

      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
        if (is(nextDeps[i], prevDeps[i])) {
          continue;
        }

        return false;
      }

      return true;
    }

    function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
      renderExpirationTime = nextRenderExpirationTime;
      currentlyRenderingFiber$1 = workInProgress;
      firstCurrentHook = nextCurrentHook = current !== null ? current.memoizedState : null; // The following should have already been reset
      // currentHook = null;
      // workInProgressHook = null;
      // remainingExpirationTime = NoWork;
      // componentUpdateQueue = null;
      // didScheduleRenderPhaseUpdate = false;
      // renderPhaseUpdates = null;
      // numberOfReRenders = 0;
      // sideEffectTag = 0;

      {
        ReactCurrentDispatcher$1.current = nextCurrentHook === null ? HooksDispatcherOnMountInDEV : HooksDispatcherOnUpdateInDEV;
      }
      var children = Component(props, refOrContext);

      if (didScheduleRenderPhaseUpdate) {
        do {
          didScheduleRenderPhaseUpdate = false;
          numberOfReRenders += 1; // Start over from the beginning of the list

          firstCurrentHook = nextCurrentHook = current !== null ? current.memoizedState : null;
          nextWorkInProgressHook = firstWorkInProgressHook;
          currentHook = null;
          workInProgressHook = null;
          componentUpdateQueue = null;
          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
          children = Component(props, refOrContext);
        } while (didScheduleRenderPhaseUpdate);

        renderPhaseUpdates = null;
        numberOfReRenders = 0;
      }

      {
        currentHookNameInDev = null;
      } // We can assume the previous dispatcher is always this one, since we set it
      // at the beginning of the render phase and there's no re-entrancy.

      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
      var renderedWork = currentlyRenderingFiber$1;
      renderedWork.memoizedState = firstWorkInProgressHook;
      renderedWork.expirationTime = remainingExpirationTime;
      renderedWork.updateQueue = componentUpdateQueue;
      renderedWork.effectTag |= sideEffectTag;
      var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
      renderExpirationTime = NoWork;
      currentlyRenderingFiber$1 = null;
      firstCurrentHook = null;
      currentHook = null;
      nextCurrentHook = null;
      firstWorkInProgressHook = null;
      workInProgressHook = null;
      nextWorkInProgressHook = null;
      remainingExpirationTime = NoWork;
      componentUpdateQueue = null;
      sideEffectTag = 0; // These were reset above
      // didScheduleRenderPhaseUpdate = false;
      // renderPhaseUpdates = null;
      // numberOfReRenders = 0;

      !!didRenderTooFewHooks ? invariant(false, 'Rendered fewer hooks than expected. This may be caused by an accidental early return statement.') : void 0;
      return children;
    }

    function bailoutHooks(current, workInProgress, expirationTime) {
      workInProgress.updateQueue = current.updateQueue;
      workInProgress.effectTag &= ~(Passive | Update);

      if (current.expirationTime <= expirationTime) {
        current.expirationTime = NoWork;
      }
    }

    function resetHooks() {
      // We can assume the previous dispatcher is always this one, since we set it
      // at the beginning of the render phase and there's no re-entrancy.
      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher; // This is used to reset the state of this module when a component throws.
      // It's also called inside mountIndeterminateComponent if we determine the
      // component is a module-style component.

      renderExpirationTime = NoWork;
      currentlyRenderingFiber$1 = null;
      firstCurrentHook = null;
      currentHook = null;
      nextCurrentHook = null;
      firstWorkInProgressHook = null;
      workInProgressHook = null;
      nextWorkInProgressHook = null;
      remainingExpirationTime = NoWork;
      componentUpdateQueue = null;
      sideEffectTag = 0;
      {
        currentHookNameInDev = null;
      }
      didScheduleRenderPhaseUpdate = false;
      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    function mountWorkInProgressHook() {
      var hook = {
        memoizedState: null,
        baseState: null,
        queue: null,
        baseUpdate: null,
        next: null
      };
      {
        hook._debugType = currentHookNameInDev;
      }

      if (workInProgressHook === null) {
        // This is the first hook in the list
        firstWorkInProgressHook = workInProgressHook = hook;
      } else {
        // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
      }

      return workInProgressHook;
    }

    function updateWorkInProgressHook() {
      // This function is used both for updates and for re-renders triggered by a
      // render phase update. It assumes there is either a current hook we can
      // clone, or a work-in-progress hook from a previous render pass that we can
      // use as a base. When we reach the end of the base list, we must switch to
      // the dispatcher used for mounts.
      if (nextWorkInProgressHook !== null) {
        // There's already a work-in-progress. Reuse it.
        workInProgressHook = nextWorkInProgressHook;
        nextWorkInProgressHook = workInProgressHook.next;
        currentHook = nextCurrentHook;
        nextCurrentHook = currentHook !== null ? currentHook.next : null;
      } else {
        // Clone from the current hook.
        !(nextCurrentHook !== null) ? invariant(false, 'Rendered more hooks than during the previous render.') : void 0;
        currentHook = nextCurrentHook;
        var newHook = {
          memoizedState: currentHook.memoizedState,
          baseState: currentHook.baseState,
          queue: currentHook.queue,
          baseUpdate: currentHook.baseUpdate,
          next: null
        };

        if (workInProgressHook === null) {
          // This is the first hook in the list.
          workInProgressHook = firstWorkInProgressHook = newHook;
        } else {
          // Append to the end of the list.
          workInProgressHook = workInProgressHook.next = newHook;
        }

        nextCurrentHook = currentHook.next;
        {
          newHook._debugType = currentHookNameInDev;

          if (currentHookNameInDev !== currentHook._debugType) {
            warnOnHookMismatchInDev();
          }
        }
      }

      return workInProgressHook;
    }

    function createFunctionComponentUpdateQueue() {
      return {
        lastEffect: null
      };
    }

    function basicStateReducer(state, action) {
      return typeof action === 'function' ? action(state) : action;
    }

    function mountContext(context, observedBits) {
      {
        mountWorkInProgressHook();
      }
      return readContext(context, observedBits);
    }

    function updateContext(context, observedBits) {
      {
        updateWorkInProgressHook();
      }
      return readContext(context, observedBits);
    }

    function mountReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      var initialState = void 0;

      if (init !== undefined) {
        initialState = init(initialArg);
      } else {
        initialState = initialArg;
      }

      hook.memoizedState = hook.baseState = initialState;
      var queue = hook.queue = {
        last: null,
        dispatch: null,
        eagerReducer: reducer,
        eagerState: initialState
      };
      var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
      currentlyRenderingFiber$1, queue);
      return [hook.memoizedState, dispatch];
    }

    function updateReducer(reducer, initialArg, init) {
      var hook = updateWorkInProgressHook();
      var queue = hook.queue;
      !(queue !== null) ? invariant(false, 'Should have a queue. This is likely a bug in React. Please file an issue.') : void 0;

      if (numberOfReRenders > 0) {
        // This is a re-render. Apply the new render phase updates to the previous
        var _dispatch = queue.dispatch;

        if (renderPhaseUpdates !== null) {
          // Render phase updates are stored in a map of queue -> linked list
          var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

          if (firstRenderPhaseUpdate !== undefined) {
            renderPhaseUpdates.delete(queue);
            var newState = hook.memoizedState;
            var update = firstRenderPhaseUpdate;

            do {
              // Process this render phase update. We don't have to check the
              // priority because it will always be the same as the current
              // render's.
              var _action = update.action;
              newState = reducer(newState, _action);
              update = update.next;
            } while (update !== null); // Mark that the fiber performed work, but only if the new state is
            // different from the current state.


            if (!is(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }

            hook.memoizedState = newState; // Don't persist the state accumlated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.

            if (hook.baseUpdate === queue.last) {
              hook.baseState = newState;
            }

            return [newState, _dispatch];
          }
        }

        return [hook.memoizedState, _dispatch];
      } // The last update in the entire queue


      var last = queue.last; // The last update that is part of the base state.

      var baseUpdate = hook.baseUpdate;
      var baseState = hook.baseState; // Find the first unprocessed update.

      var first = void 0;

      if (baseUpdate !== null) {
        if (last !== null) {
          // For the first update, the queue is a circular linked list where
          // `queue.last.next = queue.first`. Once the first update commits, and
          // the `baseUpdate` is no longer empty, we can unravel the list.
          last.next = null;
        }

        first = baseUpdate.next;
      } else {
        first = last !== null ? last.next : null;
      }

      if (first !== null) {
        var _newState = baseState;
        var newBaseState = null;
        var newBaseUpdate = null;
        var prevUpdate = baseUpdate;
        var _update = first;
        var didSkip = false;

        do {
          var updateExpirationTime = _update.expirationTime;

          if (updateExpirationTime < renderExpirationTime) {
            // Priority is insufficient. Skip this update. If this is the first
            // skipped update, the previous update/state is the new base
            // update/state.
            if (!didSkip) {
              didSkip = true;
              newBaseUpdate = prevUpdate;
              newBaseState = _newState;
            } // Update the remaining priority in the queue.


            if (updateExpirationTime > remainingExpirationTime) {
              remainingExpirationTime = updateExpirationTime;
            }
          } else {
            // Process this update.
            if (_update.eagerReducer === reducer) {
              // If this update was processed eagerly, and its reducer matches the
              // current reducer, we can use the eagerly computed state.
              _newState = _update.eagerState;
            } else {
              var _action2 = _update.action;
              _newState = reducer(_newState, _action2);
            }
          }

          prevUpdate = _update;
          _update = _update.next;
        } while (_update !== null && _update !== first);

        if (!didSkip) {
          newBaseUpdate = prevUpdate;
          newBaseState = _newState;
        } // Mark that the fiber performed work, but only if the new state is
        // different from the current state.


        if (!is(_newState, hook.memoizedState)) {
          markWorkInProgressReceivedUpdate();
        }

        hook.memoizedState = _newState;
        hook.baseUpdate = newBaseUpdate;
        hook.baseState = newBaseState;
        queue.eagerReducer = reducer;
        queue.eagerState = _newState;
      }

      var dispatch = queue.dispatch;
      return [hook.memoizedState, dispatch];
    }

    function mountState(initialState) {
      var hook = mountWorkInProgressHook();

      if (typeof initialState === 'function') {
        initialState = initialState();
      }

      hook.memoizedState = hook.baseState = initialState;
      var queue = hook.queue = {
        last: null,
        dispatch: null,
        eagerReducer: basicStateReducer,
        eagerState: initialState
      };
      var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
      currentlyRenderingFiber$1, queue);
      return [hook.memoizedState, dispatch];
    }

    function updateState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    }

    function pushEffect(tag, create, destroy, deps) {
      var effect = {
        tag: tag,
        create: create,
        destroy: destroy,
        deps: deps,
        // Circular
        next: null
      };

      if (componentUpdateQueue === null) {
        componentUpdateQueue = createFunctionComponentUpdateQueue();
        componentUpdateQueue.lastEffect = effect.next = effect;
      } else {
        var _lastEffect = componentUpdateQueue.lastEffect;

        if (_lastEffect === null) {
          componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
          var firstEffect = _lastEffect.next;
          _lastEffect.next = effect;
          effect.next = firstEffect;
          componentUpdateQueue.lastEffect = effect;
        }
      }

      return effect;
    }

    function mountRef(initialValue) {
      var hook = mountWorkInProgressHook();
      var ref = {
        current: initialValue
      };
      {
        Object.seal(ref);
      }
      hook.memoizedState = ref;
      return ref;
    }

    function updateRef(initialValue) {
      var hook = updateWorkInProgressHook();
      return hook.memoizedState;
    }

    function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      sideEffectTag |= fiberEffectTag;
      hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);
    }

    function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var destroy = undefined;

      if (currentHook !== null) {
        var prevEffect = currentHook.memoizedState;
        destroy = prevEffect.destroy;

        if (nextDeps !== null) {
          var prevDeps = prevEffect.deps;

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            pushEffect(NoEffect$1, create, destroy, nextDeps);
            return;
          }
        }
      }

      sideEffectTag |= fiberEffectTag;
      hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);
    }

    function mountEffect(create, deps) {
      return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
    }

    function updateEffect(create, deps) {
      return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
    }

    function mountLayoutEffect(create, deps) {
      return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
    }

    function updateLayoutEffect(create, deps) {
      return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
    }

    function imperativeHandleEffect(create, ref) {
      if (typeof ref === 'function') {
        var refCallback = ref;

        var _inst = create();

        refCallback(_inst);
        return function () {
          refCallback(null);
        };
      } else if (ref !== null && ref !== undefined) {
        var refObject = ref;
        {
          !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;
        }

        var _inst2 = create();

        refObject.current = _inst2;
        return function () {
          refObject.current = null;
        };
      }
    }

    function mountImperativeHandle(ref, create, deps) {
      {
        !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
      } // TODO: If deps are provided, should we skip comparing the ref itself?

      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
      return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }

    function updateImperativeHandle(ref, create, deps) {
      {
        !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
      } // TODO: If deps are provided, should we skip comparing the ref itself?

      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
      return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }

    function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
      // The react-debug-hooks package injects its own implementation
      // so that e.g. DevTools can display custom hook values.
    }

    var updateDebugValue = mountDebugValue;

    function mountCallback(callback, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      hook.memoizedState = [callback, nextDeps];
      return callback;
    }

    function updateCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var prevState = hook.memoizedState;

      if (prevState !== null) {
        if (nextDeps !== null) {
          var prevDeps = prevState[1];

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            return prevState[0];
          }
        }
      }

      hook.memoizedState = [callback, nextDeps];
      return callback;
    }

    function mountMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var nextValue = nextCreate();
      hook.memoizedState = [nextValue, nextDeps];
      return nextValue;
    }

    function updateMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var prevState = hook.memoizedState;

      if (prevState !== null) {
        // Assume these are defined. If they're not, areHookInputsEqual will warn.
        if (nextDeps !== null) {
          var prevDeps = prevState[1];

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            return prevState[0];
          }
        }
      }

      var nextValue = nextCreate();
      hook.memoizedState = [nextValue, nextDeps];
      return nextValue;
    } // in a test-like environment, we want to warn if dispatchAction()
    // is called outside of a batchedUpdates/TestUtils.act(...) call.


    var shouldWarnForUnbatchedSetState = false;
    {
      // jest isn't a 'global', it's just exposed to tests via a wrapped function
      // further, this isn't a test file, so flow doesn't recognize the symbol. So...
      // $FlowExpectedError - because requirements don't give a damn about your type sigs.
      if ('undefined' !== typeof jest) {
        shouldWarnForUnbatchedSetState = true;
      }
    }

    function dispatchAction(fiber, queue, action) {
      !(numberOfReRenders < RE_RENDER_LIMIT) ? invariant(false, 'Too many re-renders. React limits the number of renders to prevent an infinite loop.') : void 0;
      {
        !(arguments.length <= 3) ? warning$1(false, "State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;
      }
      var alternate = fiber.alternate;

      if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdate = true;
        var update = {
          expirationTime: renderExpirationTime,
          action: action,
          eagerReducer: null,
          eagerState: null,
          next: null
        };

        if (renderPhaseUpdates === null) {
          renderPhaseUpdates = new Map();
        }

        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (firstRenderPhaseUpdate === undefined) {
          renderPhaseUpdates.set(queue, update);
        } else {
          // Append the update to the end of the list.
          var lastRenderPhaseUpdate = firstRenderPhaseUpdate;

          while (lastRenderPhaseUpdate.next !== null) {
            lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
          }

          lastRenderPhaseUpdate.next = update;
        }
      } else {
        flushPassiveEffects();
        var currentTime = requestCurrentTime();

        var _expirationTime = computeExpirationForFiber(currentTime, fiber);

        var _update2 = {
          expirationTime: _expirationTime,
          action: action,
          eagerReducer: null,
          eagerState: null,
          next: null
        }; // Append the update to the end of the list.

        var _last = queue.last;

        if (_last === null) {
          // This is the first update. Create a circular list.
          _update2.next = _update2;
        } else {
          var first = _last.next;

          if (first !== null) {
            // Still circular.
            _update2.next = first;
          }

          _last.next = _update2;
        }

        queue.last = _update2;

        if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {
          // The queue is currently empty, which means we can eagerly compute the
          // next state before entering the render phase. If the new state is the
          // same as the current state, we may be able to bail out entirely.
          var _eagerReducer = queue.eagerReducer;

          if (_eagerReducer !== null) {
            var prevDispatcher = void 0;
            {
              prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            }

            try {
              var currentState = queue.eagerState;

              var _eagerState = _eagerReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
              // it, on the update object. If the reducer hasn't changed by the
              // time we enter the render phase, then the eager state can be used
              // without calling the reducer again.


              _update2.eagerReducer = _eagerReducer;
              _update2.eagerState = _eagerState;

              if (is(_eagerState, currentState)) {
                // Fast path. We can bail out without scheduling React to re-render.
                // It's still possible that we'll need to rebase this update later,
                // if the component re-renders for a different reason and by that
                // time the reducer has changed.
                return;
              }
            } catch (error) {// Suppress the error. It will throw again in the render phase.
            } finally {
              {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            }
          }
        }

        {
          if (shouldWarnForUnbatchedSetState === true) {
            warnIfNotCurrentlyBatchingInDev(fiber);
          }
        }
        scheduleWork(fiber, _expirationTime);
      }
    }

    var ContextOnlyDispatcher = {
      readContext: readContext,
      useCallback: throwInvalidHookError,
      useContext: throwInvalidHookError,
      useEffect: throwInvalidHookError,
      useImperativeHandle: throwInvalidHookError,
      useLayoutEffect: throwInvalidHookError,
      useMemo: throwInvalidHookError,
      useReducer: throwInvalidHookError,
      useRef: throwInvalidHookError,
      useState: throwInvalidHookError,
      useDebugValue: throwInvalidHookError
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    {
      var warnInvalidContextAccess = function () {
        warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
      };

      var warnInvalidHookAccess = function () {
        warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');
      };

      HooksDispatcherOnMountInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          return mountContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          return mountDebugValue(value, formatterFn);
        }
      };
      HooksDispatcherOnUpdateInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          return updateContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          return updateRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          return updateDebugValue(value, formatterFn);
        }
      };
      InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function (context, observedBits) {
          warnInvalidContextAccess();
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          warnInvalidHookAccess();
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          warnInvalidHookAccess();
          return mountContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          warnInvalidHookAccess();
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          warnInvalidHookAccess();
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          warnInvalidHookAccess();
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          warnInvalidHookAccess();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          warnInvalidHookAccess();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          warnInvalidHookAccess();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          warnInvalidHookAccess();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          warnInvalidHookAccess();
          return mountDebugValue(value, formatterFn);
        }
      };
      InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function (context, observedBits) {
          warnInvalidContextAccess();
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          warnInvalidHookAccess();
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          warnInvalidHookAccess();
          return updateContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          warnInvalidHookAccess();
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          warnInvalidHookAccess();
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          warnInvalidHookAccess();
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          warnInvalidHookAccess();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          warnInvalidHookAccess();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          warnInvalidHookAccess();
          return updateRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          warnInvalidHookAccess();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          warnInvalidHookAccess();
          return updateDebugValue(value, formatterFn);
        }
      };
    }
    var commitTime = 0;
    var profilerStartTime = -1;

    function getCommitTime() {
      return commitTime;
    }

    function recordCommitTime() {
      if (!enableProfilerTimer) {
        return;
      }

      commitTime = scheduler.unstable_now();
    }

    function startProfilerTimer(fiber) {
      if (!enableProfilerTimer) {
        return;
      }

      profilerStartTime = scheduler.unstable_now();

      if (fiber.actualStartTime < 0) {
        fiber.actualStartTime = scheduler.unstable_now();
      }
    }

    function stopProfilerTimerIfRunning(fiber) {
      if (!enableProfilerTimer) {
        return;
      }

      profilerStartTime = -1;
    }

    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
      if (!enableProfilerTimer) {
        return;
      }

      if (profilerStartTime >= 0) {
        var elapsedTime = scheduler.unstable_now() - profilerStartTime;
        fiber.actualDuration += elapsedTime;

        if (overrideBaseTime) {
          fiber.selfBaseDuration = elapsedTime;
        }

        profilerStartTime = -1;
      }
    } // The deepest Fiber on the stack involved in a hydration context.
    // This may have been an insertion or a hydration.


    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating = false;

    function enterHydrationState(fiber) {
      if (!supportsHydration) {
        return false;
      }

      var parentInstance = fiber.stateNode.containerInfo;
      nextHydratableInstance = getFirstHydratableChild(parentInstance);
      hydrationParentFiber = fiber;
      isHydrating = true;
      return true;
    }

    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber) {
      if (!supportsHydration) {
        return false;
      }

      var suspenseInstance = fiber.stateNode;
      nextHydratableInstance = getNextHydratableSibling(suspenseInstance);
      popToNextHostParent(fiber);
      isHydrating = true;
      return true;
    }

    function deleteHydratableInstance(returnFiber, instance) {
      {
        switch (returnFiber.tag) {
          case HostRoot:
            didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
            break;

          case HostComponent:
            didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
            break;
        }
      }
      var childToDelete = createFiberFromHostInstanceForDeletion();
      childToDelete.stateNode = instance;
      childToDelete.return = returnFiber;
      childToDelete.effectTag = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
      // these children are not part of the reconciliation list of children.
      // Even if we abort and rereconcile the children, that will try to hydrate
      // again and the nodes are still in the host tree so these will be
      // recreated.

      if (returnFiber.lastEffect !== null) {
        returnFiber.lastEffect.nextEffect = childToDelete;
        returnFiber.lastEffect = childToDelete;
      } else {
        returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
      }
    }

    function insertNonHydratedInstance(returnFiber, fiber) {
      fiber.effectTag |= Placement;
      {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;

              switch (fiber.tag) {
                case HostComponent:
                  var type = fiber.type;
                  var props = fiber.pendingProps;
                  didNotFindHydratableContainerInstance(parentContainer, type, props);
                  break;

                case HostText:
                  var text = fiber.pendingProps;
                  didNotFindHydratableContainerTextInstance(parentContainer, text);
                  break;

                case SuspenseComponent:
                  break;
              }

              break;
            }

          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;

              switch (fiber.tag) {
                case HostComponent:
                  var _type = fiber.type;
                  var _props = fiber.pendingProps;
                  didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
                  break;

                case HostText:
                  var _text = fiber.pendingProps;
                  didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                  break;

                case SuspenseComponent:
                  didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);
                  break;
              }

              break;
            }

          default:
            return;
        }
      }
    }

    function tryHydrate(fiber, nextInstance) {
      switch (fiber.tag) {
        case HostComponent:
          {
            var type = fiber.type;
            var props = fiber.pendingProps;
            var instance = canHydrateInstance(nextInstance, type, props);

            if (instance !== null) {
              fiber.stateNode = instance;
              return true;
            }

            return false;
          }

        case HostText:
          {
            var text = fiber.pendingProps;
            var textInstance = canHydrateTextInstance(nextInstance, text);

            if (textInstance !== null) {
              fiber.stateNode = textInstance;
              return true;
            }

            return false;
          }

        case SuspenseComponent:
          {
            if (enableSuspenseServerRenderer) {
              var suspenseInstance = canHydrateSuspenseInstance(nextInstance);

              if (suspenseInstance !== null) {
                // Downgrade the tag to a dehydrated component until we've hydrated it.
                fiber.tag = DehydratedSuspenseComponent;
                fiber.stateNode = suspenseInstance;
                return true;
              }
            }

            return false;
          }

        default:
          return false;
      }
    }

    function tryToClaimNextHydratableInstance(fiber) {
      if (!isHydrating) {
        return;
      }

      var nextInstance = nextHydratableInstance;

      if (!nextInstance) {
        // Nothing to hydrate. Make it an insertion.
        insertNonHydratedInstance(hydrationParentFiber, fiber);
        isHydrating = false;
        hydrationParentFiber = fiber;
        return;
      }

      var firstAttemptedInstance = nextInstance;

      if (!tryHydrate(fiber, nextInstance)) {
        // If we can't hydrate this instance let's try the next one.
        // We use this as a heuristic. It's based on intuition and not data so it
        // might be flawed or unnecessary.
        nextInstance = getNextHydratableSibling(firstAttemptedInstance);

        if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
          // Nothing to hydrate. Make it an insertion.
          insertNonHydratedInstance(hydrationParentFiber, fiber);
          isHydrating = false;
          hydrationParentFiber = fiber;
          return;
        } // We matched the next one, we'll now assume that the first one was
        // superfluous and we'll delete it. Since we can't eagerly delete it
        // we'll have to schedule a deletion. To do that, this node needs a dummy
        // fiber associated with it.


        deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
      }

      hydrationParentFiber = fiber;
      nextHydratableInstance = getFirstHydratableChild(nextInstance);
    }

    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
      if (!supportsHydration) {
        invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
      }

      var instance = fiber.stateNode;
      var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.

      fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
      // is a new ref we mark this as an update.

      if (updatePayload !== null) {
        return true;
      }

      return false;
    }

    function prepareToHydrateHostTextInstance(fiber) {
      if (!supportsHydration) {
        invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
      }

      var textInstance = fiber.stateNode;
      var textContent = fiber.memoizedProps;
      var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
      {
        if (shouldUpdate) {
          // We assume that prepareToHydrateHostTextInstance is called in a context where the
          // hydration parent is the parent host component of this host text.
          var returnFiber = hydrationParentFiber;

          if (returnFiber !== null) {
            switch (returnFiber.tag) {
              case HostRoot:
                {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                  break;
                }

              case HostComponent:
                {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                  break;
                }
            }
          }
        }
      }
      return shouldUpdate;
    }

    function skipPastDehydratedSuspenseInstance(fiber) {
      if (!supportsHydration) {
        invariant(false, 'Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
      }

      var suspenseInstance = fiber.stateNode;
      !suspenseInstance ? invariant(false, 'Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }

    function popToNextHostParent(fiber) {
      var parent = fiber.return;

      while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== DehydratedSuspenseComponent) {
        parent = parent.return;
      }

      hydrationParentFiber = parent;
    }

    function popHydrationState(fiber) {
      if (!supportsHydration) {
        return false;
      }

      if (fiber !== hydrationParentFiber) {
        // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
      }

      if (!isHydrating) {
        // If we're not currently hydrating but we're in a hydration context, then
        // we were an insertion and now need to pop up reenter hydration of our
        // siblings.
        popToNextHostParent(fiber);
        isHydrating = true;
        return false;
      }

      var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
      // We only do this deeper than head and body since they tend to have random
      // other nodes in them. We also ignore components with pure text content in
      // side of them.
      // TODO: Better heuristic.

      if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
        var nextInstance = nextHydratableInstance;

        while (nextInstance) {
          deleteHydratableInstance(fiber, nextInstance);
          nextInstance = getNextHydratableSibling(nextInstance);
        }
      }

      popToNextHostParent(fiber);
      nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
      return true;
    }

    function resetHydrationState() {
      if (!supportsHydration) {
        return;
      }

      hydrationParentFiber = null;
      nextHydratableInstance = null;
      isHydrating = false;
    }

    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass = void 0;
    var didWarnAboutContextTypeOnFunctionComponent = void 0;
    var didWarnAboutGetDerivedStateOnFunctionComponent = void 0;
    var didWarnAboutFunctionRefs = void 0;
    var didWarnAboutReassigningProps = void 0;
    {
      didWarnAboutBadClass = {};
      didWarnAboutContextTypeOnFunctionComponent = {};
      didWarnAboutGetDerivedStateOnFunctionComponent = {};
      didWarnAboutFunctionRefs = {};
      didWarnAboutReassigningProps = false;
    }

    function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
      if (current$$1 === null) {
        // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
      } else {
        // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
      }
    }

    function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {
      // This function is fork of reconcileChildren. It's used in cases where we
      // want to reconcile without matching against the existing set. This has the
      // effect of all current children being unmounted; even if the type and key
      // are the same, the old child is unmounted and a new child is created.
      //
      // To do this, we're going to go through the reconcile algorithm twice. In
      // the first pass, we schedule a deletion for all the current children by
      // passing null.
      workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime); // In the second pass, we mount the new children. The trick here is that we
      // pass null in place of where we usually pass the current child set. This has
      // the effect of remounting all children regardless of whether their their
      // identity matches.

      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    }

    function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
      // TODO: current can be non-null here even if the component
      // hasn't yet mounted. This happens after the first render suspends.
      // We'll need to figure out if this is fine or can cause issues.
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component), getCurrentFiberStackInDev);
          }
        }
      }
      var render = Component.render;
      var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

      var nextChildren = void 0;
      prepareToReadContext(workInProgress, renderExpirationTime);
      {
        ReactCurrentOwner$3.current = workInProgress;
        setCurrentPhase('render');
        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);

        if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          // Only double-render components with Hooks
          if (workInProgress.memoizedState !== null) {
            nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
          }
        }

        setCurrentPhase(null);
      }

      if (current$$1 !== null && !didReceiveUpdate) {
        bailoutHooks(current$$1, workInProgress, renderExpirationTime);
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
      if (current$$1 === null) {
        var type = Component.type;

        if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        Component.defaultProps === undefined) {
          // If this is a plain function component without default props,
          // and with only the default shallow comparison, we upgrade it
          // to a SimpleMemoComponent to allow fast path updates.
          workInProgress.tag = SimpleMemoComponent;
          workInProgress.type = type;
          {
            validateFunctionComponentInDev(workInProgress, type);
          }
          return updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
        }

        {
          var innerPropTypes = type.propTypes;

          if (innerPropTypes) {
            // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(type), getCurrentFiberStackInDev);
          }
        }
        var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
        child.ref = workInProgress.ref;
        child.return = workInProgress;
        workInProgress.child = child;
        return child;
      }

      {
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;

        if (_innerPropTypes) {
          // Inner memo component props aren't currently validated in createElement.
          // We could move it there, but we'd still need this for lazy code path.
          checkPropTypes(_innerPropTypes, nextProps, // Resolved props
          'prop', getComponentName(_type), getCurrentFiberStackInDev);
        }
      }
      var currentChild = current$$1.child; // This is always exactly one child

      if (updateExpirationTime < renderExpirationTime) {
        // This will be the props with resolved defaultProps,
        // unlike current.memoizedProps which will be the unresolved ones.
        var prevProps = currentChild.memoizedProps; // Default to shallow comparison

        var compare = Component.compare;
        compare = compare !== null ? compare : shallowEqual;

        if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;
      var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);
      newChild.ref = workInProgress.ref;
      newChild.return = workInProgress;
      workInProgress.child = newChild;
      return newChild;
    }

    function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
      // TODO: current can be non-null here even if the component
      // hasn't yet mounted. This happens when the inner render suspends.
      // We'll need to figure out if this is fine or can cause issues.
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var outerMemoType = workInProgress.elementType;

          if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
            // We warn when you define propTypes on lazy()
            // so let's just skip over it to find memo() outer wrapper.
            // Inner props for memo are validated later.
            outerMemoType = refineResolvedLazyComponent(outerMemoType);
          }

          var outerPropTypes = outerMemoType && outerMemoType.propTypes;

          if (outerPropTypes) {
            checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
            'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);
          } // Inner propTypes will be validated in the function component path.

        }
      }

      if (current$$1 !== null) {
        var prevProps = current$$1.memoizedProps;

        if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
          didReceiveUpdate = false;

          if (updateExpirationTime < renderExpirationTime) {
            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
          }
        }
      }

      return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
    }

    function updateFragment(current$$1, workInProgress, renderExpirationTime) {
      var nextChildren = workInProgress.pendingProps;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateMode(current$$1, workInProgress, renderExpirationTime) {
      var nextChildren = workInProgress.pendingProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateProfiler(current$$1, workInProgress, renderExpirationTime) {
      if (enableProfilerTimer) {
        workInProgress.effectTag |= Update;
      }

      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function markRef(current$$1, workInProgress) {
      var ref = workInProgress.ref;

      if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
        // Schedule a Ref effect
        workInProgress.effectTag |= Ref;
      }
    }

    function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component), getCurrentFiberStackInDev);
          }
        }
      }
      var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
      var context = getMaskedContext(workInProgress, unmaskedContext);
      var nextChildren = void 0;
      prepareToReadContext(workInProgress, renderExpirationTime);
      {
        ReactCurrentOwner$3.current = workInProgress;
        setCurrentPhase('render');
        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);

        if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          // Only double-render components with Hooks
          if (workInProgress.memoizedState !== null) {
            nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
          }
        }

        setCurrentPhase(null);
      }

      if (current$$1 !== null && !didReceiveUpdate) {
        bailoutHooks(current$$1, workInProgress, renderExpirationTime);
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component), getCurrentFiberStackInDev);
          }
        }
      } // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.

      var hasContext = void 0;

      if (isContextProvider(Component)) {
        hasContext = true;
        pushContextProvider(workInProgress);
      } else {
        hasContext = false;
      }

      prepareToReadContext(workInProgress, renderExpirationTime);
      var instance = workInProgress.stateNode;
      var shouldUpdate = void 0;

      if (instance === null) {
        if (current$$1 !== null) {
          // An class component without an instance only mounts if it suspended
          // inside a non- concurrent tree, in an inconsistent state. We want to
          // tree it like a new mount, even though an empty version of it already
          // committed. Disconnect the alternate pointers.
          current$$1.alternate = null;
          workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

          workInProgress.effectTag |= Placement;
        } // In the initial pass we might need to construct the instance.


        constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
        mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
        shouldUpdate = true;
      } else if (current$$1 === null) {
        // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
      } else {
        shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
      }

      var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);
      {
        var inst = workInProgress.stateNode;

        if (inst.props !== nextProps) {
          !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;
          didWarnAboutReassigningProps = true;
        }
      }
      return nextUnitOfWork;
    }

    function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
      // Refs should update even if shouldComponentUpdate returns false
      markRef(current$$1, workInProgress);
      var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

      if (!shouldUpdate && !didCaptureError) {
        // Context providers should defer to sCU for rendering
        if (hasContext) {
          invalidateContextProvider(workInProgress, Component, false);
        }

        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }

      var instance = workInProgress.stateNode; // Rerender

      ReactCurrentOwner$3.current = workInProgress;
      var nextChildren = void 0;

      if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
        // If we captured an error, but getDerivedStateFrom catch is not defined,
        // unmount all the children. componentDidCatch will schedule an update to
        // re-render a fallback. This is temporary until we migrate everyone to
        // the new API.
        // TODO: Warn in a future release.
        nextChildren = null;

        if (enableProfilerTimer) {
          stopProfilerTimerIfRunning(workInProgress);
        }
      } else {
        {
          setCurrentPhase('render');
          nextChildren = instance.render();

          if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
            instance.render();
          }

          setCurrentPhase(null);
        }
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;

      if (current$$1 !== null && didCaptureError) {
        // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);
      } else {
        reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      } // Memoize state using the values we just used to render.
      // TODO: Restructure so we never read values from the instance.


      workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

      if (hasContext) {
        invalidateContextProvider(workInProgress, Component, true);
      }

      return workInProgress.child;
    }

    function pushHostRootContext(workInProgress) {
      var root = workInProgress.stateNode;

      if (root.pendingContext) {
        pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
      } else if (root.context) {
        // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
      }

      pushHostContainer(workInProgress, root.containerInfo);
    }

    function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {
      pushHostRootContext(workInProgress);
      var updateQueue = workInProgress.updateQueue;
      !(updateQueue !== null) ? invariant(false, 'If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      var nextProps = workInProgress.pendingProps;
      var prevState = workInProgress.memoizedState;
      var prevChildren = prevState !== null ? prevState.element : null;
      processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
      var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
      // being called "element".

      var nextChildren = nextState.element;

      if (nextChildren === prevChildren) {
        // If the state is the same as before, that's a bailout because we had
        // no work that expires at this time.
        resetHydrationState();
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }

      var root = workInProgress.stateNode;

      if ((current$$1 === null || current$$1.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
        // If we don't have any current children this might be the first pass.
        // We always try to hydrate. If this isn't a hydration pass there won't
        // be any children to hydrate which is effectively the same thing as
        // not hydrating.
        // This is a bit of a hack. We track the host root as a placement to
        // know that we're currently in a mounting state. That way isMounted
        // works as expected. We must reset this before committing.
        // TODO: Delete this when we delete isMounted and findDOMNode.
        workInProgress.effectTag |= Placement; // Ensure that children mount into this root without tracking
        // side-effects. This ensures that we don't store Placement effects on
        // nodes that will be hydrated.

        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
      } else {
        // Otherwise reset hydration state in case we aborted and resumed another
        // root.
        reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
        resetHydrationState();
      }

      return workInProgress.child;
    }

    function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {
      pushHostContext(workInProgress);

      if (current$$1 === null) {
        tryToClaimNextHydratableInstance(workInProgress);
      }

      var type = workInProgress.type;
      var nextProps = workInProgress.pendingProps;
      var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;
      var nextChildren = nextProps.children;
      var isDirectTextChild = shouldSetTextContent(type, nextProps);

      if (isDirectTextChild) {
        // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also have access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
      } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
        // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.effectTag |= ContentReset;
      }

      markRef(current$$1, workInProgress); // Check the host config to see if the children are offscreen/hidden.

      if (renderExpirationTime !== Never && workInProgress.mode & ConcurrentMode && shouldDeprioritizeSubtree(type, nextProps)) {
        // Schedule this fiber to re-render at offscreen priority. Then bailout.
        workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
        return null;
      }

      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateHostText(current$$1, workInProgress) {
      if (current$$1 === null) {
        tryToClaimNextHydratableInstance(workInProgress);
      } // Nothing to do here. This is terminal. We'll do the completion step
      // immediately after.


      return null;
    }

    function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {
      if (_current !== null) {
        // An lazy component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.effectTag |= Placement;
      }

      var props = workInProgress.pendingProps; // We can't start a User Timing measurement with correct label yet.
      // Cancel and resume right after we know the tag.

      cancelWorkTimer(workInProgress);
      var Component = readLazyComponentType(elementType); // Store the unwrapped component in the type.

      workInProgress.type = Component;
      var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
      startWorkTimer(workInProgress);
      var resolvedProps = resolveDefaultProps(Component, props);
      var child = void 0;

      switch (resolvedTag) {
        case FunctionComponent:
          {
            {
              validateFunctionComponentInDev(workInProgress, Component);
            }
            child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
            break;
          }

        case ClassComponent:
          {
            child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
            break;
          }

        case ForwardRef:
          {
            child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);
            break;
          }

        case MemoComponent:
          {
            {
              if (workInProgress.type !== workInProgress.elementType) {
                var outerPropTypes = Component.propTypes;

                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
                  'prop', getComponentName(Component), getCurrentFiberStackInDev);
                }
              }
            }
            child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
            updateExpirationTime, renderExpirationTime);
            break;
          }

        default:
          {
            var hint = '';
            {
              if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
                hint = ' Did you wrap a component in React.lazy() more than once?';
              }
            } // This message intentionally doesn't mention ForwardRef or MemoComponent
            // because the fact that it's a separate type of work is an
            // implementation detail.

            invariant(false, 'Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s', Component, hint);
          }
      }

      return child;
    }

    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {
      if (_current !== null) {
        // An incomplete component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.effectTag |= Placement;
      } // Promote the fiber to a class and try rendering again.


      workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
      // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.

      var hasContext = void 0;

      if (isContextProvider(Component)) {
        hasContext = true;
        pushContextProvider(workInProgress);
      } else {
        hasContext = false;
      }

      prepareToReadContext(workInProgress, renderExpirationTime);
      constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
      mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
      return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
    }

    function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {
      if (_current !== null) {
        // An indeterminate component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.effectTag |= Placement;
      }

      var props = workInProgress.pendingProps;
      var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
      var context = getMaskedContext(workInProgress, unmaskedContext);
      prepareToReadContext(workInProgress, renderExpirationTime);
      var value = void 0;
      {
        if (Component.prototype && typeof Component.prototype.render === 'function') {
          var componentName = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutBadClass[componentName]) {
            warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
            didWarnAboutBadClass[componentName] = true;
          }
        }

        if (workInProgress.mode & StrictMode) {
          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        }

        ReactCurrentOwner$3.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
      } // React DevTools reads this flag.

      workInProgress.effectTag |= PerformedWork;

      if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
        // Proceed under the assumption that this is a class instance
        workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

        resetHooks(); // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.

        var hasContext = false;

        if (isContextProvider(Component)) {
          hasContext = true;
          pushContextProvider(workInProgress);
        } else {
          hasContext = false;
        }

        workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
        var getDerivedStateFromProps = Component.getDerivedStateFromProps;

        if (typeof getDerivedStateFromProps === 'function') {
          applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
        }

        adoptClassInstance(workInProgress, value);
        mountClassInstance(workInProgress, Component, props, renderExpirationTime);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
      } else {
        // Proceed under the assumption that this is a function component
        workInProgress.tag = FunctionComponent;
        {
          if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
            // Only double-render components with Hooks
            if (workInProgress.memoizedState !== null) {
              value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
            }
          }
        }
        reconcileChildren(null, workInProgress, value, renderExpirationTime);
        {
          validateFunctionComponentInDev(workInProgress, Component);
        }
        return workInProgress.child;
      }
    }

    function validateFunctionComponentInDev(workInProgress, Component) {
      if (Component) {
        !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;
      }

      if (workInProgress.ref !== null) {
        var info = '';
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();

        if (ownerName) {
          info += '\n\nCheck the render method of `' + ownerName + '`.';
        }

        var warningKey = ownerName || workInProgress._debugID || '';
        var debugSource = workInProgress._debugSource;

        if (debugSource) {
          warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
        }

        if (!didWarnAboutFunctionRefs[warningKey]) {
          didWarnAboutFunctionRefs[warningKey] = true;
          warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
        }
      }

      if (typeof Component.getDerivedStateFromProps === 'function') {
        var componentName = getComponentName(Component) || 'Unknown';

        if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {
          warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', componentName);
          didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;
        }
      }

      if (typeof Component.contextType === 'object' && Component.contextType !== null) {
        var _componentName = getComponentName(Component) || 'Unknown';

        if (!didWarnAboutContextTypeOnFunctionComponent[_componentName]) {
          warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName);
          didWarnAboutContextTypeOnFunctionComponent[_componentName] = true;
        }
      }
    }

    function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
      var mode = workInProgress.mode;
      var nextProps = workInProgress.pendingProps; // We should attempt to render the primary children unless this boundary
      // already suspended during this render (`alreadyCaptured` is true).

      var nextState = workInProgress.memoizedState;
      var nextDidTimeout = void 0;

      if ((workInProgress.effectTag & DidCapture) === NoEffect) {
        // This is the first attempt.
        nextState = null;
        nextDidTimeout = false;
      } else {
        // Something in this boundary's subtree already suspended. Switch to
        // rendering the fallback children.
        nextState = {
          timedOutAt: nextState !== null ? nextState.timedOutAt : NoWork
        };
        nextDidTimeout = true;
        workInProgress.effectTag &= ~DidCapture;
      } // This next part is a bit confusing. If the children timeout, we switch to
      // showing the fallback children in place of the "primary" children.
      // However, we don't want to delete the primary children because then their
      // state will be lost (both the React state and the host state, e.g.
      // uncontrolled form inputs). Instead we keep them mounted and hide them.
      // Both the fallback children AND the primary children are rendered at the
      // same time. Once the primary children are un-suspended, we can delete
      // the fallback children — don't need to preserve their state.
      //
      // The two sets of children are siblings in the host environment, but
      // semantically, for purposes of reconciliation, they are two separate sets.
      // So we store them using two fragment fibers.
      //
      // However, we want to avoid allocating extra fibers for every placeholder.
      // They're only necessary when the children time out, because that's the
      // only time when both sets are mounted.
      //
      // So, the extra fragment fibers are only used if the children time out.
      // Otherwise, we render the primary children directly. This requires some
      // custom reconciliation logic to preserve the state of the primary
      // children. It's essentially a very basic form of re-parenting.
      // `child` points to the child fiber. In the normal case, this is the first
      // fiber of the primary children set. In the timed-out case, it's a
      // a fragment fiber containing the primary children.


      var child = void 0; // `next` points to the next fiber React should render. In the normal case,
      // it's the same as `child`: the first fiber of the primary children set.
      // In the timed-out case, it's a fragment fiber containing the *fallback*
      // children -- we skip over the primary children entirely.

      var next = void 0;

      if (current$$1 === null) {
        if (enableSuspenseServerRenderer) {
          // If we're currently hydrating, try to hydrate this boundary.
          // But only if this has a fallback.
          if (nextProps.fallback !== undefined) {
            tryToClaimNextHydratableInstance(workInProgress); // This could've changed the tag if this was a dehydrated suspense component.

            if (workInProgress.tag === DehydratedSuspenseComponent) {
              return updateDehydratedSuspenseComponent(null, workInProgress, renderExpirationTime);
            }
          }
        } // This is the initial mount. This branch is pretty simple because there's
        // no previous state that needs to be preserved.


        if (nextDidTimeout) {
          // Mount separate fragments for primary and fallback children.
          var nextFallbackChildren = nextProps.fallback;
          var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);

          if ((workInProgress.mode & ConcurrentMode) === NoContext) {
            // Outside of concurrent mode, we commit the effects from the
            var progressedState = workInProgress.memoizedState;
            var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;
            primaryChildFragment.child = progressedPrimaryChild;
          }

          var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
          primaryChildFragment.sibling = fallbackChildFragment;
          child = primaryChildFragment; // Skip the primary children, and continue working on the
          // fallback children.

          next = fallbackChildFragment;
          child.return = next.return = workInProgress;
        } else {
          // Mount the primary children without an intermediate fragment fiber.
          var nextPrimaryChildren = nextProps.children;
          child = next = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);
        }
      } else {
        // This is an update. This branch is more complicated because we need to
        // ensure the state of the primary children is preserved.
        var prevState = current$$1.memoizedState;
        var prevDidTimeout = prevState !== null;

        if (prevDidTimeout) {
          // The current tree already timed out. That means each child set is
          var currentPrimaryChildFragment = current$$1.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;

          if (nextDidTimeout) {
            // Still timed out. Reuse the current primary children by cloning
            // its fragment. We're going to skip over these entirely.
            var _nextFallbackChildren = nextProps.fallback;

            var _primaryChildFragment = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);

            if ((workInProgress.mode & ConcurrentMode) === NoContext) {
              // Outside of concurrent mode, we commit the effects from the
              var _progressedState = workInProgress.memoizedState;

              var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;

              if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
                _primaryChildFragment.child = _progressedPrimaryChild;
              }
            } // Because primaryChildFragment is a new fiber that we're inserting as the
            // parent of a new tree, we need to set its treeBaseDuration.


            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
              // treeBaseDuration is the sum of all the child tree base durations.
              var treeBaseDuration = 0;
              var hiddenChild = _primaryChildFragment.child;

              while (hiddenChild !== null) {
                treeBaseDuration += hiddenChild.treeBaseDuration;
                hiddenChild = hiddenChild.sibling;
              }

              _primaryChildFragment.treeBaseDuration = treeBaseDuration;
            } // Clone the fallback child fragment, too. These we'll continue
            // working on.


            var _fallbackChildFragment = _primaryChildFragment.sibling = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren, currentFallbackChildFragment.expirationTime);

            child = _primaryChildFragment;
            _primaryChildFragment.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
            // fallback children.

            next = _fallbackChildFragment;
            child.return = next.return = workInProgress;
          } else {
            // No longer suspended. Switch back to showing the primary children,
            // and remove the intermediate fragment fiber.
            var _nextPrimaryChildren = nextProps.children;
            var currentPrimaryChild = currentPrimaryChildFragment.child;
            var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime); // If this render doesn't suspend, we need to delete the fallback
            // children. Wait until the complete phase, after we've confirmed the
            // fallback is no longer needed.
            // TODO: Would it be better to store the fallback fragment on
            // the stateNode?
            // Continue rendering the children, like we normally do.

            child = next = primaryChild;
          }
        } else {
          // The current tree has not already timed out. That means the primary
          // children are not wrapped in a fragment fiber.
          var _currentPrimaryChild = current$$1.child;

          if (nextDidTimeout) {
            // Timed out. Wrap the children in a fragment fiber to keep them
            // separate from the fallback children.
            var _nextFallbackChildren2 = nextProps.fallback;

            var _primaryChildFragment2 = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't
            // going to render this fragment.
            null, mode, NoWork, null);

            _primaryChildFragment2.child = _currentPrimaryChild; // Even though we're creating a new fiber, there are no new children,
            // because we're reusing an already mounted tree. So we don't need to
            // schedule a placement.
            // primaryChildFragment.effectTag |= Placement;

            if ((workInProgress.mode & ConcurrentMode) === NoContext) {
              // Outside of concurrent mode, we commit the effects from the
              var _progressedState2 = workInProgress.memoizedState;

              var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;

              _primaryChildFragment2.child = _progressedPrimaryChild2;
            } // Because primaryChildFragment is a new fiber that we're inserting as the
            // parent of a new tree, we need to set its treeBaseDuration.


            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
              // treeBaseDuration is the sum of all the child tree base durations.
              var _treeBaseDuration = 0;
              var _hiddenChild = _primaryChildFragment2.child;

              while (_hiddenChild !== null) {
                _treeBaseDuration += _hiddenChild.treeBaseDuration;
                _hiddenChild = _hiddenChild.sibling;
              }

              _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
            } // Create a fragment from the fallback children, too.


            var _fallbackChildFragment2 = _primaryChildFragment2.sibling = createFiberFromFragment(_nextFallbackChildren2, mode, renderExpirationTime, null);

            _fallbackChildFragment2.effectTag |= Placement;
            child = _primaryChildFragment2;
            _primaryChildFragment2.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
            // fallback children.

            next = _fallbackChildFragment2;
            child.return = next.return = workInProgress;
          } else {
            // Still haven't timed out.  Continue rendering the children, like we
            // normally do.
            var _nextPrimaryChildren2 = nextProps.children;
            next = child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);
          }
        }

        workInProgress.stateNode = current$$1.stateNode;
      }

      workInProgress.memoizedState = nextState;
      workInProgress.child = child;
      return next;
    }

    function updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
      if (current$$1 === null) {
        // During the first pass, we'll bail out and not drill into the children.
        // Instead, we'll leave the content in place and try to hydrate it later.
        workInProgress.expirationTime = Never;
        return null;
      } // We use childExpirationTime to indicate that a child might depend on context, so if
      // any context has changed, we need to treat is as if the input might have changed.


      var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;

      if (didReceiveUpdate || hasContextChanged$$1) {
        // This boundary has changed since the first render. This means that we are now unable to
        // hydrate it. We might still be able to hydrate it using an earlier expiration time but
        // during this render we can't. Instead, we're going to delete the whole subtree and
        // instead inject a new real Suspense boundary to take its place, which may render content
        // or fallback. The real Suspense boundary will suspend for a while so we have some time
        // to ensure it can produce real content, but all state and pending events will be lost.
        // Detach from the current dehydrated boundary.
        current$$1.alternate = null;
        workInProgress.alternate = null; // Insert a deletion in the effect list.

        var returnFiber = workInProgress.return;
        !(returnFiber !== null) ? invariant(false, 'Suspense boundaries are never on the root. This is probably a bug in React.') : void 0;
        var last = returnFiber.lastEffect;

        if (last !== null) {
          last.nextEffect = current$$1;
          returnFiber.lastEffect = current$$1;
        } else {
          returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
        }

        current$$1.nextEffect = null;
        current$$1.effectTag = Deletion; // Upgrade this work in progress to a real Suspense component.

        workInProgress.tag = SuspenseComponent;
        workInProgress.stateNode = null;
        workInProgress.memoizedState = null; // This is now an insertion.

        workInProgress.effectTag |= Placement; // Retry as a real Suspense component.

        return updateSuspenseComponent(null, workInProgress, renderExpirationTime);
      }

      if ((workInProgress.effectTag & DidCapture) === NoEffect) {
        // This is the first attempt.
        reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress);
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
        return workInProgress.child;
      } else {
        // Something suspended. Leave the existing children in place.
        // TODO: In non-concurrent mode, should we commit the nodes we have hydrated so far?
        workInProgress.child = null;
        return null;
      }
    }

    function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      var nextChildren = workInProgress.pendingProps;

      if (current$$1 === null) {
        // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
      } else {
        reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      }

      return workInProgress.child;
    }

    function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {
      var providerType = workInProgress.type;
      var context = providerType._context;
      var newProps = workInProgress.pendingProps;
      var oldProps = workInProgress.memoizedProps;
      var newValue = newProps.value;
      {
        var providerPropTypes = workInProgress.type.propTypes;

        if (providerPropTypes) {
          checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);
        }
      }
      pushProvider(workInProgress, newValue);

      if (oldProps !== null) {
        var oldValue = oldProps.value;
        var changedBits = calculateChangedBits(context, newValue, oldValue);

        if (changedBits === 0) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && !hasContextChanged()) {
            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
          }
        } else {
          // The context value changed. Search for matching consumers and schedule
          // them to update.
          propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
        }
      }

      var newChildren = newProps.children;
      reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
      return workInProgress.child;
    }

    var hasWarnedAboutUsingContextAsConsumer = false;

    function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {
      var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
      // DEV mode, we create a separate object for Context.Consumer that acts
      // like a proxy to Context. This proxy object adds unnecessary code in PROD
      // so we use the old behaviour (Context.Consumer references Context) to
      // reduce size and overhead. The separate object references context via
      // a property called "_context", which also gives us the ability to check
      // in DEV mode if this property exists or not and warn if it does not.

      {
        if (context._context === undefined) {
          // This may be because it's a Context (rather than a Consumer).
          // Or it may be because it's older React where they're the same thing.
          // We only want to warn if we're sure it's a new React.
          if (context !== context.Consumer) {
            if (!hasWarnedAboutUsingContextAsConsumer) {
              hasWarnedAboutUsingContextAsConsumer = true;
              warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
            }
          }
        } else {
          context = context._context;
        }
      }
      var newProps = workInProgress.pendingProps;
      var render = newProps.children;
      {
        !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
      }
      prepareToReadContext(workInProgress, renderExpirationTime);
      var newValue = readContext(context, newProps.unstable_observedBits);
      var newChildren = void 0;
      {
        ReactCurrentOwner$3.current = workInProgress;
        setCurrentPhase('render');
        newChildren = render(newValue);
        setCurrentPhase(null);
      } // React DevTools reads this flag.

      workInProgress.effectTag |= PerformedWork;
      reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function markWorkInProgressReceivedUpdate() {
      didReceiveUpdate = true;
    }

    function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
      cancelWorkTimer(workInProgress);

      if (current$$1 !== null) {
        // Reuse previous context list
        workInProgress.contextDependencies = current$$1.contextDependencies;
      }

      if (enableProfilerTimer) {
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning(workInProgress);
      } // Check if the children have any pending work.


      var childExpirationTime = workInProgress.childExpirationTime;

      if (childExpirationTime < renderExpirationTime) {
        // The children don't have any work either. We can skip them.
        // TODO: Once we add back resuming, we should check if the children are
        // a work-in-progress set. If so, we need to transfer their effects.
        return null;
      } else {
        // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current$$1, workInProgress);
        return workInProgress.child;
      }
    }

    function beginWork(current$$1, workInProgress, renderExpirationTime) {
      var updateExpirationTime = workInProgress.expirationTime;

      if (current$$1 !== null) {
        var oldProps = current$$1.memoizedProps;
        var newProps = workInProgress.pendingProps;

        if (oldProps !== newProps || hasContextChanged()) {
          // If props or context changed, mark the fiber as having performed work.
          // This may be unset if the props are determined to be equal later (memo).
          didReceiveUpdate = true;
        } else if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
          // the begin phase. There's still some bookkeeping we that needs to be done
          // in this optimized path, mostly pushing stuff onto the stack.

          switch (workInProgress.tag) {
            case HostRoot:
              pushHostRootContext(workInProgress);
              resetHydrationState();
              break;

            case HostComponent:
              pushHostContext(workInProgress);
              break;

            case ClassComponent:
              {
                var Component = workInProgress.type;

                if (isContextProvider(Component)) {
                  pushContextProvider(workInProgress);
                }

                break;
              }

            case HostPortal:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case ContextProvider:
              {
                var newValue = workInProgress.memoizedProps.value;
                pushProvider(workInProgress, newValue);
                break;
              }

            case Profiler:
              if (enableProfilerTimer) {
                workInProgress.effectTag |= Update;
              }

              break;

            case SuspenseComponent:
              {
                var state = workInProgress.memoizedState;
                var didTimeout = state !== null;

                if (didTimeout) {
                  // If this boundary is currently timed out, we need to decide
                  // whether to retry the primary children, or to skip over it and
                  // go straight to the fallback. Check the priority of the primary
                  var primaryChildFragment = workInProgress.child;
                  var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;

                  if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {
                    // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                  } else {
                    // The primary children do not have pending work with sufficient
                    // priority. Bailout.
                    var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);

                    if (child !== null) {
                      // The fallback children have pending work. Skip over the
                      // primary children and work on the fallback.
                      return child.sibling;
                    } else {
                      return null;
                    }
                  }
                }

                break;
              }

            case DehydratedSuspenseComponent:
              {
                if (enableSuspenseServerRenderer) {
                  // We know that this component will suspend again because if it has
                  // been unsuspended it has committed as a regular Suspense component.
                  // If it needs to be retried, it should have work scheduled on it.
                  workInProgress.effectTag |= DidCapture;
                  break;
                }
              }
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      } else {
        didReceiveUpdate = false;
      } // Before entering the begin phase, clear the expiration time.


      workInProgress.expirationTime = NoWork;

      switch (workInProgress.tag) {
        case IndeterminateComponent:
          {
            var elementType = workInProgress.elementType;
            return mountIndeterminateComponent(current$$1, workInProgress, elementType, renderExpirationTime);
          }

        case LazyComponent:
          {
            var _elementType = workInProgress.elementType;
            return mountLazyComponent(current$$1, workInProgress, _elementType, updateExpirationTime, renderExpirationTime);
          }

        case FunctionComponent:
          {
            var _Component = workInProgress.type;
            var unresolvedProps = workInProgress.pendingProps;
            var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
            return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);
          }

        case ClassComponent:
          {
            var _Component2 = workInProgress.type;
            var _unresolvedProps = workInProgress.pendingProps;

            var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);

            return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);
          }

        case HostRoot:
          return updateHostRoot(current$$1, workInProgress, renderExpirationTime);

        case HostComponent:
          return updateHostComponent(current$$1, workInProgress, renderExpirationTime);

        case HostText:
          return updateHostText(current$$1, workInProgress);

        case SuspenseComponent:
          return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

        case HostPortal:
          return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);

        case ForwardRef:
          {
            var type = workInProgress.type;
            var _unresolvedProps2 = workInProgress.pendingProps;

            var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

            return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);
          }

        case Fragment:
          return updateFragment(current$$1, workInProgress, renderExpirationTime);

        case Mode:
          return updateMode(current$$1, workInProgress, renderExpirationTime);

        case Profiler:
          return updateProfiler(current$$1, workInProgress, renderExpirationTime);

        case ContextProvider:
          return updateContextProvider(current$$1, workInProgress, renderExpirationTime);

        case ContextConsumer:
          return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);

        case MemoComponent:
          {
            var _type2 = workInProgress.type;
            var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

            var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

            {
              if (workInProgress.type !== workInProgress.elementType) {
                var outerPropTypes = _type2.propTypes;

                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
                  'prop', getComponentName(_type2), getCurrentFiberStackInDev);
                }
              }
            }
            _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
            return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);
          }

        case SimpleMemoComponent:
          {
            return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);
          }

        case IncompleteClassComponent:
          {
            var _Component3 = workInProgress.type;
            var _unresolvedProps4 = workInProgress.pendingProps;

            var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);

            return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);
          }

        case DehydratedSuspenseComponent:
          {
            if (enableSuspenseServerRenderer) {
              return updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
            }

            break;
          }
      }

      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
    }

    var valueCursor = createCursor(null);
    var rendererSigil = void 0;
    {
      // Use this to detect multiple renderers using the same context
      rendererSigil = {};
    }
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastContextWithAllBitsObserved = null;
    var isDisallowedContextReadInDEV = false;

    function resetContextDependences() {
      // This is called right before React yields execution, to ensure `readContext`
      // cannot be called outside the render phase.
      currentlyRenderingFiber = null;
      lastContextDependency = null;
      lastContextWithAllBitsObserved = null;
      {
        isDisallowedContextReadInDEV = false;
      }
    }

    function enterDisallowedContextReadInDEV() {
      {
        isDisallowedContextReadInDEV = true;
      }
    }

    function exitDisallowedContextReadInDEV() {
      {
        isDisallowedContextReadInDEV = false;
      }
    }

    function pushProvider(providerFiber, nextValue) {
      var context = providerFiber.type._context;

      if (isPrimaryRenderer) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        {
          !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
          context._currentRenderer = rendererSigil;
        }
      } else {
        push(valueCursor, context._currentValue2, providerFiber);
        context._currentValue2 = nextValue;
        {
          !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
          context._currentRenderer2 = rendererSigil;
        }
      }
    }

    function popProvider(providerFiber) {
      var currentValue = valueCursor.current;
      pop(valueCursor, providerFiber);
      var context = providerFiber.type._context;

      if (isPrimaryRenderer) {
        context._currentValue = currentValue;
      } else {
        context._currentValue2 = currentValue;
      }
    }

    function calculateChangedBits(context, newValue, oldValue) {
      if (is(oldValue, newValue)) {
        // No change
        return 0;
      } else {
        var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : maxSigned31BitInt;
        {
          !((changedBits & maxSigned31BitInt) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
        }
        return changedBits | 0;
      }
    }

    function scheduleWorkOnParentPath(parent, renderExpirationTime) {
      // Update the child expiration time of all the ancestors, including
      // the alternates.
      var node = parent;

      while (node !== null) {
        var alternate = node.alternate;

        if (node.childExpirationTime < renderExpirationTime) {
          node.childExpirationTime = renderExpirationTime;

          if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
            alternate.childExpirationTime = renderExpirationTime;
          }
        } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
          alternate.childExpirationTime = renderExpirationTime;
        } else {
          // Neither alternate was updated, which means the rest of the
          // ancestor path already has sufficient priority.
          break;
        }

        node = node.return;
      }
    }

    function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
      var fiber = workInProgress.child;

      if (fiber !== null) {
        // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
      }

      while (fiber !== null) {
        var nextFiber = void 0; // Visit this fiber.

        var list = fiber.contextDependencies;

        if (list !== null) {
          nextFiber = fiber.child;
          var dependency = list.first;

          while (dependency !== null) {
            // Check if the context matches.
            if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
              // Match! Schedule an update on this fiber.
              if (fiber.tag === ClassComponent) {
                // Schedule a force update on the work-in-progress.
                var update = createUpdate(renderExpirationTime);
                update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                // update to the current fiber, too, which means it will persist even if
                // this render is thrown away. Since it's a race condition, not sure it's
                // worth fixing.

                enqueueUpdate(fiber, update);
              }

              if (fiber.expirationTime < renderExpirationTime) {
                fiber.expirationTime = renderExpirationTime;
              }

              var alternate = fiber.alternate;

              if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
                alternate.expirationTime = renderExpirationTime;
              }

              scheduleWorkOnParentPath(fiber.return, renderExpirationTime); // Mark the expiration time on the list, too.

              if (list.expirationTime < renderExpirationTime) {
                list.expirationTime = renderExpirationTime;
              } // Since we already found a match, we can stop traversing the
              // dependency list.


              break;
            }

            dependency = dependency.next;
          }
        } else if (fiber.tag === ContextProvider) {
          // Don't scan deeper if this is a matching provider
          nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
        } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedSuspenseComponent) {
          // If a dehydrated suspense component is in this subtree, we don't know
          // if it will have any context consumers in it. The best we can do is
          // mark it as having updates on its children.
          if (fiber.expirationTime < renderExpirationTime) {
            fiber.expirationTime = renderExpirationTime;
          }

          var _alternate = fiber.alternate;

          if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {
            _alternate.expirationTime = renderExpirationTime;
          } // This is intentionally passing this fiber as the parent
          // because we want to schedule this fiber as having work
          // on its children. We'll use the childExpirationTime on
          // this fiber to indicate that a context has changed.


          scheduleWorkOnParentPath(fiber, renderExpirationTime);
          nextFiber = fiber.sibling;
        } else {
          // Traverse down.
          nextFiber = fiber.child;
        }

        if (nextFiber !== null) {
          // Set the return pointer of the child to the work-in-progress fiber.
          nextFiber.return = fiber;
        } else {
          // No child. Traverse to next sibling.
          nextFiber = fiber;

          while (nextFiber !== null) {
            if (nextFiber === workInProgress) {
              // We're back to the root of this subtree. Exit.
              nextFiber = null;
              break;
            }

            var sibling = nextFiber.sibling;

            if (sibling !== null) {
              // Set the return pointer of the sibling to the work-in-progress fiber.
              sibling.return = nextFiber.return;
              nextFiber = sibling;
              break;
            } // No more siblings. Traverse up.


            nextFiber = nextFiber.return;
          }
        }

        fiber = nextFiber;
      }
    }

    function prepareToReadContext(workInProgress, renderExpirationTime) {
      currentlyRenderingFiber = workInProgress;
      lastContextDependency = null;
      lastContextWithAllBitsObserved = null;
      var currentDependencies = workInProgress.contextDependencies;

      if (currentDependencies !== null && currentDependencies.expirationTime >= renderExpirationTime) {
        // Context list has a pending update. Mark that this fiber performed work.
        markWorkInProgressReceivedUpdate();
      } // Reset the work-in-progress list


      workInProgress.contextDependencies = null;
    }

    function readContext(context, observedBits) {
      {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;
      }

      if (lastContextWithAllBitsObserved === context) {// Nothing to do. We already observe everything in this context.
      } else if (observedBits === false || observedBits === 0) {// Do not observe any updates.
      } else {
        var resolvedObservedBits = void 0; // Avoid deopting on observable arguments or heterogeneous types.

        if (typeof observedBits !== 'number' || observedBits === maxSigned31BitInt) {
          // Observe all updates.
          lastContextWithAllBitsObserved = context;
          resolvedObservedBits = maxSigned31BitInt;
        } else {
          resolvedObservedBits = observedBits;
        }

        var contextItem = {
          context: context,
          observedBits: resolvedObservedBits,
          next: null
        };

        if (lastContextDependency === null) {
          !(currentlyRenderingFiber !== null) ? invariant(false, 'Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().') : void 0; // This is the first dependency for this component. Create a new list.

          lastContextDependency = contextItem;
          currentlyRenderingFiber.contextDependencies = {
            first: contextItem,
            expirationTime: NoWork
          };
        } else {
          // Append a new context item.
          lastContextDependency = lastContextDependency.next = contextItem;
        }
      }

      return isPrimaryRenderer ? context._currentValue : context._currentValue2;
    } // UpdateQueue is a linked list of prioritized updates.
    //
    // Like fibers, update queues come in pairs: a current queue, which represents
    // the visible state of the screen, and a work-in-progress queue, which can be
    // mutated and processed asynchronously before it is committed — a form of
    // double buffering. If a work-in-progress render is discarded before finishing,
    // we create a new work-in-progress by cloning the current queue.
    //
    // Both queues share a persistent, singly-linked list structure. To schedule an
    // update, we append it to the end of both queues. Each queue maintains a
    // pointer to first update in the persistent list that hasn't been processed.
    // The work-in-progress pointer always has a position equal to or greater than
    // the current queue, since we always work on that one. The current queue's
    // pointer is only updated during the commit phase, when we swap in the
    // work-in-progress.
    //
    // For example:
    //
    //   Current pointer:           A - B - C - D - E - F
    //   Work-in-progress pointer:              D - E - F
    //                                          ^
    //                                          The work-in-progress queue has
    //                                          processed more updates than current.
    //
    // The reason we append to both queues is because otherwise we might drop
    // updates without ever processing them. For example, if we only add updates to
    // the work-in-progress queue, some updates could be lost whenever a work-in
    // -progress render restarts by cloning from current. Similarly, if we only add
    // updates to the current queue, the updates will be lost whenever an already
    // in-progress queue commits and swaps with the current queue. However, by
    // adding to both queues, we guarantee that the update will be part of the next
    // work-in-progress. (And because the work-in-progress queue becomes the
    // current queue once it commits, there's no danger of applying the same
    // update twice.)
    //
    // Prioritization
    // --------------
    //
    // Updates are not sorted by priority, but by insertion; new updates are always
    // appended to the end of the list.
    //
    // The priority is still important, though. When processing the update queue
    // during the render phase, only the updates with sufficient priority are
    // included in the result. If we skip an update because it has insufficient
    // priority, it remains in the queue to be processed later, during a lower
    // priority render. Crucially, all updates subsequent to a skipped update also
    // remain in the queue *regardless of their priority*. That means high priority
    // updates are sometimes processed twice, at two separate priorities. We also
    // keep track of a base state, that represents the state before the first
    // update in the queue is applied.
    //
    // For example:
    //
    //   Given a base state of '', and the following queue of updates
    //
    //     A1 - B2 - C1 - D2
    //
    //   where the number indicates the priority, and the update is applied to the
    //   previous state by appending a letter, React will process these updates as
    //   two separate renders, one per distinct priority level:
    //
    //   First render, at priority 1:
    //     Base state: ''
    //     Updates: [A1, C1]
    //     Result state: 'AC'
    //
    //   Second render, at priority 2:
    //     Base state: 'A'            <-  The base state does not include C1,
    //                                    because B2 was skipped.
    //     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
    //     Result state: 'ABCD'
    //
    // Because we process updates in insertion order, and rebase high priority
    // updates when preceding updates are skipped, the final result is deterministic
    // regardless of priority. Intermediate state may vary according to system
    // resources, but the final state is always the same.


    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.

    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate = void 0;
    var currentlyProcessingQueue = void 0;
    var resetCurrentlyProcessingQueue = void 0;
    {
      didWarnUpdateInsideUpdate = false;
      currentlyProcessingQueue = null;

      resetCurrentlyProcessingQueue = function () {
        currentlyProcessingQueue = null;
      };
    }

    function createUpdateQueue(baseState) {
      var queue = {
        baseState: baseState,
        firstUpdate: null,
        lastUpdate: null,
        firstCapturedUpdate: null,
        lastCapturedUpdate: null,
        firstEffect: null,
        lastEffect: null,
        firstCapturedEffect: null,
        lastCapturedEffect: null
      };
      return queue;
    }

    function cloneUpdateQueue(currentQueue) {
      var queue = {
        baseState: currentQueue.baseState,
        firstUpdate: currentQueue.firstUpdate,
        lastUpdate: currentQueue.lastUpdate,
        // TODO: With resuming, if we bail out and resuse the child tree, we should
        // keep these effects.
        firstCapturedUpdate: null,
        lastCapturedUpdate: null,
        firstEffect: null,
        lastEffect: null,
        firstCapturedEffect: null,
        lastCapturedEffect: null
      };
      return queue;
    }

    function createUpdate(expirationTime) {
      return {
        expirationTime: expirationTime,
        tag: UpdateState,
        payload: null,
        callback: null,
        next: null,
        nextEffect: null
      };
    }

    function appendUpdateToQueue(queue, update) {
      // Append the update to the end of the list.
      if (queue.lastUpdate === null) {
        // Queue is empty
        queue.firstUpdate = queue.lastUpdate = update;
      } else {
        queue.lastUpdate.next = update;
        queue.lastUpdate = update;
      }
    }

    function enqueueUpdate(fiber, update) {
      // Update queues are created lazily.
      var alternate = fiber.alternate;
      var queue1 = void 0;
      var queue2 = void 0;

      if (alternate === null) {
        // There's only one fiber.
        queue1 = fiber.updateQueue;
        queue2 = null;

        if (queue1 === null) {
          queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        }
      } else {
        // There are two owners.
        queue1 = fiber.updateQueue;
        queue2 = alternate.updateQueue;

        if (queue1 === null) {
          if (queue2 === null) {
            // Neither fiber has an update queue. Create new ones.
            queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
            queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
          } else {
            // Only one fiber has an update queue. Clone to create a new one.
            queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
          }
        } else {
          if (queue2 === null) {
            // Only one fiber has an update queue. Clone to create a new one.
            queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
          } else {// Both owners have an update queue.
          }
        }
      }

      if (queue2 === null || queue1 === queue2) {
        // There's only a single queue.
        appendUpdateToQueue(queue1, update);
      } else {
        // There are two queues. We need to append the update to both queues,
        // while accounting for the persistent structure of the list — we don't
        // want the same update to be added multiple times.
        if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
          // One of the queues is not empty. We must add the update to both queues.
          appendUpdateToQueue(queue1, update);
          appendUpdateToQueue(queue2, update);
        } else {
          // Both queues are non-empty. The last update is the same in both lists,
          // because of structural sharing. So, only append to one of the lists.
          appendUpdateToQueue(queue1, update); // But we still need to update the `lastUpdate` pointer of queue2.

          queue2.lastUpdate = update;
        }
      }

      {
        if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
          warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
          didWarnUpdateInsideUpdate = true;
        }
      }
    }

    function enqueueCapturedUpdate(workInProgress, update) {
      // Captured updates go into a separate list, and only on the work-in-
      // progress queue.
      var workInProgressQueue = workInProgress.updateQueue;

      if (workInProgressQueue === null) {
        workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
      } else {
        // TODO: I put this here rather than createWorkInProgress so that we don't
        // clone the queue unnecessarily. There's probably a better way to
        // structure this.
        workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
      } // Append the update to the end of the list.


      if (workInProgressQueue.lastCapturedUpdate === null) {
        // This is the first render phase update
        workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
      } else {
        workInProgressQueue.lastCapturedUpdate.next = update;
        workInProgressQueue.lastCapturedUpdate = update;
      }
    }

    function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
      var current = workInProgress.alternate;

      if (current !== null) {
        // If the work-in-progress queue is equal to the current queue,
        // we need to clone it first.
        if (queue === current.updateQueue) {
          queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
        }
      }

      return queue;
    }

    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
      switch (update.tag) {
        case ReplaceState:
          {
            var _payload = update.payload;

            if (typeof _payload === 'function') {
              // Updater function
              {
                enterDisallowedContextReadInDEV();

                if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
                  _payload.call(instance, prevState, nextProps);
                }
              }

              var nextState = _payload.call(instance, prevState, nextProps);

              {
                exitDisallowedContextReadInDEV();
              }
              return nextState;
            } // State object


            return _payload;
          }

        case CaptureUpdate:
          {
            workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
          }
        // Intentional fallthrough

        case UpdateState:
          {
            var _payload2 = update.payload;
            var partialState = void 0;

            if (typeof _payload2 === 'function') {
              // Updater function
              {
                enterDisallowedContextReadInDEV();

                if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
                  _payload2.call(instance, prevState, nextProps);
                }
              }
              partialState = _payload2.call(instance, prevState, nextProps);
              {
                exitDisallowedContextReadInDEV();
              }
            } else {
              // Partial state object
              partialState = _payload2;
            }

            if (partialState === null || partialState === undefined) {
              // Null and undefined are treated as no-ops.
              return prevState;
            } // Merge the partial state and the previous state.


            return _assign({}, prevState, partialState);
          }

        case ForceUpdate:
          {
            hasForceUpdate = true;
            return prevState;
          }
      }

      return prevState;
    }

    function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
      hasForceUpdate = false;
      queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);
      {
        currentlyProcessingQueue = queue;
      } // These values may change as we process the queue.

      var newBaseState = queue.baseState;
      var newFirstUpdate = null;
      var newExpirationTime = NoWork; // Iterate through the list of updates to compute the result.

      var update = queue.firstUpdate;
      var resultState = newBaseState;

      while (update !== null) {
        var updateExpirationTime = update.expirationTime;

        if (updateExpirationTime < renderExpirationTime) {
          // This update does not have sufficient priority. Skip it.
          if (newFirstUpdate === null) {
            // This is the first skipped update. It will be the first update in
            // the new list.
            newFirstUpdate = update; // Since this is the first update that was skipped, the current result
            // is the new base state.

            newBaseState = resultState;
          } // Since this update will remain in the list, update the remaining
          // expiration time.


          if (newExpirationTime < updateExpirationTime) {
            newExpirationTime = updateExpirationTime;
          }
        } else {
          // This update does have sufficient priority. Process it and compute
          // a new result.
          resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
          var _callback = update.callback;

          if (_callback !== null) {
            workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

            update.nextEffect = null;

            if (queue.lastEffect === null) {
              queue.firstEffect = queue.lastEffect = update;
            } else {
              queue.lastEffect.nextEffect = update;
              queue.lastEffect = update;
            }
          }
        } // Continue to the next update.


        update = update.next;
      } // Separately, iterate though the list of captured updates.


      var newFirstCapturedUpdate = null;
      update = queue.firstCapturedUpdate;

      while (update !== null) {
        var _updateExpirationTime = update.expirationTime;

        if (_updateExpirationTime < renderExpirationTime) {
          // This update does not have sufficient priority. Skip it.
          if (newFirstCapturedUpdate === null) {
            // This is the first skipped captured update. It will be the first
            // update in the new list.
            newFirstCapturedUpdate = update; // If this is the first update that was skipped, the current result is
            // the new base state.

            if (newFirstUpdate === null) {
              newBaseState = resultState;
            }
          } // Since this update will remain in the list, update the remaining
          // expiration time.


          if (newExpirationTime < _updateExpirationTime) {
            newExpirationTime = _updateExpirationTime;
          }
        } else {
          // This update does have sufficient priority. Process it and compute
          // a new result.
          resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
          var _callback2 = update.callback;

          if (_callback2 !== null) {
            workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

            update.nextEffect = null;

            if (queue.lastCapturedEffect === null) {
              queue.firstCapturedEffect = queue.lastCapturedEffect = update;
            } else {
              queue.lastCapturedEffect.nextEffect = update;
              queue.lastCapturedEffect = update;
            }
          }
        }

        update = update.next;
      }

      if (newFirstUpdate === null) {
        queue.lastUpdate = null;
      }

      if (newFirstCapturedUpdate === null) {
        queue.lastCapturedUpdate = null;
      } else {
        workInProgress.effectTag |= Callback;
      }

      if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
        // We processed every update, without skipping. That means the new base
        // state is the same as the result state.
        newBaseState = resultState;
      }

      queue.baseState = newBaseState;
      queue.firstUpdate = newFirstUpdate;
      queue.firstCapturedUpdate = newFirstCapturedUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
      // This should be fine because the only two other things that contribute to
      // expiration time are props and context. We're already in the middle of the
      // begin phase by the time we start processing the queue, so we've already
      // dealt with the props. Context in components that specify
      // shouldComponentUpdate is tricky; but we'll have to account for
      // that regardless.

      workInProgress.expirationTime = newExpirationTime;
      workInProgress.memoizedState = resultState;
      {
        currentlyProcessingQueue = null;
      }
    }

    function callCallback(callback, context) {
      !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;
      callback.call(context);
    }

    function resetHasForceUpdateBeforeProcessing() {
      hasForceUpdate = false;
    }

    function checkHasForceUpdateAfterProcessing() {
      return hasForceUpdate;
    }

    function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
      // If the finished render included captured updates, and there are still
      // lower priority updates left over, we need to keep the captured updates
      // in the queue so that they are rebased and not dropped once we process the
      // queue again at the lower priority.
      if (finishedQueue.firstCapturedUpdate !== null) {
        // Join the captured update list to the end of the normal list.
        if (finishedQueue.lastUpdate !== null) {
          finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
          finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
        } // Clear the list of captured updates.


        finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
      } // Commit the effects


      commitUpdateEffects(finishedQueue.firstEffect, instance);
      finishedQueue.firstEffect = finishedQueue.lastEffect = null;
      commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
      finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
    }

    function commitUpdateEffects(effect, instance) {
      while (effect !== null) {
        var _callback3 = effect.callback;

        if (_callback3 !== null) {
          effect.callback = null;
          callCallback(_callback3, instance);
        }

        effect = effect.nextEffect;
      }
    }

    function createCapturedValue(value, source) {
      // If the value is an error, call this function immediately after it is thrown
      // so the stack is accurate.
      return {
        value: value,
        source: source,
        stack: getStackByFiberInDevAndProd(source)
      };
    }

    function markUpdate(workInProgress) {
      // Tag the fiber with an update effect. This turns a Placement into
      // a PlacementAndUpdate.
      workInProgress.effectTag |= Update;
    }

    function markRef$1(workInProgress) {
      workInProgress.effectTag |= Ref;
    }

    var appendAllChildren = void 0;
    var updateHostContainer = void 0;
    var updateHostComponent$1 = void 0;
    var updateHostText$1 = void 0;

    if (supportsMutation) {
      // Mutation mode
      appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          if (node.tag === HostComponent || node.tag === HostText) {
            appendInitialChild(parent, node.stateNode);
          } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      };

      updateHostContainer = function (workInProgress) {// Noop
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;

        if (oldProps === newProps) {
          // In mutation mode, this is sufficient for a bailout because
          // we won't touch this node even if children changed.
          return;
        } // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.


        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.

        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.

        if (updatePayload) {
          markUpdate(workInProgress);
        }
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) {
          markUpdate(workInProgress);
        }
      };
    } else if (supportsPersistence) {
      // Persistent host tree mode
      appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          // eslint-disable-next-line no-labels
          branches: if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (needsVisibilityToggle) {
              var props = node.memoizedProps;
              var type = node.type;

              if (isHidden) {
                // This child is inside a timed out tree. Hide it.
                instance = cloneHiddenInstance(instance, type, props, node);
              } else {
                // This child was previously inside a timed out tree. If it was not
                // updated during this render, it may need to be unhidden. Clone
                // again to be sure.
                instance = cloneUnhiddenInstance(instance, type, props, node);
              }

              node.stateNode = instance;
            }

            appendInitialChild(parent, instance);
          } else if (node.tag === HostText) {
            var _instance = node.stateNode;

            if (needsVisibilityToggle) {
              var text = node.memoizedProps;
              var rootContainerInstance = getRootHostContainer();
              var currentHostContext = getHostContext();

              if (isHidden) {
                _instance = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
              } else {
                _instance = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
              }

              node.stateNode = _instance;
            }

            appendInitialChild(parent, _instance);
          } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.tag === SuspenseComponent) {
            var current = node.alternate;

            if (current !== null) {
              var oldState = current.memoizedState;
              var newState = node.memoizedState;
              var oldIsHidden = oldState !== null;
              var newIsHidden = newState !== null;

              if (oldIsHidden !== newIsHidden) {
                // The placeholder either just timed out or switched back to the normal
                // children after having previously timed out. Toggle the visibility of
                // the direct host children.
                var primaryChildParent = newIsHidden ? node.child : node;

                if (primaryChildParent !== null) {
                  appendAllChildren(parent, primaryChildParent, true, newIsHidden);
                } // eslint-disable-next-line no-labels


                break branches;
              }
            }

            if (node.child !== null) {
              // Continue traversing like normal
              node.child.return = node;
              node = node.child;
              continue;
            }
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          } // $FlowFixMe This is correct but Flow is confused by the labeled break.


          node = node;

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }; // An unfortunate fork of appendAllChildren because we have two different parent types.


      var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          // eslint-disable-next-line no-labels
          branches: if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (needsVisibilityToggle) {
              var props = node.memoizedProps;
              var type = node.type;

              if (isHidden) {
                // This child is inside a timed out tree. Hide it.
                instance = cloneHiddenInstance(instance, type, props, node);
              } else {
                // This child was previously inside a timed out tree. If it was not
                // updated during this render, it may need to be unhidden. Clone
                // again to be sure.
                instance = cloneUnhiddenInstance(instance, type, props, node);
              }

              node.stateNode = instance;
            }

            appendChildToContainerChildSet(containerChildSet, instance);
          } else if (node.tag === HostText) {
            var _instance2 = node.stateNode;

            if (needsVisibilityToggle) {
              var text = node.memoizedProps;
              var rootContainerInstance = getRootHostContainer();
              var currentHostContext = getHostContext();

              if (isHidden) {
                _instance2 = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
              } else {
                _instance2 = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
              }

              node.stateNode = _instance2;
            }

            appendChildToContainerChildSet(containerChildSet, _instance2);
          } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.tag === SuspenseComponent) {
            var current = node.alternate;

            if (current !== null) {
              var oldState = current.memoizedState;
              var newState = node.memoizedState;
              var oldIsHidden = oldState !== null;
              var newIsHidden = newState !== null;

              if (oldIsHidden !== newIsHidden) {
                // The placeholder either just timed out or switched back to the normal
                // children after having previously timed out. Toggle the visibility of
                // the direct host children.
                var primaryChildParent = newIsHidden ? node.child : node;

                if (primaryChildParent !== null) {
                  appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
                } // eslint-disable-next-line no-labels


                break branches;
              }
            }

            if (node.child !== null) {
              // Continue traversing like normal
              node.child.return = node;
              node = node.child;
              continue;
            }
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          } // $FlowFixMe This is correct but Flow is confused by the labeled break.


          node = node;

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      };

      updateHostContainer = function (workInProgress) {
        var portalOrRoot = workInProgress.stateNode;
        var childrenUnchanged = workInProgress.firstEffect === null;

        if (childrenUnchanged) {// No changes, just reuse the existing instance.
        } else {
          var container = portalOrRoot.containerInfo;
          var newChildSet = createContainerChildSet(container); // If children might have changed, we have to add them all to the set.

          appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
          portalOrRoot.pendingChildren = newChildSet; // Schedule an update on the container to swap out the container.

          markUpdate(workInProgress);
          finalizeContainerChildren(container, newChildSet);
        }
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
        var currentInstance = current.stateNode;
        var oldProps = current.memoizedProps; // If there are no effects associated with this node, then none of our children had any updates.
        // This guarantees that we can reuse all of them.

        var childrenUnchanged = workInProgress.firstEffect === null;

        if (childrenUnchanged && oldProps === newProps) {
          // No changes, just reuse the existing instance.
          // Note that this might release a previous clone.
          workInProgress.stateNode = currentInstance;
          return;
        }

        var recyclableInstance = workInProgress.stateNode;
        var currentHostContext = getHostContext();
        var updatePayload = null;

        if (oldProps !== newProps) {
          updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
        }

        if (childrenUnchanged && updatePayload === null) {
          // No changes, just reuse the existing instance.
          // Note that this might release a previous clone.
          workInProgress.stateNode = currentInstance;
          return;
        }

        var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);

        if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
          markUpdate(workInProgress);
        }

        workInProgress.stateNode = newInstance;

        if (childrenUnchanged) {
          // If there are no other effects in this tree, we need to flag this node as having one.
          // Even though we're not going to use it for anything.
          // Otherwise parents won't know that there are new children to propagate upwards.
          markUpdate(workInProgress);
        } else {
          // If children might have changed, we have to add them all to the set.
          appendAllChildren(newInstance, workInProgress, false, false);
        }
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {
        if (oldText !== newText) {
          // If the text content differs, we'll create a new text instance for it.
          var rootContainerInstance = getRootHostContainer();
          var currentHostContext = getHostContext();
          workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress); // We'll have to mark it as having an effect, even though we won't use the effect for anything.
          // This lets the parents know that at least one of their children has changed.

          markUpdate(workInProgress);
        }
      };
    } else {
      // No host operations
      updateHostContainer = function (workInProgress) {// Noop
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {// Noop
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {// Noop
      };
    }

    function completeWork(current, workInProgress, renderExpirationTime) {
      var newProps = workInProgress.pendingProps;

      switch (workInProgress.tag) {
        case IndeterminateComponent:
          break;

        case LazyComponent:
          break;

        case SimpleMemoComponent:
        case FunctionComponent:
          break;

        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              popContext(workInProgress);
            }

            break;
          }

        case HostRoot:
          {
            popHostContainer(workInProgress);
            popTopLevelContextObject(workInProgress);
            var fiberRoot = workInProgress.stateNode;

            if (fiberRoot.pendingContext) {
              fiberRoot.context = fiberRoot.pendingContext;
              fiberRoot.pendingContext = null;
            }

            if (current === null || current.child === null) {
              // If we hydrated, pop so that we can delete any remaining children
              // that weren't hydrated.
              popHydrationState(workInProgress); // This resets the hacky state to fix isMounted before committing.
              // TODO: Delete this when we delete isMounted and findDOMNode.

              workInProgress.effectTag &= ~Placement;
            }

            updateHostContainer(workInProgress);
            break;
          }

        case HostComponent:
          {
            popHostContext(workInProgress);
            var rootContainerInstance = getRootHostContainer();
            var type = workInProgress.type;

            if (current !== null && workInProgress.stateNode != null) {
              updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

              if (current.ref !== workInProgress.ref) {
                markRef$1(workInProgress);
              }
            } else {
              if (!newProps) {
                !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0; // This can happen when we abort work.

                break;
              }

              var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
              // "stack" as the parent. Then append children as we go in beginWork
              // or completeWork depending on we want to add then top->down or
              // bottom->up. Top->down is faster in IE11.

              var wasHydrated = popHydrationState(workInProgress);

              if (wasHydrated) {
                // TODO: Move this and createInstance step into the beginPhase
                // to consolidate.
                if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
                  // If changes to the hydrated node needs to be applied at the
                  // commit-phase we mark this as such.
                  markUpdate(workInProgress);
                }
              } else {
                var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                appendAllChildren(instance, workInProgress, false, false); // Certain renderers require commit-time effects for initial mount.
                // (eg DOM renderer supports auto-focus for certain elements).
                // Make sure such renderers get scheduled for later work.

                if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {
                  markUpdate(workInProgress);
                }

                workInProgress.stateNode = instance;
              }

              if (workInProgress.ref !== null) {
                // If there is a ref on a host node we need to schedule a callback
                markRef$1(workInProgress);
              }
            }

            break;
          }

        case HostText:
          {
            var newText = newProps;

            if (current && workInProgress.stateNode != null) {
              var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
              // to schedule a side-effect to do the updates.

              updateHostText$1(current, workInProgress, oldText, newText);
            } else {
              if (typeof newText !== 'string') {
                !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0; // This can happen when we abort work.
              }

              var _rootContainerInstance = getRootHostContainer();

              var _currentHostContext = getHostContext();

              var _wasHydrated = popHydrationState(workInProgress);

              if (_wasHydrated) {
                if (prepareToHydrateHostTextInstance(workInProgress)) {
                  markUpdate(workInProgress);
                }
              } else {
                workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
              }
            }

            break;
          }

        case ForwardRef:
          break;

        case SuspenseComponent:
          {
            var nextState = workInProgress.memoizedState;

            if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
              // Something suspended. Re-render with the fallback children.
              workInProgress.expirationTime = renderExpirationTime; // Do not reset the effect list.

              return workInProgress;
            }

            var nextDidTimeout = nextState !== null;
            var prevDidTimeout = current !== null && current.memoizedState !== null;

            if (current !== null && !nextDidTimeout && prevDidTimeout) {
              // We just switched from the fallback to the normal children. Delete
              // the fallback.
              // TODO: Would it be better to store the fallback fragment on
              var currentFallbackChild = current.child.sibling;

              if (currentFallbackChild !== null) {
                // Deletions go at the beginning of the return fiber's effect list
                var first = workInProgress.firstEffect;

                if (first !== null) {
                  workInProgress.firstEffect = currentFallbackChild;
                  currentFallbackChild.nextEffect = first;
                } else {
                  workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;
                  currentFallbackChild.nextEffect = null;
                }

                currentFallbackChild.effectTag = Deletion;
              }
            }

            if (nextDidTimeout || prevDidTimeout) {
              // If the children are hidden, or if they were previous hidden, schedule
              // an effect to toggle their visibility. This is also used to attach a
              // retry listener to the promise.
              workInProgress.effectTag |= Update;
            }

            break;
          }

        case Fragment:
          break;

        case Mode:
          break;

        case Profiler:
          break;

        case HostPortal:
          popHostContainer(workInProgress);
          updateHostContainer(workInProgress);
          break;

        case ContextProvider:
          // Pop provider fiber
          popProvider(workInProgress);
          break;

        case ContextConsumer:
          break;

        case MemoComponent:
          break;

        case IncompleteClassComponent:
          {
            // Same as class component case. I put it down here so that the tags are
            // sequential to ensure this switch is compiled to a jump table.
            var _Component = workInProgress.type;

            if (isContextProvider(_Component)) {
              popContext(workInProgress);
            }

            break;
          }

        case DehydratedSuspenseComponent:
          {
            if (enableSuspenseServerRenderer) {
              if (current === null) {
                var _wasHydrated2 = popHydrationState(workInProgress);

                !_wasHydrated2 ? invariant(false, 'A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.') : void 0;
                skipPastDehydratedSuspenseInstance(workInProgress);
              } else if ((workInProgress.effectTag & DidCapture) === NoEffect) {
                // This boundary did not suspend so it's now hydrated.
                // To handle any future suspense cases, we're going to now upgrade it
                // to a Suspense component. We detach it from the existing current fiber.
                current.alternate = null;
                workInProgress.alternate = null;
                workInProgress.tag = SuspenseComponent;
                workInProgress.memoizedState = null;
                workInProgress.stateNode = null;
              }
            }

            break;
          }

        default:
          invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
      }

      return null;
    }

    function shouldCaptureSuspense(workInProgress) {
      // In order to capture, the Suspense component must have a fallback prop.
      if (workInProgress.memoizedProps.fallback === undefined) {
        return false;
      } // If it was the primary children that just suspended, capture and render the
      // fallback. Otherwise, don't capture and bubble to the next boundary.


      var nextState = workInProgress.memoizedState;
      return nextState === null;
    } // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.


    function showErrorDialog(capturedError) {
      return true;
    }

    function logCapturedError(capturedError) {
      var logError = showErrorDialog(capturedError); // Allow injected showErrorDialog() to prevent default console.error logging.
      // This enables renderers like ReactNative to better manage redbox behavior.

      if (logError === false) {
        return;
      }

      var error = capturedError.error;
      {
        var componentName = capturedError.componentName,
            componentStack = capturedError.componentStack,
            errorBoundaryName = capturedError.errorBoundaryName,
            errorBoundaryFound = capturedError.errorBoundaryFound,
            willRetry = capturedError.willRetry; // Browsers support silencing uncaught errors by calling
        // `preventDefault()` in window `error` handler.
        // We record this information as an expando on the error.

        if (error != null && error._suppressLogging) {
          if (errorBoundaryFound && willRetry) {
            // The error is recoverable and was silenced.
            // Ignore it and don't print the stack addendum.
            // This is handy for testing error boundaries without noise.
            return;
          } // The error is fatal. Since the silencing might have
          // been accidental, we'll surface it anyway.
          // However, the browser would have silenced the original error
          // so we'll print it first, and then print the stack addendum.


          console.error(error); // For a more detailed description of this block, see:
          // https://github.com/facebook/react/pull/13384
        }

        var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';
        var errorBoundaryMessage = void 0; // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.

        if (errorBoundaryFound && errorBoundaryName) {
          if (willRetry) {
            errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
          } else {
            errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
          }
        } else {
          errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
        }

        var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
        // We don't include the original error message and JS stack because the browser
        // has already printed it. Even if the application swallows the error, it is still
        // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

        console.error(combinedMessage);
      }
    }

    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    {
      didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    }
    var PossiblyWeakSet$1 = typeof WeakSet === 'function' ? WeakSet : Set;

    function logError(boundary, errorInfo) {
      var source = errorInfo.source;
      var stack = errorInfo.stack;

      if (stack === null && source !== null) {
        stack = getStackByFiberInDevAndProd(source);
      }

      var capturedError = {
        componentName: source !== null ? getComponentName(source.type) : null,
        componentStack: stack !== null ? stack : '',
        error: errorInfo.value,
        errorBoundary: null,
        errorBoundaryName: null,
        errorBoundaryFound: false,
        willRetry: false
      };

      if (boundary !== null && boundary.tag === ClassComponent) {
        capturedError.errorBoundary = boundary.stateNode;
        capturedError.errorBoundaryName = getComponentName(boundary.type);
        capturedError.errorBoundaryFound = true;
        capturedError.willRetry = true;
      }

      try {
        logCapturedError(capturedError);
      } catch (e) {
        // This method must not throw, or React internal state will get messed up.
        // If console.error is overridden, or logCapturedError() shows a dialog that throws,
        // we want to report this error outside of the normal stack as a last resort.
        // https://github.com/facebook/react/issues/13188
        setTimeout(function () {
          throw e;
        });
      }
    }

    var callComponentWillUnmountWithTimer = function (current$$1, instance) {
      startPhaseTimer(current$$1, 'componentWillUnmount');
      instance.props = current$$1.memoizedProps;
      instance.state = current$$1.memoizedState;
      instance.componentWillUnmount();
      stopPhaseTimer();
    }; // Capture errors so they don't interrupt unmounting.


    function safelyCallComponentWillUnmount(current$$1, instance) {
      {
        invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);

        if (hasCaughtError()) {
          var unmountError = clearCaughtError();
          captureCommitPhaseError(current$$1, unmountError);
        }
      }
    }

    function safelyDetachRef(current$$1) {
      var ref = current$$1.ref;

      if (ref !== null) {
        if (typeof ref === 'function') {
          {
            invokeGuardedCallback(null, ref, null, null);

            if (hasCaughtError()) {
              var refError = clearCaughtError();
              captureCommitPhaseError(current$$1, refError);
            }
          }
        } else {
          ref.current = null;
        }
      }
    }

    function safelyCallDestroy(current$$1, destroy) {
      {
        invokeGuardedCallback(null, destroy, null);

        if (hasCaughtError()) {
          var error = clearCaughtError();
          captureCommitPhaseError(current$$1, error);
        }
      }
    }

    function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
            return;
          }

        case ClassComponent:
          {
            if (finishedWork.effectTag & Snapshot) {
              if (current$$1 !== null) {
                var prevProps = current$$1.memoizedProps;
                var prevState = current$$1.memoizedState;
                startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
                var instance = finishedWork.stateNode; // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  }
                }
                var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                {
                  var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

                  if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                    didWarnSet.add(finishedWork.type);
                    warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
                  }
                }
                instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                stopPhaseTimer();
              }
            }

            return;
          }

        case HostRoot:
        case HostComponent:
        case HostText:
        case HostPortal:
        case IncompleteClassComponent:
          // Nothing to do for these component types
          return;

        default:
          {
            invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
          }
      }
    }

    function commitHookEffectList(unmountTag, mountTag, finishedWork) {
      var updateQueue = finishedWork.updateQueue;
      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

      if (lastEffect !== null) {
        var firstEffect = lastEffect.next;
        var effect = firstEffect;

        do {
          if ((effect.tag & unmountTag) !== NoEffect$1) {
            // Unmount
            var destroy = effect.destroy;
            effect.destroy = undefined;

            if (destroy !== undefined) {
              destroy();
            }
          }

          if ((effect.tag & mountTag) !== NoEffect$1) {
            // Mount
            var create = effect.create;
            effect.destroy = create();
            {
              var _destroy = effect.destroy;

              if (_destroy !== undefined && typeof _destroy !== 'function') {
                var addendum = void 0;

                if (_destroy === null) {
                  addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
                } else if (typeof _destroy.then === 'function') {
                  addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, you may write an async function separately ' + 'and then call it from inside the effect:\n\n' + 'async function fetchComment(commentId) {\n' + '  // You can await here\n' + '}\n\n' + 'useEffect(() => {\n' + '  fetchComment(commentId);\n' + '}, [commentId]);\n\n' + 'In the future, React will provide a more idiomatic solution for data fetching ' + "that doesn't involve writing effects manually.";
                } else {
                  addendum = ' You returned: ' + _destroy;
                }

                warningWithoutStack$1(false, 'An Effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));
              }
            }
          }

          effect = effect.next;
        } while (effect !== firstEffect);
      }
    }

    function commitPassiveHookEffects(finishedWork) {
      commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
      commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
    }

    function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
            break;
          }

        case ClassComponent:
          {
            var instance = finishedWork.stateNode;

            if (finishedWork.effectTag & Update) {
              if (current$$1 === null) {
                startPhaseTimer(finishedWork, 'componentDidMount'); // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  }
                }
                instance.componentDidMount();
                stopPhaseTimer();
              } else {
                var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
                var prevState = current$$1.memoizedState;
                startPhaseTimer(finishedWork, 'componentDidUpdate'); // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  }
                }
                instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                stopPhaseTimer();
              }
            }

            var updateQueue = finishedWork.updateQueue;

            if (updateQueue !== null) {
              {
                if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                  !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                }
              } // We could update instance props and state here,
              // but instead we rely on them being set during last render.
              // TODO: revisit this when we implement resuming.

              commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
            }

            return;
          }

        case HostRoot:
          {
            var _updateQueue = finishedWork.updateQueue;

            if (_updateQueue !== null) {
              var _instance = null;

              if (finishedWork.child !== null) {
                switch (finishedWork.child.tag) {
                  case HostComponent:
                    _instance = getPublicInstance(finishedWork.child.stateNode);
                    break;

                  case ClassComponent:
                    _instance = finishedWork.child.stateNode;
                    break;
                }
              }

              commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
            }

            return;
          }

        case HostComponent:
          {
            var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
            // (eg DOM renderer may schedule auto-focus for inputs and form controls).
            // These effects should only be committed when components are first mounted,
            // aka when there is no current/alternate.

            if (current$$1 === null && finishedWork.effectTag & Update) {
              var type = finishedWork.type;
              var props = finishedWork.memoizedProps;
              commitMount(_instance2, type, props, finishedWork);
            }

            return;
          }

        case HostText:
          {
            // We have no life-cycles associated with text.
            return;
          }

        case HostPortal:
          {
            // We have no life-cycles associated with portals.
            return;
          }

        case Profiler:
          {
            if (enableProfilerTimer) {
              var onRender = finishedWork.memoizedProps.onRender;

              if (enableSchedulerTracing) {
                onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
              } else {
                onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
              }
            }

            return;
          }

        case SuspenseComponent:
          break;

        case IncompleteClassComponent:
          break;

        default:
          {
            invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
          }
      }
    }

    function hideOrUnhideAllChildren(finishedWork, isHidden) {
      if (supportsMutation) {
        // We only have the top Fiber that was inserted but we need to recurse down its
        var node = finishedWork;

        while (true) {
          if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (isHidden) {
              hideInstance(instance);
            } else {
              unhideInstance(node.stateNode, node.memoizedProps);
            }
          } else if (node.tag === HostText) {
            var _instance3 = node.stateNode;

            if (isHidden) {
              hideTextInstance(_instance3);
            } else {
              unhideTextInstance(_instance3, node.memoizedProps);
            }
          } else if (node.tag === SuspenseComponent && node.memoizedState !== null) {
            // Found a nested Suspense component that timed out. Skip over the
            var fallbackChildFragment = node.child.sibling;
            fallbackChildFragment.return = node;
            node = fallbackChildFragment;
            continue;
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === finishedWork) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === finishedWork) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }
    }

    function commitAttachRef(finishedWork) {
      var ref = finishedWork.ref;

      if (ref !== null) {
        var instance = finishedWork.stateNode;
        var instanceToUse = void 0;

        switch (finishedWork.tag) {
          case HostComponent:
            instanceToUse = getPublicInstance(instance);
            break;

          default:
            instanceToUse = instance;
        }

        if (typeof ref === 'function') {
          ref(instanceToUse);
        } else {
          {
            if (!ref.hasOwnProperty('current')) {
              warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
            }
          }
          ref.current = instanceToUse;
        }
      }
    }

    function commitDetachRef(current$$1) {
      var currentRef = current$$1.ref;

      if (currentRef !== null) {
        if (typeof currentRef === 'function') {
          currentRef(null);
        } else {
          currentRef.current = null;
        }
      }
    } // User-originating errors (lifecycles and refs) should not interrupt
    // deletion, so don't let them throw. Host-originating errors should
    // interrupt deletion, so it's okay


    function commitUnmount(current$$1) {
      onCommitUnmount(current$$1);

      switch (current$$1.tag) {
        case FunctionComponent:
        case ForwardRef:
        case MemoComponent:
        case SimpleMemoComponent:
          {
            var updateQueue = current$$1.updateQueue;

            if (updateQueue !== null) {
              var lastEffect = updateQueue.lastEffect;

              if (lastEffect !== null) {
                var firstEffect = lastEffect.next;
                var effect = firstEffect;

                do {
                  var destroy = effect.destroy;

                  if (destroy !== undefined) {
                    safelyCallDestroy(current$$1, destroy);
                  }

                  effect = effect.next;
                } while (effect !== firstEffect);
              }
            }

            break;
          }

        case ClassComponent:
          {
            safelyDetachRef(current$$1);
            var instance = current$$1.stateNode;

            if (typeof instance.componentWillUnmount === 'function') {
              safelyCallComponentWillUnmount(current$$1, instance);
            }

            return;
          }

        case HostComponent:
          {
            safelyDetachRef(current$$1);
            return;
          }

        case HostPortal:
          {
            // TODO: this is recursive.
            // We are also not using this parent because
            // the portal will get pushed immediately.
            if (supportsMutation) {
              unmountHostComponents(current$$1);
            } else if (supportsPersistence) {
              emptyPortalContainer(current$$1);
            }

            return;
          }
      }
    }

    function commitNestedUnmounts(root) {
      // While we're inside a removed host node we don't want to call
      // removeChild on the inner nodes because they're removed by the top
      // call anyway. We also want to call componentWillUnmount on all
      // composites before this host node is removed from the tree. Therefore
      var node = root;

      while (true) {
        commitUnmount(node); // Visit children because they may contain more composite or host nodes.
        // Skip portals because commitUnmount() currently visits them recursively.

        if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.
        // If we don't use mutation we drill down into portals here instead.
        !supportsMutation || node.tag !== HostPortal)) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === root) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === root) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function detachFiber(current$$1) {
      // Cut off the return pointers to disconnect it from the tree. Ideally, we
      // should clear the child pointer of the parent alternate to let this
      // get GC:ed but we don't know which for sure which parent is the current
      // one so we'll settle for GC:ing the subtree of this child. This child
      // itself will be GC:ed when the parent updates the next time.
      current$$1.return = null;
      current$$1.child = null;
      current$$1.memoizedState = null;
      current$$1.updateQueue = null;
      var alternate = current$$1.alternate;

      if (alternate !== null) {
        alternate.return = null;
        alternate.child = null;
        alternate.memoizedState = null;
        alternate.updateQueue = null;
      }
    }

    function emptyPortalContainer(current$$1) {
      if (!supportsPersistence) {
        return;
      }

      var portal = current$$1.stateNode;
      var containerInfo = portal.containerInfo;
      var emptyChildSet = createContainerChildSet(containerInfo);
      replaceContainerChildren(containerInfo, emptyChildSet);
    }

    function commitContainer(finishedWork) {
      if (!supportsPersistence) {
        return;
      }

      switch (finishedWork.tag) {
        case ClassComponent:
          {
            return;
          }

        case HostComponent:
          {
            return;
          }

        case HostText:
          {
            return;
          }

        case HostRoot:
        case HostPortal:
          {
            var portalOrRoot = finishedWork.stateNode;
            var containerInfo = portalOrRoot.containerInfo,
                _pendingChildren = portalOrRoot.pendingChildren;
            replaceContainerChildren(containerInfo, _pendingChildren);
            return;
          }

        default:
          {
            invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
          }
      }
    }

    function getHostParentFiber(fiber) {
      var parent = fiber.return;

      while (parent !== null) {
        if (isHostParent(parent)) {
          return parent;
        }

        parent = parent.return;
      }

      invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
    }

    function isHostParent(fiber) {
      return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }

    function getHostSibling(fiber) {
      // We're going to search forward into the tree until we find a sibling host
      // node. Unfortunately, if multiple insertions are done in a row we have to
      // search past them. This leads to exponential search for the next sibling.
      var node = fiber;

      siblings: while (true) {
        // If we didn't find anything, let's try the next sibling.
        while (node.sibling === null) {
          if (node.return === null || isHostParent(node.return)) {
            // If we pop out of the root or hit the parent the fiber we are the
            // last sibling.
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;

        while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedSuspenseComponent) {
          // If it is not host node and, we might have a host node inside it.
          // Try to search down until we find one.
          if (node.effectTag & Placement) {
            // If we don't have a child, try the siblings instead.
            continue siblings;
          } // If we don't have a child, try the siblings instead.
          // We also skip portals because they are not part of this host tree.


          if (node.child === null || node.tag === HostPortal) {
            continue siblings;
          } else {
            node.child.return = node;
            node = node.child;
          }
        } // Check if this host node is stable or about to be placed.


        if (!(node.effectTag & Placement)) {
          // Found it!
          return node.stateNode;
        }
      }
    }

    function commitPlacement(finishedWork) {
      if (!supportsMutation) {
        return;
      } // Recursively insert all host nodes into the parent.


      var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

      var parent = void 0;
      var isContainer = void 0;

      switch (parentFiber.tag) {
        case HostComponent:
          parent = parentFiber.stateNode;
          isContainer = false;
          break;

        case HostRoot:
          parent = parentFiber.stateNode.containerInfo;
          isContainer = true;
          break;

        case HostPortal:
          parent = parentFiber.stateNode.containerInfo;
          isContainer = true;
          break;

        default:
          invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
      }

      if (parentFiber.effectTag & ContentReset) {
        // Reset the text content of the parent before doing any insertions
        resetTextContent(parent); // Clear ContentReset from the effect tag

        parentFiber.effectTag &= ~ContentReset;
      }

      var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
      // children to find all the terminal nodes.

      var node = finishedWork;

      while (true) {
        if (node.tag === HostComponent || node.tag === HostText) {
          if (before) {
            if (isContainer) {
              insertInContainerBefore(parent, node.stateNode, before);
            } else {
              insertBefore(parent, node.stateNode, before);
            }
          } else {
            if (isContainer) {
              appendChildToContainer(parent, node.stateNode);
            } else {
              appendChild(parent, node.stateNode);
            }
          }
        } else if (node.tag === HostPortal) {// If the insertion itself is a portal, then we don't want to traverse
          // down its children. Instead, we'll get insertions from each child in
          // the portal directly.
        } else if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === finishedWork) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === finishedWork) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function unmountHostComponents(current$$1) {
      // We only have the top Fiber that was deleted but we need to recurse down its
      var node = current$$1; // Each iteration, currentParent is populated with node's host parent if not
      // currentParentIsValid.

      var currentParentIsValid = false; // Note: these two variables *must* always be updated together.

      var currentParent = void 0;
      var currentParentIsContainer = void 0;

      while (true) {
        if (!currentParentIsValid) {
          var parent = node.return;

          findParent: while (true) {
            !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;

            switch (parent.tag) {
              case HostComponent:
                currentParent = parent.stateNode;
                currentParentIsContainer = false;
                break findParent;

              case HostRoot:
                currentParent = parent.stateNode.containerInfo;
                currentParentIsContainer = true;
                break findParent;

              case HostPortal:
                currentParent = parent.stateNode.containerInfo;
                currentParentIsContainer = true;
                break findParent;
            }

            parent = parent.return;
          }

          currentParentIsValid = true;
        }

        if (node.tag === HostComponent || node.tag === HostText) {
          commitNestedUnmounts(node); // After all the children have unmounted, it is now safe to remove the
          // node from the tree.

          if (currentParentIsContainer) {
            removeChildFromContainer(currentParent, node.stateNode);
          } else {
            removeChild(currentParent, node.stateNode);
          } // Don't visit children because we already visited them.

        } else if (enableSuspenseServerRenderer && node.tag === DehydratedSuspenseComponent) {
          // Delete the dehydrated suspense boundary and all of its content.
          if (currentParentIsContainer) {
            clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);
          } else {
            clearSuspenseBoundary(currentParent, node.stateNode);
          }
        } else if (node.tag === HostPortal) {
          if (node.child !== null) {
            // When we go into a portal, it becomes the parent to remove from.
            // We will reassign it back when we pop the portal on the way up.
            currentParent = node.stateNode.containerInfo;
            currentParentIsContainer = true; // Visit children because portals might contain host components.

            node.child.return = node;
            node = node.child;
            continue;
          }
        } else {
          commitUnmount(node); // Visit children because we may find more host components below.

          if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }
        }

        if (node === current$$1) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === current$$1) {
            return;
          }

          node = node.return;

          if (node.tag === HostPortal) {
            // When we go out of the portal, we need to restore the parent.
            // Since we don't keep a stack of them, we will search for it.
            currentParentIsValid = false;
          }
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function commitDeletion(current$$1) {
      if (supportsMutation) {
        // Recursively delete all host nodes from the parent.
        // Detach refs and call componentWillUnmount() on the whole subtree.
        unmountHostComponents(current$$1);
      } else {
        // Detach refs and call componentWillUnmount() on the whole subtree.
        commitNestedUnmounts(current$$1);
      }

      detachFiber(current$$1);
    }

    function commitWork(current$$1, finishedWork) {
      if (!supportsMutation) {
        switch (finishedWork.tag) {
          case FunctionComponent:
          case ForwardRef:
          case MemoComponent:
          case SimpleMemoComponent:
            {
              // Note: We currently never use MountMutation, but useLayout uses
              // UnmountMutation.
              commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
              return;
            }
        }

        commitContainer(finishedWork);
        return;
      }

      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case MemoComponent:
        case SimpleMemoComponent:
          {
            // Note: We currently never use MountMutation, but useLayout uses
            // UnmountMutation.
            commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
            return;
          }

        case ClassComponent:
          {
            return;
          }

        case HostComponent:
          {
            var instance = finishedWork.stateNode;

            if (instance != null) {
              // Commit the work prepared earlier.
              var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
              // as the newProps. The updatePayload will contain the real change in
              // this case.

              var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
              var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

              var updatePayload = finishedWork.updateQueue;
              finishedWork.updateQueue = null;

              if (updatePayload !== null) {
                commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
              }
            }

            return;
          }

        case HostText:
          {
            !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            var textInstance = finishedWork.stateNode;
            var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
            // as the newProps. The updatePayload will contain the real change in
            // this case.

            var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
            commitTextUpdate(textInstance, oldText, newText);
            return;
          }

        case HostRoot:
          {
            return;
          }

        case Profiler:
          {
            return;
          }

        case SuspenseComponent:
          {
            var newState = finishedWork.memoizedState;
            var newDidTimeout = void 0;
            var primaryChildParent = finishedWork;

            if (newState === null) {
              newDidTimeout = false;
            } else {
              newDidTimeout = true;
              primaryChildParent = finishedWork.child;

              if (newState.timedOutAt === NoWork) {
                // If the children had not already timed out, record the time.
                // This is used to compute the elapsed time during subsequent
                // attempts to render the children.
                newState.timedOutAt = requestCurrentTime();
              }
            }

            if (primaryChildParent !== null) {
              hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
            } // If this boundary just timed out, then it will have a set of thenables.
            // For each thenable, attach a listener so that when it resolves, React
            // attempts to re-render the boundary in the primary (pre-timeout) state.


            var thenables = finishedWork.updateQueue;

            if (thenables !== null) {
              finishedWork.updateQueue = null;
              var retryCache = finishedWork.stateNode;

              if (retryCache === null) {
                retryCache = finishedWork.stateNode = new PossiblyWeakSet$1();
              }

              thenables.forEach(function (thenable) {
                // Memoize using the boundary fiber to prevent redundant listeners.
                var retry = retryTimedOutBoundary.bind(null, finishedWork, thenable);

                if (enableSchedulerTracing) {
                  retry = tracing.unstable_wrap(retry);
                }

                if (!retryCache.has(thenable)) {
                  retryCache.add(thenable);
                  thenable.then(retry, retry);
                }
              });
            }

            return;
          }

        case IncompleteClassComponent:
          {
            return;
          }

        default:
          {
            invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
          }
      }
    }

    function commitResetTextContent(current$$1) {
      if (!supportsMutation) {
        return;
      }

      resetTextContent(current$$1.stateNode);
    }

    var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;

    function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
      var update = createUpdate(expirationTime); // Unmount the root by rendering null.

      update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
      // being called "element".

      update.payload = {
        element: null
      };
      var error = errorInfo.value;

      update.callback = function () {
        onUncaughtError(error);
        logError(fiber, errorInfo);
      };

      return update;
    }

    function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
      var update = createUpdate(expirationTime);
      update.tag = CaptureUpdate;
      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

      if (typeof getDerivedStateFromError === 'function') {
        var error = errorInfo.value;

        update.payload = function () {
          return getDerivedStateFromError(error);
        };
      }

      var inst = fiber.stateNode;

      if (inst !== null && typeof inst.componentDidCatch === 'function') {
        update.callback = function callback() {
          if (typeof getDerivedStateFromError !== 'function') {
            // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this);
          }

          var error = errorInfo.value;
          var stack = errorInfo.stack;
          logError(fiber, errorInfo);
          this.componentDidCatch(error, {
            componentStack: stack !== null ? stack : ''
          });
          {
            if (typeof getDerivedStateFromError !== 'function') {
              // If componentDidCatch is the only error boundary method defined,
              // then it needs to call setState to recover from errors.
              // If no state update is scheduled then the boundary will swallow the error.
              !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;
            }
          }
        };
      }

      return update;
    }

    function attachPingListener(root, renderExpirationTime, thenable) {
      // Attach a listener to the promise to "ping" the root and retry. But
      // only if one does not already exist for the current render expiration
      // time (which acts like a "thread ID" here).
      var pingCache = root.pingCache;
      var threadIDs = void 0;

      if (pingCache === null) {
        pingCache = root.pingCache = new PossiblyWeakMap();
        threadIDs = new Set();
        pingCache.set(thenable, threadIDs);
      } else {
        threadIDs = pingCache.get(thenable);

        if (threadIDs === undefined) {
          threadIDs = new Set();
          pingCache.set(thenable, threadIDs);
        }
      }

      if (!threadIDs.has(renderExpirationTime)) {
        // Memoize using the thread ID to prevent redundant listeners.
        threadIDs.add(renderExpirationTime);
        var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);

        if (enableSchedulerTracing) {
          ping = tracing.unstable_wrap(ping);
        }

        thenable.then(ping, ping);
      }
    }

    function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {
      // The source fiber did not complete.
      sourceFiber.effectTag |= Incomplete; // Its effect list is no longer valid.

      sourceFiber.firstEffect = sourceFiber.lastEffect = null;

      if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
        // This is a thenable.
        var thenable = value; // Find the earliest timeout threshold of all the placeholders in the
        // ancestor path. We could avoid this traversal by storing the thresholds on
        // the stack, but we choose not to because we only hit this path if we're
        // IO-bound (i.e. if something suspends). Whereas the stack is used even in
        // the non-IO- bound case.

        var _workInProgress = returnFiber;
        var earliestTimeoutMs = -1;
        var startTimeMs = -1;

        do {
          if (_workInProgress.tag === SuspenseComponent) {
            var current$$1 = _workInProgress.alternate;

            if (current$$1 !== null) {
              var currentState = current$$1.memoizedState;

              if (currentState !== null) {
                // Reached a boundary that already timed out. Do not search
                // any further.
                var timedOutAt = currentState.timedOutAt;
                startTimeMs = expirationTimeToMs(timedOutAt); // Do not search any further.

                break;
              }
            }

            var timeoutPropMs = _workInProgress.pendingProps.maxDuration;

            if (typeof timeoutPropMs === 'number') {
              if (timeoutPropMs <= 0) {
                earliestTimeoutMs = 0;
              } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {
                earliestTimeoutMs = timeoutPropMs;
              }
            }
          } // If there is a DehydratedSuspenseComponent we don't have to do anything because
          // if something suspends inside it, we will simply leave that as dehydrated. It
          // will never timeout.


          _workInProgress = _workInProgress.return;
        } while (_workInProgress !== null); // Schedule the nearest Suspense to re-render the timed out view.


        _workInProgress = returnFiber;

        do {
          if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress)) {
            // Found the nearest boundary.
            // Stash the promise on the boundary fiber. If the boundary times out, we'll
            var thenables = _workInProgress.updateQueue;

            if (thenables === null) {
              var updateQueue = new Set();
              updateQueue.add(thenable);
              _workInProgress.updateQueue = updateQueue;
            } else {
              thenables.add(thenable);
            } // If the boundary is outside of concurrent mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. In the commit phase, we'll schedule a
            // subsequent synchronous update to re-render the Suspense.
            //
            // Note: It doesn't matter whether the component that suspended was
            // inside a concurrent mode tree. If the Suspense is outside of it, we
            // should *not* suspend the commit.


            if ((_workInProgress.mode & ConcurrentMode) === NoEffect) {
              _workInProgress.effectTag |= DidCapture; // We're going to commit this fiber even though it didn't complete.
              // But we shouldn't call any lifecycle methods or callbacks. Remove
              // all lifecycle effect tags.

              sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);

              if (sourceFiber.tag === ClassComponent) {
                var currentSourceFiber = sourceFiber.alternate;

                if (currentSourceFiber === null) {
                  // This is a new mount. Change the tag so it's not mistaken for a
                  // completed class component. For example, we should not call
                  // componentWillUnmount if it is deleted.
                  sourceFiber.tag = IncompleteClassComponent;
                } else {
                  // When we try rendering again, we should not reuse the current fiber,
                  // since it's known to be in an inconsistent state. Use a force updte to
                  // prevent a bail out.
                  var update = createUpdate(Sync);
                  update.tag = ForceUpdate;
                  enqueueUpdate(sourceFiber, update);
                }
              } // The source fiber did not complete. Mark it with Sync priority to
              // indicate that it still has pending work.


              sourceFiber.expirationTime = Sync; // Exit without suspending.

              return;
            } // Confirmed that the boundary is in a concurrent mode tree. Continue
            // with the normal suspend path.


            attachPingListener(root, renderExpirationTime, thenable);
            var absoluteTimeoutMs = void 0;

            if (earliestTimeoutMs === -1) {
              // If no explicit threshold is given, default to an arbitrarily large
              // value. The actual size doesn't matter because the threshold for the
              // whole tree will be clamped to the expiration time.
              absoluteTimeoutMs = maxSigned31BitInt;
            } else {
              if (startTimeMs === -1) {
                // This suspend happened outside of any already timed-out
                // placeholders. We don't know exactly when the update was
                // scheduled, but we can infer an approximate start time from the
                // expiration time. First, find the earliest uncommitted expiration
                // time in the tree, including work that is suspended. Then subtract
                // the offset used to compute an async update's expiration time.
                // This will cause high priority (interactive) work to expire
                // earlier than necessary, but we can account for this by adjusting
                // for the Just Noticeable Difference.
                var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, renderExpirationTime);
                var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);
                startTimeMs = earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
              }

              absoluteTimeoutMs = startTimeMs + earliestTimeoutMs;
            } // Mark the earliest timeout in the suspended fiber's ancestor path.
            // After completing the root, we'll take the largest of all the
            // suspended fiber's timeouts and use it to compute a timeout for the
            // whole tree.


            renderDidSuspend(root, absoluteTimeoutMs, renderExpirationTime);
            _workInProgress.effectTag |= ShouldCapture;
            _workInProgress.expirationTime = renderExpirationTime;
            return;
          } else if (enableSuspenseServerRenderer && _workInProgress.tag === DehydratedSuspenseComponent) {
            attachPingListener(root, renderExpirationTime, thenable); // Since we already have a current fiber, we can eagerly add a retry listener.

            var retryCache = _workInProgress.memoizedState;

            if (retryCache === null) {
              retryCache = _workInProgress.memoizedState = new PossiblyWeakSet();
              var _current = _workInProgress.alternate;
              !_current ? invariant(false, 'A dehydrated suspense boundary must commit before trying to render. This is probably a bug in React.') : void 0;
              _current.memoizedState = retryCache;
            } // Memoize using the boundary fiber to prevent redundant listeners.


            if (!retryCache.has(thenable)) {
              retryCache.add(thenable);
              var retry = retryTimedOutBoundary.bind(null, _workInProgress, thenable);

              if (enableSchedulerTracing) {
                retry = tracing.unstable_wrap(retry);
              }

              thenable.then(retry, retry);
            }

            _workInProgress.effectTag |= ShouldCapture;
            _workInProgress.expirationTime = renderExpirationTime;
            return;
          } // This boundary already captured during this render. Continue to the next
          // boundary.


          _workInProgress = _workInProgress.return;
        } while (_workInProgress !== null); // No boundary was found. Fallthrough to error mode.
        // TODO: Use invariant so the message is stripped in prod?


        value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));
      } // We didn't find a boundary that could handle this type of exception. Start
      // over and traverse parent path again, this time treating the exception
      // as an error.


      renderDidError();
      value = createCapturedValue(value, sourceFiber);
      var workInProgress = returnFiber;

      do {
        switch (workInProgress.tag) {
          case HostRoot:
            {
              var _errorInfo = value;
              workInProgress.effectTag |= ShouldCapture;
              workInProgress.expirationTime = renderExpirationTime;

              var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);

              enqueueCapturedUpdate(workInProgress, _update);
              return;
            }

          case ClassComponent:
            // Capture and retry
            var errorInfo = value;
            var ctor = workInProgress.type;
            var instance = workInProgress.stateNode;

            if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
              workInProgress.effectTag |= ShouldCapture;
              workInProgress.expirationTime = renderExpirationTime; // Schedule the error boundary to re-render using updated state

              var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);

              enqueueCapturedUpdate(workInProgress, _update2);
              return;
            }

            break;

          default:
            break;
        }

        workInProgress = workInProgress.return;
      } while (workInProgress !== null);
    }

    function unwindWork(workInProgress, renderExpirationTime) {
      switch (workInProgress.tag) {
        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              popContext(workInProgress);
            }

            var effectTag = workInProgress.effectTag;

            if (effectTag & ShouldCapture) {
              workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
              return workInProgress;
            }

            return null;
          }

        case HostRoot:
          {
            popHostContainer(workInProgress);
            popTopLevelContextObject(workInProgress);
            var _effectTag = workInProgress.effectTag;
            !((_effectTag & DidCapture) === NoEffect) ? invariant(false, 'The root failed to unmount after an error. This is likely a bug in React. Please file an issue.') : void 0;
            workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
            return workInProgress;
          }

        case HostComponent:
          {
            // TODO: popHydrationState
            popHostContext(workInProgress);
            return null;
          }

        case SuspenseComponent:
          {
            var _effectTag2 = workInProgress.effectTag;

            if (_effectTag2 & ShouldCapture) {
              workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

              return workInProgress;
            }

            return null;
          }

        case DehydratedSuspenseComponent:
          {
            if (enableSuspenseServerRenderer) {
              // TODO: popHydrationState
              var _effectTag3 = workInProgress.effectTag;

              if (_effectTag3 & ShouldCapture) {
                workInProgress.effectTag = _effectTag3 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

                return workInProgress;
              }
            }

            return null;
          }

        case HostPortal:
          popHostContainer(workInProgress);
          return null;

        case ContextProvider:
          popProvider(workInProgress);
          return null;

        default:
          return null;
      }
    }

    function unwindInterruptedWork(interruptedWork) {
      switch (interruptedWork.tag) {
        case ClassComponent:
          {
            var childContextTypes = interruptedWork.type.childContextTypes;

            if (childContextTypes !== null && childContextTypes !== undefined) {
              popContext(interruptedWork);
            }

            break;
          }

        case HostRoot:
          {
            popHostContainer(interruptedWork);
            popTopLevelContextObject(interruptedWork);
            break;
          }

        case HostComponent:
          {
            popHostContext(interruptedWork);
            break;
          }

        case HostPortal:
          popHostContainer(interruptedWork);
          break;

        case ContextProvider:
          popProvider(interruptedWork);
          break;

        default:
          break;
      }
    }

    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;
    var didWarnAboutStateTransition = void 0;
    var didWarnSetStateChildContext = void 0;
    var warnAboutUpdateOnUnmounted = void 0;
    var warnAboutInvalidUpdates = void 0;

    if (enableSchedulerTracing) {
      // Provide explicit error message when production+profiling bundle of e.g. react-dom
      // is used with production (non-profiling) bundle of scheduler/tracing
      !(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null) ? invariant(false, 'It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling') : void 0;
    }

    {
      didWarnAboutStateTransition = false;
      didWarnSetStateChildContext = false;
      var didWarnStateUpdateForUnmountedComponent = {};

      warnAboutUpdateOnUnmounted = function (fiber, isClass) {
        // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentName(fiber.type) || 'ReactComponent';

        if (didWarnStateUpdateForUnmountedComponent[componentName]) {
          return;
        }

        warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', isClass ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));
        didWarnStateUpdateForUnmountedComponent[componentName] = true;
      };

      warnAboutInvalidUpdates = function (instance) {
        switch (phase) {
          case 'getChildContext':
            if (didWarnSetStateChildContext) {
              return;
            }

            warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');
            didWarnSetStateChildContext = true;
            break;

          case 'render':
            if (didWarnAboutStateTransition) {
              return;
            }

            warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as within ' + '`render`). Render methods should be a pure function of props and state.');
            didWarnAboutStateTransition = true;
            break;
        }
      };
    } // Used to ensure computeUniqueAsyncExpiration is monotonically decreasing.

    var lastUniqueAsyncExpiration = Sync - 1;
    var isWorking = false; // The next work in progress fiber that we're currently working on.

    var nextUnitOfWork = null;
    var nextRoot = null; // The time at which we're currently rendering work.

    var nextRenderExpirationTime = NoWork;
    var nextLatestAbsoluteTimeoutMs = -1;
    var nextRenderDidError = false; // The next fiber with an effect that we're currently committing.

    var nextEffect = null;
    var isCommitting$1 = false;
    var rootWithPendingPassiveEffects = null;
    var passiveEffectCallbackHandle = null;
    var passiveEffectCallback = null;
    var legacyErrorBoundariesThatAlreadyFailed = null; // Used for performance tracking.

    var interruptedBy = null;
    var stashedWorkInProgressProperties = void 0;
    var replayUnitOfWork = void 0;
    var mayReplayFailedUnitOfWork = void 0;
    var isReplayingFailedUnitOfWork = void 0;
    var originalReplayError = void 0;
    var rethrowOriginalError = void 0;

    if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
      stashedWorkInProgressProperties = null;
      mayReplayFailedUnitOfWork = true;
      isReplayingFailedUnitOfWork = false;
      originalReplayError = null;

      replayUnitOfWork = function (failedUnitOfWork, thrownValue, isYieldy) {
        if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
          // Don't replay promises. Treat everything else like an error.
          // TODO: Need to figure out a different strategy if/when we add
          // support for catching other types.
          return;
        } // Restore the original state of the work-in-progress


        if (stashedWorkInProgressProperties === null) {
          // This should never happen. Don't throw because this code is DEV-only.
          warningWithoutStack$1(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');
          return;
        }

        assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);

        switch (failedUnitOfWork.tag) {
          case HostRoot:
            popHostContainer(failedUnitOfWork);
            popTopLevelContextObject(failedUnitOfWork);
            break;

          case HostComponent:
            popHostContext(failedUnitOfWork);
            break;

          case ClassComponent:
            {
              var Component = failedUnitOfWork.type;

              if (isContextProvider(Component)) {
                popContext(failedUnitOfWork);
              }

              break;
            }

          case HostPortal:
            popHostContainer(failedUnitOfWork);
            break;

          case ContextProvider:
            popProvider(failedUnitOfWork);
            break;
        } // Replay the begin phase.


        isReplayingFailedUnitOfWork = true;
        originalReplayError = thrownValue;
        invokeGuardedCallback(null, workLoop, null, isYieldy);
        isReplayingFailedUnitOfWork = false;
        originalReplayError = null;

        if (hasCaughtError()) {
          var replayError = clearCaughtError();

          if (replayError != null && thrownValue != null) {
            try {
              // Reading the expando property is intentionally
              // inside `try` because it might be a getter or Proxy.
              if (replayError._suppressLogging) {
                // Also suppress logging for the original error.
                thrownValue._suppressLogging = true;
              }
            } catch (inner) {// Ignore.
            }
          }
        } else {
          // If the begin phase did not fail the second time, set this pointer
          // back to the original value.
          nextUnitOfWork = failedUnitOfWork;
        }
      };

      rethrowOriginalError = function () {
        throw originalReplayError;
      };
    }

    function resetStack() {
      if (nextUnitOfWork !== null) {
        var interruptedWork = nextUnitOfWork.return;

        while (interruptedWork !== null) {
          unwindInterruptedWork(interruptedWork);
          interruptedWork = interruptedWork.return;
        }
      }

      {
        ReactStrictModeWarnings.discardPendingWarnings();
        checkThatStackIsEmpty();
      }
      nextRoot = null;
      nextRenderExpirationTime = NoWork;
      nextLatestAbsoluteTimeoutMs = -1;
      nextRenderDidError = false;
      nextUnitOfWork = null;
    }

    function commitAllHostEffects() {
      while (nextEffect !== null) {
        {
          setCurrentFiber(nextEffect);
        }
        recordEffect();
        var effectTag = nextEffect.effectTag;

        if (effectTag & ContentReset) {
          commitResetTextContent(nextEffect);
        }

        if (effectTag & Ref) {
          var current$$1 = nextEffect.alternate;

          if (current$$1 !== null) {
            commitDetachRef(current$$1);
          }
        } // The following switch statement is only concerned about placement,
        // updates, and deletions. To avoid needing to add a case for every
        // possible bitmap value, we remove the secondary effects from the
        // effect tag and switch on that value.


        var primaryEffectTag = effectTag & (Placement | Update | Deletion);

        switch (primaryEffectTag) {
          case Placement:
            {
              commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is inserted, before
              // any life-cycles like componentDidMount gets called.
              // TODO: findDOMNode doesn't rely on this any more but isMounted
              // does and isMounted is deprecated anyway so we should be able
              // to kill this.

              nextEffect.effectTag &= ~Placement;
              break;
            }

          case PlacementAndUpdate:
            {
              // Placement
              commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is inserted, before
              // any life-cycles like componentDidMount gets called.

              nextEffect.effectTag &= ~Placement; // Update

              var _current = nextEffect.alternate;
              commitWork(_current, nextEffect);
              break;
            }

          case Update:
            {
              var _current2 = nextEffect.alternate;
              commitWork(_current2, nextEffect);
              break;
            }

          case Deletion:
            {
              commitDeletion(nextEffect);
              break;
            }
        }

        nextEffect = nextEffect.nextEffect;
      }

      {
        resetCurrentFiber();
      }
    }

    function commitBeforeMutationLifecycles() {
      while (nextEffect !== null) {
        {
          setCurrentFiber(nextEffect);
        }
        var effectTag = nextEffect.effectTag;

        if (effectTag & Snapshot) {
          recordEffect();
          var current$$1 = nextEffect.alternate;
          commitBeforeMutationLifeCycles(current$$1, nextEffect);
        }

        nextEffect = nextEffect.nextEffect;
      }

      {
        resetCurrentFiber();
      }
    }

    function commitAllLifeCycles(finishedRoot, committedExpirationTime) {
      {
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
        ReactStrictModeWarnings.flushLegacyContextWarning();

        if (warnAboutDeprecatedLifecycles) {
          ReactStrictModeWarnings.flushPendingDeprecationWarnings();
        }
      }

      while (nextEffect !== null) {
        {
          setCurrentFiber(nextEffect);
        }
        var effectTag = nextEffect.effectTag;

        if (effectTag & (Update | Callback)) {
          recordEffect();
          var current$$1 = nextEffect.alternate;
          commitLifeCycles(finishedRoot, current$$1, nextEffect, committedExpirationTime);
        }

        if (effectTag & Ref) {
          recordEffect();
          commitAttachRef(nextEffect);
        }

        if (effectTag & Passive) {
          rootWithPendingPassiveEffects = finishedRoot;
        }

        nextEffect = nextEffect.nextEffect;
      }

      {
        resetCurrentFiber();
      }
    }

    function commitPassiveEffects(root, firstEffect) {
      rootWithPendingPassiveEffects = null;
      passiveEffectCallbackHandle = null;
      passiveEffectCallback = null; // Set this to true to prevent re-entrancy

      var previousIsRendering = isRendering;
      isRendering = true;
      var effect = firstEffect;

      do {
        {
          setCurrentFiber(effect);
        }

        if (effect.effectTag & Passive) {
          var didError = false;
          var error = void 0;
          {
            invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);

            if (hasCaughtError()) {
              didError = true;
              error = clearCaughtError();
            }
          }

          if (didError) {
            captureCommitPhaseError(effect, error);
          }
        }

        effect = effect.nextEffect;
      } while (effect !== null);

      {
        resetCurrentFiber();
      }
      isRendering = previousIsRendering; // Check if work was scheduled by one of the effects

      var rootExpirationTime = root.expirationTime;

      if (rootExpirationTime !== NoWork) {
        requestWork(root, rootExpirationTime);
      } // Flush any sync work that was scheduled by effects


      if (!isBatchingUpdates && !isRendering) {
        performSyncWork();
      }
    }

    function isAlreadyFailedLegacyErrorBoundary(instance) {
      return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }

    function markLegacyErrorBoundaryAsFailed(instance) {
      if (legacyErrorBoundariesThatAlreadyFailed === null) {
        legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
      } else {
        legacyErrorBoundariesThatAlreadyFailed.add(instance);
      }
    }

    function flushPassiveEffects() {
      if (passiveEffectCallbackHandle !== null) {
        cancelPassiveEffects(passiveEffectCallbackHandle);
      }

      if (passiveEffectCallback !== null) {
        // We call the scheduled callback instead of commitPassiveEffects directly
        // to ensure tracing works correctly.
        passiveEffectCallback();
      }
    }

    function commitRoot(root, finishedWork) {
      isWorking = true;
      isCommitting$1 = true;
      startCommitTimer();
      !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      var committedExpirationTime = root.pendingCommitExpirationTime;
      !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      root.pendingCommitExpirationTime = NoWork; // Update the pending priority levels to account for the work that we are
      // about to commit. This needs to happen before calling the lifecycles, since
      // they may schedule additional updates.

      var updateExpirationTimeBeforeCommit = finishedWork.expirationTime;
      var childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
      var earliestRemainingTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
      markCommittedPriorityLevels(root, earliestRemainingTimeBeforeCommit);
      var prevInteractions = null;

      if (enableSchedulerTracing) {
        // Restore any pending interactions at this point,
        // So that cascading work triggered during the render phase will be accounted for.
        prevInteractions = tracing.__interactionsRef.current;
        tracing.__interactionsRef.current = root.memoizedInteractions;
      } // Reset this to null before calling lifecycles


      ReactCurrentOwner$2.current = null;
      var firstEffect = void 0;

      if (finishedWork.effectTag > PerformedWork) {
        // A fiber's effect list consists only of its children, not itself. So if
        // the root has an effect, we need to add it to the end of the list. The
        // resulting list is the set that would belong to the root's parent, if
        // it had one; that is, all the effects in the tree including the root.
        if (finishedWork.lastEffect !== null) {
          finishedWork.lastEffect.nextEffect = finishedWork;
          firstEffect = finishedWork.firstEffect;
        } else {
          firstEffect = finishedWork;
        }
      } else {
        // There is no effect on the root.
        firstEffect = finishedWork.firstEffect;
      }

      prepareForCommit(root.containerInfo); // Invoke instances of getSnapshotBeforeUpdate before mutation.

      nextEffect = firstEffect;
      startCommitSnapshotEffectsTimer();

      while (nextEffect !== null) {
        var didError = false;
        var error = void 0;
        {
          invokeGuardedCallback(null, commitBeforeMutationLifecycles, null);

          if (hasCaughtError()) {
            didError = true;
            error = clearCaughtError();
          }
        }

        if (didError) {
          !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          captureCommitPhaseError(nextEffect, error); // Clean-up

          if (nextEffect !== null) {
            nextEffect = nextEffect.nextEffect;
          }
        }
      }

      stopCommitSnapshotEffectsTimer();

      if (enableProfilerTimer) {
        // Mark the current commit time to be shared by all Profilers in this batch.
        // This enables them to be grouped later.
        recordCommitTime();
      } // Commit all the side-effects within a tree. We'll do this in two passes.
      // The first pass performs all the host insertions, updates, deletions and
      // ref unmounts.


      nextEffect = firstEffect;
      startCommitHostEffectsTimer();

      while (nextEffect !== null) {
        var _didError = false;

        var _error = void 0;

        {
          invokeGuardedCallback(null, commitAllHostEffects, null);

          if (hasCaughtError()) {
            _didError = true;
            _error = clearCaughtError();
          }
        }

        if (_didError) {
          !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          captureCommitPhaseError(nextEffect, _error); // Clean-up

          if (nextEffect !== null) {
            nextEffect = nextEffect.nextEffect;
          }
        }
      }

      stopCommitHostEffectsTimer();
      resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
      // the first pass of the commit phase, so that the previous tree is still
      // current during componentWillUnmount, but before the second pass, so that
      // the finished work is current during componentDidMount/Update.

      root.current = finishedWork; // In the second pass we'll perform all life-cycles and ref callbacks.
      // Life-cycles happen as a separate pass so that all placements, updates,
      // and deletions in the entire tree have already been invoked.
      // This pass also triggers any renderer-specific initial effects.

      nextEffect = firstEffect;
      startCommitLifeCyclesTimer();

      while (nextEffect !== null) {
        var _didError2 = false;

        var _error2 = void 0;

        {
          invokeGuardedCallback(null, commitAllLifeCycles, null, root, committedExpirationTime);

          if (hasCaughtError()) {
            _didError2 = true;
            _error2 = clearCaughtError();
          }
        }

        if (_didError2) {
          !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          captureCommitPhaseError(nextEffect, _error2);

          if (nextEffect !== null) {
            nextEffect = nextEffect.nextEffect;
          }
        }
      }

      if (firstEffect !== null && rootWithPendingPassiveEffects !== null) {
        // This commit included a passive effect. These do not need to fire until
        // after the next paint. Schedule an callback to fire them in an async
        // event. To ensure serial execution, the callback will be flushed early if
        // we enter rootWithPendingPassiveEffects commit phase before then.
        var callback = commitPassiveEffects.bind(null, root, firstEffect);

        if (enableSchedulerTracing) {
          // TODO: Avoid this extra callback by mutating the tracing ref directly,
          // like we do at the beginning of commitRoot. I've opted not to do that
          // here because that code is still in flux.
          callback = tracing.unstable_wrap(callback);
        }

        passiveEffectCallbackHandle = scheduler.unstable_runWithPriority(scheduler.unstable_NormalPriority, function () {
          return schedulePassiveEffects(callback);
        });
        passiveEffectCallback = callback;
      }

      isCommitting$1 = false;
      isWorking = false;
      stopCommitLifeCyclesTimer();
      stopCommitTimer();
      onCommitRoot(finishedWork.stateNode);

      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
      }

      var updateExpirationTimeAfterCommit = finishedWork.expirationTime;
      var childExpirationTimeAfterCommit = finishedWork.childExpirationTime;
      var earliestRemainingTimeAfterCommit = childExpirationTimeAfterCommit > updateExpirationTimeAfterCommit ? childExpirationTimeAfterCommit : updateExpirationTimeAfterCommit;

      if (earliestRemainingTimeAfterCommit === NoWork) {
        // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
      }

      onCommit(root, earliestRemainingTimeAfterCommit);

      if (enableSchedulerTracing) {
        tracing.__interactionsRef.current = prevInteractions;
        var subscriber = void 0;

        try {
          subscriber = tracing.__subscriberRef.current;

          if (subscriber !== null && root.memoizedInteractions.size > 0) {
            var threadID = computeThreadID(committedExpirationTime, root.interactionThreadID);
            subscriber.onWorkStopped(root.memoizedInteractions, threadID);
          }
        } catch (error) {
          // It's not safe for commitRoot() to throw.
          // Store the error for now and we'll re-throw in finishRendering().
          if (!hasUnhandledError) {
            hasUnhandledError = true;
            unhandledError = error;
          }
        } finally {
          // Clear completed interactions from the pending Map.
          // Unless the render was suspended or cascading work was scheduled,
          // In which case– leave pending interactions until the subsequent render.
          var pendingInteractionMap = root.pendingInteractionMap;
          pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
            // Only decrement the pending interaction count if we're done.
            // If there's still work at the current priority,
            // That indicates that we are waiting for suspense data.
            if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
              pendingInteractionMap.delete(scheduledExpirationTime);
              scheduledInteractions.forEach(function (interaction) {
                interaction.__count--;

                if (subscriber !== null && interaction.__count === 0) {
                  try {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  } catch (error) {
                    // It's not safe for commitRoot() to throw.
                    // Store the error for now and we'll re-throw in finishRendering().
                    if (!hasUnhandledError) {
                      hasUnhandledError = true;
                      unhandledError = error;
                    }
                  }
                }
              });
            }
          });
        }
      }
    }

    function resetChildExpirationTime(workInProgress, renderTime) {
      if (renderTime !== Never && workInProgress.childExpirationTime === Never) {
        // The children of this component are hidden. Don't bubble their
        // expiration times.
        return;
      }

      var newChildExpirationTime = NoWork; // Bubble up the earliest expiration time.

      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
        // We're in profiling mode.
        // Let's use this same traversal to update the render durations.
        var actualDuration = workInProgress.actualDuration;
        var treeBaseDuration = workInProgress.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0.
        // This value will only be updated if work is done on the fiber (i.e. it doesn't bailout).
        // When work is done, it should bubble to the parent's actualDuration.
        // If the fiber has not been cloned though, (meaning no work was done),
        // Then this value will reflect the amount of time spent working on a previous render.
        // In that case it should not bubble.
        // We determine whether it was cloned by comparing the child pointer.

        var shouldBubbleActualDurations = workInProgress.alternate === null || workInProgress.child !== workInProgress.alternate.child;
        var child = workInProgress.child;

        while (child !== null) {
          var childUpdateExpirationTime = child.expirationTime;
          var childChildExpirationTime = child.childExpirationTime;

          if (childUpdateExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = childUpdateExpirationTime;
          }

          if (childChildExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = childChildExpirationTime;
          }

          if (shouldBubbleActualDurations) {
            actualDuration += child.actualDuration;
          }

          treeBaseDuration += child.treeBaseDuration;
          child = child.sibling;
        }

        workInProgress.actualDuration = actualDuration;
        workInProgress.treeBaseDuration = treeBaseDuration;
      } else {
        var _child = workInProgress.child;

        while (_child !== null) {
          var _childUpdateExpirationTime = _child.expirationTime;
          var _childChildExpirationTime = _child.childExpirationTime;

          if (_childUpdateExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = _childUpdateExpirationTime;
          }

          if (_childChildExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = _childChildExpirationTime;
          }

          _child = _child.sibling;
        }
      }

      workInProgress.childExpirationTime = newChildExpirationTime;
    }

    function completeUnitOfWork(workInProgress) {
      // Attempt to complete the current unit of work, then move to the
      // next sibling. If there are no more siblings, return to the
      // parent fiber.
      while (true) {
        // The current, flushed, state of this fiber is the alternate.
        // Ideally nothing should rely on this, but relying on it here
        // means that we don't need an additional field on the work in
        // progress.
        var current$$1 = workInProgress.alternate;
        {
          setCurrentFiber(workInProgress);
        }
        var returnFiber = workInProgress.return;
        var siblingFiber = workInProgress.sibling;

        if ((workInProgress.effectTag & Incomplete) === NoEffect) {
          if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
            // Don't replay if it fails during completion phase.
            mayReplayFailedUnitOfWork = false;
          } // This fiber completed.
          // Remember we're completing this unit so we can find a boundary if it fails.


          nextUnitOfWork = workInProgress;

          if (enableProfilerTimer) {
            if (workInProgress.mode & ProfileMode) {
              startProfilerTimer(workInProgress);
            }

            nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);

            if (workInProgress.mode & ProfileMode) {
              // Update render duration assuming we didn't error.
              stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
            }
          } else {
            nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);
          }

          if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
            // We're out of completion phase so replaying is fine now.
            mayReplayFailedUnitOfWork = true;
          }

          stopWorkTimer(workInProgress);
          resetChildExpirationTime(workInProgress, nextRenderExpirationTime);
          {
            resetCurrentFiber();
          }

          if (nextUnitOfWork !== null) {
            // Completing this fiber spawned new work. Work on that next.
            return nextUnitOfWork;
          }

          if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete
          (returnFiber.effectTag & Incomplete) === NoEffect) {
            // Append all the effects of the subtree and this fiber onto the effect
            // list of the parent. The completion order of the children affects the
            // side-effect order.
            if (returnFiber.firstEffect === null) {
              returnFiber.firstEffect = workInProgress.firstEffect;
            }

            if (workInProgress.lastEffect !== null) {
              if (returnFiber.lastEffect !== null) {
                returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
              }

              returnFiber.lastEffect = workInProgress.lastEffect;
            } // If this fiber had side-effects, we append it AFTER the children's
            // side-effects. We can perform certain side-effects earlier if
            // needed, by doing multiple passes over the effect list. We don't want
            // to schedule our own side-effect on our own list because if end up
            // reusing children we'll schedule this effect onto itself since we're
            // at the end.


            var effectTag = workInProgress.effectTag; // Skip both NoWork and PerformedWork tags when creating the effect list.
            // PerformedWork effect is read by React DevTools but shouldn't be committed.

            if (effectTag > PerformedWork) {
              if (returnFiber.lastEffect !== null) {
                returnFiber.lastEffect.nextEffect = workInProgress;
              } else {
                returnFiber.firstEffect = workInProgress;
              }

              returnFiber.lastEffect = workInProgress;
            }
          }

          if (true && ReactFiberInstrumentation_1.debugTool) {
            ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
          }

          if (siblingFiber !== null) {
            // If there is more work to do in this returnFiber, do that next.
            return siblingFiber;
          } else if (returnFiber !== null) {
            // If there's no more work in this returnFiber. Complete the returnFiber.
            workInProgress = returnFiber;
            continue;
          } else {
            // We've reached the root.
            return null;
          }
        } else {
          if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
            // Record the render duration for the fiber that errored.
            stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false); // Include the time spent working on failed children before continuing.

            var actualDuration = workInProgress.actualDuration;
            var child = workInProgress.child;

            while (child !== null) {
              actualDuration += child.actualDuration;
              child = child.sibling;
            }

            workInProgress.actualDuration = actualDuration;
          } // This fiber did not complete because something threw. Pop values off
          // the stack without entering the complete phase. If this is a boundary,
          // capture values if possible.


          var next = unwindWork(workInProgress, nextRenderExpirationTime); // Because this fiber did not complete, don't reset its expiration time.

          if (workInProgress.effectTag & DidCapture) {
            // Restarting an error boundary
            stopFailedWorkTimer(workInProgress);
          } else {
            stopWorkTimer(workInProgress);
          }

          {
            resetCurrentFiber();
          }

          if (next !== null) {
            stopWorkTimer(workInProgress);

            if (true && ReactFiberInstrumentation_1.debugTool) {
              ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
            } // If completing this work spawned new work, do that next. We'll come
            // back here again.
            // Since we're restarting, remove anything that is not a host effect
            // from the effect tag.


            next.effectTag &= HostEffectMask;
            return next;
          }

          if (returnFiber !== null) {
            // Mark the parent fiber as incomplete and clear its effect list.
            returnFiber.firstEffect = returnFiber.lastEffect = null;
            returnFiber.effectTag |= Incomplete;
          }

          if (true && ReactFiberInstrumentation_1.debugTool) {
            ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
          }

          if (siblingFiber !== null) {
            // If there is more work to do in this returnFiber, do that next.
            return siblingFiber;
          } else if (returnFiber !== null) {
            // If there's no more work in this returnFiber. Complete the returnFiber.
            workInProgress = returnFiber;
            continue;
          } else {
            return null;
          }
        }
      } // Without this explicit null return Flow complains of invalid return type
      // TODO Remove the above while(true) loop
      // eslint-disable-next-line no-unreachable


      return null;
    }

    function performUnitOfWork(workInProgress) {
      // The current, flushed, state of this fiber is the alternate.
      // Ideally nothing should rely on this, but relying on it here
      // means that we don't need an additional field on the work in
      // progress.
      var current$$1 = workInProgress.alternate; // See if beginning this work spawns more work.

      startWorkTimer(workInProgress);
      {
        setCurrentFiber(workInProgress);
      }

      if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
        stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);
      }

      var next = void 0;

      if (enableProfilerTimer) {
        if (workInProgress.mode & ProfileMode) {
          startProfilerTimer(workInProgress);
        }

        next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);
        workInProgress.memoizedProps = workInProgress.pendingProps;

        if (workInProgress.mode & ProfileMode) {
          // Record the render duration assuming we didn't bailout (or error).
          stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
        }
      } else {
        next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);
        workInProgress.memoizedProps = workInProgress.pendingProps;
      }

      {
        resetCurrentFiber();

        if (isReplayingFailedUnitOfWork) {
          // Currently replaying a failed unit of work. This should be unreachable,
          // because the render phase is meant to be idempotent, and it should
          // have thrown again. Since it didn't, rethrow the original error, so
          // React's internal stack is not misaligned.
          rethrowOriginalError();
        }
      }

      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
      }

      if (next === null) {
        // If this doesn't spawn new work, complete the current work.
        next = completeUnitOfWork(workInProgress);
      }

      ReactCurrentOwner$2.current = null;
      return next;
    }

    function workLoop(isYieldy) {
      if (!isYieldy) {
        // Flush work without yielding
        while (nextUnitOfWork !== null) {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        }
      } else {
        // Flush asynchronous work until there's a higher priority event
        while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        }
      }
    }

    function renderRoot(root, isYieldy) {
      !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      flushPassiveEffects();
      isWorking = true;
      var previousDispatcher = ReactCurrentDispatcher.current;
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;
      var expirationTime = root.nextExpirationTimeToWorkOn; // Check if we're starting from a fresh stack, or if we're resuming from
      // previously yielded work.

      if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {
        // Reset the stack and start working from the root.
        resetStack();
        nextRoot = root;
        nextRenderExpirationTime = expirationTime;
        nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);
        root.pendingCommitExpirationTime = NoWork;

        if (enableSchedulerTracing) {
          // Determine which interactions this batch of work currently includes,
          // So that we can accurately attribute time spent working on it,
          var interactions = new Set();
          root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
            if (scheduledExpirationTime >= expirationTime) {
              scheduledInteractions.forEach(function (interaction) {
                return interactions.add(interaction);
              });
            }
          }); // Store the current set of interactions on the FiberRoot for a few reasons:
          // We can re-use it in hot functions like renderRoot() without having to recalculate it.
          // We will also use it in commitWork() to pass to any Profiler onRender() hooks.
          // This also provides DevTools with a way to access it when the onCommitRoot() hook is called.

          root.memoizedInteractions = interactions;

          if (interactions.size > 0) {
            var subscriber = tracing.__subscriberRef.current;

            if (subscriber !== null) {
              var threadID = computeThreadID(expirationTime, root.interactionThreadID);

              try {
                subscriber.onWorkStarted(interactions, threadID);
              } catch (error) {
                // Work thrown by an interaction tracing subscriber should be rethrown,
                // But only once it's safe (to avoid leaving the scheduler in an invalid state).
                // Store the error for now and we'll re-throw in finishRendering().
                if (!hasUnhandledError) {
                  hasUnhandledError = true;
                  unhandledError = error;
                }
              }
            }
          }
        }
      }

      var prevInteractions = null;

      if (enableSchedulerTracing) {
        // We're about to start new traced work.
        // Restore pending interactions so cascading work triggered during the render phase will be accounted for.
        prevInteractions = tracing.__interactionsRef.current;
        tracing.__interactionsRef.current = root.memoizedInteractions;
      }

      var didFatal = false;
      startWorkLoopTimer(nextUnitOfWork);

      do {
        try {
          workLoop(isYieldy);
        } catch (thrownValue) {
          resetContextDependences();
          resetHooks(); // Reset in case completion throws.
          // This is only used in DEV and when replaying is on.

          var mayReplay = void 0;

          if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
            mayReplay = mayReplayFailedUnitOfWork;
            mayReplayFailedUnitOfWork = true;
          }

          if (nextUnitOfWork === null) {
            // This is a fatal error.
            didFatal = true;
            onUncaughtError(thrownValue);
          } else {
            if (enableProfilerTimer && nextUnitOfWork.mode & ProfileMode) {
              // Record the time spent rendering before an error was thrown.
              // This avoids inaccurate Profiler durations in the case of a suspended render.
              stopProfilerTimerIfRunningAndRecordDelta(nextUnitOfWork, true);
            }

            {
              // Reset global debug state
              // We assume this is defined in DEV
              resetCurrentlyProcessingQueue();
            }

            if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
              if (mayReplay) {
                var failedUnitOfWork = nextUnitOfWork;
                replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy);
              }
            } // TODO: we already know this isn't true in some cases.
            // At least this shows a nicer error message until we figure out the cause.
            // https://github.com/facebook/react/issues/12449#issuecomment-386727431


            !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;
            var sourceFiber = nextUnitOfWork;
            var returnFiber = sourceFiber.return;

            if (returnFiber === null) {
              // This is the root. The root could capture its own errors. However,
              // we don't know if it errors before or after we pushed the host
              // context. This information is needed to avoid a stack mismatch.
              // Because we're not sure, treat this as a fatal error. We could track
              // which phase it fails in, but doesn't seem worth it. At least
              // for now.
              didFatal = true;
              onUncaughtError(thrownValue);
            } else {
              throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderExpirationTime);
              nextUnitOfWork = completeUnitOfWork(sourceFiber);
              continue;
            }
          }
        }

        break;
      } while (true);

      if (enableSchedulerTracing) {
        // Traced work is done for now; restore the previous interactions.
        tracing.__interactionsRef.current = prevInteractions;
      } // We're done performing work. Time to clean up.


      isWorking = false;
      ReactCurrentDispatcher.current = previousDispatcher;
      resetContextDependences();
      resetHooks(); // Yield back to main thread.

      if (didFatal) {
        var _didCompleteRoot = false;
        stopWorkLoopTimer(interruptedBy, _didCompleteRoot);
        interruptedBy = null; // There was a fatal error.

        {
          resetStackAfterFatalErrorInDev();
        } // `nextRoot` points to the in-progress root. A non-null value indicates
        // that we're in the middle of an async render. Set it to null to indicate
        // there's no more work to be done in the current batch.

        nextRoot = null;
        onFatal(root);
        return;
      }

      if (nextUnitOfWork !== null) {
        // There's still remaining async work in this tree, but we ran out of time
        // in the current frame. Yield back to the renderer. Unless we're
        // interrupted by a higher priority update, we'll continue later from where
        // we left off.
        var _didCompleteRoot2 = false;
        stopWorkLoopTimer(interruptedBy, _didCompleteRoot2);
        interruptedBy = null;
        onYield(root);
        return;
      } // We completed the whole tree.


      var didCompleteRoot = true;
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      var rootWorkInProgress = root.current.alternate;
      !(rootWorkInProgress !== null) ? invariant(false, 'Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.') : void 0; // `nextRoot` points to the in-progress root. A non-null value indicates
      // that we're in the middle of an async render. Set it to null to indicate
      // there's no more work to be done in the current batch.

      nextRoot = null;
      interruptedBy = null;

      if (nextRenderDidError) {
        // There was an error
        if (hasLowerPriorityWork(root, expirationTime)) {
          // There's lower priority work. If so, it may have the effect of fixing
          // the exception that was just thrown. Exit without committing. This is
          // similar to a suspend, but without a timeout because we're not waiting
          // for a promise to resolve. React will restart at the lower
          // priority level.
          markSuspendedPriorityLevel(root, expirationTime);
          var suspendedExpirationTime = expirationTime;
          var rootExpirationTime = root.expirationTime;
          onSuspend(root, rootWorkInProgress, suspendedExpirationTime, rootExpirationTime, -1 // Indicates no timeout
          );
          return;
        } else if ( // There's no lower priority work, but we're rendering asynchronously.
        // Synchronously attempt to render the same level one more time. This is
        // similar to a suspend, but without a timeout because we're not waiting
        // for a promise to resolve.
        !root.didError && isYieldy) {
          root.didError = true;

          var _suspendedExpirationTime = root.nextExpirationTimeToWorkOn = expirationTime;

          var _rootExpirationTime = root.expirationTime = Sync;

          onSuspend(root, rootWorkInProgress, _suspendedExpirationTime, _rootExpirationTime, -1 // Indicates no timeout
          );
          return;
        }
      }

      if (isYieldy && nextLatestAbsoluteTimeoutMs !== -1) {
        // The tree was suspended.
        var _suspendedExpirationTime2 = expirationTime;
        markSuspendedPriorityLevel(root, _suspendedExpirationTime2); // Find the earliest uncommitted expiration time in the tree, including
        // work that is suspended. The timeout threshold cannot be longer than
        // the overall expiration.

        var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, expirationTime);
        var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);

        if (earliestExpirationTimeMs < nextLatestAbsoluteTimeoutMs) {
          nextLatestAbsoluteTimeoutMs = earliestExpirationTimeMs;
        } // Subtract the current time from the absolute timeout to get the number
        // of milliseconds until the timeout. In other words, convert an absolute
        // timestamp to a relative time. This is the value that is passed
        // to `setTimeout`.


        var currentTimeMs = expirationTimeToMs(requestCurrentTime());
        var msUntilTimeout = nextLatestAbsoluteTimeoutMs - currentTimeMs;
        msUntilTimeout = msUntilTimeout < 0 ? 0 : msUntilTimeout; // TODO: Account for the Just Noticeable Difference

        var _rootExpirationTime2 = root.expirationTime;
        onSuspend(root, rootWorkInProgress, _suspendedExpirationTime2, _rootExpirationTime2, msUntilTimeout);
        return;
      } // Ready to commit.


      onComplete(root, rootWorkInProgress, expirationTime);
    }

    function captureCommitPhaseError(sourceFiber, value) {
      var expirationTime = Sync;
      var fiber = sourceFiber.return;

      while (fiber !== null) {
        switch (fiber.tag) {
          case ClassComponent:
            var ctor = fiber.type;
            var instance = fiber.stateNode;

            if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
              var errorInfo = createCapturedValue(value, sourceFiber);
              var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);
              enqueueUpdate(fiber, update);
              scheduleWork(fiber, expirationTime);
              return;
            }

            break;

          case HostRoot:
            {
              var _errorInfo = createCapturedValue(value, sourceFiber);

              var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);

              enqueueUpdate(fiber, _update);
              scheduleWork(fiber, expirationTime);
              return;
            }
        }

        fiber = fiber.return;
      }

      if (sourceFiber.tag === HostRoot) {
        // Error was thrown at the root. There is no parent, so the root
        // itself should capture it.
        var rootFiber = sourceFiber;

        var _errorInfo2 = createCapturedValue(value, rootFiber);

        var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);

        enqueueUpdate(rootFiber, _update2);
        scheduleWork(rootFiber, expirationTime);
      }
    }

    function computeThreadID(expirationTime, interactionThreadID) {
      // Interaction threads are unique per root and expiration time.
      return expirationTime * 1000 + interactionThreadID;
    } // Creates a unique async expiration time.


    function computeUniqueAsyncExpiration() {
      var currentTime = requestCurrentTime();
      var result = computeAsyncExpiration(currentTime);

      if (result >= lastUniqueAsyncExpiration) {
        // Since we assume the current time monotonically increases, we only hit
        // this branch when computeUniqueAsyncExpiration is fired multiple times
        // within a 200ms window (or whatever the async bucket size is).
        result = lastUniqueAsyncExpiration - 1;
      }

      lastUniqueAsyncExpiration = result;
      return lastUniqueAsyncExpiration;
    }

    function computeExpirationForFiber(currentTime, fiber) {
      var priorityLevel = scheduler.unstable_getCurrentPriorityLevel();
      var expirationTime = void 0;

      if ((fiber.mode & ConcurrentMode) === NoContext) {
        // Outside of concurrent mode, updates are always synchronous.
        expirationTime = Sync;
      } else if (isWorking && !isCommitting$1) {
        // During render phase, updates expire during as the current render.
        expirationTime = nextRenderExpirationTime;
      } else {
        switch (priorityLevel) {
          case scheduler.unstable_ImmediatePriority:
            expirationTime = Sync;
            break;

          case scheduler.unstable_UserBlockingPriority:
            expirationTime = computeInteractiveExpiration(currentTime);
            break;

          case scheduler.unstable_NormalPriority:
            // This is a normal, concurrent update
            expirationTime = computeAsyncExpiration(currentTime);
            break;

          case scheduler.unstable_LowPriority:
          case scheduler.unstable_IdlePriority:
            expirationTime = Never;
            break;

          default:
            invariant(false, 'Unknown priority level. This error is likely caused by a bug in React. Please file an issue.');
        } // If we're in the middle of rendering a tree, do not update at the same
        // expiration time that is already rendering.


        if (nextRoot !== null && expirationTime === nextRenderExpirationTime) {
          expirationTime -= 1;
        }
      } // Keep track of the lowest pending interactive expiration time. This
      // allows us to synchronously flush all interactive updates
      // when needed.
      // TODO: Move this to renderer?


      if (priorityLevel === scheduler.unstable_UserBlockingPriority && (lowestPriorityPendingInteractiveExpirationTime === NoWork || expirationTime < lowestPriorityPendingInteractiveExpirationTime)) {
        lowestPriorityPendingInteractiveExpirationTime = expirationTime;
      }

      return expirationTime;
    }

    function renderDidSuspend(root, absoluteTimeoutMs, suspendedTime) {
      // Schedule the timeout.
      if (absoluteTimeoutMs >= 0 && nextLatestAbsoluteTimeoutMs < absoluteTimeoutMs) {
        nextLatestAbsoluteTimeoutMs = absoluteTimeoutMs;
      }
    }

    function renderDidError() {
      nextRenderDidError = true;
    }

    function pingSuspendedRoot(root, thenable, pingTime) {
      // A promise that previously suspended React from committing has resolved.
      // If React is still suspended, try again at the previous level (pingTime).
      var pingCache = root.pingCache;

      if (pingCache !== null) {
        // The thenable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(thenable);
      }

      if (nextRoot !== null && nextRenderExpirationTime === pingTime) {
        // Received a ping at the same priority level at which we're currently
        // rendering. Restart from the root.
        nextRoot = null;
      } else {
        // Confirm that the root is still suspended at this level. Otherwise exit.
        if (isPriorityLevelSuspended(root, pingTime)) {
          // Ping at the original level
          markPingedPriorityLevel(root, pingTime);
          var rootExpirationTime = root.expirationTime;

          if (rootExpirationTime !== NoWork) {
            requestWork(root, rootExpirationTime);
          }
        }
      }
    }

    function retryTimedOutBoundary(boundaryFiber, thenable) {
      // The boundary fiber (a Suspense component) previously timed out and was
      // rendered in its fallback state. One of the promises that suspended it has
      // resolved, which means at least part of the tree was likely unblocked. Try
      var retryCache = void 0;

      if (enableSuspenseServerRenderer) {
        switch (boundaryFiber.tag) {
          case SuspenseComponent:
            retryCache = boundaryFiber.stateNode;
            break;

          case DehydratedSuspenseComponent:
            retryCache = boundaryFiber.memoizedState;
            break;

          default:
            invariant(false, 'Pinged unknown suspense boundary type. This is probably a bug in React.');
        }
      } else {
        retryCache = boundaryFiber.stateNode;
      }

      if (retryCache !== null) {
        // The thenable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(thenable);
      }

      var currentTime = requestCurrentTime();
      var retryTime = computeExpirationForFiber(currentTime, boundaryFiber);
      var root = scheduleWorkToRoot(boundaryFiber, retryTime);

      if (root !== null) {
        markPendingPriorityLevel(root, retryTime);
        var rootExpirationTime = root.expirationTime;

        if (rootExpirationTime !== NoWork) {
          requestWork(root, rootExpirationTime);
        }
      }
    }

    function scheduleWorkToRoot(fiber, expirationTime) {
      recordScheduleUpdate();
      {
        if (fiber.tag === ClassComponent) {
          var instance = fiber.stateNode;
          warnAboutInvalidUpdates(instance);
        }
      } // Update the source fiber's expiration time

      if (fiber.expirationTime < expirationTime) {
        fiber.expirationTime = expirationTime;
      }

      var alternate = fiber.alternate;

      if (alternate !== null && alternate.expirationTime < expirationTime) {
        alternate.expirationTime = expirationTime;
      } // Walk the parent path to the root and update the child expiration time.


      var node = fiber.return;
      var root = null;

      if (node === null && fiber.tag === HostRoot) {
        root = fiber.stateNode;
      } else {
        while (node !== null) {
          alternate = node.alternate;

          if (node.childExpirationTime < expirationTime) {
            node.childExpirationTime = expirationTime;

            if (alternate !== null && alternate.childExpirationTime < expirationTime) {
              alternate.childExpirationTime = expirationTime;
            }
          } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
            alternate.childExpirationTime = expirationTime;
          }

          if (node.return === null && node.tag === HostRoot) {
            root = node.stateNode;
            break;
          }

          node = node.return;
        }
      }

      if (enableSchedulerTracing) {
        if (root !== null) {
          var interactions = tracing.__interactionsRef.current;

          if (interactions.size > 0) {
            var pendingInteractionMap = root.pendingInteractionMap;
            var pendingInteractions = pendingInteractionMap.get(expirationTime);

            if (pendingInteractions != null) {
              interactions.forEach(function (interaction) {
                if (!pendingInteractions.has(interaction)) {
                  // Update the pending async work count for previously unscheduled interaction.
                  interaction.__count++;
                }

                pendingInteractions.add(interaction);
              });
            } else {
              pendingInteractionMap.set(expirationTime, new Set(interactions)); // Update the pending async work count for the current interactions.

              interactions.forEach(function (interaction) {
                interaction.__count++;
              });
            }

            var subscriber = tracing.__subscriberRef.current;

            if (subscriber !== null) {
              var threadID = computeThreadID(expirationTime, root.interactionThreadID);
              subscriber.onWorkScheduled(interactions, threadID);
            }
          }
        }
      }

      return root;
    }

    function warnIfNotCurrentlyBatchingInDev(fiber) {
      {
        if (isRendering === false && isBatchingUpdates === false) {
          warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see in the browser." + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
        }
      }
    }

    function scheduleWork(fiber, expirationTime) {
      var root = scheduleWorkToRoot(fiber, expirationTime);

      if (root === null) {
        {
          switch (fiber.tag) {
            case ClassComponent:
              warnAboutUpdateOnUnmounted(fiber, true);
              break;

            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
              warnAboutUpdateOnUnmounted(fiber, false);
              break;
          }
        }
        return;
      }

      if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime > nextRenderExpirationTime) {
        // This is an interruption. (Used for performance tracking.)
        interruptedBy = fiber;
        resetStack();
      }

      markPendingPriorityLevel(root, expirationTime);

      if ( // If we're in the render phase, we don't need to schedule this root
      // for an update, because we'll do it before we exit...
      !isWorking || isCommitting$1 || // ...unless this is a different root than the one we're rendering.
      nextRoot !== root) {
        var rootExpirationTime = root.expirationTime;
        requestWork(root, rootExpirationTime);
      }

      if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
        // Reset this back to zero so subsequent updates don't throw.
        nestedUpdateCount = 0;
        invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
      }
    }

    function syncUpdates(fn, a, b, c, d) {
      return scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {
        return fn(a, b, c, d);
      });
    } // TODO: Everything below this is written as if it has been lifted to the
    // renderers. I'll do this in a follow-up.
    // Linked-list of roots


    var firstScheduledRoot = null;
    var lastScheduledRoot = null;
    var callbackExpirationTime = NoWork;
    var callbackID = void 0;
    var isRendering = false;
    var nextFlushedRoot = null;
    var nextFlushedExpirationTime = NoWork;
    var lowestPriorityPendingInteractiveExpirationTime = NoWork;
    var hasUnhandledError = false;
    var unhandledError = null;
    var isBatchingUpdates = false;
    var isUnbatchingUpdates = false;
    var completedBatches = null;
    var originalStartTimeMs = scheduler.unstable_now();
    var currentRendererTime = msToExpirationTime(originalStartTimeMs);
    var currentSchedulerTime = currentRendererTime; // Use these to prevent an infinite loop of nested updates

    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var lastCommittedRootDuringThisBatch = null;

    function recomputeCurrentRendererTime() {
      var currentTimeMs = scheduler.unstable_now() - originalStartTimeMs;
      currentRendererTime = msToExpirationTime(currentTimeMs);
    }

    function scheduleCallbackWithExpirationTime(root, expirationTime) {
      if (callbackExpirationTime !== NoWork) {
        // A callback is already scheduled. Check its expiration time (timeout).
        if (expirationTime < callbackExpirationTime) {
          // Existing callback has sufficient timeout. Exit.
          return;
        } else {
          if (callbackID !== null) {
            // Existing callback has insufficient timeout. Cancel and schedule a
            // new one.
            scheduler.unstable_cancelCallback(callbackID);
          }
        } // The request callback timer is already running. Don't start a new one.

      } else {
        startRequestCallbackTimer();
      }

      callbackExpirationTime = expirationTime;
      var currentMs = scheduler.unstable_now() - originalStartTimeMs;
      var expirationTimeMs = expirationTimeToMs(expirationTime);
      var timeout = expirationTimeMs - currentMs;
      callbackID = scheduler.unstable_scheduleCallback(performAsyncWork, {
        timeout: timeout
      });
    } // For every call to renderRoot, one of onFatal, onComplete, onSuspend, and
    // onYield is called upon exiting. We use these in lieu of returning a tuple.
    // I've also chosen not to inline them into renderRoot because these will
    // eventually be lifted into the renderer.


    function onFatal(root) {
      root.finishedWork = null;
    }

    function onComplete(root, finishedWork, expirationTime) {
      root.pendingCommitExpirationTime = expirationTime;
      root.finishedWork = finishedWork;
    }

    function onSuspend(root, finishedWork, suspendedExpirationTime, rootExpirationTime, msUntilTimeout) {
      root.expirationTime = rootExpirationTime;

      if (msUntilTimeout === 0 && !shouldYieldToRenderer()) {
        // Don't wait an additional tick. Commit the tree immediately.
        root.pendingCommitExpirationTime = suspendedExpirationTime;
        root.finishedWork = finishedWork;
      } else if (msUntilTimeout > 0) {
        // Wait `msUntilTimeout` milliseconds before committing.
        root.timeoutHandle = scheduleTimeout(onTimeout.bind(null, root, finishedWork, suspendedExpirationTime), msUntilTimeout);
      }
    }

    function onYield(root) {
      root.finishedWork = null;
    }

    function onTimeout(root, finishedWork, suspendedExpirationTime) {
      // The root timed out. Commit it.
      root.pendingCommitExpirationTime = suspendedExpirationTime;
      root.finishedWork = finishedWork; // Read the current time before entering the commit phase. We can be
      // certain this won't cause tearing related to batching of event updates
      // because we're at the top of a timer event.

      recomputeCurrentRendererTime();
      currentSchedulerTime = currentRendererTime;
      flushRoot(root, suspendedExpirationTime);
    }

    function onCommit(root, expirationTime) {
      root.expirationTime = expirationTime;
      root.finishedWork = null;
    }

    function requestCurrentTime() {
      // requestCurrentTime is called by the scheduler to compute an expiration
      // time.
      //
      // Expiration times are computed by adding to the current time (the start
      // time). However, if two updates are scheduled within the same event, we
      // should treat their start times as simultaneous, even if the actual clock
      // time has advanced between the first and second call.
      // In other words, because expiration times determine how updates are batched,
      // we want all updates of like priority that occur within the same event to
      // receive the same expiration time. Otherwise we get tearing.
      //
      // We keep track of two separate times: the current "renderer" time and the
      // current "scheduler" time. The renderer time can be updated whenever; it
      // only exists to minimize the calls performance.now.
      //
      // But the scheduler time can only be updated if there's no pending work, or
      // if we know for certain that we're not in the middle of an event.
      if (isRendering) {
        // We're already rendering. Return the most recently read time.
        return currentSchedulerTime;
      } // Check if there's pending work.


      findHighestPriorityRoot();

      if (nextFlushedExpirationTime === NoWork || nextFlushedExpirationTime === Never) {
        // If there's no pending work, or if the pending work is offscreen, we can
        // read the current time without risk of tearing.
        recomputeCurrentRendererTime();
        currentSchedulerTime = currentRendererTime;
        return currentSchedulerTime;
      } // There's already pending work. We might be in the middle of a browser
      // event. If we were to read the current time, it could cause multiple updates
      // within the same event to receive different expiration times, leading to
      // tearing. Return the last read time. During the next idle callback, the
      // time will be updated.


      return currentSchedulerTime;
    } // requestWork is called by the scheduler whenever a root receives an update.
    // It's up to the renderer to call renderRoot at some point in the future.


    function requestWork(root, expirationTime) {
      addRootToSchedule(root, expirationTime);

      if (isRendering) {
        // Prevent reentrancy. Remaining work will be scheduled at the end of
        // the currently rendering batch.
        return;
      }

      if (isBatchingUpdates) {
        // Flush work at the end of the batch.
        if (isUnbatchingUpdates) {
          // ...unless we're inside unbatchedUpdates, in which case we should
          // flush it now.
          nextFlushedRoot = root;
          nextFlushedExpirationTime = Sync;
          performWorkOnRoot(root, Sync, false);
        }

        return;
      } // TODO: Get rid of Sync and use current time?


      if (expirationTime === Sync) {
        performSyncWork();
      } else {
        scheduleCallbackWithExpirationTime(root, expirationTime);
      }
    }

    function addRootToSchedule(root, expirationTime) {
      // Add the root to the schedule.
      // Check if this root is already part of the schedule.
      if (root.nextScheduledRoot === null) {
        // This root is not already scheduled. Add it.
        root.expirationTime = expirationTime;

        if (lastScheduledRoot === null) {
          firstScheduledRoot = lastScheduledRoot = root;
          root.nextScheduledRoot = root;
        } else {
          lastScheduledRoot.nextScheduledRoot = root;
          lastScheduledRoot = root;
          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
        }
      } else {
        // This root is already scheduled, but its priority may have increased.
        var remainingExpirationTime = root.expirationTime;

        if (expirationTime > remainingExpirationTime) {
          // Update the priority.
          root.expirationTime = expirationTime;
        }
      }
    }

    function findHighestPriorityRoot() {
      var highestPriorityWork = NoWork;
      var highestPriorityRoot = null;

      if (lastScheduledRoot !== null) {
        var previousScheduledRoot = lastScheduledRoot;
        var root = firstScheduledRoot;

        while (root !== null) {
          var remainingExpirationTime = root.expirationTime;

          if (remainingExpirationTime === NoWork) {
            // This root no longer has work. Remove it from the scheduler.
            // TODO: This check is redudant, but Flow is confused by the branch
            // below where we set lastScheduledRoot to null, even though we break
            // from the loop right after.
            !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;

            if (root === root.nextScheduledRoot) {
              // This is the only root in the list.
              root.nextScheduledRoot = null;
              firstScheduledRoot = lastScheduledRoot = null;
              break;
            } else if (root === firstScheduledRoot) {
              // This is the first root in the list.
              var next = root.nextScheduledRoot;
              firstScheduledRoot = next;
              lastScheduledRoot.nextScheduledRoot = next;
              root.nextScheduledRoot = null;
            } else if (root === lastScheduledRoot) {
              // This is the last root in the list.
              lastScheduledRoot = previousScheduledRoot;
              lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
              root.nextScheduledRoot = null;
              break;
            } else {
              previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
              root.nextScheduledRoot = null;
            }

            root = previousScheduledRoot.nextScheduledRoot;
          } else {
            if (remainingExpirationTime > highestPriorityWork) {
              // Update the priority, if it's higher
              highestPriorityWork = remainingExpirationTime;
              highestPriorityRoot = root;
            }

            if (root === lastScheduledRoot) {
              break;
            }

            if (highestPriorityWork === Sync) {
              // Sync is highest priority by definition so
              // we can stop searching.
              break;
            }

            previousScheduledRoot = root;
            root = root.nextScheduledRoot;
          }
        }
      }

      nextFlushedRoot = highestPriorityRoot;
      nextFlushedExpirationTime = highestPriorityWork;
    } // TODO: This wrapper exists because many of the older tests (the ones that use
    // flushDeferredPri) rely on the number of times `shouldYield` is called. We
    // should get rid of it.


    var didYield = false;

    function shouldYieldToRenderer() {
      if (didYield) {
        return true;
      }

      if (scheduler.unstable_shouldYield()) {
        didYield = true;
        return true;
      }

      return false;
    }

    function performAsyncWork() {
      try {
        if (!shouldYieldToRenderer()) {
          // The callback timed out. That means at least one update has expired.
          // Iterate through the root schedule. If they contain expired work, set
          // the next render expiration time to the current time. This has the effect
          // of flushing all expired work in a single batch, instead of flushing each
          // level one at a time.
          if (firstScheduledRoot !== null) {
            recomputeCurrentRendererTime();
            var root = firstScheduledRoot;

            do {
              didExpireAtExpirationTime(root, currentRendererTime); // The root schedule is circular, so this is never null.

              root = root.nextScheduledRoot;
            } while (root !== firstScheduledRoot);
          }
        }

        performWork(NoWork, true);
      } finally {
        didYield = false;
      }
    }

    function performSyncWork() {
      performWork(Sync, false);
    }

    function performWork(minExpirationTime, isYieldy) {
      // Keep working on roots until there's no more work, or until there's a higher
      // priority event.
      findHighestPriorityRoot();

      if (isYieldy) {
        recomputeCurrentRendererTime();
        currentSchedulerTime = currentRendererTime;

        if (enableUserTimingAPI) {
          var didExpire = nextFlushedExpirationTime > currentRendererTime;
          var timeout = expirationTimeToMs(nextFlushedExpirationTime);
          stopRequestCallbackTimer(didExpire, timeout);
        }

        while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime && !(didYield && currentRendererTime > nextFlushedExpirationTime)) {
          performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, currentRendererTime > nextFlushedExpirationTime);
          findHighestPriorityRoot();
          recomputeCurrentRendererTime();
          currentSchedulerTime = currentRendererTime;
        }
      } else {
        while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime) {
          performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);
          findHighestPriorityRoot();
        }
      } // We're done flushing work. Either we ran out of time in this callback,
      // or there's no more work left with sufficient priority.
      // If we're inside a callback, set this to false since we just completed it.


      if (isYieldy) {
        callbackExpirationTime = NoWork;
        callbackID = null;
      } // If there's work left over, schedule a new callback.


      if (nextFlushedExpirationTime !== NoWork) {
        scheduleCallbackWithExpirationTime(nextFlushedRoot, nextFlushedExpirationTime);
      } // Clean-up.


      finishRendering();
    }

    function flushRoot(root, expirationTime) {
      !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0; // Perform work on root as if the given expiration time is the current time.
      // This has the effect of synchronously flushing all work up to and
      // including the given time.

      nextFlushedRoot = root;
      nextFlushedExpirationTime = expirationTime;
      performWorkOnRoot(root, expirationTime, false); // Flush any sync work that was scheduled by lifecycles

      performSyncWork();
    }

    function finishRendering() {
      nestedUpdateCount = 0;
      lastCommittedRootDuringThisBatch = null;

      if (completedBatches !== null) {
        var batches = completedBatches;
        completedBatches = null;

        for (var i = 0; i < batches.length; i++) {
          var batch = batches[i];

          try {
            batch._onComplete();
          } catch (error) {
            if (!hasUnhandledError) {
              hasUnhandledError = true;
              unhandledError = error;
            }
          }
        }
      }

      if (hasUnhandledError) {
        var error = unhandledError;
        unhandledError = null;
        hasUnhandledError = false;
        throw error;
      }
    }

    function performWorkOnRoot(root, expirationTime, isYieldy) {
      !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      isRendering = true; // Check if this is async work or sync/expired work.

      if (!isYieldy) {
        // Flush work without yielding.
        // TODO: Non-yieldy work does not necessarily imply expired work. A renderer
        // may want to perform some work without yielding, but also without
        // requiring the root to complete (by triggering placeholders).
        var finishedWork = root.finishedWork;

        if (finishedWork !== null) {
          // This root is already complete. We can commit it.
          completeRoot(root, finishedWork, expirationTime);
        } else {
          root.finishedWork = null; // If this root previously suspended, clear its existing timeout, since
          // we're about to try rendering again.

          var timeoutHandle = root.timeoutHandle;

          if (timeoutHandle !== noTimeout) {
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

            cancelTimeout(timeoutHandle);
          }

          renderRoot(root, isYieldy);
          finishedWork = root.finishedWork;

          if (finishedWork !== null) {
            // We've completed the root. Commit it.
            completeRoot(root, finishedWork, expirationTime);
          }
        }
      } else {
        // Flush async work.
        var _finishedWork = root.finishedWork;

        if (_finishedWork !== null) {
          // This root is already complete. We can commit it.
          completeRoot(root, _finishedWork, expirationTime);
        } else {
          root.finishedWork = null; // If this root previously suspended, clear its existing timeout, since
          // we're about to try rendering again.

          var _timeoutHandle = root.timeoutHandle;

          if (_timeoutHandle !== noTimeout) {
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

            cancelTimeout(_timeoutHandle);
          }

          renderRoot(root, isYieldy);
          _finishedWork = root.finishedWork;

          if (_finishedWork !== null) {
            // We've completed the root. Check the if we should yield one more time
            // before committing.
            if (!shouldYieldToRenderer()) {
              // Still time left. Commit the root.
              completeRoot(root, _finishedWork, expirationTime);
            } else {
              // There's no time left. Mark this root as complete. We'll come
              // back and commit it later.
              root.finishedWork = _finishedWork;
            }
          }
        }
      }

      isRendering = false;
    }

    function completeRoot(root, finishedWork, expirationTime) {
      // Check if there's a batch that matches this expiration time.
      var firstBatch = root.firstBatch;

      if (firstBatch !== null && firstBatch._expirationTime >= expirationTime) {
        if (completedBatches === null) {
          completedBatches = [firstBatch];
        } else {
          completedBatches.push(firstBatch);
        }

        if (firstBatch._defer) {
          // This root is blocked from committing by a batch. Unschedule it until
          // we receive another update.
          root.finishedWork = finishedWork;
          root.expirationTime = NoWork;
          return;
        }
      } // Commit the root.


      root.finishedWork = null; // Check if this is a nested update (a sync update scheduled during the
      // commit phase).

      if (root === lastCommittedRootDuringThisBatch) {
        // If the next root is the same as the previous root, this is a nested
        // update. To prevent an infinite loop, increment the nested update count.
        nestedUpdateCount++;
      } else {
        // Reset whenever we switch roots.
        lastCommittedRootDuringThisBatch = root;
        nestedUpdateCount = 0;
      }

      scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {
        commitRoot(root, finishedWork);
      });
    }

    function onUncaughtError(error) {
      !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0; // Unschedule this root so we don't work on it again until there's
      // another update.

      nextFlushedRoot.expirationTime = NoWork;

      if (!hasUnhandledError) {
        hasUnhandledError = true;
        unhandledError = error;
      }
    } // TODO: Batching should be implemented at the renderer level, not inside
    // the reconciler.


    function batchedUpdates$1(fn, a) {
      var previousIsBatchingUpdates = isBatchingUpdates;
      isBatchingUpdates = true;

      try {
        return fn(a);
      } finally {
        isBatchingUpdates = previousIsBatchingUpdates;

        if (!isBatchingUpdates && !isRendering) {
          performSyncWork();
        }
      }
    } // TODO: Batching should be implemented at the renderer level, not inside
    // the reconciler.


    function unbatchedUpdates(fn, a) {
      if (isBatchingUpdates && !isUnbatchingUpdates) {
        isUnbatchingUpdates = true;

        try {
          return fn(a);
        } finally {
          isUnbatchingUpdates = false;
        }
      }

      return fn(a);
    } // TODO: Batching should be implemented at the renderer level, not within
    // the reconciler.


    function flushSync(fn, a) {
      !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
      var previousIsBatchingUpdates = isBatchingUpdates;
      isBatchingUpdates = true;

      try {
        return syncUpdates(fn, a);
      } finally {
        isBatchingUpdates = previousIsBatchingUpdates;
        performSyncWork();
      }
    }

    function interactiveUpdates$1(fn, a, b) {
      // If there are any pending interactive updates, synchronously flush them.
      // This needs to happen before we read any handlers, because the effect of
      // the previous event may influence which handlers are called during
      // this event.
      if (!isBatchingUpdates && !isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {
        // Synchronously flush pending interactive updates.
        performWork(lowestPriorityPendingInteractiveExpirationTime, false);
        lowestPriorityPendingInteractiveExpirationTime = NoWork;
      }

      var previousIsBatchingUpdates = isBatchingUpdates;
      isBatchingUpdates = true;

      try {
        return scheduler.unstable_runWithPriority(scheduler.unstable_UserBlockingPriority, function () {
          return fn(a, b);
        });
      } finally {
        isBatchingUpdates = previousIsBatchingUpdates;

        if (!isBatchingUpdates && !isRendering) {
          performSyncWork();
        }
      }
    }

    function flushInteractiveUpdates$1() {
      if (!isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {
        // Synchronously flush pending interactive updates.
        performWork(lowestPriorityPendingInteractiveExpirationTime, false);
        lowestPriorityPendingInteractiveExpirationTime = NoWork;
      }
    }

    function flushControlled(fn) {
      var previousIsBatchingUpdates = isBatchingUpdates;
      isBatchingUpdates = true;

      try {
        syncUpdates(fn);
      } finally {
        isBatchingUpdates = previousIsBatchingUpdates;

        if (!isBatchingUpdates && !isRendering) {
          performSyncWork();
        }
      }
    } // 0 is PROD, 1 is DEV.
    // Might add PROFILE later.


    var didWarnAboutNestedUpdates = void 0;
    var didWarnAboutFindNodeInStrictMode = void 0;
    {
      didWarnAboutNestedUpdates = false;
      didWarnAboutFindNodeInStrictMode = {};
    }

    function getContextForSubtree(parentComponent) {
      if (!parentComponent) {
        return emptyContextObject;
      }

      var fiber = get(parentComponent);
      var parentContext = findCurrentUnmaskedContext(fiber);

      if (fiber.tag === ClassComponent) {
        var Component = fiber.type;

        if (isContextProvider(Component)) {
          return processChildContext(fiber, Component, parentContext);
        }
      }

      return parentContext;
    }

    function scheduleRootUpdate(current$$1, element, expirationTime, callback) {
      {
        if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {
          didWarnAboutNestedUpdates = true;
          warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
        }
      }
      var update = createUpdate(expirationTime); // Caution: React DevTools currently depends on this property
      // being called "element".

      update.payload = {
        element: element
      };
      callback = callback === undefined ? null : callback;

      if (callback !== null) {
        !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
        update.callback = callback;
      }

      flushPassiveEffects();
      enqueueUpdate(current$$1, update);
      scheduleWork(current$$1, expirationTime);
      return expirationTime;
    }

    function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {
      // TODO: If this is a nested container, this won't be the root.
      var current$$1 = container.current;
      {
        if (ReactFiberInstrumentation_1.debugTool) {
          if (current$$1.alternate === null) {
            ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
          } else if (element === null) {
            ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
          } else {
            ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
          }
        }
      }
      var context = getContextForSubtree(parentComponent);

      if (container.context === null) {
        container.context = context;
      } else {
        container.pendingContext = context;
      }

      return scheduleRootUpdate(current$$1, element, expirationTime, callback);
    }

    function findHostInstance(component) {
      var fiber = get(component);

      if (fiber === undefined) {
        if (typeof component.render === 'function') {
          invariant(false, 'Unable to find node on an unmounted component.');
        } else {
          invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
        }
      }

      var hostFiber = findCurrentHostFiber(fiber);

      if (hostFiber === null) {
        return null;
      }

      return hostFiber.stateNode;
    }

    function findHostInstanceWithWarning(component, methodName) {
      {
        var fiber = get(component);

        if (fiber === undefined) {
          if (typeof component.render === 'function') {
            invariant(false, 'Unable to find node on an unmounted component.');
          } else {
            invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
          }
        }

        var hostFiber = findCurrentHostFiber(fiber);

        if (hostFiber === null) {
          return null;
        }

        if (hostFiber.mode & StrictMode) {
          var componentName = getComponentName(fiber.type) || 'Component';

          if (!didWarnAboutFindNodeInStrictMode[componentName]) {
            didWarnAboutFindNodeInStrictMode[componentName] = true;

            if (fiber.mode & StrictMode) {
              warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
            } else {
              warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
            }
          }
        }

        return hostFiber.stateNode;
      }
      return findHostInstance(component);
    }

    function createContainer(containerInfo, isConcurrent, hydrate) {
      return createFiberRoot(containerInfo, isConcurrent, hydrate);
    }

    function updateContainer(element, container, parentComponent, callback) {
      var current$$1 = container.current;
      var currentTime = requestCurrentTime();
      var expirationTime = computeExpirationForFiber(currentTime, current$$1);
      return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);
    }

    function getPublicRootInstance(container) {
      var containerFiber = container.current;

      if (!containerFiber.child) {
        return null;
      }

      switch (containerFiber.child.tag) {
        case HostComponent:
          return getPublicInstance(containerFiber.child.stateNode);

        default:
          return containerFiber.child.stateNode;
      }
    }

    function findHostInstanceWithNoPortals(fiber) {
      var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

      if (hostFiber === null) {
        return null;
      }

      return hostFiber.stateNode;
    }

    var overrideProps = null;
    {
      var copyWithSetImpl = function (obj, path, idx, value) {
        if (idx >= path.length) {
          return value;
        }

        var key = path[idx];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj); // $FlowFixMe number or string is fine here

        updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
        return updated;
      };

      var copyWithSet = function (obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
      }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


      overrideProps = function (fiber, path, value) {
        flushPassiveEffects();
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

        if (fiber.alternate) {
          fiber.alternate.pendingProps = fiber.pendingProps;
        }

        scheduleWork(fiber, Sync);
      };
    }

    function injectIntoDevTools(devToolsConfig) {
      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
      return injectInternals(_assign({}, devToolsConfig, {
        overrideProps: overrideProps,
        currentDispatcherRef: ReactCurrentDispatcher,
        findHostInstanceByFiber: function (fiber) {
          var hostFiber = findCurrentHostFiber(fiber);

          if (hostFiber === null) {
            return null;
          }

          return hostFiber.stateNode;
        },
        findFiberByHostInstance: function (instance) {
          if (!findFiberByHostInstance) {
            // Might not be implemented by the renderer.
            return null;
          }

          return findFiberByHostInstance(instance);
        }
      }));
    } // This file intentionally does *not* have the Flow annotation.
    // Don't add it. See `./inline-typed.js` for an explanation.


    function createPortal$1(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
    implementation) {
      var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
      return {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: REACT_PORTAL_TYPE,
        key: key == null ? null : '' + key,
        children: children,
        containerInfo: containerInfo,
        implementation: implementation
      };
    } // TODO: this is special because it gets imported during build.


    var ReactVersion = '16.8.2'; // TODO: This type is shared between the reconciler and ReactDOM, but will
    // eventually be lifted out to the renderer.

    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings = void 0;
    var warnOnInvalidCallback = void 0;
    var didWarnAboutUnstableCreatePortal = false;
    {
      if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
      Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
      Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
        warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
      }

      topLevelUpdateWarnings = function (container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
          var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);

          if (hostInstance) {
            !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
          }
        }

        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));
        !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
        !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
      };

      warnOnInvalidCallback = function (callback, callerName) {
        !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
      };
    }
    setRestoreImplementation(restoreControlledState$1);

    function ReactBatch(root) {
      var expirationTime = computeUniqueAsyncExpiration();
      this._expirationTime = expirationTime;
      this._root = root;
      this._next = null;
      this._callbacks = null;
      this._didComplete = false;
      this._hasChildren = false;
      this._children = null;
      this._defer = true;
    }

    ReactBatch.prototype.render = function (children) {
      !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;
      this._hasChildren = true;
      this._children = children;
      var internalRoot = this._root._internalRoot;
      var expirationTime = this._expirationTime;
      var work = new ReactWork();
      updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);
      return work;
    };

    ReactBatch.prototype.then = function (onComplete) {
      if (this._didComplete) {
        onComplete();
        return;
      }

      var callbacks = this._callbacks;

      if (callbacks === null) {
        callbacks = this._callbacks = [];
      }

      callbacks.push(onComplete);
    };

    ReactBatch.prototype.commit = function () {
      var internalRoot = this._root._internalRoot;
      var firstBatch = internalRoot.firstBatch;
      !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;

      if (!this._hasChildren) {
        // This batch is empty. Return.
        this._next = null;
        this._defer = false;
        return;
      }

      var expirationTime = this._expirationTime; // Ensure this is the first batch in the list.

      if (firstBatch !== this) {
        // This batch is not the earliest batch. We need to move it to the front.
        // Update its expiration time to be the expiration time of the earliest
        // batch, so that we can flush it without flushing the other batches.
        if (this._hasChildren) {
          expirationTime = this._expirationTime = firstBatch._expirationTime; // Rendering this batch again ensures its children will be the final state
          // when we flush (updates are processed in insertion order: last
          // update wins).
          // TODO: This forces a restart. Should we print a warning?

          this.render(this._children);
        } // Remove the batch from the list.


        var previous = null;
        var batch = firstBatch;

        while (batch !== this) {
          previous = batch;
          batch = batch._next;
        }

        !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
        previous._next = batch._next; // Add it to the front.

        this._next = firstBatch;
        firstBatch = internalRoot.firstBatch = this;
      } // Synchronously flush all the work up to this batch's expiration time.


      this._defer = false;
      flushRoot(internalRoot, expirationTime); // Pop the batch from the list.

      var next = this._next;
      this._next = null;
      firstBatch = internalRoot.firstBatch = next; // Append the next earliest batch's children to the update queue.

      if (firstBatch !== null && firstBatch._hasChildren) {
        firstBatch.render(firstBatch._children);
      }
    };

    ReactBatch.prototype._onComplete = function () {
      if (this._didComplete) {
        return;
      }

      this._didComplete = true;
      var callbacks = this._callbacks;

      if (callbacks === null) {
        return;
      } // TODO: Error handling.


      for (var i = 0; i < callbacks.length; i++) {
        var _callback = callbacks[i];

        _callback();
      }
    };

    function ReactWork() {
      this._callbacks = null;
      this._didCommit = false; // TODO: Avoid need to bind by replacing callbacks in the update queue with
      // list of Work objects.

      this._onCommit = this._onCommit.bind(this);
    }

    ReactWork.prototype.then = function (onCommit) {
      if (this._didCommit) {
        onCommit();
        return;
      }

      var callbacks = this._callbacks;

      if (callbacks === null) {
        callbacks = this._callbacks = [];
      }

      callbacks.push(onCommit);
    };

    ReactWork.prototype._onCommit = function () {
      if (this._didCommit) {
        return;
      }

      this._didCommit = true;
      var callbacks = this._callbacks;

      if (callbacks === null) {
        return;
      } // TODO: Error handling.


      for (var i = 0; i < callbacks.length; i++) {
        var _callback2 = callbacks[i];
        !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;

        _callback2();
      }
    };

    function ReactRoot(container, isConcurrent, hydrate) {
      var root = createContainer(container, isConcurrent, hydrate);
      this._internalRoot = root;
    }

    ReactRoot.prototype.render = function (children, callback) {
      var root = this._internalRoot;
      var work = new ReactWork();
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'render');
      }

      if (callback !== null) {
        work.then(callback);
      }

      updateContainer(children, root, null, work._onCommit);
      return work;
    };

    ReactRoot.prototype.unmount = function (callback) {
      var root = this._internalRoot;
      var work = new ReactWork();
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'render');
      }

      if (callback !== null) {
        work.then(callback);
      }

      updateContainer(null, root, null, work._onCommit);
      return work;
    };

    ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {
      var root = this._internalRoot;
      var work = new ReactWork();
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'render');
      }

      if (callback !== null) {
        work.then(callback);
      }

      updateContainer(children, root, parentComponent, work._onCommit);
      return work;
    };

    ReactRoot.prototype.createBatch = function () {
      var batch = new ReactBatch(this);
      var expirationTime = batch._expirationTime;
      var internalRoot = this._internalRoot;
      var firstBatch = internalRoot.firstBatch;

      if (firstBatch === null) {
        internalRoot.firstBatch = batch;
        batch._next = null;
      } else {
        // Insert sorted by expiration time then insertion order
        var insertAfter = null;
        var insertBefore = firstBatch;

        while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {
          insertAfter = insertBefore;
          insertBefore = insertBefore._next;
        }

        batch._next = insertBefore;

        if (insertAfter !== null) {
          insertAfter._next = batch;
        }
      }

      return batch;
    };
    /**
     * True if the supplied DOM node is a valid node element.
     *
     * @param {?DOMElement} node The candidate DOM node.
     * @return {boolean} True if the DOM is a valid DOM node.
     * @internal
     */


    function isValidContainer(node) {
      return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
    }

    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }

      if (container.nodeType === DOCUMENT_NODE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }

    function shouldHydrateDueToLegacyHeuristic(container) {
      var rootElement = getReactRootElementInContainer(container);
      return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
    }

    setBatchingImplementation(batchedUpdates$1, interactiveUpdates$1, flushInteractiveUpdates$1);
    var warnedAboutHydrateAPI = false;

    function legacyCreateRootFromDOMContainer(container, forceHydrate) {
      var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.

      if (!shouldHydrate) {
        var warned = false;
        var rootSibling = void 0;

        while (rootSibling = container.lastChild) {
          {
            if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
              warned = true;
              warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
            }
          }
          container.removeChild(rootSibling);
        }
      }

      {
        if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
          warnedAboutHydrateAPI = true;
          lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
        }
      } // Legacy roots are not async by default.

      var isConcurrent = false;
      return new ReactRoot(container, isConcurrent, shouldHydrate);
    }

    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
      {
        topLevelUpdateWarnings(container);
      } // TODO: Without `any` type, Flow says "Property cannot be accessed on any
      // member of intersection type." Whyyyyyy.

      var root = container._reactRootContainer;

      if (!root) {
        // Initial mount
        root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);

        if (typeof callback === 'function') {
          var originalCallback = callback;

          callback = function () {
            var instance = getPublicRootInstance(root._internalRoot);
            originalCallback.call(instance);
          };
        } // Initial mount should not be batched.


        unbatchedUpdates(function () {
          if (parentComponent != null) {
            root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
          } else {
            root.render(children, callback);
          }
        });
      } else {
        if (typeof callback === 'function') {
          var _originalCallback = callback;

          callback = function () {
            var instance = getPublicRootInstance(root._internalRoot);

            _originalCallback.call(instance);
          };
        } // Update


        if (parentComponent != null) {
          root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
        } else {
          root.render(children, callback);
        }
      }

      return getPublicRootInstance(root._internalRoot);
    }

    function createPortal$$1(children, container) {
      var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0; // TODO: pass ReactDOM portal implementation as third argument

      return createPortal$1(children, container, null, key);
    }

    var ReactDOM = {
      createPortal: createPortal$$1,
      findDOMNode: function (componentOrElement) {
        {
          var owner = ReactCurrentOwner.current;

          if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;
            owner.stateNode._warnedAboutRefsInRender = true;
          }
        }

        if (componentOrElement == null) {
          return null;
        }

        if (componentOrElement.nodeType === ELEMENT_NODE) {
          return componentOrElement;
        }

        {
          return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
        }
        return findHostInstance(componentOrElement);
      },
      hydrate: function (element, container, callback) {
        !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
        {
          !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
        } // TODO: throw or warn if we couldn't hydrate?

        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
      },
      render: function (element, container, callback) {
        !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
        {
          !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call root.render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
        }
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
      },
      unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
        !isValidContainer(containerNode) ? invariant(false, 'Target container is not a DOM element.') : void 0;
        !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
      },
      unmountComponentAtNode: function (container) {
        !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;
        {
          !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
        }

        if (container._reactRootContainer) {
          {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
            !!renderedByDifferentReact ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
          } // Unmount should not be batched.

          unbatchedUpdates(function () {
            legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
              container._reactRootContainer = null;
            });
          }); // If you call unmountComponentAtNode twice in quick succession, you'll
          // get `true` twice. That's probably fine?

          return true;
        } else {
          {
            var _rootEl = getReactRootElementInContainer(container);

            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl)); // Check if the container itself is a React root node.

            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
            !!hasNonRootReactChild ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
          }
          return false;
        }
      },
      // Temporary alias since we already shipped React 16 RC with it.
      // TODO: remove in React 17.
      unstable_createPortal: function () {
        if (!didWarnAboutUnstableCreatePortal) {
          didWarnAboutUnstableCreatePortal = true;
          lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
        }

        return createPortal$$1.apply(undefined, arguments);
      },
      unstable_batchedUpdates: batchedUpdates$1,
      unstable_interactiveUpdates: interactiveUpdates$1,
      flushSync: flushSync,
      unstable_createRoot: createRoot,
      unstable_flushControlled: flushControlled,
      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        // Keep in sync with ReactDOMUnstableNativeDependencies.js
        // and ReactTestUtils.js. This is an array for better minification.
        Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch]
      }
    };

    function createRoot(container, options) {
      var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';
      !isValidContainer(container) ? invariant(false, '%s(...): Target container is not a DOM element.', functionName) : void 0;
      {
        !!container._reactRootContainer ? warningWithoutStack$1(false, 'You are calling ReactDOM.%s() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
        container._reactHasBeenPassedToCreateRootDEV = true;
      }
      var hydrate = options != null && options.hydrate === true;
      return new ReactRoot(container, true, hydrate);
    }

    if (enableStableConcurrentModeAPIs) {
      ReactDOM.createRoot = createRoot;
      ReactDOM.unstable_createRoot = undefined;
    }

    var foundDevTools = injectIntoDevTools({
      findFiberByHostInstance: getClosestInstanceFromNode,
      bundleType: 1,
      version: ReactVersion,
      rendererPackageName: 'react-dom'
    });
    {
      if (!foundDevTools && canUseDOM && window.top === window.self) {
        // If we're in Chrome or Firefox, provide a download link if not installed.
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
          var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

          if (/^(https?|file):$/.test(protocol)) {
            console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
          }
        }
      }
    }
    var ReactDOM$2 = Object.freeze({
      default: ReactDOM
    });
    var ReactDOM$3 = ReactDOM$2 && ReactDOM || ReactDOM$2; // TODO: decide on the top-level export form.
    // This is hacky but makes it work with both Rollup and Jest.

    var reactDom = ReactDOM$3.default || ReactDOM$3;
    module.exports = reactDom;
  })();
}
},{"react":"../../node_modules/react/index.js","object-assign":"../../node_modules/object-assign/index.js","prop-types/checkPropTypes":"../../node_modules/prop-types/checkPropTypes.js","scheduler":"../../node_modules/scheduler/index.js","scheduler/tracing":"../../node_modules/scheduler/tracing.js"}],"../../node_modules/react-dom/index.js":[function(require,module,exports) {
'use strict';

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if ("development" !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if ("development" === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = require('./cjs/react-dom.production.min.js');
} else {
  module.exports = require('./cjs/react-dom.development.js');
}
},{"./cjs/react-dom.development.js":"../../node_modules/react-dom/cjs/react-dom.development.js"}],"../../node_modules/warning/warning.js":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';
/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = "development" !== 'production';

var warning = function () {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);

    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });

    if (typeof console !== 'undefined') {
      console.error(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function (condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);

    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }

    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;
},{}],"../../node_modules/react-is/cjs/react-is.development.js":[function(require,module,exports) {
/** @license React v16.8.2
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
      value: true
    }); // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.

    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

    function isValidElementType(type) {
      return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
    }
    /**
     * Forked from fbjs/warning:
     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
     *
     * Only change is we use console.warn instead of console.error,
     * and do nothing when 'console' is not supported.
     * This really simplifies the code.
     * ---
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var lowPriorityWarning = function () {};

    {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });

        if (typeof console !== 'undefined') {
          console.warn(message);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarning = function (condition, format) {
        if (format === undefined) {
          throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }
    var lowPriorityWarning$1 = lowPriorityWarning;

    function typeOf(object) {
      if (typeof object === 'object' && object !== null) {
        var $$typeof = object.$$typeof;

        switch ($$typeof) {
          case REACT_ELEMENT_TYPE:
            var type = object.type;

            switch (type) {
              case REACT_ASYNC_MODE_TYPE:
              case REACT_CONCURRENT_MODE_TYPE:
              case REACT_FRAGMENT_TYPE:
              case REACT_PROFILER_TYPE:
              case REACT_STRICT_MODE_TYPE:
              case REACT_SUSPENSE_TYPE:
                return type;

              default:
                var $$typeofType = type && type.$$typeof;

                switch ($$typeofType) {
                  case REACT_CONTEXT_TYPE:
                  case REACT_FORWARD_REF_TYPE:
                  case REACT_PROVIDER_TYPE:
                    return $$typeofType;

                  default:
                    return $$typeof;
                }

            }

          case REACT_LAZY_TYPE:
          case REACT_MEMO_TYPE:
          case REACT_PORTAL_TYPE:
            return $$typeof;
        }
      }

      return undefined;
    } // AsyncMode is deprecated along with isAsyncMode


    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

    function isAsyncMode(object) {
      {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
          hasWarnedAboutDeprecatedIsAsyncMode = true;
          lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
        }
      }
      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }

    function isConcurrentMode(object) {
      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }

    function isContextConsumer(object) {
      return typeOf(object) === REACT_CONTEXT_TYPE;
    }

    function isContextProvider(object) {
      return typeOf(object) === REACT_PROVIDER_TYPE;
    }

    function isElement(object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }

    function isForwardRef(object) {
      return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }

    function isFragment(object) {
      return typeOf(object) === REACT_FRAGMENT_TYPE;
    }

    function isLazy(object) {
      return typeOf(object) === REACT_LAZY_TYPE;
    }

    function isMemo(object) {
      return typeOf(object) === REACT_MEMO_TYPE;
    }

    function isPortal(object) {
      return typeOf(object) === REACT_PORTAL_TYPE;
    }

    function isProfiler(object) {
      return typeOf(object) === REACT_PROFILER_TYPE;
    }

    function isStrictMode(object) {
      return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }

    function isSuspense(object) {
      return typeOf(object) === REACT_SUSPENSE_TYPE;
    }

    exports.typeOf = typeOf;
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isValidElementType = isValidElementType;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
  })();
}
},{}],"../../node_modules/react-is/index.js":[function(require,module,exports) {
'use strict';

if ("development" === 'production') {
  module.exports = require('./cjs/react-is.production.min.js');
} else {
  module.exports = require('./cjs/react-is.development.js');
}
},{"./cjs/react-is.development.js":"../../node_modules/react-is/cjs/react-is.development.js"}],"../../node_modules/prop-types/factoryWithTypeCheckers.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var ReactIs = require('react-is');

var assign = require('object-assign');

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');

var checkPropTypes = require('./checkPropTypes');

var has = Function.call.bind(Object.prototype.hasOwnProperty);

var printWarning = function () {};

if ("development" !== 'production') {
  printWarning = function (text) {
    var message = 'Warning: ' + text;

    if (typeof console !== 'undefined') {
      console.error(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function (isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */

  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);

    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }
  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */


  var ANONYMOUS = '<<anonymous>>'; // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),
    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };
  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */

  /*eslint-disable no-self-compare*/

  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */


  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  } // Make `instanceof Error` still work for returned errors.


  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if ("development" !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }

    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
          err.name = 'Invariant Violation';
          throw err;
        } else if ("development" !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;

          if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
          manualPropTypeWarningCount < 3) {
            printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }

      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }

          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }

        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }

      var propValue = props[propName];

      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }

      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);

        if (error instanceof Error) {
          return error;
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];

      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];

      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if ("development" !== 'production') {
        if (arguments.length > 1) {
          printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }

      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];

      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);

        if (type === 'symbol') {
          return String(value);
        }

        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }

    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }

      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }

      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);

          if (error instanceof Error) {
            return error;
          }
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      "development" !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];

      if (typeof checker !== 'function') {
        printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];

        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }

    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      for (var key in shapeTypes) {
        var checker = shapeTypes[key];

        if (!checker) {
          continue;
        }

        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);

        if (error) {
          return error;
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      } // We need to check all keys in case some are required but missing from
      // props.


      var allKeys = assign({}, props[propName], shapeTypes);

      for (var key in allKeys) {
        var checker = shapeTypes[key];

        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);

        if (error) {
          return error;
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;

      case 'boolean':
        return !propValue;

      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }

        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);

        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;

          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;

              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;

      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    } // falsy value can't be a Symbol


    if (!propValue) {
      return false;
    } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'


    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    } // Fallback for non-spec compliant Symbols which are polyfilled.


    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  } // Equivalent of `typeof` but with special handling for array and regexp.


  function getPropType(propValue) {
    var propType = typeof propValue;

    if (Array.isArray(propValue)) {
      return 'array';
    }

    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }

    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }

    return propType;
  } // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.


  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }

    var propType = getPropType(propValue);

    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }

    return propType;
  } // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"


  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);

    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;

      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;

      default:
        return type;
    }
  } // Returns class name of the object, if any.


  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }

    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
},{"react-is":"../../node_modules/react-is/index.js","object-assign":"../../node_modules/object-assign/index.js","./lib/ReactPropTypesSecret":"../../node_modules/prop-types/lib/ReactPropTypesSecret.js","./checkPropTypes":"../../node_modules/prop-types/checkPropTypes.js"}],"../../node_modules/prop-types/index.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
if ("development" !== 'production') {
  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod


  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = require('./factoryWithThrowingShims')();
}
},{"react-is":"../../node_modules/react-is/index.js","./factoryWithTypeCheckers":"../../node_modules/prop-types/factoryWithTypeCheckers.js"}],"../../node_modules/history/node_modules/warning/browser.js":[function(require,module,exports) {
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
'use strict';
/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function () {};

if ("development" !== 'production') {
  warning = function (condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);

    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }

    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.length < 10 || /^[s\W]*$/.test(format)) {
      throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });

      if (typeof console !== 'undefined') {
        console.error(message);
      }

      try {
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    }
  };
}

module.exports = warning;
},{}],"../../node_modules/invariant/browser.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function (condition, format, a, b, c, d, e, f) {
  if ("development" !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;

    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame

    throw error;
  }
};

module.exports = invariant;
},{}],"../../node_modules/resolve-pathname/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function isAbsolute(pathname) {
  return pathname.charAt(0) === '/';
} // About 1.5x faster than the two-arg version of Array#splice()


function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
    list[i] = list[k];
  }

  list.pop();
} // This implementation is based heavily on node's url.parse


function resolvePathname(to) {
  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var toParts = to && to.split('/') || [];
  var fromParts = from && from.split('/') || [];
  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;

  if (to && isAbsolute(to)) {
    // to is absolute
    fromParts = toParts;
  } else if (toParts.length) {
    // to is relative, drop the filename
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }

  if (!fromParts.length) return '/';
  var hasTrailingSlash = void 0;

  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === '.' || last === '..' || last === '';
  } else {
    hasTrailingSlash = false;
  }

  var up = 0;

  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];

    if (part === '.') {
      spliceOne(fromParts, i);
    } else if (part === '..') {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }

  if (!mustEndAbs) for (; up--; up) {
    fromParts.unshift('..');
  }
  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');
  var result = fromParts.join('/');
  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';
  return result;
}

var _default = resolvePathname;
exports.default = _default;
},{}],"../../node_modules/value-equal/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

function valueEqual(a, b) {
  if (a === b) return true;
  if (a == null || b == null) return false;

  if (Array.isArray(a)) {
    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
      return valueEqual(item, b[index]);
    });
  }

  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);
  if (aType !== bType) return false;

  if (aType === 'object') {
    var aValue = a.valueOf();
    var bValue = b.valueOf();
    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);
    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);
    if (aKeys.length !== bKeys.length) return false;
    return aKeys.every(function (key) {
      return valueEqual(a[key], b[key]);
    });
  }

  return false;
}

var _default = valueEqual;
exports.default = _default;
},{}],"../../node_modules/history/es/PathUtils.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createPath = exports.parsePath = exports.stripTrailingSlash = exports.stripBasename = exports.hasBasename = exports.stripLeadingSlash = exports.addLeadingSlash = void 0;

var addLeadingSlash = function addLeadingSlash(path) {
  return path.charAt(0) === '/' ? path : '/' + path;
};

exports.addLeadingSlash = addLeadingSlash;

var stripLeadingSlash = function stripLeadingSlash(path) {
  return path.charAt(0) === '/' ? path.substr(1) : path;
};

exports.stripLeadingSlash = stripLeadingSlash;

var hasBasename = function hasBasename(path, prefix) {
  return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
};

exports.hasBasename = hasBasename;

var stripBasename = function stripBasename(path, prefix) {
  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
};

exports.stripBasename = stripBasename;

var stripTrailingSlash = function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
};

exports.stripTrailingSlash = stripTrailingSlash;

var parsePath = function parsePath(path) {
  var pathname = path || '/';
  var search = '';
  var hash = '';
  var hashIndex = pathname.indexOf('#');

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf('?');

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === '?' ? '' : search,
    hash: hash === '#' ? '' : hash
  };
};

exports.parsePath = parsePath;

var createPath = function createPath(location) {
  var pathname = location.pathname,
      search = location.search,
      hash = location.hash;
  var path = pathname || '/';
  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;
  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;
  return path;
};

exports.createPath = createPath;
},{}],"../../node_modules/history/es/LocationUtils.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.locationsAreEqual = exports.createLocation = void 0;

var _resolvePathname = _interopRequireDefault(require("resolve-pathname"));

var _valueEqual = _interopRequireDefault(require("value-equal"));

var _PathUtils = require("./PathUtils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var createLocation = function createLocation(path, state, key, currentLocation) {
  var location = void 0;

  if (typeof path === 'string') {
    // Two-arg form: push(path, state)
    location = (0, _PathUtils.parsePath)(path);
    location.state = state;
  } else {
    // One-arg form: push(location)
    location = _extends({}, path);
    if (location.pathname === undefined) location.pathname = '';

    if (location.search) {
      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
    } else {
      location.search = '';
    }

    if (location.hash) {
      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
    } else {
      location.hash = '';
    }

    if (state !== undefined && location.state === undefined) location.state = state;
  }

  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e) {
    if (e instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
    } else {
      throw e;
    }
  }

  if (key) location.key = key;

  if (currentLocation) {
    // Resolve incomplete/relative pathname relative to current location.
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== '/') {
      location.pathname = (0, _resolvePathname.default)(location.pathname, currentLocation.pathname);
    }
  } else {
    // When there is no prior location and pathname is empty, set it to /
    if (!location.pathname) {
      location.pathname = '/';
    }
  }

  return location;
};

exports.createLocation = createLocation;

var locationsAreEqual = function locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual.default)(a.state, b.state);
};

exports.locationsAreEqual = locationsAreEqual;
},{"resolve-pathname":"../../node_modules/resolve-pathname/index.js","value-equal":"../../node_modules/value-equal/index.js","./PathUtils":"../../node_modules/history/es/PathUtils.js"}],"../../node_modules/history/es/createTransitionManager.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var createTransitionManager = function createTransitionManager() {
  var prompt = null;

  var setPrompt = function setPrompt(nextPrompt) {
    (0, _warning.default)(prompt == null, 'A history supports only one prompt at a time');
    prompt = nextPrompt;
    return function () {
      if (prompt === nextPrompt) prompt = null;
    };
  };

  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    // TODO: If another transition starts while we're still confirming
    // the previous one, we may end up in a weird state. Figure out the
    // best way to handle this.
    if (prompt != null) {
      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

      if (typeof result === 'string') {
        if (typeof getUserConfirmation === 'function') {
          getUserConfirmation(result, callback);
        } else {
          (0, _warning.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');
          callback(true);
        }
      } else {
        // Return false from a transition hook to cancel the transition.
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  };

  var listeners = [];

  var appendListener = function appendListener(fn) {
    var isActive = true;

    var listener = function listener() {
      if (isActive) fn.apply(undefined, arguments);
    };

    listeners.push(listener);
    return function () {
      isActive = false;
      listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  };

  var notifyListeners = function notifyListeners() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    listeners.forEach(function (listener) {
      return listener.apply(undefined, args);
    });
  };

  return {
    setPrompt: setPrompt,
    confirmTransitionTo: confirmTransitionTo,
    appendListener: appendListener,
    notifyListeners: notifyListeners
  };
};

var _default = createTransitionManager;
exports.default = _default;
},{"warning":"../../node_modules/history/node_modules/warning/browser.js"}],"../../node_modules/history/es/DOMUtils.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isExtraneousPopstateEvent = exports.supportsGoWithoutReloadUsingHash = exports.supportsPopStateOnHashChange = exports.supportsHistory = exports.getConfirmation = exports.removeEventListener = exports.addEventListener = exports.canUseDOM = void 0;
var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
exports.canUseDOM = canUseDOM;

var addEventListener = function addEventListener(node, event, listener) {
  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
};

exports.addEventListener = addEventListener;

var removeEventListener = function removeEventListener(node, event, listener) {
  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
};

exports.removeEventListener = removeEventListener;

var getConfirmation = function getConfirmation(message, callback) {
  return callback(window.confirm(message));
}; // eslint-disable-line no-alert

/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */


exports.getConfirmation = getConfirmation;

var supportsHistory = function supportsHistory() {
  var ua = window.navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
  return window.history && 'pushState' in window.history;
};
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */


exports.supportsHistory = supportsHistory;

var supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf('Trident') === -1;
};
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */


exports.supportsPopStateOnHashChange = supportsPopStateOnHashChange;

var supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf('Firefox') === -1;
};
/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */


exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;

var isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {
  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
};

exports.isExtraneousPopstateEvent = isExtraneousPopstateEvent;
},{}],"../../node_modules/history/es/createBrowserHistory.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

var _invariant = _interopRequireDefault(require("invariant"));

var _LocationUtils = require("./LocationUtils");

var _PathUtils = require("./PathUtils");

var _createTransitionManager = _interopRequireDefault(require("./createTransitionManager"));

var _DOMUtils = require("./DOMUtils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var PopStateEvent = 'popstate';
var HashChangeEvent = 'hashchange';

var getHistoryState = function getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e) {
    // IE 11 sometimes throws when accessing window.history.state
    // See https://github.com/ReactTraining/history/pull/289
    return {};
  }
};
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */


var createBrowserHistory = function createBrowserHistory() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  (0, _invariant.default)(_DOMUtils.canUseDOM, 'Browser history needs a DOM');
  var globalHistory = window.history;
  var canUseHistory = (0, _DOMUtils.supportsHistory)();
  var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();
  var _props$forceRefresh = props.forceRefresh,
      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,
      _props$getUserConfirm = props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
      _props$keyLength = props.keyLength,
      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;
  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';

  var getDOMLocation = function getDOMLocation(historyState) {
    var _ref = historyState || {},
        key = _ref.key,
        state = _ref.state;

    var _window$location = window.location,
        pathname = _window$location.pathname,
        search = _window$location.search,
        hash = _window$location.hash;
    var path = pathname + search + hash;
    (0, _warning.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);
    return (0, _LocationUtils.createLocation)(path, state, key);
  };

  var createKey = function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  };

  var transitionManager = (0, _createTransitionManager.default)();

  var setState = function setState(nextState) {
    _extends(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  };

  var handlePopState = function handlePopState(event) {
    // Ignore extraneous popstate events in WebKit.
    if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;
    handlePop(getDOMLocation(event.state));
  };

  var handleHashChange = function handleHashChange() {
    handlePop(getDOMLocation(getHistoryState()));
  };

  var forceNextPop = false;

  var handlePop = function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  };

  var revertPop = function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of keys we've seen in sessionStorage.
    // Instead, we just default to 0 for keys we don't know.

    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  };

  var initialLocation = getDOMLocation(getHistoryState());
  var allKeys = [initialLocation.key]; // Public interface

  var createHref = function createHref(location) {
    return basename + (0, _PathUtils.createPath)(location);
  };

  var push = function push(path, state) {
    (0, _warning.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
    var action = 'PUSH';
    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.pushState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        (0, _warning.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');
        window.location.href = href;
      }
    });
  };

  var replace = function replace(path, state) {
    (0, _warning.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
    var action = 'REPLACE';
    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.replaceState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        (0, _warning.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');
        window.location.replace(href);
      }
    });
  };

  var go = function go(n) {
    globalHistory.go(n);
  };

  var goBack = function goBack() {
    return go(-1);
  };

  var goForward = function goForward() {
    return go(1);
  };

  var listenerCount = 0;

  var checkDOMListeners = function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1) {
      (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);
      if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);
      if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
    }
  };

  var isBlocked = false;

  var block = function block() {
    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  };

  var listen = function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  };

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
};

var _default = createBrowserHistory;
exports.default = _default;
},{"warning":"../../node_modules/history/node_modules/warning/browser.js","invariant":"../../node_modules/invariant/browser.js","./LocationUtils":"../../node_modules/history/es/LocationUtils.js","./PathUtils":"../../node_modules/history/es/PathUtils.js","./createTransitionManager":"../../node_modules/history/es/createTransitionManager.js","./DOMUtils":"../../node_modules/history/es/DOMUtils.js"}],"../../node_modules/history/es/createHashHistory.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

var _invariant = _interopRequireDefault(require("invariant"));

var _LocationUtils = require("./LocationUtils");

var _PathUtils = require("./PathUtils");

var _createTransitionManager = _interopRequireDefault(require("./createTransitionManager"));

var _DOMUtils = require("./DOMUtils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var HashChangeEvent = 'hashchange';
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === '!' ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: _PathUtils.stripLeadingSlash,
    decodePath: _PathUtils.addLeadingSlash
  },
  slash: {
    encodePath: _PathUtils.addLeadingSlash,
    decodePath: _PathUtils.addLeadingSlash
  }
};

var getHashPath = function getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var hashIndex = href.indexOf('#');
  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
};

var pushHashPath = function pushHashPath(path) {
  return window.location.hash = path;
};

var replaceHashPath = function replaceHashPath(path) {
  var hashIndex = window.location.href.indexOf('#');
  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
};

var createHashHistory = function createHashHistory() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  (0, _invariant.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');
  var globalHistory = window.history;
  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();
  var _props$getUserConfirm = props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
      _props$hashType = props.hashType,
      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;
  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';
  var _HashPathCoders$hashT = HashPathCoders[hashType],
      encodePath = _HashPathCoders$hashT.encodePath,
      decodePath = _HashPathCoders$hashT.decodePath;

  var getDOMLocation = function getDOMLocation() {
    var path = decodePath(getHashPath());
    (0, _warning.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);
    return (0, _LocationUtils.createLocation)(path);
  };

  var transitionManager = (0, _createTransitionManager.default)();

  var setState = function setState(nextState) {
    _extends(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  };

  var forceNextPop = false;
  var ignorePath = null;

  var handleHashChange = function handleHashChange() {
    var path = getHashPath();
    var encodedPath = encodePath(path);

    if (path !== encodedPath) {
      // Ensure we always have a properly-encoded hash.
      replaceHashPath(encodedPath);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.

      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.

      ignorePath = null;
      handlePop(location);
    }
  };

  var handlePop = function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  };

  var revertPop = function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of paths we've seen in sessionStorage.
    // Instead, we just default to 0 for paths we don't know.

    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }; // Ensure the hash is encoded properly before doing anything else.


  var path = getHashPath();
  var encodedPath = encodePath(path);
  if (path !== encodedPath) replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [(0, _PathUtils.createPath)(initialLocation)]; // Public interface

  var createHref = function createHref(location) {
    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));
  };

  var push = function push(path, state) {
    (0, _warning.default)(state === undefined, 'Hash history cannot push state; it is ignored');
    var action = 'PUSH';
    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = (0, _PathUtils.createPath)(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a PUSH, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        pushHashPath(encodedPath);
        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));
        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
        nextPaths.push(path);
        allPaths = nextPaths;
        setState({
          action: action,
          location: location
        });
      } else {
        (0, _warning.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');
        setState();
      }
    });
  };

  var replace = function replace(path, state) {
    (0, _warning.default)(state === undefined, 'Hash history cannot replace state; it is ignored');
    var action = 'REPLACE';
    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = (0, _PathUtils.createPath)(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        replaceHashPath(encodedPath);
      }

      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));
      if (prevIndex !== -1) allPaths[prevIndex] = path;
      setState({
        action: action,
        location: location
      });
    });
  };

  var go = function go(n) {
    (0, _warning.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');
    globalHistory.go(n);
  };

  var goBack = function goBack() {
    return go(-1);
  };

  var goForward = function goForward() {
    return go(1);
  };

  var listenerCount = 0;

  var checkDOMListeners = function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1) {
      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
    }
  };

  var isBlocked = false;

  var block = function block() {
    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  };

  var listen = function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  };

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
};

var _default = createHashHistory;
exports.default = _default;
},{"warning":"../../node_modules/history/node_modules/warning/browser.js","invariant":"../../node_modules/invariant/browser.js","./LocationUtils":"../../node_modules/history/es/LocationUtils.js","./PathUtils":"../../node_modules/history/es/PathUtils.js","./createTransitionManager":"../../node_modules/history/es/createTransitionManager.js","./DOMUtils":"../../node_modules/history/es/DOMUtils.js"}],"../../node_modules/history/es/createMemoryHistory.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

var _PathUtils = require("./PathUtils");

var _LocationUtils = require("./LocationUtils");

var _createTransitionManager = _interopRequireDefault(require("./createTransitionManager"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var clamp = function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
};
/**
 * Creates a history object that stores locations in memory.
 */


var createMemoryHistory = function createMemoryHistory() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var getUserConfirmation = props.getUserConfirmation,
      _props$initialEntries = props.initialEntries,
      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,
      _props$initialIndex = props.initialIndex,
      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,
      _props$keyLength = props.keyLength,
      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;
  var transitionManager = (0, _createTransitionManager.default)();

  var setState = function setState(nextState) {
    _extends(history, nextState);

    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  };

  var createKey = function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  };

  var index = clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function (entry) {
    return typeof entry === 'string' ? (0, _LocationUtils.createLocation)(entry, undefined, createKey()) : (0, _LocationUtils.createLocation)(entry, undefined, entry.key || createKey());
  }); // Public interface

  var createHref = _PathUtils.createPath;

  var push = function push(path, state) {
    (0, _warning.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
    var action = 'PUSH';
    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);

      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }

      setState({
        action: action,
        location: location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  };

  var replace = function replace(path, state) {
    (0, _warning.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
    var action = 'REPLACE';
    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      history.entries[history.index] = location;
      setState({
        action: action,
        location: location
      });
    });
  };

  var go = function go(n) {
    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
    var action = 'POP';
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (ok) {
        setState({
          action: action,
          location: location,
          index: nextIndex
        });
      } else {
        // Mimic the behavior of DOM histories by
        // causing a render after a cancelled POP.
        setState();
      }
    });
  };

  var goBack = function goBack() {
    return go(-1);
  };

  var goForward = function goForward() {
    return go(1);
  };

  var canGo = function canGo(n) {
    var nextIndex = history.index + n;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  };

  var block = function block() {
    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    return transitionManager.setPrompt(prompt);
  };

  var listen = function listen(listener) {
    return transitionManager.appendListener(listener);
  };

  var history = {
    length: entries.length,
    action: 'POP',
    location: entries[index],
    index: index,
    entries: entries,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    canGo: canGo,
    block: block,
    listen: listen
  };
  return history;
};

var _default = createMemoryHistory;
exports.default = _default;
},{"warning":"../../node_modules/history/node_modules/warning/browser.js","./PathUtils":"../../node_modules/history/es/PathUtils.js","./LocationUtils":"../../node_modules/history/es/LocationUtils.js","./createTransitionManager":"../../node_modules/history/es/createTransitionManager.js"}],"../../node_modules/history/es/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "createBrowserHistory", {
  enumerable: true,
  get: function () {
    return _createBrowserHistory2.default;
  }
});
Object.defineProperty(exports, "createHashHistory", {
  enumerable: true,
  get: function () {
    return _createHashHistory2.default;
  }
});
Object.defineProperty(exports, "createMemoryHistory", {
  enumerable: true,
  get: function () {
    return _createMemoryHistory2.default;
  }
});
Object.defineProperty(exports, "createLocation", {
  enumerable: true,
  get: function () {
    return _LocationUtils.createLocation;
  }
});
Object.defineProperty(exports, "locationsAreEqual", {
  enumerable: true,
  get: function () {
    return _LocationUtils.locationsAreEqual;
  }
});
Object.defineProperty(exports, "parsePath", {
  enumerable: true,
  get: function () {
    return _PathUtils.parsePath;
  }
});
Object.defineProperty(exports, "createPath", {
  enumerable: true,
  get: function () {
    return _PathUtils.createPath;
  }
});

var _createBrowserHistory2 = _interopRequireDefault(require("./createBrowserHistory"));

var _createHashHistory2 = _interopRequireDefault(require("./createHashHistory"));

var _createMemoryHistory2 = _interopRequireDefault(require("./createMemoryHistory"));

var _LocationUtils = require("./LocationUtils");

var _PathUtils = require("./PathUtils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./createBrowserHistory":"../../node_modules/history/es/createBrowserHistory.js","./createHashHistory":"../../node_modules/history/es/createHashHistory.js","./createMemoryHistory":"../../node_modules/history/es/createMemoryHistory.js","./LocationUtils":"../../node_modules/history/es/LocationUtils.js","./PathUtils":"../../node_modules/history/es/PathUtils.js"}],"../../node_modules/react-router/es/Router.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

var _invariant = _interopRequireDefault(require("invariant"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

/**
 * The public API for putting history on context.
 */
var Router = function (_React$Component) {
  _inherits(Router, _React$Component);

  function Router() {
    var _temp, _this, _ret;

    _classCallCheck(this, Router);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      match: _this.computeMatch(_this.props.history.location.pathname)
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Router.prototype.getChildContext = function getChildContext() {
    return {
      router: _extends({}, this.context.router, {
        history: this.props.history,
        route: {
          location: this.props.history.location,
          match: this.state.match
        }
      })
    };
  };

  Router.prototype.computeMatch = function computeMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };

  Router.prototype.componentWillMount = function componentWillMount() {
    var _this2 = this;

    var _props = this.props,
        children = _props.children,
        history = _props.history;
    (0, _invariant.default)(children == null || _react.default.Children.count(children) === 1, "A <Router> may have only one child element"); // Do this here so we can setState when a <Redirect> changes the
    // location in componentWillMount. This happens e.g. when doing
    // server rendering using a <StaticRouter>.

    this.unlisten = history.listen(function () {
      _this2.setState({
        match: _this2.computeMatch(history.location.pathname)
      });
    });
  };

  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    (0, _warning.default)(this.props.history === nextProps.history, "You cannot change <Router history>");
  };

  Router.prototype.componentWillUnmount = function componentWillUnmount() {
    this.unlisten();
  };

  Router.prototype.render = function render() {
    var children = this.props.children;
    return children ? _react.default.Children.only(children) : null;
  };

  return Router;
}(_react.default.Component);

Router.propTypes = {
  history: _propTypes.default.object.isRequired,
  children: _propTypes.default.node
};
Router.contextTypes = {
  router: _propTypes.default.object
};
Router.childContextTypes = {
  router: _propTypes.default.object.isRequired
};
var _default = Router;
exports.default = _default;
},{"warning":"../../node_modules/warning/warning.js","invariant":"../../node_modules/invariant/browser.js","react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js"}],"../../node_modules/react-router-dom/es/Router.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Router = _interopRequireDefault(require("react-router/es/Router"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _Router.default;
exports.default = _default;
},{"react-router/es/Router":"../../node_modules/react-router/es/Router.js"}],"../../node_modules/react-router-dom/es/BrowserRouter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _history = require("history");

var _Router = _interopRequireDefault(require("./Router"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

/**
 * The public API for a <Router> that uses HTML5 history.
 */
var BrowserRouter = function (_React$Component) {
  _inherits(BrowserRouter, _React$Component);

  function BrowserRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, BrowserRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createBrowserHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
  }

  BrowserRouter.prototype.componentWillMount = function componentWillMount() {
    (0, _warning.default)(!this.props.history, "<BrowserRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { BrowserRouter as Router }`.");
  };

  BrowserRouter.prototype.render = function render() {
    return _react.default.createElement(_Router.default, {
      history: this.history,
      children: this.props.children
    });
  };

  return BrowserRouter;
}(_react.default.Component);

BrowserRouter.propTypes = {
  basename: _propTypes.default.string,
  forceRefresh: _propTypes.default.bool,
  getUserConfirmation: _propTypes.default.func,
  keyLength: _propTypes.default.number,
  children: _propTypes.default.node
};
var _default = BrowserRouter;
exports.default = _default;
},{"warning":"../../node_modules/warning/warning.js","react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","history":"../../node_modules/history/es/index.js","./Router":"../../node_modules/react-router-dom/es/Router.js"}],"../../node_modules/react-router-dom/es/HashRouter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _history = require("history");

var _Router = _interopRequireDefault(require("./Router"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

/**
 * The public API for a <Router> that uses window.location.hash.
 */
var HashRouter = function (_React$Component) {
  _inherits(HashRouter, _React$Component);

  function HashRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, HashRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createHashHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
  }

  HashRouter.prototype.componentWillMount = function componentWillMount() {
    (0, _warning.default)(!this.props.history, "<HashRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { HashRouter as Router }`.");
  };

  HashRouter.prototype.render = function render() {
    return _react.default.createElement(_Router.default, {
      history: this.history,
      children: this.props.children
    });
  };

  return HashRouter;
}(_react.default.Component);

HashRouter.propTypes = {
  basename: _propTypes.default.string,
  getUserConfirmation: _propTypes.default.func,
  hashType: _propTypes.default.oneOf(["hashbang", "noslash", "slash"]),
  children: _propTypes.default.node
};
var _default = HashRouter;
exports.default = _default;
},{"warning":"../../node_modules/warning/warning.js","react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","history":"../../node_modules/history/es/index.js","./Router":"../../node_modules/react-router-dom/es/Router.js"}],"../../node_modules/react-router-dom/es/Link.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _invariant = _interopRequireDefault(require("invariant"));

var _history = require("history");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function _objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var isModifiedEvent = function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
};
/**
 * The public API for rendering a history-aware <a>.
 */


var Link = function (_React$Component) {
  _inherits(Link, _React$Component);

  function Link() {
    var _temp, _this, _ret;

    _classCallCheck(this, Link);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
      if (_this.props.onClick) _this.props.onClick(event);

      if (!event.defaultPrevented && // onClick prevented default
      event.button === 0 && // ignore everything but left clicks
      !_this.props.target && // let browser handle "target=_blank" etc.
      !isModifiedEvent(event) // ignore clicks with modifier keys
      ) {
          event.preventDefault();
          var history = _this.context.router.history;
          var _this$props = _this.props,
              replace = _this$props.replace,
              to = _this$props.to;

          if (replace) {
            history.replace(to);
          } else {
            history.push(to);
          }
        }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Link.prototype.render = function render() {
    var _props = this.props,
        replace = _props.replace,
        to = _props.to,
        innerRef = _props.innerRef,
        props = _objectWithoutProperties(_props, ["replace", "to", "innerRef"]); // eslint-disable-line no-unused-vars


    (0, _invariant.default)(this.context.router, "You should not use <Link> outside a <Router>");
    (0, _invariant.default)(to !== undefined, 'You must specify the "to" property');
    var history = this.context.router.history;
    var location = typeof to === "string" ? (0, _history.createLocation)(to, null, null, history.location) : to;
    var href = history.createHref(location);
    return _react.default.createElement("a", _extends({}, props, {
      onClick: this.handleClick,
      href: href,
      ref: innerRef
    }));
  };

  return Link;
}(_react.default.Component);

Link.propTypes = {
  onClick: _propTypes.default.func,
  target: _propTypes.default.string,
  replace: _propTypes.default.bool,
  to: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]).isRequired,
  innerRef: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func])
};
Link.defaultProps = {
  replace: false
};
Link.contextTypes = {
  router: _propTypes.default.shape({
    history: _propTypes.default.shape({
      push: _propTypes.default.func.isRequired,
      replace: _propTypes.default.func.isRequired,
      createHref: _propTypes.default.func.isRequired
    }).isRequired
  }).isRequired
};
var _default = Link;
exports.default = _default;
},{"react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","invariant":"../../node_modules/invariant/browser.js","history":"../../node_modules/history/es/index.js"}],"../../node_modules/react-router/es/MemoryRouter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _history = require("history");

var _Router = _interopRequireDefault(require("./Router"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

/**
 * The public API for a <Router> that stores location in memory.
 */
var MemoryRouter = function (_React$Component) {
  _inherits(MemoryRouter, _React$Component);

  function MemoryRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, MemoryRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createMemoryHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
  }

  MemoryRouter.prototype.componentWillMount = function componentWillMount() {
    (0, _warning.default)(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.");
  };

  MemoryRouter.prototype.render = function render() {
    return _react.default.createElement(_Router.default, {
      history: this.history,
      children: this.props.children
    });
  };

  return MemoryRouter;
}(_react.default.Component);

MemoryRouter.propTypes = {
  initialEntries: _propTypes.default.array,
  initialIndex: _propTypes.default.number,
  getUserConfirmation: _propTypes.default.func,
  keyLength: _propTypes.default.number,
  children: _propTypes.default.node
};
var _default = MemoryRouter;
exports.default = _default;
},{"warning":"../../node_modules/warning/warning.js","react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","history":"../../node_modules/history/es/index.js","./Router":"../../node_modules/react-router/es/Router.js"}],"../../node_modules/react-router-dom/es/MemoryRouter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _MemoryRouter = _interopRequireDefault(require("react-router/es/MemoryRouter"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _MemoryRouter.default;
exports.default = _default;
},{"react-router/es/MemoryRouter":"../../node_modules/react-router/es/MemoryRouter.js"}],"../../node_modules/isarray/index.js":[function(require,module,exports) {
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],"../../node_modules/path-to-regexp/index.js":[function(require,module,exports) {
var isarray = require('isarray')

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp
module.exports.parse = parse
module.exports.compile = compile
module.exports.tokensToFunction = tokensToFunction
module.exports.tokensToRegExp = tokensToRegExp

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g')

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = []
  var key = 0
  var index = 0
  var path = ''
  var defaultDelimiter = options && options.delimiter || '/'
  var res

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0]
    var escaped = res[1]
    var offset = res.index
    path += str.slice(index, offset)
    index = offset + m.length

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1]
      continue
    }

    var next = str[index]
    var prefix = res[2]
    var name = res[3]
    var capture = res[4]
    var group = res[5]
    var modifier = res[6]
    var asterisk = res[7]

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path)
      path = ''
    }

    var partial = prefix != null && next != null && next !== prefix
    var repeat = modifier === '+' || modifier === '*'
    var optional = modifier === '?' || modifier === '*'
    var delimiter = res[2] || defaultDelimiter
    var pattern = capture || group

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    })
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index)
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path)
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options))
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length)

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')
    }
  }

  return function (obj, opts) {
    var path = ''
    var data = obj || {}
    var options = opts || {}
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i]

      if (typeof token === 'string') {
        path += token

        continue
      }

      var value = data[token.name]
      var segment

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j])

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g)

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      })
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = []

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source)
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  var strict = options.strict
  var end = options.end !== false
  var route = ''

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i]

    if (typeof token === 'string') {
      route += escapeString(token)
    } else {
      var prefix = escapeString(token.prefix)
      var capture = '(?:' + token.pattern + ')'

      keys.push(token)

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*'
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?'
        } else {
          capture = prefix + '(' + capture + ')?'
        }
      } else {
        capture = prefix + '(' + capture + ')'
      }

      route += capture
    }
  }

  var delimiter = escapeString(options.delimiter || '/')
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
  }

  if (end) {
    route += '$'
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}

},{"isarray":"../../node_modules/isarray/index.js"}],"../../node_modules/react-router/es/matchPath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _pathToRegexp = _interopRequireDefault(require("path-to-regexp"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var patternCache = {};
var cacheLimit = 10000;
var cacheCount = 0;

var compilePath = function compilePath(pattern, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});
  if (cache[pattern]) return cache[pattern];
  var keys = [];
  var re = (0, _pathToRegexp.default)(pattern, keys, options);
  var compiledPattern = {
    re: re,
    keys: keys
  };

  if (cacheCount < cacheLimit) {
    cache[pattern] = compiledPattern;
    cacheCount++;
  }

  return compiledPattern;
};
/**
 * Public API for matching a URL pathname to a path pattern.
 */


var matchPath = function matchPath(pathname) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var parent = arguments[2];
  if (typeof options === "string") options = {
    path: options
  };
  var _options = options,
      path = _options.path,
      _options$exact = _options.exact,
      exact = _options$exact === undefined ? false : _options$exact,
      _options$strict = _options.strict,
      strict = _options$strict === undefined ? false : _options$strict,
      _options$sensitive = _options.sensitive,
      sensitive = _options$sensitive === undefined ? false : _options$sensitive;
  if (path == null) return parent;

  var _compilePath = compilePath(path, {
    end: exact,
    strict: strict,
    sensitive: sensitive
  }),
      re = _compilePath.re,
      keys = _compilePath.keys;

  var match = re.exec(pathname);
  if (!match) return null;
  var url = match[0],
      values = match.slice(1);
  var isExact = pathname === url;
  if (exact && !isExact) return null;
  return {
    path: path,
    // the path pattern used to match
    url: path === "/" && url === "" ? "/" : url,
    // the matched portion of the URL
    isExact: isExact,
    // whether or not we matched exactly
    params: keys.reduce(function (memo, key, index) {
      memo[key.name] = values[index];
      return memo;
    }, {})
  };
};

var _default = matchPath;
exports.default = _default;
},{"path-to-regexp":"../../node_modules/path-to-regexp/index.js"}],"../../node_modules/react-router/es/Route.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

var _invariant = _interopRequireDefault(require("invariant"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _matchPath = _interopRequireDefault(require("./matchPath"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var isEmptyChildren = function isEmptyChildren(children) {
  return _react.default.Children.count(children) === 0;
};
/**
 * The public API for matching a single path and rendering.
 */


var Route = function (_React$Component) {
  _inherits(Route, _React$Component);

  function Route() {
    var _temp, _this, _ret;

    _classCallCheck(this, Route);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      match: _this.computeMatch(_this.props, _this.context.router)
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Route.prototype.getChildContext = function getChildContext() {
    return {
      router: _extends({}, this.context.router, {
        route: {
          location: this.props.location || this.context.router.route.location,
          match: this.state.match
        }
      })
    };
  };

  Route.prototype.computeMatch = function computeMatch(_ref, router) {
    var computedMatch = _ref.computedMatch,
        location = _ref.location,
        path = _ref.path,
        strict = _ref.strict,
        exact = _ref.exact,
        sensitive = _ref.sensitive;
    if (computedMatch) return computedMatch; // <Switch> already computed the match for us

    (0, _invariant.default)(router, "You should not use <Route> or withRouter() outside a <Router>");
    var route = router.route;
    var pathname = (location || route.location).pathname;
    return (0, _matchPath.default)(pathname, {
      path: path,
      strict: strict,
      exact: exact,
      sensitive: sensitive
    }, route.match);
  };

  Route.prototype.componentWillMount = function componentWillMount() {
    (0, _warning.default)(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored");
    (0, _warning.default)(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored");
    (0, _warning.default)(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored");
  };

  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
    (0, _warning.default)(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
    (0, _warning.default)(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
    this.setState({
      match: this.computeMatch(nextProps, nextContext.router)
    });
  };

  Route.prototype.render = function render() {
    var match = this.state.match;
    var _props = this.props,
        children = _props.children,
        component = _props.component,
        render = _props.render;
    var _context$router = this.context.router,
        history = _context$router.history,
        route = _context$router.route,
        staticContext = _context$router.staticContext;
    var location = this.props.location || route.location;
    var props = {
      match: match,
      location: location,
      history: history,
      staticContext: staticContext
    };
    if (component) return match ? _react.default.createElement(component, props) : null;
    if (render) return match ? render(props) : null;
    if (typeof children === "function") return children(props);
    if (children && !isEmptyChildren(children)) return _react.default.Children.only(children);
    return null;
  };

  return Route;
}(_react.default.Component);

Route.propTypes = {
  computedMatch: _propTypes.default.object,
  // private, from <Switch>
  path: _propTypes.default.string,
  exact: _propTypes.default.bool,
  strict: _propTypes.default.bool,
  sensitive: _propTypes.default.bool,
  component: _propTypes.default.func,
  render: _propTypes.default.func,
  children: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]),
  location: _propTypes.default.object
};
Route.contextTypes = {
  router: _propTypes.default.shape({
    history: _propTypes.default.object.isRequired,
    route: _propTypes.default.object.isRequired,
    staticContext: _propTypes.default.object
  })
};
Route.childContextTypes = {
  router: _propTypes.default.object.isRequired
};
var _default = Route;
exports.default = _default;
},{"warning":"../../node_modules/warning/warning.js","invariant":"../../node_modules/invariant/browser.js","react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","./matchPath":"../../node_modules/react-router/es/matchPath.js"}],"../../node_modules/react-router-dom/es/Route.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Route = _interopRequireDefault(require("react-router/es/Route"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _Route.default;
exports.default = _default;
},{"react-router/es/Route":"../../node_modules/react-router/es/Route.js"}],"../../node_modules/react-router-dom/es/NavLink.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Route = _interopRequireDefault(require("./Route"));

var _Link = _interopRequireDefault(require("./Link"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

function _objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
}

/**
 * A <Link> wrapper that knows if it's "active" or not.
 */
var NavLink = function NavLink(_ref) {
  var to = _ref.to,
      exact = _ref.exact,
      strict = _ref.strict,
      location = _ref.location,
      activeClassName = _ref.activeClassName,
      className = _ref.className,
      activeStyle = _ref.activeStyle,
      style = _ref.style,
      getIsActive = _ref.isActive,
      ariaCurrent = _ref["aria-current"],
      rest = _objectWithoutProperties(_ref, ["to", "exact", "strict", "location", "activeClassName", "className", "activeStyle", "style", "isActive", "aria-current"]);

  var path = (typeof to === "undefined" ? "undefined" : _typeof(to)) === "object" ? to.pathname : to; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202

  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
  return _react.default.createElement(_Route.default, {
    path: escapedPath,
    exact: exact,
    strict: strict,
    location: location,
    children: function children(_ref2) {
      var location = _ref2.location,
          match = _ref2.match;
      var isActive = !!(getIsActive ? getIsActive(match, location) : match);
      return _react.default.createElement(_Link.default, _extends({
        to: to,
        className: isActive ? [className, activeClassName].filter(function (i) {
          return i;
        }).join(" ") : className,
        style: isActive ? _extends({}, style, activeStyle) : style,
        "aria-current": isActive && ariaCurrent || null
      }, rest));
    }
  });
};

NavLink.propTypes = {
  to: _Link.default.propTypes.to,
  exact: _propTypes.default.bool,
  strict: _propTypes.default.bool,
  location: _propTypes.default.object,
  activeClassName: _propTypes.default.string,
  className: _propTypes.default.string,
  activeStyle: _propTypes.default.object,
  style: _propTypes.default.object,
  isActive: _propTypes.default.func,
  "aria-current": _propTypes.default.oneOf(["page", "step", "location", "date", "time", "true"])
};
NavLink.defaultProps = {
  activeClassName: "active",
  "aria-current": "page"
};
var _default = NavLink;
exports.default = _default;
},{"react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","./Route":"../../node_modules/react-router-dom/es/Route.js","./Link":"../../node_modules/react-router-dom/es/Link.js"}],"../../node_modules/react-router/es/Prompt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _invariant = _interopRequireDefault(require("invariant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

/**
 * The public API for prompting the user before navigating away
 * from a screen with a component.
 */
var Prompt = function (_React$Component) {
  _inherits(Prompt, _React$Component);

  function Prompt() {
    _classCallCheck(this, Prompt);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Prompt.prototype.enable = function enable(message) {
    if (this.unblock) this.unblock();
    this.unblock = this.context.router.history.block(message);
  };

  Prompt.prototype.disable = function disable() {
    if (this.unblock) {
      this.unblock();
      this.unblock = null;
    }
  };

  Prompt.prototype.componentWillMount = function componentWillMount() {
    (0, _invariant.default)(this.context.router, "You should not use <Prompt> outside a <Router>");
    if (this.props.when) this.enable(this.props.message);
  };

  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (nextProps.when) {
      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);
    } else {
      this.disable();
    }
  };

  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
    this.disable();
  };

  Prompt.prototype.render = function render() {
    return null;
  };

  return Prompt;
}(_react.default.Component);

Prompt.propTypes = {
  when: _propTypes.default.bool,
  message: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.string]).isRequired
};
Prompt.defaultProps = {
  when: true
};
Prompt.contextTypes = {
  router: _propTypes.default.shape({
    history: _propTypes.default.shape({
      block: _propTypes.default.func.isRequired
    }).isRequired
  }).isRequired
};
var _default = Prompt;
exports.default = _default;
},{"react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","invariant":"../../node_modules/invariant/browser.js"}],"../../node_modules/react-router-dom/es/Prompt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Prompt = _interopRequireDefault(require("react-router/es/Prompt"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _Prompt.default;
exports.default = _default;
},{"react-router/es/Prompt":"../../node_modules/react-router/es/Prompt.js"}],"../../node_modules/react-router/es/generatePath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _pathToRegexp = _interopRequireDefault(require("path-to-regexp"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var patternCache = {};
var cacheLimit = 10000;
var cacheCount = 0;

var compileGenerator = function compileGenerator(pattern) {
  var cacheKey = pattern;
  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});
  if (cache[pattern]) return cache[pattern];

  var compiledGenerator = _pathToRegexp.default.compile(pattern);

  if (cacheCount < cacheLimit) {
    cache[pattern] = compiledGenerator;
    cacheCount++;
  }

  return compiledGenerator;
};
/**
 * Public API for generating a URL pathname from a pattern and parameters.
 */


var generatePath = function generatePath() {
  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (pattern === "/") {
    return pattern;
  }

  var generator = compileGenerator(pattern);
  return generator(params, {
    pretty: true
  });
};

var _default = generatePath;
exports.default = _default;
},{"path-to-regexp":"../../node_modules/path-to-regexp/index.js"}],"../../node_modules/react-router/es/Redirect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _warning = _interopRequireDefault(require("warning"));

var _invariant = _interopRequireDefault(require("invariant"));

var _history = require("history");

var _generatePath = _interopRequireDefault(require("./generatePath"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

/**
 * The public API for updating the location programmatically
 * with a component.
 */
var Redirect = function (_React$Component) {
  _inherits(Redirect, _React$Component);

  function Redirect() {
    _classCallCheck(this, Redirect);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Redirect.prototype.isStatic = function isStatic() {
    return this.context.router && this.context.router.staticContext;
  };

  Redirect.prototype.componentWillMount = function componentWillMount() {
    (0, _invariant.default)(this.context.router, "You should not use <Redirect> outside a <Router>");
    if (this.isStatic()) this.perform();
  };

  Redirect.prototype.componentDidMount = function componentDidMount() {
    if (!this.isStatic()) this.perform();
  };

  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    var prevTo = (0, _history.createLocation)(prevProps.to);
    var nextTo = (0, _history.createLocation)(this.props.to);

    if ((0, _history.locationsAreEqual)(prevTo, nextTo)) {
      (0, _warning.default)(false, "You tried to redirect to the same route you're currently on: " + ("\"" + nextTo.pathname + nextTo.search + "\""));
      return;
    }

    this.perform();
  };

  Redirect.prototype.computeTo = function computeTo(_ref) {
    var computedMatch = _ref.computedMatch,
        to = _ref.to;

    if (computedMatch) {
      if (typeof to === "string") {
        return (0, _generatePath.default)(to, computedMatch.params);
      } else {
        return _extends({}, to, {
          pathname: (0, _generatePath.default)(to.pathname, computedMatch.params)
        });
      }
    }

    return to;
  };

  Redirect.prototype.perform = function perform() {
    var history = this.context.router.history;
    var push = this.props.push;
    var to = this.computeTo(this.props);

    if (push) {
      history.push(to);
    } else {
      history.replace(to);
    }
  };

  Redirect.prototype.render = function render() {
    return null;
  };

  return Redirect;
}(_react.default.Component);

Redirect.propTypes = {
  computedMatch: _propTypes.default.object,
  // private, from <Switch>
  push: _propTypes.default.bool,
  from: _propTypes.default.string,
  to: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]).isRequired
};
Redirect.defaultProps = {
  push: false
};
Redirect.contextTypes = {
  router: _propTypes.default.shape({
    history: _propTypes.default.shape({
      push: _propTypes.default.func.isRequired,
      replace: _propTypes.default.func.isRequired
    }).isRequired,
    staticContext: _propTypes.default.object
  }).isRequired
};
var _default = Redirect;
exports.default = _default;
},{"react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","warning":"../../node_modules/warning/warning.js","invariant":"../../node_modules/invariant/browser.js","history":"../../node_modules/history/es/index.js","./generatePath":"../../node_modules/react-router/es/generatePath.js"}],"../../node_modules/react-router-dom/es/Redirect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Redirect = _interopRequireDefault(require("react-router/es/Redirect"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _Redirect.default;
exports.default = _default;
},{"react-router/es/Redirect":"../../node_modules/react-router/es/Redirect.js"}],"../../node_modules/react-router/es/StaticRouter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _warning = _interopRequireDefault(require("warning"));

var _invariant = _interopRequireDefault(require("invariant"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _history = require("history");

var _Router = _interopRequireDefault(require("./Router"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function _objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var addLeadingSlash = function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
};

var addBasename = function addBasename(basename, location) {
  if (!basename) return location;
  return _extends({}, location, {
    pathname: addLeadingSlash(basename) + location.pathname
  });
};

var stripBasename = function stripBasename(basename, location) {
  if (!basename) return location;
  var base = addLeadingSlash(basename);
  if (location.pathname.indexOf(base) !== 0) return location;
  return _extends({}, location, {
    pathname: location.pathname.substr(base.length)
  });
};

var createURL = function createURL(location) {
  return typeof location === "string" ? location : (0, _history.createPath)(location);
};

var staticHandler = function staticHandler(methodName) {
  return function () {
    (0, _invariant.default)(false, "You cannot %s with <StaticRouter>", methodName);
  };
};

var noop = function noop() {};
/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */


var StaticRouter = function (_React$Component) {
  _inherits(StaticRouter, _React$Component);

  function StaticRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, StaticRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {
      return addLeadingSlash(_this.props.basename + createURL(path));
    }, _this.handlePush = function (location) {
      var _this$props = _this.props,
          basename = _this$props.basename,
          context = _this$props.context;
      context.action = "PUSH";
      context.location = addBasename(basename, (0, _history.createLocation)(location));
      context.url = createURL(context.location);
    }, _this.handleReplace = function (location) {
      var _this$props2 = _this.props,
          basename = _this$props2.basename,
          context = _this$props2.context;
      context.action = "REPLACE";
      context.location = addBasename(basename, (0, _history.createLocation)(location));
      context.url = createURL(context.location);
    }, _this.handleListen = function () {
      return noop;
    }, _this.handleBlock = function () {
      return noop;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  StaticRouter.prototype.getChildContext = function getChildContext() {
    return {
      router: {
        staticContext: this.props.context
      }
    };
  };

  StaticRouter.prototype.componentWillMount = function componentWillMount() {
    (0, _warning.default)(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.");
  };

  StaticRouter.prototype.render = function render() {
    var _props = this.props,
        basename = _props.basename,
        context = _props.context,
        location = _props.location,
        props = _objectWithoutProperties(_props, ["basename", "context", "location"]);

    var history = {
      createHref: this.createHref,
      action: "POP",
      location: stripBasename(basename, (0, _history.createLocation)(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler("go"),
      goBack: staticHandler("goBack"),
      goForward: staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };
    return _react.default.createElement(_Router.default, _extends({}, props, {
      history: history
    }));
  };

  return StaticRouter;
}(_react.default.Component);

StaticRouter.propTypes = {
  basename: _propTypes.default.string,
  context: _propTypes.default.object.isRequired,
  location: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object])
};
StaticRouter.defaultProps = {
  basename: "",
  location: "/"
};
StaticRouter.childContextTypes = {
  router: _propTypes.default.object.isRequired
};
var _default = StaticRouter;
exports.default = _default;
},{"warning":"../../node_modules/warning/warning.js","invariant":"../../node_modules/invariant/browser.js","react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","history":"../../node_modules/history/es/index.js","./Router":"../../node_modules/react-router/es/Router.js"}],"../../node_modules/react-router-dom/es/StaticRouter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _StaticRouter = _interopRequireDefault(require("react-router/es/StaticRouter"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _StaticRouter.default;
exports.default = _default;
},{"react-router/es/StaticRouter":"../../node_modules/react-router/es/StaticRouter.js"}],"../../node_modules/react-router/es/Switch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _warning = _interopRequireDefault(require("warning"));

var _invariant = _interopRequireDefault(require("invariant"));

var _matchPath = _interopRequireDefault(require("./matchPath"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

/**
 * The public API for rendering the first <Route> that matches.
 */
var Switch = function (_React$Component) {
  _inherits(Switch, _React$Component);

  function Switch() {
    _classCallCheck(this, Switch);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Switch.prototype.componentWillMount = function componentWillMount() {
    (0, _invariant.default)(this.context.router, "You should not use <Switch> outside a <Router>");
  };

  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    (0, _warning.default)(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');
    (0, _warning.default)(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
  };

  Switch.prototype.render = function render() {
    var route = this.context.router.route;
    var children = this.props.children;
    var location = this.props.location || route.location;
    var match = void 0,
        child = void 0;

    _react.default.Children.forEach(children, function (element) {
      if (match == null && _react.default.isValidElement(element)) {
        var _element$props = element.props,
            pathProp = _element$props.path,
            exact = _element$props.exact,
            strict = _element$props.strict,
            sensitive = _element$props.sensitive,
            from = _element$props.from;
        var path = pathProp || from;
        child = element;
        match = (0, _matchPath.default)(location.pathname, {
          path: path,
          exact: exact,
          strict: strict,
          sensitive: sensitive
        }, route.match);
      }
    });

    return match ? _react.default.cloneElement(child, {
      location: location,
      computedMatch: match
    }) : null;
  };

  return Switch;
}(_react.default.Component);

Switch.contextTypes = {
  router: _propTypes.default.shape({
    route: _propTypes.default.object.isRequired
  }).isRequired
};
Switch.propTypes = {
  children: _propTypes.default.node,
  location: _propTypes.default.object
};
var _default = Switch;
exports.default = _default;
},{"react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","warning":"../../node_modules/warning/warning.js","invariant":"../../node_modules/invariant/browser.js","./matchPath":"../../node_modules/react-router/es/matchPath.js"}],"../../node_modules/react-router-dom/es/Switch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Switch = _interopRequireDefault(require("react-router/es/Switch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _Switch.default;
exports.default = _default;
},{"react-router/es/Switch":"../../node_modules/react-router/es/Switch.js"}],"../../node_modules/react-router-dom/es/generatePath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _generatePath = _interopRequireDefault(require("react-router/es/generatePath"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _generatePath.default;
exports.default = _default;
},{"react-router/es/generatePath":"../../node_modules/react-router/es/generatePath.js"}],"../../node_modules/react-router-dom/es/matchPath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _matchPath = _interopRequireDefault(require("react-router/es/matchPath"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _matchPath.default;
exports.default = _default;
},{"react-router/es/matchPath":"../../node_modules/react-router/es/matchPath.js"}],"../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":[function(require,module,exports) {
'use strict';

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try { // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
}

module.exports = hoistNonReactStatics;

},{}],"../../node_modules/react-router/es/withRouter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));

var _Route = _interopRequireDefault(require("./Route"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function _objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
}

/**
 * A public higher-order component to access the imperative API
 */
var withRouter = function withRouter(Component) {
  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
        remainingProps = _objectWithoutProperties(props, ["wrappedComponentRef"]);

    return _react.default.createElement(_Route.default, {
      children: function children(routeComponentProps) {
        return _react.default.createElement(Component, _extends({}, remainingProps, routeComponentProps, {
          ref: wrappedComponentRef
        }));
      }
    });
  };

  C.displayName = "withRouter(" + (Component.displayName || Component.name) + ")";
  C.WrappedComponent = Component;
  C.propTypes = {
    wrappedComponentRef: _propTypes.default.func
  };
  return (0, _hoistNonReactStatics.default)(C, Component);
};

var _default = withRouter;
exports.default = _default;
},{"react":"../../node_modules/react/index.js","prop-types":"../../node_modules/prop-types/index.js","hoist-non-react-statics":"../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","./Route":"../../node_modules/react-router/es/Route.js"}],"../../node_modules/react-router-dom/es/withRouter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _withRouter = _interopRequireDefault(require("react-router/es/withRouter"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Written in this round about way for babel-transform-imports
var _default = _withRouter.default;
exports.default = _default;
},{"react-router/es/withRouter":"../../node_modules/react-router/es/withRouter.js"}],"../../node_modules/react-router-dom/es/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BrowserRouter", {
  enumerable: true,
  get: function () {
    return _BrowserRouter2.default;
  }
});
Object.defineProperty(exports, "HashRouter", {
  enumerable: true,
  get: function () {
    return _HashRouter2.default;
  }
});
Object.defineProperty(exports, "Link", {
  enumerable: true,
  get: function () {
    return _Link2.default;
  }
});
Object.defineProperty(exports, "MemoryRouter", {
  enumerable: true,
  get: function () {
    return _MemoryRouter2.default;
  }
});
Object.defineProperty(exports, "NavLink", {
  enumerable: true,
  get: function () {
    return _NavLink2.default;
  }
});
Object.defineProperty(exports, "Prompt", {
  enumerable: true,
  get: function () {
    return _Prompt2.default;
  }
});
Object.defineProperty(exports, "Redirect", {
  enumerable: true,
  get: function () {
    return _Redirect2.default;
  }
});
Object.defineProperty(exports, "Route", {
  enumerable: true,
  get: function () {
    return _Route2.default;
  }
});
Object.defineProperty(exports, "Router", {
  enumerable: true,
  get: function () {
    return _Router2.default;
  }
});
Object.defineProperty(exports, "StaticRouter", {
  enumerable: true,
  get: function () {
    return _StaticRouter2.default;
  }
});
Object.defineProperty(exports, "Switch", {
  enumerable: true,
  get: function () {
    return _Switch2.default;
  }
});
Object.defineProperty(exports, "generatePath", {
  enumerable: true,
  get: function () {
    return _generatePath2.default;
  }
});
Object.defineProperty(exports, "matchPath", {
  enumerable: true,
  get: function () {
    return _matchPath2.default;
  }
});
Object.defineProperty(exports, "withRouter", {
  enumerable: true,
  get: function () {
    return _withRouter2.default;
  }
});

var _BrowserRouter2 = _interopRequireDefault(require("./BrowserRouter"));

var _HashRouter2 = _interopRequireDefault(require("./HashRouter"));

var _Link2 = _interopRequireDefault(require("./Link"));

var _MemoryRouter2 = _interopRequireDefault(require("./MemoryRouter"));

var _NavLink2 = _interopRequireDefault(require("./NavLink"));

var _Prompt2 = _interopRequireDefault(require("./Prompt"));

var _Redirect2 = _interopRequireDefault(require("./Redirect"));

var _Route2 = _interopRequireDefault(require("./Route"));

var _Router2 = _interopRequireDefault(require("./Router"));

var _StaticRouter2 = _interopRequireDefault(require("./StaticRouter"));

var _Switch2 = _interopRequireDefault(require("./Switch"));

var _generatePath2 = _interopRequireDefault(require("./generatePath"));

var _matchPath2 = _interopRequireDefault(require("./matchPath"));

var _withRouter2 = _interopRequireDefault(require("./withRouter"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./BrowserRouter":"../../node_modules/react-router-dom/es/BrowserRouter.js","./HashRouter":"../../node_modules/react-router-dom/es/HashRouter.js","./Link":"../../node_modules/react-router-dom/es/Link.js","./MemoryRouter":"../../node_modules/react-router-dom/es/MemoryRouter.js","./NavLink":"../../node_modules/react-router-dom/es/NavLink.js","./Prompt":"../../node_modules/react-router-dom/es/Prompt.js","./Redirect":"../../node_modules/react-router-dom/es/Redirect.js","./Route":"../../node_modules/react-router-dom/es/Route.js","./Router":"../../node_modules/react-router-dom/es/Router.js","./StaticRouter":"../../node_modules/react-router-dom/es/StaticRouter.js","./Switch":"../../node_modules/react-router-dom/es/Switch.js","./generatePath":"../../node_modules/react-router-dom/es/generatePath.js","./matchPath":"../../node_modules/react-router-dom/es/matchPath.js","./withRouter":"../../node_modules/react-router-dom/es/withRouter.js"}],"../../node_modules/core-js/library/modules/_global.js":[function(require,module,exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

},{}],"../../node_modules/core-js/library/modules/_core.js":[function(require,module,exports) {
var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}],"../../node_modules/core-js/library/modules/_a-function.js":[function(require,module,exports) {
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

},{}],"../../node_modules/core-js/library/modules/_ctx.js":[function(require,module,exports) {
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

},{"./_a-function":"../../node_modules/core-js/library/modules/_a-function.js"}],"../../node_modules/core-js/library/modules/_is-object.js":[function(require,module,exports) {
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

},{}],"../../node_modules/core-js/library/modules/_an-object.js":[function(require,module,exports) {
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

},{"./_is-object":"../../node_modules/core-js/library/modules/_is-object.js"}],"../../node_modules/core-js/library/modules/_fails.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

},{}],"../../node_modules/core-js/library/modules/_descriptors.js":[function(require,module,exports) {
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_fails":"../../node_modules/core-js/library/modules/_fails.js"}],"../../node_modules/core-js/library/modules/_dom-create.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

},{"./_is-object":"../../node_modules/core-js/library/modules/_is-object.js","./_global":"../../node_modules/core-js/library/modules/_global.js"}],"../../node_modules/core-js/library/modules/_ie8-dom-define.js":[function(require,module,exports) {
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_descriptors":"../../node_modules/core-js/library/modules/_descriptors.js","./_fails":"../../node_modules/core-js/library/modules/_fails.js","./_dom-create":"../../node_modules/core-js/library/modules/_dom-create.js"}],"../../node_modules/core-js/library/modules/_to-primitive.js":[function(require,module,exports) {
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

},{"./_is-object":"../../node_modules/core-js/library/modules/_is-object.js"}],"../../node_modules/core-js/library/modules/_object-dp.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

},{"./_an-object":"../../node_modules/core-js/library/modules/_an-object.js","./_ie8-dom-define":"../../node_modules/core-js/library/modules/_ie8-dom-define.js","./_to-primitive":"../../node_modules/core-js/library/modules/_to-primitive.js","./_descriptors":"../../node_modules/core-js/library/modules/_descriptors.js"}],"../../node_modules/core-js/library/modules/_property-desc.js":[function(require,module,exports) {
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

},{}],"../../node_modules/core-js/library/modules/_hide.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

},{"./_object-dp":"../../node_modules/core-js/library/modules/_object-dp.js","./_property-desc":"../../node_modules/core-js/library/modules/_property-desc.js","./_descriptors":"../../node_modules/core-js/library/modules/_descriptors.js"}],"../../node_modules/core-js/library/modules/_has.js":[function(require,module,exports) {
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

},{}],"../../node_modules/core-js/library/modules/_export.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var ctx = require('./_ctx');
var hide = require('./_hide');
var has = require('./_has');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

},{"./_global":"../../node_modules/core-js/library/modules/_global.js","./_core":"../../node_modules/core-js/library/modules/_core.js","./_ctx":"../../node_modules/core-js/library/modules/_ctx.js","./_hide":"../../node_modules/core-js/library/modules/_hide.js","./_has":"../../node_modules/core-js/library/modules/_has.js"}],"../../node_modules/core-js/library/modules/_cof.js":[function(require,module,exports) {
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

},{}],"../../node_modules/core-js/library/modules/_iobject.js":[function(require,module,exports) {
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

},{"./_cof":"../../node_modules/core-js/library/modules/_cof.js"}],"../../node_modules/core-js/library/modules/_defined.js":[function(require,module,exports) {
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

},{}],"../../node_modules/core-js/library/modules/_to-iobject.js":[function(require,module,exports) {
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

},{"./_iobject":"../../node_modules/core-js/library/modules/_iobject.js","./_defined":"../../node_modules/core-js/library/modules/_defined.js"}],"../../node_modules/core-js/library/modules/_to-integer.js":[function(require,module,exports) {
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

},{}],"../../node_modules/core-js/library/modules/_to-length.js":[function(require,module,exports) {
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

},{"./_to-integer":"../../node_modules/core-js/library/modules/_to-integer.js"}],"../../node_modules/core-js/library/modules/_to-absolute-index.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

},{"./_to-integer":"../../node_modules/core-js/library/modules/_to-integer.js"}],"../../node_modules/core-js/library/modules/_array-includes.js":[function(require,module,exports) {
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

},{"./_to-iobject":"../../node_modules/core-js/library/modules/_to-iobject.js","./_to-length":"../../node_modules/core-js/library/modules/_to-length.js","./_to-absolute-index":"../../node_modules/core-js/library/modules/_to-absolute-index.js"}],"../../node_modules/core-js/library/modules/_library.js":[function(require,module,exports) {
module.exports = true;

},{}],"../../node_modules/core-js/library/modules/_shared.js":[function(require,module,exports) {

var core = require('./_core');
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: require('./_library') ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});

},{"./_core":"../../node_modules/core-js/library/modules/_core.js","./_global":"../../node_modules/core-js/library/modules/_global.js","./_library":"../../node_modules/core-js/library/modules/_library.js"}],"../../node_modules/core-js/library/modules/_uid.js":[function(require,module,exports) {
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

},{}],"../../node_modules/core-js/library/modules/_shared-key.js":[function(require,module,exports) {
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

},{"./_shared":"../../node_modules/core-js/library/modules/_shared.js","./_uid":"../../node_modules/core-js/library/modules/_uid.js"}],"../../node_modules/core-js/library/modules/_object-keys-internal.js":[function(require,module,exports) {
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

},{"./_has":"../../node_modules/core-js/library/modules/_has.js","./_to-iobject":"../../node_modules/core-js/library/modules/_to-iobject.js","./_array-includes":"../../node_modules/core-js/library/modules/_array-includes.js","./_shared-key":"../../node_modules/core-js/library/modules/_shared-key.js"}],"../../node_modules/core-js/library/modules/_enum-bug-keys.js":[function(require,module,exports) {
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

},{}],"../../node_modules/core-js/library/modules/_object-keys.js":[function(require,module,exports) {
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

},{"./_object-keys-internal":"../../node_modules/core-js/library/modules/_object-keys-internal.js","./_enum-bug-keys":"../../node_modules/core-js/library/modules/_enum-bug-keys.js"}],"../../node_modules/core-js/library/modules/_object-gops.js":[function(require,module,exports) {
exports.f = Object.getOwnPropertySymbols;

},{}],"../../node_modules/core-js/library/modules/_object-pie.js":[function(require,module,exports) {
exports.f = {}.propertyIsEnumerable;

},{}],"../../node_modules/core-js/library/modules/_to-object.js":[function(require,module,exports) {
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

},{"./_defined":"../../node_modules/core-js/library/modules/_defined.js"}],"../../node_modules/core-js/library/modules/_object-assign.js":[function(require,module,exports) {
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || require('./_fails')(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;

},{"./_object-keys":"../../node_modules/core-js/library/modules/_object-keys.js","./_object-gops":"../../node_modules/core-js/library/modules/_object-gops.js","./_object-pie":"../../node_modules/core-js/library/modules/_object-pie.js","./_to-object":"../../node_modules/core-js/library/modules/_to-object.js","./_iobject":"../../node_modules/core-js/library/modules/_iobject.js","./_fails":"../../node_modules/core-js/library/modules/_fails.js"}],"../../node_modules/core-js/library/modules/es6.object.assign.js":[function(require,module,exports) {
// 19.1.3.1 Object.assign(target, source)
var $export = require('./_export');

$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });

},{"./_export":"../../node_modules/core-js/library/modules/_export.js","./_object-assign":"../../node_modules/core-js/library/modules/_object-assign.js"}],"../../node_modules/core-js/library/fn/object/assign.js":[function(require,module,exports) {
require('../../modules/es6.object.assign');
module.exports = require('../../modules/_core').Object.assign;

},{"../../modules/es6.object.assign":"../../node_modules/core-js/library/modules/es6.object.assign.js","../../modules/_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/babel-runtime/core-js/object/assign.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/object/assign"), __esModule: true };
},{"core-js/library/fn/object/assign":"../../node_modules/core-js/library/fn/object/assign.js"}],"../../node_modules/babel-runtime/helpers/extends.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _assign = require("../core-js/object/assign");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};
},{"../core-js/object/assign":"../../node_modules/babel-runtime/core-js/object/assign.js"}],"../../node_modules/core-js/library/modules/_add-to-unscopables.js":[function(require,module,exports) {
module.exports = function () { /* empty */ };

},{}],"../../node_modules/core-js/library/modules/_iter-step.js":[function(require,module,exports) {
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

},{}],"../../node_modules/core-js/library/modules/_iterators.js":[function(require,module,exports) {
module.exports = {};

},{}],"../../node_modules/core-js/library/modules/_redefine.js":[function(require,module,exports) {
module.exports = require('./_hide');

},{"./_hide":"../../node_modules/core-js/library/modules/_hide.js"}],"../../node_modules/core-js/library/modules/_object-dps.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

},{"./_object-dp":"../../node_modules/core-js/library/modules/_object-dp.js","./_an-object":"../../node_modules/core-js/library/modules/_an-object.js","./_object-keys":"../../node_modules/core-js/library/modules/_object-keys.js","./_descriptors":"../../node_modules/core-js/library/modules/_descriptors.js"}],"../../node_modules/core-js/library/modules/_html.js":[function(require,module,exports) {
var document = require('./_global').document;
module.exports = document && document.documentElement;

},{"./_global":"../../node_modules/core-js/library/modules/_global.js"}],"../../node_modules/core-js/library/modules/_object-create.js":[function(require,module,exports) {
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":"../../node_modules/core-js/library/modules/_an-object.js","./_object-dps":"../../node_modules/core-js/library/modules/_object-dps.js","./_enum-bug-keys":"../../node_modules/core-js/library/modules/_enum-bug-keys.js","./_shared-key":"../../node_modules/core-js/library/modules/_shared-key.js","./_dom-create":"../../node_modules/core-js/library/modules/_dom-create.js","./_html":"../../node_modules/core-js/library/modules/_html.js"}],"../../node_modules/core-js/library/modules/_wks.js":[function(require,module,exports) {
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

},{"./_shared":"../../node_modules/core-js/library/modules/_shared.js","./_uid":"../../node_modules/core-js/library/modules/_uid.js","./_global":"../../node_modules/core-js/library/modules/_global.js"}],"../../node_modules/core-js/library/modules/_set-to-string-tag.js":[function(require,module,exports) {
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

},{"./_object-dp":"../../node_modules/core-js/library/modules/_object-dp.js","./_has":"../../node_modules/core-js/library/modules/_has.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/modules/_iter-create.js":[function(require,module,exports) {
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

},{"./_object-create":"../../node_modules/core-js/library/modules/_object-create.js","./_property-desc":"../../node_modules/core-js/library/modules/_property-desc.js","./_set-to-string-tag":"../../node_modules/core-js/library/modules/_set-to-string-tag.js","./_hide":"../../node_modules/core-js/library/modules/_hide.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/modules/_object-gpo.js":[function(require,module,exports) {
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

},{"./_has":"../../node_modules/core-js/library/modules/_has.js","./_to-object":"../../node_modules/core-js/library/modules/_to-object.js","./_shared-key":"../../node_modules/core-js/library/modules/_shared-key.js"}],"../../node_modules/core-js/library/modules/_iter-define.js":[function(require,module,exports) {
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

},{"./_library":"../../node_modules/core-js/library/modules/_library.js","./_export":"../../node_modules/core-js/library/modules/_export.js","./_redefine":"../../node_modules/core-js/library/modules/_redefine.js","./_hide":"../../node_modules/core-js/library/modules/_hide.js","./_iterators":"../../node_modules/core-js/library/modules/_iterators.js","./_iter-create":"../../node_modules/core-js/library/modules/_iter-create.js","./_set-to-string-tag":"../../node_modules/core-js/library/modules/_set-to-string-tag.js","./_object-gpo":"../../node_modules/core-js/library/modules/_object-gpo.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/modules/es6.array.iterator.js":[function(require,module,exports) {
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

},{"./_add-to-unscopables":"../../node_modules/core-js/library/modules/_add-to-unscopables.js","./_iter-step":"../../node_modules/core-js/library/modules/_iter-step.js","./_iterators":"../../node_modules/core-js/library/modules/_iterators.js","./_to-iobject":"../../node_modules/core-js/library/modules/_to-iobject.js","./_iter-define":"../../node_modules/core-js/library/modules/_iter-define.js"}],"../../node_modules/core-js/library/modules/web.dom.iterable.js":[function(require,module,exports) {

require('./es6.array.iterator');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var TO_STRING_TAG = require('./_wks')('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

},{"./es6.array.iterator":"../../node_modules/core-js/library/modules/es6.array.iterator.js","./_global":"../../node_modules/core-js/library/modules/_global.js","./_hide":"../../node_modules/core-js/library/modules/_hide.js","./_iterators":"../../node_modules/core-js/library/modules/_iterators.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/modules/_string-at.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

},{"./_to-integer":"../../node_modules/core-js/library/modules/_to-integer.js","./_defined":"../../node_modules/core-js/library/modules/_defined.js"}],"../../node_modules/core-js/library/modules/es6.string.iterator.js":[function(require,module,exports) {
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

},{"./_string-at":"../../node_modules/core-js/library/modules/_string-at.js","./_iter-define":"../../node_modules/core-js/library/modules/_iter-define.js"}],"../../node_modules/core-js/library/modules/_classof.js":[function(require,module,exports) {
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

},{"./_cof":"../../node_modules/core-js/library/modules/_cof.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/modules/core.is-iterable.js":[function(require,module,exports) {
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};

},{"./_classof":"../../node_modules/core-js/library/modules/_classof.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js","./_iterators":"../../node_modules/core-js/library/modules/_iterators.js","./_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/core-js/library/fn/is-iterable.js":[function(require,module,exports) {
require('../modules/web.dom.iterable');
require('../modules/es6.string.iterator');
module.exports = require('../modules/core.is-iterable');

},{"../modules/web.dom.iterable":"../../node_modules/core-js/library/modules/web.dom.iterable.js","../modules/es6.string.iterator":"../../node_modules/core-js/library/modules/es6.string.iterator.js","../modules/core.is-iterable":"../../node_modules/core-js/library/modules/core.is-iterable.js"}],"../../node_modules/babel-runtime/core-js/is-iterable.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/is-iterable"), __esModule: true };
},{"core-js/library/fn/is-iterable":"../../node_modules/core-js/library/fn/is-iterable.js"}],"../../node_modules/core-js/library/modules/core.get-iterator-method.js":[function(require,module,exports) {
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

},{"./_classof":"../../node_modules/core-js/library/modules/_classof.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js","./_iterators":"../../node_modules/core-js/library/modules/_iterators.js","./_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/core-js/library/modules/core.get-iterator.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var get = require('./core.get-iterator-method');
module.exports = require('./_core').getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};

},{"./_an-object":"../../node_modules/core-js/library/modules/_an-object.js","./core.get-iterator-method":"../../node_modules/core-js/library/modules/core.get-iterator-method.js","./_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/core-js/library/fn/get-iterator.js":[function(require,module,exports) {
require('../modules/web.dom.iterable');
require('../modules/es6.string.iterator');
module.exports = require('../modules/core.get-iterator');

},{"../modules/web.dom.iterable":"../../node_modules/core-js/library/modules/web.dom.iterable.js","../modules/es6.string.iterator":"../../node_modules/core-js/library/modules/es6.string.iterator.js","../modules/core.get-iterator":"../../node_modules/core-js/library/modules/core.get-iterator.js"}],"../../node_modules/babel-runtime/core-js/get-iterator.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/get-iterator"), __esModule: true };
},{"core-js/library/fn/get-iterator":"../../node_modules/core-js/library/fn/get-iterator.js"}],"../../node_modules/babel-runtime/helpers/slicedToArray.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _isIterable2 = require("../core-js/is-iterable");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = require("../core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
},{"../core-js/is-iterable":"../../node_modules/babel-runtime/core-js/is-iterable.js","../core-js/get-iterator":"../../node_modules/babel-runtime/core-js/get-iterator.js"}],"../../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js":[function(require,module,exports) {
var global = arguments[3];
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() { return this })() || Function("return this")()
);

},{}],"../../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() { return this })() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = require("./runtime");

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}

},{"./runtime":"../../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js"}],"../../node_modules/babel-runtime/regenerator/index.js":[function(require,module,exports) {
module.exports = require("regenerator-runtime");

},{"regenerator-runtime":"../../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js"}],"../../node_modules/core-js/library/modules/es6.object.to-string.js":[function(require,module,exports) {

},{}],"../../node_modules/core-js/library/modules/_an-instance.js":[function(require,module,exports) {
module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

},{}],"../../node_modules/core-js/library/modules/_iter-call.js":[function(require,module,exports) {
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

},{"./_an-object":"../../node_modules/core-js/library/modules/_an-object.js"}],"../../node_modules/core-js/library/modules/_is-array-iter.js":[function(require,module,exports) {
// check on default Array iterator
var Iterators = require('./_iterators');
var ITERATOR = require('./_wks')('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

},{"./_iterators":"../../node_modules/core-js/library/modules/_iterators.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/modules/_for-of.js":[function(require,module,exports) {
var ctx = require('./_ctx');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var anObject = require('./_an-object');
var toLength = require('./_to-length');
var getIterFn = require('./core.get-iterator-method');
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;

},{"./_ctx":"../../node_modules/core-js/library/modules/_ctx.js","./_iter-call":"../../node_modules/core-js/library/modules/_iter-call.js","./_is-array-iter":"../../node_modules/core-js/library/modules/_is-array-iter.js","./_an-object":"../../node_modules/core-js/library/modules/_an-object.js","./_to-length":"../../node_modules/core-js/library/modules/_to-length.js","./core.get-iterator-method":"../../node_modules/core-js/library/modules/core.get-iterator-method.js"}],"../../node_modules/core-js/library/modules/_species-constructor.js":[function(require,module,exports) {
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var SPECIES = require('./_wks')('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

},{"./_an-object":"../../node_modules/core-js/library/modules/_an-object.js","./_a-function":"../../node_modules/core-js/library/modules/_a-function.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/modules/_invoke.js":[function(require,module,exports) {
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

},{}],"../../node_modules/core-js/library/modules/_task.js":[function(require,module,exports) {


var ctx = require('./_ctx');
var invoke = require('./_invoke');
var html = require('./_html');
var cel = require('./_dom-create');
var global = require('./_global');
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (require('./_cof')(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};

},{"./_ctx":"../../node_modules/core-js/library/modules/_ctx.js","./_invoke":"../../node_modules/core-js/library/modules/_invoke.js","./_html":"../../node_modules/core-js/library/modules/_html.js","./_dom-create":"../../node_modules/core-js/library/modules/_dom-create.js","./_global":"../../node_modules/core-js/library/modules/_global.js","./_cof":"../../node_modules/core-js/library/modules/_cof.js"}],"../../node_modules/core-js/library/modules/_microtask.js":[function(require,module,exports) {


var global = require('./_global');
var macrotask = require('./_task').set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = require('./_cof')(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

},{"./_global":"../../node_modules/core-js/library/modules/_global.js","./_task":"../../node_modules/core-js/library/modules/_task.js","./_cof":"../../node_modules/core-js/library/modules/_cof.js"}],"../../node_modules/core-js/library/modules/_new-promise-capability.js":[function(require,module,exports) {
'use strict';
// 25.4.1.5 NewPromiseCapability(C)
var aFunction = require('./_a-function');

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};

},{"./_a-function":"../../node_modules/core-js/library/modules/_a-function.js"}],"../../node_modules/core-js/library/modules/_perform.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

},{}],"../../node_modules/core-js/library/modules/_user-agent.js":[function(require,module,exports) {

var global = require('./_global');
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';

},{"./_global":"../../node_modules/core-js/library/modules/_global.js"}],"../../node_modules/core-js/library/modules/_promise-resolve.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var newPromiseCapability = require('./_new-promise-capability');

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

},{"./_an-object":"../../node_modules/core-js/library/modules/_an-object.js","./_is-object":"../../node_modules/core-js/library/modules/_is-object.js","./_new-promise-capability":"../../node_modules/core-js/library/modules/_new-promise-capability.js"}],"../../node_modules/core-js/library/modules/_redefine-all.js":[function(require,module,exports) {
var hide = require('./_hide');
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};

},{"./_hide":"../../node_modules/core-js/library/modules/_hide.js"}],"../../node_modules/core-js/library/modules/_set-species.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var core = require('./_core');
var dP = require('./_object-dp');
var DESCRIPTORS = require('./_descriptors');
var SPECIES = require('./_wks')('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

},{"./_global":"../../node_modules/core-js/library/modules/_global.js","./_core":"../../node_modules/core-js/library/modules/_core.js","./_object-dp":"../../node_modules/core-js/library/modules/_object-dp.js","./_descriptors":"../../node_modules/core-js/library/modules/_descriptors.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/modules/_iter-detect.js":[function(require,module,exports) {
var ITERATOR = require('./_wks')('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

},{"./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/modules/es6.promise.js":[function(require,module,exports) {


'use strict';
var LIBRARY = require('./_library');
var global = require('./_global');
var ctx = require('./_ctx');
var classof = require('./_classof');
var $export = require('./_export');
var isObject = require('./_is-object');
var aFunction = require('./_a-function');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var speciesConstructor = require('./_species-constructor');
var task = require('./_task').set;
var microtask = require('./_microtask')();
var newPromiseCapabilityModule = require('./_new-promise-capability');
var perform = require('./_perform');
var userAgent = require('./_user-agent');
var promiseResolve = require('./_promise-resolve');
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
require('./_set-to-string-tag')($Promise, PROMISE);
require('./_set-species')(PROMISE);
Wrapper = require('./_core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

},{"./_library":"../../node_modules/core-js/library/modules/_library.js","./_global":"../../node_modules/core-js/library/modules/_global.js","./_ctx":"../../node_modules/core-js/library/modules/_ctx.js","./_classof":"../../node_modules/core-js/library/modules/_classof.js","./_export":"../../node_modules/core-js/library/modules/_export.js","./_is-object":"../../node_modules/core-js/library/modules/_is-object.js","./_a-function":"../../node_modules/core-js/library/modules/_a-function.js","./_an-instance":"../../node_modules/core-js/library/modules/_an-instance.js","./_for-of":"../../node_modules/core-js/library/modules/_for-of.js","./_species-constructor":"../../node_modules/core-js/library/modules/_species-constructor.js","./_task":"../../node_modules/core-js/library/modules/_task.js","./_microtask":"../../node_modules/core-js/library/modules/_microtask.js","./_new-promise-capability":"../../node_modules/core-js/library/modules/_new-promise-capability.js","./_perform":"../../node_modules/core-js/library/modules/_perform.js","./_user-agent":"../../node_modules/core-js/library/modules/_user-agent.js","./_promise-resolve":"../../node_modules/core-js/library/modules/_promise-resolve.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js","./_redefine-all":"../../node_modules/core-js/library/modules/_redefine-all.js","./_set-to-string-tag":"../../node_modules/core-js/library/modules/_set-to-string-tag.js","./_set-species":"../../node_modules/core-js/library/modules/_set-species.js","./_core":"../../node_modules/core-js/library/modules/_core.js","./_iter-detect":"../../node_modules/core-js/library/modules/_iter-detect.js"}],"../../node_modules/core-js/library/modules/es7.promise.finally.js":[function(require,module,exports) {

// https://github.com/tc39/proposal-promise-finally
'use strict';
var $export = require('./_export');
var core = require('./_core');
var global = require('./_global');
var speciesConstructor = require('./_species-constructor');
var promiseResolve = require('./_promise-resolve');

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });

},{"./_export":"../../node_modules/core-js/library/modules/_export.js","./_core":"../../node_modules/core-js/library/modules/_core.js","./_global":"../../node_modules/core-js/library/modules/_global.js","./_species-constructor":"../../node_modules/core-js/library/modules/_species-constructor.js","./_promise-resolve":"../../node_modules/core-js/library/modules/_promise-resolve.js"}],"../../node_modules/core-js/library/modules/es7.promise.try.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/proposal-promise-try
var $export = require('./_export');
var newPromiseCapability = require('./_new-promise-capability');
var perform = require('./_perform');

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });

},{"./_export":"../../node_modules/core-js/library/modules/_export.js","./_new-promise-capability":"../../node_modules/core-js/library/modules/_new-promise-capability.js","./_perform":"../../node_modules/core-js/library/modules/_perform.js"}],"../../node_modules/core-js/library/fn/promise.js":[function(require,module,exports) {
require('../modules/es6.object.to-string');
require('../modules/es6.string.iterator');
require('../modules/web.dom.iterable');
require('../modules/es6.promise');
require('../modules/es7.promise.finally');
require('../modules/es7.promise.try');
module.exports = require('../modules/_core').Promise;

},{"../modules/es6.object.to-string":"../../node_modules/core-js/library/modules/es6.object.to-string.js","../modules/es6.string.iterator":"../../node_modules/core-js/library/modules/es6.string.iterator.js","../modules/web.dom.iterable":"../../node_modules/core-js/library/modules/web.dom.iterable.js","../modules/es6.promise":"../../node_modules/core-js/library/modules/es6.promise.js","../modules/es7.promise.finally":"../../node_modules/core-js/library/modules/es7.promise.finally.js","../modules/es7.promise.try":"../../node_modules/core-js/library/modules/es7.promise.try.js","../modules/_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/babel-runtime/core-js/promise.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/promise"), __esModule: true };
},{"core-js/library/fn/promise":"../../node_modules/core-js/library/fn/promise.js"}],"../../node_modules/babel-runtime/helpers/asyncToGenerator.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _promise = require("../core-js/promise");

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new _promise2.default(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return _promise2.default.resolve(value).then(function (value) {
            step("next", value);
          }, function (err) {
            step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};
},{"../core-js/promise":"../../node_modules/babel-runtime/core-js/promise.js"}],"../../node_modules/babel-runtime/helpers/classCallCheck.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
},{}],"../../node_modules/core-js/library/modules/es6.object.define-property.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });

},{"./_export":"../../node_modules/core-js/library/modules/_export.js","./_descriptors":"../../node_modules/core-js/library/modules/_descriptors.js","./_object-dp":"../../node_modules/core-js/library/modules/_object-dp.js"}],"../../node_modules/core-js/library/fn/object/define-property.js":[function(require,module,exports) {
require('../../modules/es6.object.define-property');
var $Object = require('../../modules/_core').Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};

},{"../../modules/es6.object.define-property":"../../node_modules/core-js/library/modules/es6.object.define-property.js","../../modules/_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/babel-runtime/core-js/object/define-property.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/object/define-property"), __esModule: true };
},{"core-js/library/fn/object/define-property":"../../node_modules/core-js/library/fn/object/define-property.js"}],"../../node_modules/babel-runtime/helpers/createClass.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _defineProperty = require("../core-js/object/define-property");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
},{"../core-js/object/define-property":"../../node_modules/babel-runtime/core-js/object/define-property.js"}],"../../node_modules/ethers/package.json":[function(require,module,exports) {
module.exports = {
  "name": "ethers",
  "version": "3.0.29",
  "description": "Ethereum wallet library.",
  "main": "index.js",
  "scripts": {
    "eslint": "eslint index.js contracts/*.js providers/*.js utils/*.js wallet/*.js",
    "test": "if [ \"$RUN_PHANTOMJS\" = \"1\" ]; then npm run-script test-phantomjs; else npm run-script test-node; fi",
    "test-node": "./node_modules/.bin/mocha tests/test-*.js",
    "test-phantomjs": "./node_modules/.bin/grunt dist && ./node_modules/.bin/grunt --gruntfile Gruntfile-test.js dist && phantomjs --web-security=false ./node_modules/mocha-phantomjs-core/mocha-phantomjs-core.js ./tests/test.html",
    "version": "grunt dist"
  },
  "dependencies": {
    "aes-js": "3.0.0",
    "bn.js": "^4.4.0",
    "elliptic": "6.3.3",
    "hash.js": "^1.0.0",
    "inherits": "2.0.1",
    "js-sha3": "0.5.7",
    "scrypt-js": "2.0.3",
    "setimmediate": "1.0.4",
    "uuid": "2.0.1",
    "xmlhttprequest": "1.8.0"
  },
  "devDependencies": {
    "browserify-zlib": "^0.2.0",
    "eslint": "^5.0.1",
    "eslint-plugin-promise": "^3.8.0",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-cli": "1.2.0",
    "grunt-contrib-uglify": "^1.0.1",
    "mocha": "^5.2.0",
    "mocha-phantomjs-core": "2.1.2",
    "solc": "0.4.20",
    "web3": "0.20.2"
  },
  "browser": {
    "fs": "./tests/browser-fs.js",
    "zlib": "browserify-zlib",
    "./utils/base64.js": "./utils/browser-base64.js",
    "./utils/random-bytes.js": "./utils/browser-random-bytes.js",
    "./providers/ipc-provider.js": "./utils/empty.js",
    "xmlhttprequest": "./providers/browser-xmlhttprequest.js"
  },
  "keywords": [
    "ethereum",
    "wallet"
  ],
  "author": "Richard Moore <me@ricmoo.com>",
  "repository": {
    "type": "git",
    "url": "git://github.com/ethers-io/ethers-wallet.git"
  },
  "license": "MIT"
}
;
},{}],"../../node_modules/ethers/utils/properties.js":[function(require,module,exports) {
'use strict';

function defineProperty(object, name, value) {
    Object.defineProperty(object, name, {
        enumerable: true,
        value: value,
        writable: false,
    });
}

function defineFrozen(object, name, value) {
    var frozen = JSON.stringify(value);
    Object.defineProperty(object, name, {
        enumerable: true,
        get: function() { return JSON.parse(frozen); }
    });
}

module.exports = {
    defineFrozen: defineFrozen,
    defineProperty: defineProperty,
};

},{}],"../../node_modules/ethers/utils/errors.js":[function(require,module,exports) {
'use strict';

var defineProperty = require('./properties').defineProperty;

var codes = { };

[
    // Unknown Error
    'UNKNOWN_ERROR',

    // Not implemented
    'NOT_IMPLEMENTED',

    // Missing new operator to an object
    //  - name: The name of the class
    'MISSING_NEW',


    // Call exception
    'CALL_EXCEPTION',


    // Response from a server was invalid
    //   - response: The body of the response
    //'BAD_RESPONSE',


    // Invalid argument (e.g. type) to a function:
    //   - arg: The argument name that was invalid
    //   - value: The value of the argument
    //   - type: The type of the argument
    //   - expected: What was expected
    'INVALID_ARGUMENT',

    // Missing argument to a function:
    //   - arg: The argument name that is required
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    'MISSING_ARGUMENT',

    // Too many arguments
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    'UNEXPECTED_ARGUMENT',


    // Unsupported operation
    //   - operation
    'UNSUPPORTED_OPERATION',


].forEach(function(code) {
    defineProperty(codes, code, code);
});


defineProperty(codes, 'throwError', function(message, code, params) {
    if (!code) { code = codes.UNKNOWN_ERROR; }
    if (!params) { params = {}; }

    var messageDetails = [];
    Object.keys(params).forEach(function(key) {
        try {
            messageDetails.push(key + '=' + JSON.stringify(params[key]));
        } catch (error) {
            messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));
        }
    });
    var reason = message;
    if (messageDetails.length) {
        message += ' (' + messageDetails.join(', ') + ')';
    }

    var error = new Error(message);
    error.reason = reason;
    error.code = code

    Object.keys(params).forEach(function(key) {
        error[key] = params[key];
    });

    throw error;
});

defineProperty(codes, 'checkNew', function(self, kind) {
    if (!(self instanceof kind)) {
        codes.throwError('missing new', codes.MISSING_NEW, { name: kind.name });
    }
});

module.exports = codes;

},{"./properties":"../../node_modules/ethers/utils/properties.js"}],"../../node_modules/ethers/utils/convert.js":[function(require,module,exports) {
/**
 *  Conversion Utilities
 *
 */

var defineProperty = require('./properties.js').defineProperty;

var errors = require('./errors');

function addSlice(array) {
    if (array.slice) { return array; }

    array.slice = function() {
        var args = Array.prototype.slice.call(arguments);
        return new Uint8Array(Array.prototype.slice.apply(array, args));
    }

    return array;
}

function isArrayish(value) {
    if (!value || parseInt(value.length) != value.length || typeof(value) === 'string') {
        return false;
    }

    for (var i = 0; i < value.length; i++) {
        var v = value[i];
        if (v < 0 || v >= 256 || parseInt(v) != v) {
            return false;
        }
    }

    return true;
}

function arrayify(value) {
    if (value == null) {
        errors.throwError('cannot convert null value to array', errors.INVALID_ARGUMENT, { arg: 'value', value: value });
    }

    if (value && value.toHexString) {
        value = value.toHexString();
    }

    if (isHexString(value)) {
        value = value.substring(2);
        if (value.length % 2) { value = '0' + value; }

        var result = [];
        for (var i = 0; i < value.length; i += 2) {
            result.push(parseInt(value.substr(i, 2), 16));
        }

        return addSlice(new Uint8Array(result));

    } else if (typeof(value) === 'string') {
        if (value.match(/^[0-9a-fA-F]*$/)) {
             errors.throwError('hex string must have 0x prefix', errors.INVALID_ARGUMENT, { arg: 'value', value: value });
        }
        errors.throwError('invalid hexidecimal string', errors.INVALID_ARGUMENT, { arg: 'value', value: value });
    }

    if (isArrayish(value)) {
        return addSlice(new Uint8Array(value));
    }

    errors.throwError('invalid arrayify value', { arg: 'value', value: value, type: typeof(value) });
}

function concat(objects) {
    var arrays = [];
    var length = 0;
    for (var i = 0; i < objects.length; i++) {
        var object = arrayify(objects[i])
        arrays.push(object);
        length += object.length;
    }

    var result = new Uint8Array(length);
    var offset = 0;
    for (var i = 0; i < arrays.length; i++) {
        result.set(arrays[i], offset);
        offset += arrays[i].length;
    }

    return addSlice(result);
}
function stripZeros(value) {
    value = arrayify(value);

    if (value.length === 0) { return value; }

    // Find the first non-zero entry
    var start = 0;
    while (value[start] === 0) { start++ }

    // If we started with zeros, strip them
    if (start) {
        value = value.slice(start);
    }

    return value;
}

function padZeros(value, length) {
    value = arrayify(value);

    if (length < value.length) { throw new Error('cannot pad'); }

    var result = new Uint8Array(length);
    result.set(value, length - value.length);
    return addSlice(result);
}


function isHexString(value, length) {
    if (typeof(value) !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {
        return false
    }
    if (length && value.length !== 2 + 2 * length) { return false; }
    return true;
}

var HexCharacters = '0123456789abcdef';

function hexlify(value) {

    if (value && value.toHexString) {
        return value.toHexString();
    }

    if (typeof(value) === 'number') {
        if (value < 0) {
            errors.throwError('cannot hexlify negative value', errors.INVALID_ARG, { arg: 'value', value: value });
        }

        var hex = '';
        while (value) {
            hex = HexCharacters[value & 0x0f] + hex;
            value = parseInt(value / 16);
        }

        if (hex.length) {
            if (hex.length % 2) { hex = '0' + hex; }
            return '0x' + hex;
        }

        return '0x00';
    }

    if (isHexString(value)) {
        if (value.length % 2) {
            value = '0x0' + value.substring(2);
        }
        return value;
    }

    if (isArrayish(value)) {
        var result = [];
        for (var i = 0; i < value.length; i++) {
             var v = value[i];
             result.push(HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f]);
        }
        return '0x' + result.join('');
    }

    errors.throwError('invalid hexlify value', { arg: 'value', value: value });
}

function hexStripZeros(value) {
    while (value.length > 3 && value.substring(0, 3) === '0x0') {
        value = '0x' + value.substring(3);
    }
    return value;
}

function hexZeroPad(value, length) {
    while (value.length < 2 * length + 2) {
        value = '0x0' + value.substring(2);
    }
    return value;
}

/* @TODO: Add something like this to make slicing code easier to understand
function hexSlice(hex, start, end) {
    hex = hexlify(hex);
    return '0x' + hex.substring(2 + start * 2, 2 + end * 2);
}
*/

function splitSignature(signature) {
    signature = arrayify(signature);
    if (signature.length !== 65) {
        throw new Error('invalid signature');
    }

    var v = signature[64];
    if (v !== 27 && v !== 28) {
        v = 27 + (v % 2);
    }

    return {
        r: hexlify(signature.slice(0, 32)),
        s: hexlify(signature.slice(32, 64)),
        v: v
    }
}

module.exports = {
    arrayify: arrayify,
    isArrayish: isArrayish,

    concat: concat,

    padZeros: padZeros,
    stripZeros: stripZeros,

    splitSignature: splitSignature,

    hexlify: hexlify,
    isHexString: isHexString,
    hexStripZeros: hexStripZeros,
    hexZeroPad: hexZeroPad,
};

},{"./properties.js":"../../node_modules/ethers/utils/properties.js","./errors":"../../node_modules/ethers/utils/errors.js"}],"../../node_modules/ethers/utils/utf8.js":[function(require,module,exports) {

var convert = require('./convert.js');

// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array
function utf8ToBytes(str) {
    var result = [];
    var offset = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            result[offset++] = c;
        } else if (c < 2048) {
            result[offset++] = (c >> 6) | 192;
            result[offset++] = (c & 63) | 128;
        } else if (((c & 0xFC00) == 0xD800) && (i + 1) < str.length && ((str.charCodeAt(i + 1) & 0xFC00) == 0xDC00)) {
            // Surrogate Pair
            c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);
            result[offset++] = (c >> 18) | 240;
            result[offset++] = ((c >> 12) & 63) | 128;
            result[offset++] = ((c >> 6) & 63) | 128;
            result[offset++] = (c & 63) | 128;
        } else {
            result[offset++] = (c >> 12) | 224;
            result[offset++] = ((c >> 6) & 63) | 128;
            result[offset++] = (c & 63) | 128;
        }
    }

    return convert.arrayify(result);
};


// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499
function bytesToUtf8(bytes) {
    bytes = convert.arrayify(bytes);

    var result = '';
    var i = 0;

    // Invalid bytes are ignored
    while(i < bytes.length) {
        var c = bytes[i++];
        if (c >> 7 == 0) {
            // 0xxx xxxx
            result += String.fromCharCode(c);
            continue;
        }

        // Invalid starting byte
        if (c >> 6 == 0x02) { continue; }

        // Multibyte; how many bytes left for thus character?
        var extraLength = null;
        if (c >> 5 == 0x06) {
            extraLength = 1;
        } else if (c >> 4 == 0x0e) {
            extraLength = 2;
        } else if (c >> 3 == 0x1e) {
            extraLength = 3;
        } else if (c >> 2 == 0x3e) {
            extraLength = 4;
        } else if (c >> 1 == 0x7e) {
            extraLength = 5;
        } else {
            continue;
        }

        // Do we have enough bytes in our data?
        if (i + extraLength > bytes.length) {

            // If there is an invalid unprocessed byte, try to continue
            for (; i < bytes.length; i++) {
                if (bytes[i] >> 6 != 0x02) { break; }
            }
            if (i != bytes.length) continue;

            // All leftover bytes are valid.
            return result;
        }

        // Remove the UTF-8 prefix from the char (res)
        var res = c & ((1 << (8 - extraLength - 1)) - 1);

        var count;
        for (count = 0; count < extraLength; count++) {
            var nextChar = bytes[i++];

            // Is the char valid multibyte part?
            if (nextChar >> 6 != 0x02) {break;};
            res = (res << 6) | (nextChar & 0x3f);
        }

        if (count != extraLength) {
            i--;
            continue;
        }

        if (res <= 0xffff) {
            result += String.fromCharCode(res);
            continue;
        }

        res -= 0x10000;
        result += String.fromCharCode(((res >> 10) & 0x3ff) + 0xd800, (res & 0x3ff) + 0xdc00);
    }

    return result;
}

module.exports = {
    toUtf8Bytes: utf8ToBytes,
    toUtf8String: bytesToUtf8,
};

},{"./convert.js":"../../node_modules/ethers/utils/convert.js"}],"../../node_modules/parcel-bundler/src/builtins/_empty.js":[function(require,module,exports) {

},{}],"../../node_modules/bn.js/lib/bn.js":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buffer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":"../../node_modules/parcel-bundler/src/builtins/_empty.js"}],"../../node_modules/ethers/utils/throw-error.js":[function(require,module,exports) {
'use strict';

function throwError(message, params) {
    var error = new Error(message);
    for (var key in params) {
        error[key] = params[key];
    }
    throw error;
}

module.exports = throwError;

},{}],"../../node_modules/ethers/utils/bignumber.js":[function(require,module,exports) {
/**
 *  BigNumber
 *
 *  A wrapper around the BN.js object. In the future we can swap out
 *  the underlying BN.js library for something smaller.
 */

var BN = require('bn.js');

var defineProperty = require('./properties').defineProperty;
var convert = require('./convert');
var throwError = require('./throw-error');

function BigNumber(value) {
    if (!(this instanceof BigNumber)) { throw new Error('missing new'); }

    if (convert.isHexString(value)) {
        if (value == '0x') { value = '0x0'; }
        value = new BN(value.substring(2), 16);
    } else if (typeof(value) === 'string' && value[0] === '-' && convert.isHexString(value.substring(1))) {
        value = (new BN(value.substring(3), 16)).mul(BigNumber.constantNegativeOne._bn);

    } else if (typeof(value) === 'string' && value.match(/^-?[0-9]*$/)) {
        if (value == '') { value = '0'; }
        value = new BN(value);

    } else if (typeof(value) === 'number' && parseInt(value) == value) {
        value = new BN(value);

    } else if (BN.isBN(value)) {
        //value = value

    } else if (isBigNumber(value)) {
        value = value._bn;

    } else if (convert.isArrayish(value)) {
        value = new BN(convert.hexlify(value).substring(2), 16);

    } else {
        throwError('invalid BigNumber value', { input: value });
    }

    defineProperty(this, '_bn', value);
}

defineProperty(BigNumber, 'constantNegativeOne', bigNumberify(-1));
defineProperty(BigNumber, 'constantZero', bigNumberify(0));
defineProperty(BigNumber, 'constantOne', bigNumberify(1));
defineProperty(BigNumber, 'constantTwo', bigNumberify(2));
defineProperty(BigNumber, 'constantWeiPerEther', bigNumberify(new BN('1000000000000000000')));


defineProperty(BigNumber.prototype, 'fromTwos', function(value) {
    return new BigNumber(this._bn.fromTwos(value));
});

defineProperty(BigNumber.prototype, 'toTwos', function(value) {
    return new BigNumber(this._bn.toTwos(value));
});


defineProperty(BigNumber.prototype, 'add', function(other) {
    return new BigNumber(this._bn.add(bigNumberify(other)._bn));
});

defineProperty(BigNumber.prototype, 'sub', function(other) {
    return new BigNumber(this._bn.sub(bigNumberify(other)._bn));
});


defineProperty(BigNumber.prototype, 'div', function(other) {
    return new BigNumber(this._bn.div(bigNumberify(other)._bn));
});

defineProperty(BigNumber.prototype, 'mul', function(other) {
    return new BigNumber(this._bn.mul(bigNumberify(other)._bn));
});

defineProperty(BigNumber.prototype, 'mod', function(other) {
    return new BigNumber(this._bn.mod(bigNumberify(other)._bn));
});

defineProperty(BigNumber.prototype, 'pow', function(other) {
    return new BigNumber(this._bn.pow(bigNumberify(other)._bn));
});


defineProperty(BigNumber.prototype, 'maskn', function(value) {
    return new BigNumber(this._bn.maskn(value));
});



defineProperty(BigNumber.prototype, 'eq', function(other) {
    return this._bn.eq(bigNumberify(other)._bn);
});

defineProperty(BigNumber.prototype, 'lt', function(other) {
    return this._bn.lt(bigNumberify(other)._bn);
});

defineProperty(BigNumber.prototype, 'lte', function(other) {
    return this._bn.lte(bigNumberify(other)._bn);
});

defineProperty(BigNumber.prototype, 'gt', function(other) {
    return this._bn.gt(bigNumberify(other)._bn);
});

defineProperty(BigNumber.prototype, 'gte', function(other) {
    return this._bn.gte(bigNumberify(other)._bn);
});


defineProperty(BigNumber.prototype, 'isZero', function() {
    return this._bn.isZero();
});


defineProperty(BigNumber.prototype, 'toNumber', function(base) {
    return this._bn.toNumber();
});

defineProperty(BigNumber.prototype, 'toString', function() {
    //return this._bn.toString(base || 10);
    return this._bn.toString(10);
});

defineProperty(BigNumber.prototype, 'toHexString', function() {
    var hex = this._bn.toString(16);
    if (hex.length % 2) { hex = '0' + hex; }
    return '0x' + hex;
});


function isBigNumber(value) {
    return (value._bn && value._bn.mod);
}

function bigNumberify(value) {
    if (isBigNumber(value)) { return value; }
    return new BigNumber(value);
}

module.exports = {
    isBigNumber: isBigNumber,
    bigNumberify: bigNumberify,
    BigNumber: BigNumber
};

},{"bn.js":"../../node_modules/bn.js/lib/bn.js","./properties":"../../node_modules/ethers/utils/properties.js","./convert":"../../node_modules/ethers/utils/convert.js","./throw-error":"../../node_modules/ethers/utils/throw-error.js"}],"../../node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"../../node_modules/js-sha3/src/sha3.js":[function(require,module,exports) {
var process = require("process");
var global = arguments[3];
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.5.7
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2016
 * @license MIT
 */
/*jslint bitwise: true */
(function () {
  'use strict';

  var root = typeof window === 'object' ? window : {};
  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
  if (NODE_JS) {
    root = global;
  }
  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;
  var HEX_CHARS = '0123456789abcdef'.split('');
  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
  var KECCAK_PADDING = [1, 256, 65536, 16777216];
  var PADDING = [6, 1536, 393216, 100663296];
  var SHIFT = [0, 8, 16, 24];
  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,
            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,
            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
  var BITS = [224, 256, 384, 512];
  var SHAKE_BITS = [128, 256];
  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];

  var createOutputMethod = function (bits, padding, outputType) {
    return function (message) {
      return new Keccak(bits, padding, bits).update(message)[outputType]();
    };
  };

  var createShakeOutputMethod = function (bits, padding, outputType) {
    return function (message, outputBits) {
      return new Keccak(bits, padding, outputBits).update(message)[outputType]();
    };
  };

  var createMethod = function (bits, padding) {
    var method = createOutputMethod(bits, padding, 'hex');
    method.create = function () {
      return new Keccak(bits, padding, bits);
    };
    method.update = function (message) {
      return method.create().update(message);
    };
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createOutputMethod(bits, padding, type);
    }
    return method;
  };

  var createShakeMethod = function (bits, padding) {
    var method = createShakeOutputMethod(bits, padding, 'hex');
    method.create = function (outputBits) {
      return new Keccak(bits, padding, outputBits);
    };
    method.update = function (message, outputBits) {
      return method.create(outputBits).update(message);
    };
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createShakeOutputMethod(bits, padding, type);
    }
    return method;
  };

  var algorithms = [
    {name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod},
    {name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod},
    {name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod}
  ];

  var methods = {}, methodNames = [];

  for (var i = 0; i < algorithms.length; ++i) {
    var algorithm = algorithms[i];
    var bits  = algorithm.bits;
    for (var j = 0; j < bits.length; ++j) {
      var methodName = algorithm.name +'_' + bits[j];
      methodNames.push(methodName);
      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
    }
  }

  function Keccak(bits, padding, outputBits) {
    this.blocks = [];
    this.s = [];
    this.padding = padding;
    this.outputBits = outputBits;
    this.reset = true;
    this.block = 0;
    this.start = 0;
    this.blockCount = (1600 - (bits << 1)) >> 5;
    this.byteCount = this.blockCount << 2;
    this.outputBlocks = outputBits >> 5;
    this.extraBytes = (outputBits & 31) >> 3;

    for (var i = 0; i < 50; ++i) {
      this.s[i] = 0;
    }
  }

  Keccak.prototype.update = function (message) {
    var notString = typeof message !== 'string';
    if (notString && message.constructor === ArrayBuffer) {
      message = new Uint8Array(message);
    }
    var length = message.length, blocks = this.blocks, byteCount = this.byteCount,
      blockCount = this.blockCount, index = 0, s = this.s, i, code;

    while (index < length) {
      if (this.reset) {
        this.reset = false;
        blocks[0] = this.block;
        for (i = 1; i < blockCount + 1; ++i) {
          blocks[i] = 0;
        }
      }
      if (notString) {
        for (i = this.start; index < length && i < byteCount; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = this.start; index < length && i < byteCount; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }
      this.lastByteIndex = i;
      if (i >= byteCount) {
        this.start = i - byteCount;
        this.block = blocks[blockCount];
        for (i = 0; i < blockCount; ++i) {
          s[i] ^= blocks[i];
        }
        f(s);
        this.reset = true;
      } else {
        this.start = i;
      }
    }
    return this;
  };

  Keccak.prototype.finalize = function () {
    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
    blocks[i >> 2] |= this.padding[i & 3];
    if (this.lastByteIndex === this.byteCount) {
      blocks[0] = blocks[blockCount];
      for (i = 1; i < blockCount + 1; ++i) {
        blocks[i] = 0;
      }
    }
    blocks[blockCount - 1] |= 0x80000000;
    for (i = 0; i < blockCount; ++i) {
      s[i] ^= blocks[i];
    }
    f(s);
  };

  Keccak.prototype.toString = Keccak.prototype.hex = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
        extraBytes = this.extraBytes, i = 0, j = 0;
    var hex = '', block;
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        block = s[i];
        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +
               HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +
               HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +
               HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];
      }
      if (j % blockCount === 0) {
        f(s);
        i = 0;
      }
    }
    if (extraBytes) {
      block = s[i];
      if (extraBytes > 0) {
        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];
      }
      if (extraBytes > 1) {
        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];
      }
      if (extraBytes > 2) {
        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];
      }
    }
    return hex;
  };

  Keccak.prototype.arrayBuffer = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
        extraBytes = this.extraBytes, i = 0, j = 0;
    var bytes = this.outputBits >> 3;
    var buffer;
    if (extraBytes) {
      buffer = new ArrayBuffer((outputBlocks + 1) << 2);
    } else {
      buffer = new ArrayBuffer(bytes);
    }
    var array = new Uint32Array(buffer);
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        array[j] = s[i];
      }
      if (j % blockCount === 0) {
        f(s);
      }
    }
    if (extraBytes) {
      array[i] = s[i];
      buffer = buffer.slice(0, bytes);
    }
    return buffer;
  };

  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;

  Keccak.prototype.digest = Keccak.prototype.array = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
        extraBytes = this.extraBytes, i = 0, j = 0;
    var array = [], offset, block;
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        offset = j << 2;
        block = s[i];
        array[offset] = block & 0xFF;
        array[offset + 1] = (block >> 8) & 0xFF;
        array[offset + 2] = (block >> 16) & 0xFF;
        array[offset + 3] = (block >> 24) & 0xFF;
      }
      if (j % blockCount === 0) {
        f(s);
      }
    }
    if (extraBytes) {
      offset = j << 2;
      block = s[i];
      if (extraBytes > 0) {
        array[offset] = block & 0xFF;
      }
      if (extraBytes > 1) {
        array[offset + 1] = (block >> 8) & 0xFF;
      }
      if (extraBytes > 2) {
        array[offset + 2] = (block >> 16) & 0xFF;
      }
    }
    return array;
  };

  var f = function (s) {
    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,
        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,
        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,
        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
    for (n = 0; n < 48; n += 2) {
      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];

      h = c8 ^ ((c2 << 1) | (c3 >>> 31));
      l = c9 ^ ((c3 << 1) | (c2 >>> 31));
      s[0] ^= h;
      s[1] ^= l;
      s[10] ^= h;
      s[11] ^= l;
      s[20] ^= h;
      s[21] ^= l;
      s[30] ^= h;
      s[31] ^= l;
      s[40] ^= h;
      s[41] ^= l;
      h = c0 ^ ((c4 << 1) | (c5 >>> 31));
      l = c1 ^ ((c5 << 1) | (c4 >>> 31));
      s[2] ^= h;
      s[3] ^= l;
      s[12] ^= h;
      s[13] ^= l;
      s[22] ^= h;
      s[23] ^= l;
      s[32] ^= h;
      s[33] ^= l;
      s[42] ^= h;
      s[43] ^= l;
      h = c2 ^ ((c6 << 1) | (c7 >>> 31));
      l = c3 ^ ((c7 << 1) | (c6 >>> 31));
      s[4] ^= h;
      s[5] ^= l;
      s[14] ^= h;
      s[15] ^= l;
      s[24] ^= h;
      s[25] ^= l;
      s[34] ^= h;
      s[35] ^= l;
      s[44] ^= h;
      s[45] ^= l;
      h = c4 ^ ((c8 << 1) | (c9 >>> 31));
      l = c5 ^ ((c9 << 1) | (c8 >>> 31));
      s[6] ^= h;
      s[7] ^= l;
      s[16] ^= h;
      s[17] ^= l;
      s[26] ^= h;
      s[27] ^= l;
      s[36] ^= h;
      s[37] ^= l;
      s[46] ^= h;
      s[47] ^= l;
      h = c6 ^ ((c0 << 1) | (c1 >>> 31));
      l = c7 ^ ((c1 << 1) | (c0 >>> 31));
      s[8] ^= h;
      s[9] ^= l;
      s[18] ^= h;
      s[19] ^= l;
      s[28] ^= h;
      s[29] ^= l;
      s[38] ^= h;
      s[39] ^= l;
      s[48] ^= h;
      s[49] ^= l;

      b0 = s[0];
      b1 = s[1];
      b32 = (s[11] << 4) | (s[10] >>> 28);
      b33 = (s[10] << 4) | (s[11] >>> 28);
      b14 = (s[20] << 3) | (s[21] >>> 29);
      b15 = (s[21] << 3) | (s[20] >>> 29);
      b46 = (s[31] << 9) | (s[30] >>> 23);
      b47 = (s[30] << 9) | (s[31] >>> 23);
      b28 = (s[40] << 18) | (s[41] >>> 14);
      b29 = (s[41] << 18) | (s[40] >>> 14);
      b20 = (s[2] << 1) | (s[3] >>> 31);
      b21 = (s[3] << 1) | (s[2] >>> 31);
      b2 = (s[13] << 12) | (s[12] >>> 20);
      b3 = (s[12] << 12) | (s[13] >>> 20);
      b34 = (s[22] << 10) | (s[23] >>> 22);
      b35 = (s[23] << 10) | (s[22] >>> 22);
      b16 = (s[33] << 13) | (s[32] >>> 19);
      b17 = (s[32] << 13) | (s[33] >>> 19);
      b48 = (s[42] << 2) | (s[43] >>> 30);
      b49 = (s[43] << 2) | (s[42] >>> 30);
      b40 = (s[5] << 30) | (s[4] >>> 2);
      b41 = (s[4] << 30) | (s[5] >>> 2);
      b22 = (s[14] << 6) | (s[15] >>> 26);
      b23 = (s[15] << 6) | (s[14] >>> 26);
      b4 = (s[25] << 11) | (s[24] >>> 21);
      b5 = (s[24] << 11) | (s[25] >>> 21);
      b36 = (s[34] << 15) | (s[35] >>> 17);
      b37 = (s[35] << 15) | (s[34] >>> 17);
      b18 = (s[45] << 29) | (s[44] >>> 3);
      b19 = (s[44] << 29) | (s[45] >>> 3);
      b10 = (s[6] << 28) | (s[7] >>> 4);
      b11 = (s[7] << 28) | (s[6] >>> 4);
      b42 = (s[17] << 23) | (s[16] >>> 9);
      b43 = (s[16] << 23) | (s[17] >>> 9);
      b24 = (s[26] << 25) | (s[27] >>> 7);
      b25 = (s[27] << 25) | (s[26] >>> 7);
      b6 = (s[36] << 21) | (s[37] >>> 11);
      b7 = (s[37] << 21) | (s[36] >>> 11);
      b38 = (s[47] << 24) | (s[46] >>> 8);
      b39 = (s[46] << 24) | (s[47] >>> 8);
      b30 = (s[8] << 27) | (s[9] >>> 5);
      b31 = (s[9] << 27) | (s[8] >>> 5);
      b12 = (s[18] << 20) | (s[19] >>> 12);
      b13 = (s[19] << 20) | (s[18] >>> 12);
      b44 = (s[29] << 7) | (s[28] >>> 25);
      b45 = (s[28] << 7) | (s[29] >>> 25);
      b26 = (s[38] << 8) | (s[39] >>> 24);
      b27 = (s[39] << 8) | (s[38] >>> 24);
      b8 = (s[48] << 14) | (s[49] >>> 18);
      b9 = (s[49] << 14) | (s[48] >>> 18);

      s[0] = b0 ^ (~b2 & b4);
      s[1] = b1 ^ (~b3 & b5);
      s[10] = b10 ^ (~b12 & b14);
      s[11] = b11 ^ (~b13 & b15);
      s[20] = b20 ^ (~b22 & b24);
      s[21] = b21 ^ (~b23 & b25);
      s[30] = b30 ^ (~b32 & b34);
      s[31] = b31 ^ (~b33 & b35);
      s[40] = b40 ^ (~b42 & b44);
      s[41] = b41 ^ (~b43 & b45);
      s[2] = b2 ^ (~b4 & b6);
      s[3] = b3 ^ (~b5 & b7);
      s[12] = b12 ^ (~b14 & b16);
      s[13] = b13 ^ (~b15 & b17);
      s[22] = b22 ^ (~b24 & b26);
      s[23] = b23 ^ (~b25 & b27);
      s[32] = b32 ^ (~b34 & b36);
      s[33] = b33 ^ (~b35 & b37);
      s[42] = b42 ^ (~b44 & b46);
      s[43] = b43 ^ (~b45 & b47);
      s[4] = b4 ^ (~b6 & b8);
      s[5] = b5 ^ (~b7 & b9);
      s[14] = b14 ^ (~b16 & b18);
      s[15] = b15 ^ (~b17 & b19);
      s[24] = b24 ^ (~b26 & b28);
      s[25] = b25 ^ (~b27 & b29);
      s[34] = b34 ^ (~b36 & b38);
      s[35] = b35 ^ (~b37 & b39);
      s[44] = b44 ^ (~b46 & b48);
      s[45] = b45 ^ (~b47 & b49);
      s[6] = b6 ^ (~b8 & b0);
      s[7] = b7 ^ (~b9 & b1);
      s[16] = b16 ^ (~b18 & b10);
      s[17] = b17 ^ (~b19 & b11);
      s[26] = b26 ^ (~b28 & b20);
      s[27] = b27 ^ (~b29 & b21);
      s[36] = b36 ^ (~b38 & b30);
      s[37] = b37 ^ (~b39 & b31);
      s[46] = b46 ^ (~b48 & b40);
      s[47] = b47 ^ (~b49 & b41);
      s[8] = b8 ^ (~b0 & b2);
      s[9] = b9 ^ (~b1 & b3);
      s[18] = b18 ^ (~b10 & b12);
      s[19] = b19 ^ (~b11 & b13);
      s[28] = b28 ^ (~b20 & b22);
      s[29] = b29 ^ (~b21 & b23);
      s[38] = b38 ^ (~b30 & b32);
      s[39] = b39 ^ (~b31 & b33);
      s[48] = b48 ^ (~b40 & b42);
      s[49] = b49 ^ (~b41 & b43);

      s[0] ^= RC[n];
      s[1] ^= RC[n + 1];
    }
  };

  if (COMMON_JS) {
    module.exports = methods;
  } else {
    for (var i = 0; i < methodNames.length; ++i) {
      root[methodNames[i]] = methods[methodNames[i]];
    }
  }
})();

},{"process":"../../node_modules/process/browser.js"}],"../../node_modules/ethers/utils/keccak256.js":[function(require,module,exports) {
'use strict';

var sha3 = require('js-sha3');

var convert = require('./convert.js');

function keccak256(data) {
    data = convert.arrayify(data);
    return '0x' + sha3.keccak_256(data);
}

module.exports = keccak256;

},{"js-sha3":"../../node_modules/js-sha3/src/sha3.js","./convert.js":"../../node_modules/ethers/utils/convert.js"}],"../../node_modules/ethers/utils/address.js":[function(require,module,exports) {

var BN = require('bn.js');

var convert = require('./convert');
var throwError = require('./throw-error');
var keccak256 = require('./keccak256');

function getChecksumAddress(address) {
    if (typeof(address) !== 'string' || !address.match(/^0x[0-9A-Fa-f]{40}$/)) {
        throwError('invalid address', {input: address});
    }

    address = address.toLowerCase();

    var hashed = address.substring(2).split('');
    for (var i = 0; i < hashed.length; i++) {
        hashed[i] = hashed[i].charCodeAt(0);
    }
    hashed = convert.arrayify(keccak256(hashed));

    address = address.substring(2).split('');
    for (var i = 0; i < 40; i += 2) {
        if ((hashed[i >> 1] >> 4) >= 8) {
            address[i] = address[i].toUpperCase();
        }
        if ((hashed[i >> 1] & 0x0f) >= 8) {
            address[i + 1] = address[i + 1].toUpperCase();
        }
    }

    return '0x' + address.join('');
}

// Shims for environments that are missing some required constants and functions
var MAX_SAFE_INTEGER = 0x1fffffffffffff;

function log10(x) {
    if (Math.log10) { return Math.log10(x); }
    return Math.log(x) / Math.LN10;
}


// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number
var ibanChecksum = (function() {

    // Create lookup table
    var ibanLookup = {};
    for (var i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }
    for (var i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }

    // How many decimal digits can we process? (for 64-bit float, this is 15)
    var safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));

    return function(address) {
        address = address.toUpperCase();
        address = address.substring(4) + address.substring(0, 2) + '00';

        var expanded = address.split('');
        for (var i = 0; i < expanded.length; i++) {
            expanded[i] = ibanLookup[expanded[i]];
        }
        expanded = expanded.join('');

        // Javascript can handle integers safely up to 15 (decimal) digits
        while (expanded.length >= safeDigits){
            var block = expanded.substring(0, safeDigits);
            expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
        }

        var checksum = String(98 - (parseInt(expanded, 10) % 97));
        while (checksum.length < 2) { checksum = '0' + checksum; }

        return checksum;
    };
})();

function getAddress(address, icapFormat) {
    var result = null;

    if (typeof(address) !== 'string') {
        throwError('invalid address', {input: address});
    }

    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {

        // Missing the 0x prefix
        if (address.substring(0, 2) !== '0x') { address = '0x' + address; }

        result = getChecksumAddress(address);

        // It is a checksummed address with a bad checksum
        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
            throwError('invalid address checksum', { input: address, expected: result });
        }

    // Maybe ICAP? (we only support direct mode)
    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {

        // It is an ICAP address with a bad checksum
        if (address.substring(2, 4) !== ibanChecksum(address)) {
            throwError('invalid address icap checksum', { input: address });
        }

        result = (new BN(address.substring(4), 36)).toString(16);
        while (result.length < 40) { result = '0' + result; }
        result = getChecksumAddress('0x' + result);

    } else {
        throwError('invalid address', { input: address });
    }

    if (icapFormat) {
        var base36 = (new BN(result.substring(2), 16)).toString(36).toUpperCase();
        while (base36.length < 30) { base36 = '0' + base36; }
        return 'XE' + ibanChecksum('XE00' + base36) + base36;
    }

    return result;
}


module.exports = {
    getAddress: getAddress,
}

},{"bn.js":"../../node_modules/bn.js/lib/bn.js","./convert":"../../node_modules/ethers/utils/convert.js","./throw-error":"../../node_modules/ethers/utils/throw-error.js","./keccak256":"../../node_modules/ethers/utils/keccak256.js"}],"../../node_modules/ethers/utils/abi-coder.js":[function(require,module,exports) {
'use strict';

// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI

var utils = (function() {
    var convert = require('../utils/convert.js');
    var utf8 = require('../utils/utf8.js');

    return {
        defineProperty: require('../utils/properties.js').defineProperty,

        arrayify: convert.arrayify,
        padZeros: convert.padZeros,

        bigNumberify: require('../utils/bignumber.js').bigNumberify,

        getAddress: require('../utils/address').getAddress,

        concat: convert.concat,
        isHexString: convert.isHexString,

        toUtf8Bytes: utf8.toUtf8Bytes,
        toUtf8String: utf8.toUtf8String,

        hexlify: convert.hexlify,
    };
})();

var errors = require('./errors');

var paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);
var paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);
var paramTypeArray = new RegExp(/^(.*)\[([0-9]*)\]$/);

var defaultCoerceFunc = function(type, value) {
    var match = type.match(paramTypeNumber)
    if (match && parseInt(match[2]) <= 48) { return value.toNumber(); }
    return value;
}

// Shallow copy object (will move to utils/properties in v4)
function shallowCopy(object) {
    var result = {};
    for (var key in object) { result[key] = object[key]; }
    return result;
}

///////////////////////////////////
// Parsing for Solidity Signatures

var regexParen = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
var regexIdentifier = new RegExp("^[A-Za-z_][A-Za-z0-9_]*$");

var close = { "(": ")", "[": "]" };

function verifyType(type) {

    // These need to be transformed to their full description
    if (type.match(/^uint($|[^1-9])/)) {
        type = 'uint256' + type.substring(4);
    } else if (type.match(/^int($|[^1-9])/)) {
        type = 'int256' + type.substring(3);
    }

    return type;
}

function parseParam(param, allowIndexed) {
    function throwError(i) {
        throw new Error('unexpected character "' + param[i] + '" at position ' + i + ' in "' + param + '"');
    }

    var parent = { type: '', name: '', state: { allowType: true } };
    var node = parent;

    for (var i = 0; i < param.length; i++) {
        var c = param[i];
        switch (c) {
            case '(':
                if (!node.state.allowParams) { throwError(i); }
                delete node.state.allowType;
                node.type = verifyType(node.type);
                node.components = [ { type: '', name: '', parent: node, state: { allowType: true } } ];
                node = node.components[0];
                break;

            case ')':
                delete node.state;
                node.type = verifyType(node.type);

                var child = node;
                node = node.parent;
                if (!node) { throwError(i); }
                delete child.parent;
                delete node.state.allowParams;
                node.state.allowName = true;
                node.state.allowArray = true;
                break;

            case ',':
                delete node.state;
                node.type = verifyType(node.type);

                var sibling = { type: '', name: '', parent: node.parent, state: { allowType: true } };
                node.parent.components.push(sibling);
                delete node.parent;
                node = sibling;
                break;

            // Hit a space...
            case ' ':

                // If reading type, the type is done and may read a param or name
                if (node.state.allowType) {
                    if (node.type !== '') {
                        node.type = verifyType(node.type);
                        delete node.state.allowType;
                        node.state.allowName = true;
                        node.state.allowParams = true;
                    }
                }

                // If reading name, the name is done
                if (node.state.allowName) {
                    if (node.name !== '') {
                        if (allowIndexed && node.name === 'indexed') {
                            node.indexed = true;
                            node.name = '';
                        } else {
                            delete node.state.allowName;
                        }
                    }
                }

                break;

            case '[':
                if (!node.state.allowArray) { throwError(i); }

                //if (!node.array) { node.array = ''; }
                //node.array += c;
                node.type += c;

                delete node.state.allowArray;
                delete node.state.allowName;
                node.state.readArray = true;
                break;

            case ']':
                if (!node.state.readArray) { throwError(i); }

                //node.array += c;
                node.type += c;

                delete node.state.readArray;
                node.state.allowArray = true;
                node.state.allowName = true;
                break;

            default:
                if (node.state.allowType) {
                    node.type += c;
                    node.state.allowParams = true;
                    node.state.allowArray = true;
                } else if (node.state.allowName) {
                    node.name += c;
                    delete node.state.allowArray;
                } else if (node.state.readArray) {
                    //node.array += c;
                    node.type += c;
                } else {
                    throwError(i);
                }
        }
    }

    if (node.parent) { throw new Error("unexpected eof"); }

    delete parent.state;
    parent.type = verifyType(parent.type);

    //verifyType(parent);

    return parent;
}

function parseSignatureEvent(fragment) {

    var abi = {
        anonymous: false,
        inputs: [],
        type: 'event'
    }

    var match = fragment.match(regexParen);
    if (!match) { throw new Error('invalid event: ' + fragment); }

    abi.name = match[1].trim();

    splitNesting(match[2]).forEach(function(param) {
        param = parseParam(param, true);
        param.indexed = !!param.indexed;
        abi.inputs.push(param);
    });

    match[3].split(' ').forEach(function(modifier) {
        switch(modifier) {
            case 'anonymous':
                abi.anonymous = true;
                break;
            case '':
                break;
            default:
                console.log('unknown modifier: ' + mdifier);
        }
    });

    if (abi.name && !abi.name.match(regexIdentifier)) {
        throw new Error('invalid identifier: "' + result.name + '"');
    }

    return abi;
}

function parseSignatureFunction(fragment) {
    var abi = {
        constant: false,
        inputs: [],
        outputs: [],
        payable: false,
        type: 'function'
    };

    var comps = fragment.split(' returns ');
    var left = comps[0].match(regexParen);
    if (!left) { throw new Error('invalid signature'); }

    abi.name = left[1].trim();
    if (!abi.name.match(regexIdentifier)) {
        throw new Error('invalid identifier: "' + left[1] + '"');
    }

    splitNesting(left[2]).forEach(function(param) {
        abi.inputs.push(parseParam(param));
    });

    left[3].split(' ').forEach(function(modifier) {
        switch (modifier) {
            case 'constant':
                abi.constant = true;
                break;
            case 'payable':
                abi.payable = true;
                break;
            case 'pure':
                abi.constant = true;
                abi.stateMutability = 'pure';
                break;
            case 'view':
                abi.constant = true;
                abi.stateMutability = 'view';
                break;
            case '':
                break;
            default:
                console.log('unknown modifier: ' + modifier);
        }
    });

    // We have outputs
    if (comps.length > 1) {
        var right = comps[1].match(regexParen);
        if (right[1].trim() != '' || right[3].trim() != '') {
            throw new Error('unexpected tokens');
        }

        splitNesting(right[2]).forEach(function(param) {
            abi.outputs.push(parseParam(param));
        });
    }

    return abi;
}


function parseSignature(fragment) {
    if(typeof(fragment) === 'string') {
        // Make sure the "returns" is surrounded by a space and all whitespace is exactly one space
        fragment = fragment.replace(/\(/g, ' (').replace(/\)/g, ') ').replace(/\s+/g, ' ');
        fragment = fragment.trim();

        if (fragment.substring(0, 6) === 'event ') {
           return parseSignatureEvent(fragment.substring(6).trim());

        } else {
            if (fragment.substring(0, 9) === 'function ') {
                fragment = fragment.substring(9);
            }
            return parseSignatureFunction(fragment.trim());
        }
    }

    throw new Error('unknown fragment');
}


///////////////////////////////////
// Coders

var coderNull = function(coerceFunc) {
    return {
        name: 'null',
        type: '',
        encode: function(value) {
            return utils.arrayify([]);
        },
        decode: function(data, offset) {
            if (offset > data.length) { throw new Error('invalid null'); }
            return {
                consumed: 0,
                value: coerceFunc('null', undefined)
            }
        },
        dynamic: false
    };
}

var coderNumber = function(coerceFunc, size, signed, localName) {
    var name = ((signed ? 'int': 'uint') + (size * 8));
    return {
        localName: localName,
        name: name,
        type: name,
        encode: function(value) {
            try {
                value = utils.bigNumberify(value)
            } catch (error) {
                errors.throwError('invalid number value', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    type: typeof(value),
                    value: value
                });
            }
            value = value.toTwos(size * 8).maskn(size * 8);

            if (signed) {
                value = value.fromTwos(size * 8).toTwos(256);
            }

            return utils.padZeros(utils.arrayify(value), 32);
        },
        decode: function(data, offset) {
            if (data.length < offset + 32) {
                errors.throwError('insufficient data for ' + name + ' type', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    coderType: name,
                    value: utils.hexlify(data.slice(offset, offset + 32))
                });
            }
            var junkLength = 32 - size;
            var value = utils.bigNumberify(data.slice(offset + junkLength, offset + 32));
            if (signed) {
                value = value.fromTwos(size * 8);
            } else {
                value = value.maskn(size * 8);
            }

            //if (size <= 6) { value = value.toNumber(); }

            return {
                consumed: 32,
                value: coerceFunc(name, value),
            }
        }
    };
}
var uint256Coder = coderNumber(function(type, value) { return value; }, 32, false);

var coderBoolean = function(coerceFunc, localName) {
    return {
        localName: localName,
        name: 'bool',
        type: 'bool',
        encode: function(value) {
           return uint256Coder.encode(!!value ? 1: 0);
        },
        decode: function(data, offset) {
            try {
                var result = uint256Coder.decode(data, offset);
            } catch (error) {
                if (error.reason === 'insufficient data for uint256 type') {
                    errors.throwError('insufficient data for boolean type', errors.INVALID_ARGUMENT, {
                        arg: localName,
                        coderType: 'boolean',
                        value: error.value
                    });
                }
                throw error;
            }
            return {
                consumed: result.consumed,
                value: coerceFunc('boolean', !result.value.isZero())
            }
        }
    }
}

var coderFixedBytes = function(coerceFunc, length, localName) {
    var name = ('bytes' + length);
    return {
        localName: localName,
        name: name,
        type: name,
        encode: function(value) {
            if (utils.isHexString(value) && (value.length % 2) !== 0) {
                throw new Error('hex string cannot be odd-length');
            }
            try {
                value = utils.arrayify(value);

                // @TODO: In next major change, the value.length MUST equal the
                // length, but that is a backward-incompatible change, so here
                // we just check for things that can cause problems.
                if (value.length > 32) {
                    throw new Error('too many bytes for field');
                }

            } catch (error) {
                errors.throwError('invalid ' + name + ' value', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    type: typeof(value),
                    value: error.value
                });
            }

            if (value.length === 32) { return value; }

            var result = new Uint8Array(32);
            result.set(value);
            return result;
        },
        decode: function(data, offset) {
            if (data.length < offset + 32) {
                errors.throwError('insufficient data for ' + name + ' type', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    coderType: name,
                    value: utils.hexlify(data.slice(offset, offset + 32))
                });
            }

            return {
                consumed: 32,
                value: coerceFunc(name, utils.hexlify(data.slice(offset, offset + length)))
            }
        }
    };
}

var coderAddress = function(coerceFunc, localName) {
    return {
        localName: localName,
        name: 'address',
        type: 'address',
        encode: function(value) {
            try {
                value = utils.arrayify(utils.getAddress(value));
            } catch (error) {
                errors.throwError('invalid address', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    type: typeof(value),
                    value: value
                });
            }
            var result = new Uint8Array(32);
            result.set(value, 12);
            return result;
        },
        decode: function(data, offset) {
            if (data.length < offset + 32) {
                errors.throwError('insufficuent data for address type', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    coderType: 'address',
                    value: utils.hexlify(data.slice(offset, offset + 32))
                });
            }
            return {
                consumed: 32,
                value: coerceFunc('address', utils.getAddress(utils.hexlify(data.slice(offset + 12, offset + 32))))
           }
        }
    }
}

function _encodeDynamicBytes(value) {
    var dataLength = parseInt(32 * Math.ceil(value.length / 32));
    var padding = new Uint8Array(dataLength - value.length);

    return utils.concat([
        uint256Coder.encode(value.length),
        value,
        padding
    ]);
}

function _decodeDynamicBytes(data, offset, localName) {
    if (data.length < offset + 32) {
        errors.throwError('insufficient data for dynamicBytes length', errors.INVALID_ARGUMENT, {
            arg: localName,
            coderType: 'dynamicBytes',
            value: utils.hexlify(data.slice(offset, offset + 32))
        });
    }

    var length = uint256Coder.decode(data, offset).value;
    try {
        length = length.toNumber();
    } catch (error) {
        errors.throwError('dynamic bytes count too large', errors.INVALID_ARGUMENT, {
            arg: localName,
            coderType: 'dynamicBytes',
            value: length.toString()
        });
    }

    if (data.length < offset + 32 + length) {
        errors.throwError('insufficient data for dynamicBytes type', errors.INVALID_ARGUMENT, {
            arg: localName,
            coderType: 'dynamicBytes',
            value: utils.hexlify(data.slice(offset, offset + 32 + length))
        });
    }

    return {
        consumed: parseInt(32 + 32 * Math.ceil(length / 32)),
        value: data.slice(offset + 32, offset + 32 + length),
    }
}

var coderDynamicBytes = function(coerceFunc, localName) {
    return {
        localName: localName,
        name: 'bytes',
        type: 'bytes',
        encode: function(value) {
            try {
                value = utils.arrayify(value);
            } catch (error) {
                errors.throwError('invalid bytes value', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    type: typeof(value),
                    value: error.value
                });
            }
            return _encodeDynamicBytes(value);
        },
        decode: function(data, offset) {
            var result = _decodeDynamicBytes(data, offset, localName);
            result.value = coerceFunc('bytes', utils.hexlify(result.value));
            return result;
        },
        dynamic: true
    };
}

var coderString = function(coerceFunc, localName) {
    return {
        localName: localName,
        name: 'string',
        type: 'string',
        encode: function(value) {
            if (typeof(value) !== 'string') {
                errors.throwError('invalid string value', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    type: typeof(value),
                    value: value
                });
            }
            return _encodeDynamicBytes(utils.toUtf8Bytes(value));
        },
        decode: function(data, offset) {
            var result = _decodeDynamicBytes(data, offset, localName);
            result.value = coerceFunc('string', utils.toUtf8String(result.value));
            return result;
        },
        dynamic: true
    };
}

function alignSize(size) {
    return parseInt(32 * Math.ceil(size / 32));
}

function pack(coders, values) {

    if (Array.isArray(values)) {
       // do nothing

    } else if (values && typeof(values) === 'object') {
        var arrayValues = [];
        coders.forEach(function(coder) {
            arrayValues.push(values[coder.localName]);
        });
        values = arrayValues;

    } else {
        errors.throwError('invalid tuple value', errors.INVALID_ARGUMENT, {
            coderType: 'tuple',
            type: typeof(values),
            value: values
        });
    }

    if (coders.length !== values.length) {
        errors.throwError('types/value length mismatch', errors.INVALID_ARGUMENT, {
            coderType: 'tuple',
            value: values
        });
    }

    var parts = [];

    coders.forEach(function(coder, index) {
        parts.push({ dynamic: coder.dynamic, value: coder.encode(values[index]) });
    });

    var staticSize = 0, dynamicSize = 0;
    parts.forEach(function(part, index) {
        if (part.dynamic) {
            staticSize += 32;
            dynamicSize += alignSize(part.value.length);
        } else {
            staticSize += alignSize(part.value.length);
        }
    });

    var offset = 0, dynamicOffset = staticSize;
    var data = new Uint8Array(staticSize + dynamicSize);

    parts.forEach(function(part, index) {
        if (part.dynamic) {
            //uint256Coder.encode(dynamicOffset).copy(data, offset);
            data.set(uint256Coder.encode(dynamicOffset), offset);
            offset += 32;

            //part.value.copy(data, dynamicOffset);  @TODO
            data.set(part.value, dynamicOffset);
            dynamicOffset += alignSize(part.value.length);
        } else {
            //part.value.copy(data, offset);  @TODO
            data.set(part.value, offset);
            offset += alignSize(part.value.length);
        }
    });

    return data;
}

function unpack(coders, data, offset) {
    var baseOffset = offset;
    var consumed = 0;
    var value = [];
    coders.forEach(function(coder) {
        if (coder.dynamic) {
            var dynamicOffset = uint256Coder.decode(data, offset);
            var result = coder.decode(data, baseOffset + dynamicOffset.value.toNumber());
            // The dynamic part is leap-frogged somewhere else; doesn't count towards size
            result.consumed = dynamicOffset.consumed;
        } else {
            var result = coder.decode(data, offset);
        }

        if (result.value != undefined) {
            value.push(result.value);
        }

        offset += result.consumed;
        consumed += result.consumed;
    });

    coders.forEach(function(coder, index) {
        var name = coder.localName;
        if (!name) { return; }

        if (typeof(name) === 'object') { name = name.name; }
        if (!name) { return; }

        if (name === 'length') { name = '_length'; }

        if (value[name] != null) { return; }

        value[name] = value[index];
    });

    return {
        value: value,
        consumed: consumed
    }

    return result;
}

function coderArray(coerceFunc, coder, length, localName) {
    var type = (coder.type + '[' + (length >= 0 ? length: '') + ']');

    return {
        coder: coder,
        localName: localName,
        length: length,
        name: 'array',
        type: type,
        encode: function(value) {
            if (!Array.isArray(value)) {
                errors.throwError('expected array value', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    coderType: 'array',
                    type: typeof(value),
                    value: value
                });
            }

            var count = length;

            var result = new Uint8Array(0);
            if (count === -1) {
                count = value.length;
                result = uint256Coder.encode(count);
            }

            if (count !== value.length) {
                error.throwError('array value length mismatch', errors.INVALID_ARGUMENT, {
                    arg: localName,
                    coderType: 'array',
                    count: value.length,
                    expectedCount: count,
                    value: value
                });
            }

            var coders = [];
            value.forEach(function(value) { coders.push(coder); });

            return utils.concat([result, pack(coders, value)]);
        },
        decode: function(data, offset) {
            // @TODO:
            //if (data.length < offset + length * 32) { throw new Error('invalid array'); }

            var consumed = 0;

            var count = length;

            if (count === -1) {
                 try {
                      var decodedLength = uint256Coder.decode(data, offset);
                 } catch (error) {
                     errors.throwError('insufficient data for dynamic array length', errors.INVALID_ARGUMENT, {
                         arg: localName,
                         coderType: 'array',
                         value: error.value
                     });
                 }
                 try {
                     count = decodedLength.value.toNumber();
                 } catch (error) {
                     errors.throwError('array count too large', errors.INVALID_ARGUMENT, {
                         arg: localName,
                         coderType: 'array',
                         value: decodedLength.value.toString()
                     });
                 }
                 consumed += decodedLength.consumed;
                 offset += decodedLength.consumed;
            }

            // We don't want the children to have a localName
            var subCoder = {
                name: coder.name,
                type: coder.type,
                encode: coder.encode,
                decode: coder.decode,
                dynamic: coder.dynamic
            };

            var coders = [];
            for (var i = 0; i < count; i++) { coders.push(subCoder); }

            var result = unpack(coders, data, offset);
            result.consumed += consumed;
            result.value = coerceFunc(type, result.value);
            return result;
        },
        dynamic: (length === -1 || coder.dynamic)
    }
}


function coderTuple(coerceFunc, coders, localName) {

    var dynamic = false;
    var types = [];
    coders.forEach(function(coder) {
        if (coder.dynamic) { dynamic = true; }
        types.push(coder.type);
    });

    var type = ('tuple(' + types.join(',') + ')');

    return {
        coders: coders,
        localName: localName,
        name: 'tuple',
        type: type,
        encode: function(value) {
            return pack(coders, value);
        },
        decode: function(data, offset) {
            var result = unpack(coders, data, offset);
            result.value = coerceFunc(type, result.value);
            return result;
        },
        dynamic: dynamic
    };
}
/*
function getTypes(coders) {
    var type = coderTuple(coders).type;
    return type.substring(6, type.length - 1);
}
*/
function splitNesting(value) {
    var result = [];
    var accum = '';
    var depth = 0;
    for (var offset = 0; offset < value.length; offset++) {
        var c = value[offset];
        if (c === ',' && depth === 0) {
            result.push(accum);
            accum = '';
        } else {
            accum += c;
            if (c === '(') {
                depth++;
            } else if (c === ')') {
                depth--;
                if (depth === -1) {
                    throw new Error('unbalanced parenthsis');
                }
            }
        }
    }
    result.push(accum);

    return result;
}

var paramTypeSimple = {
    address: coderAddress,
    bool: coderBoolean,
    string: coderString,
    bytes: coderDynamicBytes,
};

function getTupleParamCoder(coerceFunc, components, localName) {
    if (!components) { components = []; }
    var coders = [];
    components.forEach(function(component) {
        coders.push(getParamCoder(coerceFunc, component));
    });

    return coderTuple(coerceFunc, coders, localName);
}

function getParamCoder(coerceFunc, param) {
    var coder = paramTypeSimple[param.type];
    if (coder) { return coder(coerceFunc, param.name); }

    var match = param.type.match(paramTypeNumber);
    if (match) {
        var size = parseInt(match[2] || 256);
        if (size === 0 || size > 256 || (size % 8) !== 0) {
            errors.throwError('invalid ' + match[1] + ' bit length', errors.INVALID_ARGUMENT, {
                arg: 'param',
                value: param
            });
        }
        return coderNumber(coerceFunc, size / 8, (match[1] === 'int'), param.name);
    }

    var match = param.type.match(paramTypeBytes);
    if (match) {
        var size = parseInt(match[1]);
        if (size === 0 || size > 32) {
            errors.throwError('invalid bytes length', errors.INVALID_ARGUMENT, {
                arg: 'param',
                value: param
            });
        }
        return coderFixedBytes(coerceFunc, size, param.name);
    }

    var match = param.type.match(paramTypeArray);
    if (match) {
        param = shallowCopy(param);
        var size = parseInt(match[2] || -1);
        param.type = match[1];
        return coderArray(coerceFunc, getParamCoder(coerceFunc, param), size, param.name);
    }

    if (param.type.substring(0, 5) === 'tuple') {
        return getTupleParamCoder(coerceFunc, param.components, param.name);
    }

    if (type === '') {
        return coderNull(coerceFunc);
    }

    errors.throwError('invalid type', errors.INVALID_ARGUMENT, {
        arg: 'type',
        value: type
    });
}

function Coder(coerceFunc) {
    if (!(this instanceof Coder)) { throw new Error('missing new'); }
    if (!coerceFunc) { coerceFunc = defaultCoerceFunc; }
    utils.defineProperty(this, 'coerceFunc', coerceFunc);
}

// Legacy name support
// @TODO: In the next major version, remove names from decode/encode and don't do this
function populateNames(type, name) {
    if (!name) { return; }

    if (type.type.substring(0, 5) === 'tuple' && typeof(name) !== 'string') {
        if (type.components.length != name.names.length) {
            errors.throwError('names/types length mismatch', errors.INVALID_ARGUMENT, {
                count: { names: name.names.length, types: type.components.length },
                value: { names: name.names, types: type.components }
            });
        }

        name.names.forEach(function(name, index) {
            populateNames(type.components[index], name);
        });

        name = (name.name || '');
    }

    if (!type.name && typeof(name) === 'string') {
        type.name = name;
    }
}

utils.defineProperty(Coder.prototype, 'encode', function(names, types, values) {

    // Names is optional, so shift over all the parameters if not provided
    if (arguments.length < 3) {
        values = types;
        types = names;
        names = [];
    }

    if (types.length !== values.length) {
        errors.throwError('types/values length mismatch', errors.INVALID_ARGUMENT, {
            count: { types: types.length, values: values.length },
            value: { types: types, values: values }
        });
    }

    var coders = [];
    types.forEach(function(type, index) {
        // Convert types to type objects
        //   - "uint foo" => { type: "uint", name: "foo" }
        //   - "tuple(uint, uint)" => { type: "tuple", components: [ { type: "uint" }, { type: "uint" }, ] }
        if (typeof(type) === 'string') {
            type = parseParam(type);
        }

        // Legacy support for passing in names (this is going away in the next major version)
        populateNames(type, names[index]);

        coders.push(getParamCoder(this.coerceFunc, type));
    }, this);

    return utils.hexlify(coderTuple(this.coerceFunc, coders).encode(values));
});

utils.defineProperty(Coder.prototype, 'decode', function(names, types, data) {

    // Names is optional, so shift over all the parameters if not provided
    if (arguments.length < 3) {
        data = types;
        types = names;
        names = [];
    }

    data = utils.arrayify(data);

    var coders = [];
    types.forEach(function(type, index) {

        // See encode for details
        if (typeof(type) === 'string') {
            type = parseParam(type);
        }

        // Legacy; going away in the next major version
        populateNames(type, names[index]);

        coders.push(getParamCoder(this.coerceFunc, type));
    }, this);

    return coderTuple(this.coerceFunc, coders).decode(data, 0).value;

});

utils.defineProperty(Coder, 'defaultCoder', new Coder());

utils.defineProperty(Coder, 'parseSignature', parseSignature);


module.exports = Coder

},{"../utils/convert.js":"../../node_modules/ethers/utils/convert.js","../utils/utf8.js":"../../node_modules/ethers/utils/utf8.js","../utils/properties.js":"../../node_modules/ethers/utils/properties.js","../utils/bignumber.js":"../../node_modules/ethers/utils/bignumber.js","../utils/address":"../../node_modules/ethers/utils/address.js","./errors":"../../node_modules/ethers/utils/errors.js"}],"../../node_modules/ethers/contracts/interface.js":[function(require,module,exports) {
'use strict';

// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI

var utils = (function() {
    var AbiCoder = require('../utils/abi-coder');
    var convert = require('../utils/convert');
    var properties = require('../utils/properties');
    var utf8 = require('../utils/utf8');

    return {
        defineFrozen: properties.defineFrozen,
        defineProperty: properties.defineProperty,

        coder: AbiCoder.defaultCoder,
        parseSignature: AbiCoder.parseSignature,

        arrayify: convert.arrayify,
        concat: convert.concat,
        isHexString: convert.isHexString,

        toUtf8Bytes: utf8.toUtf8Bytes,

        keccak256: require('../utils/keccak256'),
    };
})();

var errors = require('../utils/errors');

function parseParams(params) {
    var names = [];
    var types = [];

    params.forEach(function(param) {
        if (param.components != null) {
            if (param.type.substring(0, 5) !== 'tuple') {
                throw new Error('internal error; report on GitHub');
            }
            var suffix = '';
            var arrayBracket = param.type.indexOf('[');
            if (arrayBracket >= 0) { suffix = param.type.substring(arrayBracket); }

            var result = parseParams(param.components);
            names.push({ name: (param.name || null), names: result.names });
            types.push('tuple(' + result.types.join(',') + ')' + suffix)
        } else {
            names.push(param.name || null);
            types.push(param.type);
        }
    });

    return {
        names: names,
        types: types
    }
}

function populateDescription(object, items) {
    for (var key in items) {
        utils.defineProperty(object, key, items[key]);
    }
    return object;
}

/**
 *  - bytecode (optional; only for deploy)
 *  - type ("deploy")
 */
function DeployDescription() { }

/**
 *  - name
 *  - signature
 *  - sighash
 *  - 
 *  - 
 *  - 
 *  - 
 *  - type: ("call" | "transaction")
 */
function FunctionDescription() { }

/**
 *  - anonymous
 *  - name
 *  - signature
 *  - parse
 *  - topics
 *  - inputs
 *  - type ("event")
 */
function EventDescription() { }

function Indexed(value) {
    utils.defineProperty(this, 'indexed', true);
    utils.defineProperty(this, 'hash', value);
}

function Result() {}

function Interface(abi) {
    if (!(this instanceof Interface)) { throw new Error('missing new'); }

    if (typeof(abi) === 'string') {
        try {
            abi = JSON.parse(abi);
        } catch (error) {
            errors.throwError('could not parse ABI JSON', errors.INVALID_ARGUMENT, {
                arg: 'abi',
                errorMessage: error.message,
                value: abi
            });
        }
    }

    var _abi = [];
    abi.forEach(function(fragment) {
        if (typeof(fragment) === 'string') {
            fragment = utils.parseSignature(fragment);
        }
        _abi.push(fragment);
    });

    utils.defineFrozen(this, 'abi', _abi);

    var methods = {}, events = {}, deploy = null;

    utils.defineProperty(this, 'functions', methods);
    utils.defineProperty(this, 'events', events);

    function addMethod(method) {
        switch (method.type) {
            case 'constructor':
                var func = (function() {
                    var inputParams = parseParams(method.inputs);

                    var func = function(bytecode) {
                        if (!utils.isHexString(bytecode)) {
                            errors.throwError('invalid contract bytecode', errors.INVALID_ARGUMENT, {
                                arg: 'bytecode',
                                type: typeof(bytecode),
                                value: bytecode
                            });
                        }

                        var params = Array.prototype.slice.call(arguments, 1);
                        if (params.length < inputParams.types.length) {
                            errors.throwError('missing constructor argument', errors.MISSING_ARGUMENT, {
                                arg: (inputParams.names[params.length] || 'unknown'),
                                count: params.length,
                                expectedCount: inputParams.types.length
                            });
                        } else if (params.length > inputParams.types.length) {
                            errors.throwError('too many constructor arguments', errors.UNEXPECTED_ARGUMENT, {
                                count: params.length,
                                expectedCount: inputParams.types.length
                            });
                        }

                        try {
                            var encodedParams = utils.coder.encode(method.inputs, params)
                        } catch (error) {
                            errors.throwError('invalid constructor argument', errors.INVALID_ARGUMENT, {
                                arg: error.arg,
                                reason: error.reason,
                                value: error.value
                            });
                        }

                        var result = {
                            bytecode: bytecode + encodedParams.substring(2),
                            type: 'deploy'
                        }

                        return populateDescription(new DeployDescription(), result);
                    }

                    utils.defineFrozen(func, 'inputs', inputParams);
                    utils.defineProperty(func, 'payable', (method.payable == null || !!method.payable))

                    return func;
                })();

                if (!deploy) { deploy = func; }

                break;

            case 'function':
                var func = (function() {
                    var inputParams = parseParams(method.inputs);
                    var outputParams = parseParams(method.outputs);

                    var signature = '(' + inputParams.types.join(',') + ')';
                    signature = signature.replace(/tuple/g, '');
                    signature = method.name + signature;

                    var parse = function(data) {
                        try {
                            return utils.coder.decode(method.outputs, utils.arrayify(data));
                        } catch(error) {
                            errors.throwError('invalid data for function output', errors.INVALID_ARGUMENT, {
                                arg: 'data',
                                errorArg: error.arg,
                                errorValue: error.value,
                                value: data,
                                reason: error.reason
                            });
                        }
                    };

                    var sighash = utils.keccak256(utils.toUtf8Bytes(signature)).substring(0, 10);
                    var func = function() {
                        var result = {
                            name: method.name,
                            signature: signature,
                            sighash: sighash,
                            type: ((method.constant) ? 'call': 'transaction')
                        };

                        var params = Array.prototype.slice.call(arguments, 0);

                        if (params.length < inputParams.types.length) {
                            errors.throwError('missing input argument', errors.MISSING_ARGUMENT, {
                                arg: (inputParams.names[params.length] || 'unknown'),
                                count: params.length,
                                expectedCount: inputParams.types.length,
                                name: method.name
                            });
                        } else if (params.length > inputParams.types.length) {
                            errors.throwError('too many input arguments', errors.UNEXPECTED_ARGUMENT, {
                                count: params.length,
                                expectedCount: inputParams.types.length
                            });
                        }

                        try {
                            var encodedParams = utils.coder.encode(method.inputs, params);
                        } catch (error) {
                            errors.throwError('invalid input argument', errors.INVALID_ARGUMENT, {
                                arg: error.arg,
                                reason: error.reason,
                                value: error.value
                            });
                        }

                        result.data = sighash + encodedParams.substring(2);
                        result.parse = parse;

                        return populateDescription(new FunctionDescription(), result);
                    }

                    utils.defineFrozen(func, 'inputs', inputParams);
                    utils.defineFrozen(func, 'outputs', outputParams);

                    utils.defineProperty(func, 'payable', (method.payable == null || !!method.payable))

                    utils.defineProperty(func, 'parseResult', parse);

                    utils.defineProperty(func, 'signature', signature);
                    utils.defineProperty(func, 'sighash', sighash);

                    return func;
                })();

                // Expose the first (and hopefully unique named function
                if (method.name && methods[method.name] == null) {
                    utils.defineProperty(methods, method.name, func);
                }

                // Expose all methods by their signature, for overloaded functions
                if (methods[func.signature] == null) {
                    utils.defineProperty(methods, func.signature, func);
                }

                break;

            case 'event':
                var func = (function() {
                    var inputParams = parseParams(method.inputs);

                    var signature = '(' + inputParams.types.join(',') + ')';
                    signature = signature.replace(/tuple/g, '');
                    signature = method.name + signature;

                    var result = {
                        anonymous: (!!method.anonymous),
                        name: method.name,
                        signature: signature,
                        type: 'event'
                    };

                    result.parse = function(topics, data) {
                        if (data == null) {
                            data = topics;
                            topics = null;
                        }

                        // Strip the signature off of non-anonymous topics
                        if (topics != null && !method.anonymous) { topics = topics.slice(1); }

                        var inputIndexed = [], inputNonIndexed = [];
                        var inputDynamic = [];
                        method.inputs.forEach(function(param, index) {

                            if (param.indexed) {
                                if (param.type === 'string' || param.type === 'bytes' || param.type.indexOf('[') >= 0 || param.type.substring(0, 5) === 'tuple') {
                                    inputIndexed.push({ type: 'bytes32', name: (param.name || '')});
                                    inputDynamic.push(true);
                                } else {
                                    inputIndexed.push(param);
                                    inputDynamic.push(false);
                                }
                            } else {
                                inputNonIndexed.push(param);
                                inputDynamic.push(false);
                            }
                        });

                        if (topics != null) {
                            var resultIndexed = utils.coder.decode(
                                inputIndexed,
                                utils.concat(topics)
                            );
                        }

                        var resultNonIndexed = utils.coder.decode(
                            inputNonIndexed,
                            utils.arrayify(data)
                        );

                        var result = new Result();
                        var nonIndexedIndex = 0, indexedIndex = 0;
                        method.inputs.forEach(function(input, index) {
                            if (input.indexed) {
                                if (topics == null) {
                                    result[index] = new Indexed(null);

                                } else if (inputDynamic[index]) {
                                    result[index] = new Indexed(resultIndexed[indexedIndex++]);
                                } else {
                                    result[index] = resultIndexed[indexedIndex++];
                                }
                            } else {
                                result[index] = resultNonIndexed[nonIndexedIndex++];
                            }
                            if (input.name) { result[input.name] = result[index]; }
                        });

                        result.length = method.inputs.length;

                        return result;
                    };

                    var func =  populateDescription(new EventDescription(), result)
                    utils.defineFrozen(func, 'topics', [ utils.keccak256(utils.toUtf8Bytes(signature)) ]);
                    utils.defineFrozen(func, 'inputs', inputParams);
                    return func;
                })();

                // Expose the first (and hopefully unique) event name
                if (method.name && events[method.name] == null) {
                    utils.defineProperty(events, method.name, func);
                }

                // Expose all events by their signature, for overloaded functions
                if (methods[func.signature] == null) {
                    utils.defineProperty(methods, func.signature, func);
                }

                break;

            case 'fallback':
                // Nothing to do for fallback
                break;

            default:
                console.log('WARNING: unsupported ABI type - ' + method.type);
                break;
        }
    };

    _abi.forEach(addMethod, this);

    // If there wasn't a constructor, create the default constructor
    if (!deploy) {
        addMethod({type: 'constructor', inputs: []});
    }

    utils.defineProperty(this, 'deployFunction', deploy);
}

utils.defineProperty(Interface.prototype, 'parseTransaction', function(tx) {
    var sighash = tx.data.substring(0, 10).toLowerCase();
    for (var name in this.functions) {
        if (name.indexOf('(') === -1) { continue; }
        var func = this.functions[name];
        if (func.sighash === sighash) {
            var result = utils.coder.decode(func.inputs.types, '0x' + tx.data.substring(10));
            return {
                args: result,
                signature: func.signature,
                sighash: func.sighash,
                parse: func.parseResult,
                value: tx.value,
            };
        }
    }
    return null;
});

module.exports = Interface;

},{"../utils/abi-coder":"../../node_modules/ethers/utils/abi-coder.js","../utils/convert":"../../node_modules/ethers/utils/convert.js","../utils/properties":"../../node_modules/ethers/utils/properties.js","../utils/utf8":"../../node_modules/ethers/utils/utf8.js","../utils/keccak256":"../../node_modules/ethers/utils/keccak256.js","../utils/errors":"../../node_modules/ethers/utils/errors.js"}],"../../node_modules/ethers/contracts/contract.js":[function(require,module,exports) {
'use strict';

var Interface = require('./interface.js');

var utils = (function() {
    var convert = require('../utils/convert.js');
    return {
        defineProperty: require('../utils/properties.js').defineProperty,

        getAddress: require('../utils/address.js').getAddress,

        bigNumberify: require('../utils/bignumber.js').bigNumberify,

        arrayify: convert.arrayify,
        hexlify: convert.hexlify,
    };
})();

var errors = require('../utils/errors');

var allowedTransactionKeys = {
    data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true
}

function copyObject(object) {
    var result = {};
    for (var key in object) {
        result[key] = object[key];
    }
    return result;
}


function Contract(addressOrName, contractInterface, signerOrProvider) {
    if (!(this instanceof Contract)) { throw new Error('missing new'); }

    // @TODO: Maybe still check the addressOrName looks like a valid address or name?
    //address = utils.getAddress(address);

    if (!(contractInterface instanceof Interface)) {
        contractInterface = new Interface(contractInterface);
    }

    if (!signerOrProvider) { throw new Error('missing signer or provider'); }

    var signer = signerOrProvider;
    var provider = null;

    if (signerOrProvider.provider) {
        provider = signerOrProvider.provider;
    } else {
        provider = signerOrProvider;
        signer = null;
    }

    utils.defineProperty(this, 'address', addressOrName);
    utils.defineProperty(this, 'interface', contractInterface);
    utils.defineProperty(this, 'signer', signer);
    utils.defineProperty(this, 'provider', provider);

    var addressPromise = provider.resolveName(addressOrName);

    function runMethod(method, estimateOnly) {
        return function() {
            var transaction = {}

            var params = Array.prototype.slice.call(arguments);

            // If 1 extra parameter was passed in, it contains overrides
            if (params.length === method.inputs.types.length + 1 && typeof(params[params.length - 1]) === 'object') {
                transaction = copyObject(params.pop());

                // Check for unexpected keys (e.g. using "gas" instead of "gasLimit")
                for (var key in transaction) {
                    if (!allowedTransactionKeys[key]) {
                        throw new Error('unknown transaction override ' + key);
                    }
                }
            }

            // Check overrides make sense
            ['data', 'to'].forEach(function(key) {
                if (transaction[key] != null) {
                    throw new Error('cannot override ' + key) ;
                }
            });

            var call = method.apply(contractInterface, params);

            // Send to the contract address
            transaction.to = addressOrName;

            // Set the transaction data
            transaction.data = call.data;

            switch (call.type) {
                case 'call':

                    // Call (constant functions) always cost 0 ether
                    if (estimateOnly) {
                        return Promise.resolve(new utils.bigNumberify(0));
                    }

                    // Check overrides make sense
                    ['gasLimit', 'gasPrice', 'value'].forEach(function(key) {
                        if (transaction[key] != null) {
                            throw new Error('call cannot override ' + key) ;
                        }
                    });

                    var fromPromise = null;
                    if (transaction.from == null && signer && signer.getAddress) {
                        fromPromise = signer.getAddress();
                        if (!(fromPromise instanceof Promise)) {
                            fromPromise = Promise.resolve(fromPromise);
                        }
                    } else {
                        fromPromise = Promise.resolve(null);
                    }

                    return fromPromise.then(function(address) {
                        if (address) {
                            transaction.from = utils.getAddress(address);
                        }
                        return provider.call(transaction);

                    }).then(function(value) {
                        try {
                            if ((utils.arrayify(value).length % 32) !== 0) {
                                throw new Error('call exception');
                            }
                            var result = call.parse(value);
                        } catch (error) {
                            if ((value === '0x' && method.outputs.types.length > 0) || error.message === 'call exception') {
                                errors.throwError('call exception', errors.CALL_EXCEPTION, {
                                    address: addressOrName,
                                    method: call.signature,
                                    value: params
                                });
                            }
                            throw error;
                        }
                        if (method.outputs.types.length === 1) {
                             result = result[0];
                        }
                        return result;
                    });

                case 'transaction':
                    if (!signer) { return Promise.reject(new Error('missing signer')); }

                    // Make sure they aren't overriding something they shouldn't
                    if (transaction.from != null) {
                        throw new Error('transaction cannot override from') ;
                    }

                    // Only computing the transaction estimate
                    if (estimateOnly) {
                        if (signer && signer.estimateGas) {
                            return signer.estimateGas(transaction);
                        }

                        return provider.estimateGas(transaction)
                    }

                    // If the signer supports sendTrasaction, use it
                    if (signer.sendTransaction) {
                        return signer.sendTransaction(transaction);
                    }

                    if (!signer.sign) {
                        return Promise.reject(new Error('custom signer does not support signing'));
                    }

                    if (transaction.gasLimit == null) {
                        transaction.gasLimit = signer.defaultGasLimit || 2000000;
                    }

                    var noncePromise = null;
                    if (transaction.nonce != null) {
                        noncePromise = Promise.resolve(transaction.nonce)
                    } else if (signer.getTransactionCount) {
                        noncePromise = signer.getTransactionCount();
                        if (!(noncePromise instanceof Promise)) {
                            noncePromise = Promise.resolve(noncePromise);
                        }
                    } else {
                        var addressPromise = signer.getAddress();
                        if (!(addressPromise instanceof Promise)) {
                            addressPromise = Promise.resolve(addressPromise);
                        }
                        noncePromise = addressPromise.then(function(address) {
                            return provider.getTransactionCount(address, 'pending');
                        });
                    }

                    var gasPricePromise = null;
                    if (transaction.gasPrice) {
                        gasPricePromise = Promise.resolve(transaction.gasPrice);
                    } else {
                        gasPricePromise = provider.getGasPrice();
                    }

                    return Promise.all([
                        noncePromise,
                        gasPricePromise

                    ]).then(function(results) {
                        transaction.nonce = results[0];
                        transaction.gasPrice = results[1];
                        return signer.sign(transaction);

                    }).then(function(signedTransaction) {
                        return provider.sendTransaction(signedTransaction);
                    });
            }
        };
    }

    var estimate = {};
    utils.defineProperty(this, 'estimate', estimate);

    var functions = {};
    utils.defineProperty(this, 'functions', functions);

    var events = {};
    utils.defineProperty(this, 'events', events);

    Object.keys(contractInterface.functions).forEach(function(methodName) {
        var method = contractInterface.functions[methodName];

        var run = runMethod(method, false);

        if (this[methodName] == null) {
            utils.defineProperty(this, methodName, run);
        } else {
            console.log('WARNING: Multiple definitions for ' + method);
        }

        if (functions[method] == null) {
            utils.defineProperty(functions, methodName, run);
            utils.defineProperty(estimate, methodName, runMethod(method, true));
        }
    }, this);

    Object.keys(contractInterface.events).forEach(function(eventName) {
        var eventInfo = contractInterface.events[eventName];

        var eventCallback = null;

        function handleEvent(log) {
            addressPromise.then(function(address) {

                // Not meant for us (the topics just has the same name)
                if (address != log.address) { return; }

                try {
                    var result = eventInfo.parse(log.topics, log.data);

                    // Some useful things to have with the log
                    log.args = result;
                    log.event = eventName;
                    log.parse = eventInfo.parse;
                    log.removeListener = function() {
                        provider.removeListener(eventInfo.topics, handleEvent);
                    }

                    log.getBlock = function() { return provider.getBlock(log.blockHash);; }
                    log.getTransaction = function() { return provider.getTransaction(log.transactionHash); }
                    log.getTransactionReceipt = function() { return provider.getTransactionReceipt(log.transactionHash); }
                    log.eventSignature = eventInfo.signature;

                    eventCallback.apply(log, Array.prototype.slice.call(result));
                } catch (error) {
                    console.log(error);
                }

                return null;
            }).catch(function(error) {
                //console.log(error);
            });
        }

        var property = {
            enumerable: true,
            get: function() {
                return eventCallback;
            },
            set: function(value) {
                if (!value) { value = null; }

                if (!value && eventCallback) {
                    provider.removeListener(eventInfo.topics, handleEvent);

                } else if (value && !eventCallback) {
                    provider.on(eventInfo.topics, handleEvent);
                }

                eventCallback = value;
            }
        };

        var propertyName = 'on' + eventName.toLowerCase();
        if (this[propertyName] == null) {
            Object.defineProperty(this, propertyName, property);
        }

        Object.defineProperty(events, eventName, property);

    }, this);
}

utils.defineProperty(Contract.prototype, 'connect', function(signerOrProvider) {
    return new Contract(this.address, this.interface, signerOrProvider);
});

utils.defineProperty(Contract, 'getDeployTransaction', function(bytecode, contractInterface) {

    if (!(contractInterface instanceof Interface)) {
        contractInterface = new Interface(contractInterface);
    }

    var args = Array.prototype.slice.call(arguments);
    args.splice(1, 1);

    return {
        data: contractInterface.deployFunction.apply(contractInterface, args).bytecode
    }
});

module.exports = Contract;

},{"./interface.js":"../../node_modules/ethers/contracts/interface.js","../utils/convert.js":"../../node_modules/ethers/utils/convert.js","../utils/properties.js":"../../node_modules/ethers/utils/properties.js","../utils/address.js":"../../node_modules/ethers/utils/address.js","../utils/bignumber.js":"../../node_modules/ethers/utils/bignumber.js","../utils/errors":"../../node_modules/ethers/utils/errors.js"}],"../../node_modules/ethers/contracts/index.js":[function(require,module,exports) {
'use strict';

var Contract = require('./contract.js');
var Interface = require('./interface.js');

module.exports = {
    Contract: Contract,
    Interface: Interface,
}


},{"./contract.js":"../../node_modules/ethers/contracts/contract.js","./interface.js":"../../node_modules/ethers/contracts/interface.js"}],"../../node_modules/ethers/node_modules/inherits/inherits_browser.js":[function(require,module,exports) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],"../../node_modules/ethers/providers/browser-xmlhttprequest.js":[function(require,module,exports) {
'use strict';

try {
    module.exports.XMLHttpRequest = XMLHttpRequest;
} catch(error) {
    console.log('Warning: XMLHttpRequest is not defined');
    module.exports.XMLHttpRequest = null;
}

},{}],"../../node_modules/ethers/providers/networks.json":[function(require,module,exports) {
module.exports = {
    "unspecified": {
        "chainId": 0,
        "name": "unspecified"
    },

    "homestead": {
        "chainId": 1,
        "ensAddress": "0x314159265dd8dbb310642f98f50c066173c1259b",
        "name": "homestead"
    },
    "mainnet": {
        "chainId": 1,
        "ensAddress": "0x314159265dd8dbb310642f98f50c066173c1259b",
        "name": "homestead"
    },

    "morden": {
        "chainId": 2,
        "name": "morden"
    },

    "ropsten": {
        "chainId": 3,
        "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
        "name": "ropsten"
    },
    "testnet": {
        "chainId": 3,
        "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
        "name": "ropsten"
    },

    "rinkeby": {
        "chainId": 4,
        "name": "rinkeby"
    },

    "kovan": {
        "chainId": 42,
        "name": "kovan"
    },

    "classic": {
        "chainId": 61,
        "name": "classic"
    }
}
;
},{}],"../../node_modules/ethers/utils/rlp.js":[function(require,module,exports) {
//See: https://github.com/ethereum/wiki/wiki/RLP

var convert = require('./convert.js');

function arrayifyInteger(value) {
    var result = [];
    while (value) {
        result.unshift(value & 0xff);
        value >>= 8;
    }
    return result;
}

function unarrayifyInteger(data, offset, length) {
    var result = 0;
    for (var i = 0; i < length; i++) {
        result = (result * 256) + data[offset + i];
    }
    return result;
}

function _encode(object) {
    if (Array.isArray(object)) {
        var payload = [];
        object.forEach(function(child) {
            payload = payload.concat(_encode(child));
        });

        if (payload.length <= 55) {
            payload.unshift(0xc0 + payload.length)
            return payload;
        }

        var length = arrayifyInteger(payload.length);
        length.unshift(0xf7 + length.length);

        return length.concat(payload);

    } else {
        object = [].slice.call(convert.arrayify(object));

        if (object.length === 1 && object[0] <= 0x7f) {
            return object;

        } else if (object.length <= 55) {
            object.unshift(0x80 + object.length);
            return object
        }

        var length = arrayifyInteger(object.length);
        length.unshift(0xb7 + length.length);

        return length.concat(object);
    }
}

function encode(object) {
    return convert.hexlify(_encode(object));
}

function _decodeChildren(data, offset, childOffset, length) {
    var result = [];

    while (childOffset < offset + 1 + length) {
        var decoded = _decode(data, childOffset);

        result.push(decoded.result);

        childOffset += decoded.consumed;
        if (childOffset > offset + 1 + length) {
            throw new Error('invalid rlp');
        }
    }

    return {consumed: (1 + length), result: result};
}

// returns { consumed: number, result: Object }
function _decode(data, offset) {
    if (data.length === 0) { throw new Error('invalid rlp data'); }

    // Array with extra length prefix
    if (data[offset] >= 0xf8) {
        var lengthLength = data[offset] - 0xf7;
        if (offset + 1 + lengthLength > data.length) {
            throw new Error('too short');
        }

        var length = unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) {
            throw new Error('to short');
        }

        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);

    } else if (data[offset] >= 0xc0) {
        var length = data[offset] - 0xc0;
        if (offset + 1 + length > data.length) {
            throw new Error('invalid rlp data');
        }

        return _decodeChildren(data, offset, offset + 1, length);

    } else if (data[offset] >= 0xb8) {
        var lengthLength = data[offset] - 0xb7;
        if (offset + 1 + lengthLength > data.length) {
            throw new Error('invalid rlp data');
        }

        var length = unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) {
            throw new Error('invalid rlp data');
        }

        var result = convert.hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));
        return { consumed: (1 + lengthLength + length), result: result }

    } else if (data[offset] >= 0x80) {
        var length = data[offset] - 0x80;
        if (offset + 1 + length > data.offset) {
            throw new Error('invlaid rlp data');
        }

        var result = convert.hexlify(data.slice(offset + 1, offset + 1 + length));
        return { consumed: (1 + length), result: result }
    }
    return { consumed: 1, result: convert.hexlify(data[offset]) };
}

function decode(data) {
    data = convert.arrayify(data);
    var decoded = _decode(data, 0);
    if (decoded.consumed !== data.length) {
        throw new Error('invalid rlp data');
    }
    return decoded.result;
}

module.exports = {
    encode: encode,
    decode: decode,
}

},{"./convert.js":"../../node_modules/ethers/utils/convert.js"}],"../../node_modules/ethers/utils/contract-address.js":[function(require,module,exports) {

var getAddress = require('./address').getAddress;
var convert = require('./convert');
var keccak256 = require('./keccak256');
var RLP = require('./rlp');

// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed
function getContractAddress(transaction) {
    if (!transaction.from) { throw new Error('missing from address'); }
    var nonce = transaction.nonce;

    return getAddress('0x' + keccak256(RLP.encode([
        getAddress(transaction.from),
        convert.stripZeros(convert.hexlify(nonce, 'nonce'))
    ])).substring(26));
}

module.exports = {
    getContractAddress: getContractAddress,
}

},{"./address":"../../node_modules/ethers/utils/address.js","./convert":"../../node_modules/ethers/utils/convert.js","./keccak256":"../../node_modules/ethers/utils/keccak256.js","./rlp":"../../node_modules/ethers/utils/rlp.js"}],"../../node_modules/ethers/utils/browser-base64.js":[function(require,module,exports) {
'use strict';

var convert = require('./convert');

module.exports = {
    decode: function(textData) {
         textData = atob(textData);
         var data = [];
         for (var i = 0; i < textData.length; i++) {
             data.push(textData.charCodeAt(i));
         }
         return convert.arrayify(data);
    },
    encode: function(data) {
        data = convert.arrayify(data);
        var textData = '';
        for (var i = 0; i < data.length; i++) {
            textData += String.fromCharCode(data[i]);
        }
        return btoa(textData);
    }
};



},{"./convert":"../../node_modules/ethers/utils/convert.js"}],"../../node_modules/ethers/utils/namehash.js":[function(require,module,exports) {
'use strict';

var convert = require('./convert');
var utf8 = require('./utf8');
var keccak256 = require('./keccak256');

var Zeros = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
var Partition = new RegExp("^((.*)\\.)?([^.]+)$");
var UseSTD3ASCIIRules = new RegExp("^[a-z0-9.-]*$");

function namehash(name, depth) {
    name = name.toLowerCase();

    // Supporting the full UTF-8 space requires additional (and large)
    // libraries, so for now we simply do not support them.
    // It should be fairly easy in the future to support systems with
    // String.normalize, but that is future work.
    if (!name.match(UseSTD3ASCIIRules)) {
        throw new Error('contains invalid UseSTD3ASCIIRules characters');
    }

    var result = Zeros;
    var processed = 0;
    while (name.length && (!depth || processed < depth)) {
        var partition = name.match(Partition);
        var label = utf8.toUtf8Bytes(partition[3]);
        result = keccak256(convert.concat([result, keccak256(label)]));

        name = partition[2] || '';

        processed++;
    }

    return convert.hexlify(result);
}

module.exports = namehash;


},{"./convert":"../../node_modules/ethers/utils/convert.js","./utf8":"../../node_modules/ethers/utils/utf8.js","./keccak256":"../../node_modules/ethers/utils/keccak256.js"}],"../../node_modules/ethers/providers/provider.js":[function(require,module,exports) {
'use strict';

var inherits = require('inherits');

var XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;

var networks = require('./networks.json');

var utils = (function() {
    var convert = require('../utils/convert');
    var utf8 = require('../utils/utf8');
    return {
        defineProperty: require('../utils/properties').defineProperty,

        getAddress: require('../utils/address').getAddress,
        getContractAddress: require('../utils/contract-address').getContractAddress,

        bigNumberify: require('../utils/bignumber').bigNumberify,
        arrayify: convert.arrayify,

        hexlify: convert.hexlify,
        isHexString: convert.isHexString,

        concat: convert.concat,
        hexStripZeros: convert.hexStripZeros,
        stripZeros: convert.stripZeros,

        base64: require('../utils/base64'),

        namehash: require('../utils/namehash'),

        toUtf8String: utf8.toUtf8String,
        toUtf8Bytes: utf8.toUtf8Bytes,

        RLP: require('../utils/rlp'),
    }
})();

var errors = require('../utils/errors');

function copyObject(obj) {
    var result = {};
    for (var key in obj) { result[key] = obj[key]; }
    return result;
}

function check(format, object) {
    var result = {};
    for (var key in format) {
        try {
            var value = format[key](object[key]);
            if (value !== undefined) { result[key] = value; }
        } catch (error) {
            error.checkKey = key;
            error.checkValue = object[key];
            throw error;
        }
    }
    return result;
}

function allowNull(check, nullValue) {
    return (function(value) {
        if (value == null) { return nullValue; }
        return check(value);
    });
}

function allowFalsish(check, replaceValue) {
    return (function(value) {
        if (!value) { return replaceValue; }
        return check(value);
    });
}

function arrayOf(check) {
    return (function(array) {
        if (!Array.isArray(array)) { throw new Error('not an array'); }

        var result = [];

        array.forEach(function(value) {
            result.push(check(value));
        });

        return result;
    });
}

function checkHash(hash) {
    if (!utils.isHexString(hash) || hash.length !== 66) {
        throw new Error('invalid hash - ' + hash);
    }
    return hash;
}

function checkNumber(number) {
    return utils.bigNumberify(number).toNumber();
}

function checkDifficulty(number) {
    var value = utils.bigNumberify(number);

    try {
        value = value.toNumber();
    } catch (error) {
        value = null;
    }

    return value;
}

function checkBoolean(value) {
    if (typeof(value) === 'boolean') { return value; }
    if (typeof(value) === 'string') {
        if (value === 'true') { return true; }
        if (value === 'false') { return false; }
    }
    throw new Error('invaid boolean - ' + value);
}

function checkUint256(uint256) {
    if (!utils.isHexString(uint256)) {
        throw new Error('invalid uint256');
    }
    while (uint256.length < 66) {
        uint256 = '0x0' + uint256.substring(2);
    }
    return uint256;
}

function checkString(string) {
    if (typeof(string) !== 'string') { throw new Error('invalid string'); }
    return string;
}

function checkBlockTag(blockTag) {
    if (blockTag == null) { return 'latest'; }

    if (blockTag === 'earliest') { return '0x0'; }

    if (blockTag === 'latest' || blockTag === 'pending') {
        return blockTag;
    }

    if (typeof(blockTag) === 'number') {
        return utils.hexStripZeros(utils.hexlify(blockTag));
    }

    if (utils.isHexString(blockTag)) { return utils.hexStripZeros(blockTag); }

    throw new Error('invalid blockTag');
}

var formatBlock = {
    hash: checkHash,
    parentHash: checkHash,
    number: checkNumber,

    timestamp: checkNumber,
    nonce: allowNull(utils.hexlify),
    difficulty: checkDifficulty,

    gasLimit: utils.bigNumberify,
    gasUsed: utils.bigNumberify,

    miner: utils.getAddress,
    extraData: utils.hexlify,

    //transactions: allowNull(arrayOf(checkTransaction)),
    transactions: allowNull(arrayOf(checkHash)),

    //transactionRoot: checkHash,
    //stateRoot: checkHash,
    //sha3Uncles: checkHash,

    //logsBloom: utils.hexlify,
};

function checkBlock(block) {
    if (block.author != null && block.miner == null) {
        block.miner = block.author;
    }
    return check(formatBlock, block);
}


var formatTransaction = {
   hash: checkHash,

   blockHash: allowNull(checkHash, null),
   blockNumber: allowNull(checkNumber, null),
   transactionIndex: allowNull(checkNumber, null),

   from: utils.getAddress,

   gasPrice: utils.bigNumberify,
   gasLimit: utils.bigNumberify,
   to: allowNull(utils.getAddress, null),
   value: utils.bigNumberify,
   nonce: checkNumber,
   data: utils.hexlify,

   r: allowNull(checkUint256),
   s: allowNull(checkUint256),
   v: allowNull(checkNumber),

   creates: allowNull(utils.getAddress, null),

   raw: allowNull(utils.hexlify),
};

function checkTransaction(transaction) {

    // Rename gas to gasLimit
    if (transaction.gas != null && transaction.gasLimit == null) {
        transaction.gasLimit = transaction.gas;
    }

    // Some clients (TestRPC) do strange things like return 0x0 for the
    // 0 address; correct this to be a real address
    if (transaction.to && utils.bigNumberify(transaction.to).isZero()) {
        transaction.to = '0x0000000000000000000000000000000000000000';
    }

    // Rename input to data
    if (transaction.input != null && transaction.data == null) {
        transaction.data = transaction.input;
    }

    // If to and creates are empty, populate the creates from the transaction
    if (transaction.to == null && transaction.creates == null) {
        transaction.creates = utils.getContractAddress(transaction);
    }

    if (!transaction.raw) {
        // Very loose providers (e.g. TestRPC) don't provide a signature or raw
        if (transaction.v && transaction.r && transaction.s) {
            var raw = [
                utils.stripZeros(utils.hexlify(transaction.nonce)),
                utils.stripZeros(utils.hexlify(transaction.gasPrice)),
                utils.stripZeros(utils.hexlify(transaction.gasLimit)),
                (transaction.to || "0x"),
                utils.stripZeros(utils.hexlify(transaction.value || '0x')),
                utils.hexlify(transaction.data || '0x'),
                utils.stripZeros(utils.hexlify(transaction.v || '0x')),
                utils.stripZeros(utils.hexlify(transaction.r)),
                utils.stripZeros(utils.hexlify(transaction.s)),
            ];

            transaction.raw = utils.RLP.encode(raw);
        }
    }


    var result = check(formatTransaction, transaction);

    var networkId = transaction.networkId;

    if (utils.isHexString(networkId)) {
        networkId = utils.bigNumberify(networkId).toNumber();
    }

    if (typeof(networkId) !== 'number' && result.v != null) {
        networkId = (result.v - 35) / 2;
        if (networkId < 0) { networkId = 0; }
        networkId = parseInt(networkId);
    }

    if (typeof(networkId) !== 'number') { networkId = 0; }

    result.networkId = networkId;

    // 0x0000... should actually be null
    if (result.blockHash && result.blockHash.replace(/0/g, '') === 'x') {
        result.blockHash = null;
    }

    return result;
}

var formatTransactionRequest = {
    from: allowNull(utils.getAddress),
    nonce: allowNull(checkNumber),
    gasLimit: allowNull(utils.bigNumberify),
    gasPrice: allowNull(utils.bigNumberify),
    to: allowNull(utils.getAddress),
    value: allowNull(utils.bigNumberify),
    data: allowNull(utils.hexlify),
};

function checkTransactionRequest(transaction) {
    return check(formatTransactionRequest, transaction);
}

var formatTransactionReceiptLog = {
    transactionLogIndex: allowNull(checkNumber),
    transactionIndex: checkNumber,
    blockNumber: checkNumber,
    transactionHash: checkHash,
    address: utils.getAddress,
    topics: arrayOf(checkHash),
    data: utils.hexlify,
    logIndex: checkNumber,
    blockHash: checkHash,
};

function checkTransactionReceiptLog(log) {
    return check(formatTransactionReceiptLog, log);
}

var formatTransactionReceipt = {
    contractAddress: allowNull(utils.getAddress, null),
    transactionIndex: checkNumber,
    root: allowNull(checkHash),
    gasUsed: utils.bigNumberify,
    logsBloom: allowNull(utils.hexlify),
    blockHash: checkHash,
    transactionHash: checkHash,
    logs: arrayOf(checkTransactionReceiptLog),
    blockNumber: checkNumber,
    cumulativeGasUsed: utils.bigNumberify,
    status: allowNull(checkNumber)
};

function checkTransactionReceipt(transactionReceipt) {
    var status = transactionReceipt.status;
    var root = transactionReceipt.root;

    var result = check(formatTransactionReceipt, transactionReceipt);
    result.logs.forEach(function(entry, index) {
        if (entry.transactionLogIndex == null) {
            entry.transactionLogIndex = index;
        }
    });
    if (transactionReceipt.status != null) {
        result.byzantium = true;
    }
    return result;
}

function checkTopics(topics) {
    if (Array.isArray(topics)) {
        topics.forEach(function(topic) {
            checkTopics(topic);
        });

    } else if (topics != null) {
        checkHash(topics);
    }

    return topics;
}

var formatFilter = {
    fromBlock: allowNull(checkBlockTag, undefined),
    toBlock: allowNull(checkBlockTag, undefined),
    address: allowNull(utils.getAddress, undefined),
    topics: allowNull(checkTopics, undefined),
};

function checkFilter(filter) {
    return check(formatFilter, filter);
}

var formatLog = {
    blockNumber: allowNull(checkNumber),
    blockHash: allowNull(checkHash),
    transactionIndex: checkNumber,

    removed: allowNull(checkBoolean),

    address: utils.getAddress,
    data: allowFalsish(utils.hexlify, '0x'),

    topics: arrayOf(checkHash),

    transactionHash: checkHash,
    logIndex: checkNumber,
}

function checkLog(log) {
    return check(formatLog, log);
}

function Provider(network) {
    if (!(this instanceof Provider)) { throw new Error('missing new'); }

    network = Provider.getNetwork(network);

    // Check the ensAddress (if any)
    var ensAddress = null;
    if (network.ensAddress) {
        ensAddress = utils.getAddress(network.ensAddress);
    }

    // Setup our network properties
    utils.defineProperty(this, 'chainId', network.chainId);
    utils.defineProperty(this, 'ensAddress', ensAddress);
    utils.defineProperty(this, 'name', network.name);

    var events = {};
    utils.defineProperty(this, '_events', events);

    // We use this to track recent emitted events; for example, if we emit a "block" of 100
    // and we get a `getBlock(100)` request which would result in null, we should retry
    // until we get a response. This provides devs with a consistent view. Similarly for
    // transaction hashes.
    utils.defineProperty(this, '_emitted', { block: -1 });

    var self = this;

    var lastBlockNumber = null;

    var balances = {};

    function doPoll() {
        self.getBlockNumber().then(function(blockNumber) {

            // If the block hasn't changed, meh.
            if (blockNumber === lastBlockNumber) { return; }

            if (lastBlockNumber === null) { lastBlockNumber = blockNumber - 1; }

            // Notify all listener for each block that has passed
            for (var i = lastBlockNumber + 1; i <= blockNumber; i++) {
                if (self._emitted.block < i) {
                    self._emitted.block = i;

                    // Evict any transaction hashes or block hashes over 12 blocks
                    // old, since they should not return null anyways
                    Object.keys(self._emitted).forEach(function(key) {
                        if (key === 'block') { return; }

                        if (self._emitted[key] > i + 12) {
                            delete self._emitted[key];
                        }
                    });
                }
                self.emit('block', i);
            }

            // Sweep balances and remove addresses we no longer have events for
            var newBalances = {};

            // Find all transaction hashes we are waiting on
            Object.keys(events).forEach(function(eventName) {
                var event = parseEventString(eventName);

                if (event.type === 'transaction') {
                    self.getTransaction(event.hash).then(function(transaction) {
                        if (!transaction || transaction.blockNumber == null) { return null; }
                        self._emitted['t:' + transaction.hash.toLowerCase()] = transaction.blockNumber;
                        self.emit(event.hash, transaction);
                        return null;
                    }).catch(function(error) { });

                } else if (event.type === 'address') {
                    if (balances[event.address]) {
                        newBalances[event.address] = balances[event.address];
                    }
                    self.getBalance(event.address, 'latest').then(function(balance) {
                        var lastBalance = balances[event.address];
                        if (lastBalance && balance.eq(lastBalance)) { return null; }
                        balances[event.address] = balance;
                        self.emit(event.address, balance);
                        return null;
                    }).catch(function(error) { });

                } else if (event.type === 'topic') {
                    self.getLogs({
                        fromBlock: lastBlockNumber + 1,
                        toBlock: blockNumber,
                        topics: event.topic
                    }).then(function(logs) {
                        if (logs.length === 0) { return null; }
                        logs.forEach(function(log) {
                            self._emitted['b:' + log.blockHash.toLowerCase()] = log.blockNumber;
                            self._emitted['t:' + log.transactionHash.toLowerCase()] = log.blockNumber;
                            self.emit(event.topic, log);
                        });
                        return null;
                    }).catch(function(error) { });
                }
            });

            lastBlockNumber = blockNumber;

            balances = newBalances;

            return null;
        }).catch(function() { });

        self.doPoll();
    }

    utils.defineProperty(this, 'resetEventsBlock', function(blockNumber) {
        lastBlockNumber = blockNumber;
        self.doPoll();
    });

    var pollingInterval = 4000;

    var poller = null;
    Object.defineProperty(this, 'polling', {
        get: function() { return (poller != null); },
        set: function(value) {
            setTimeout(function() {
                if (value && !poller) {
                    poller = setInterval(doPoll, pollingInterval);

                } else if (!value && poller) {
                    clearInterval(poller);
                    poller = null;
                }
            }, 0);
        }
    });

    Object.defineProperty(this, 'pollingInterval', {
        get: function() { return pollingInterval; },
        set: function(value) {
            if (typeof(value) !== 'number' || value <= 0 || parseInt(value) != value) {
                throw new Error('invalid polling interval');
            }

            pollingInterval = value;

            if (poller) {
                clearInterval(poller);
                poller = setInterval(doPoll, pollingInterval);
            }
        }
    });

    // @TODO: Add .poller which must be an event emitter with a 'start', 'stop' and 'block' event;
    //        this will be used once we move to the WebSocket or other alternatives to polling
}

function inheritable(parent) {
    return function(child) {
        inherits(child, parent);
        utils.defineProperty(child, 'inherits', inheritable(child));
    }
}

utils.defineProperty(Provider, 'inherits', inheritable(Provider));
/*
function(child) {
    inherits(child, Provider);
    child.inherits = function(grandchild) {
        inherits(grandchild, child)
    }
});
*/

utils.defineProperty(Provider, 'getNetwork', function(network) {

    if (typeof(network) === 'string') {
        network = networks[network];
        if (!network) { throw new Error('unknown network'); }

    } else if (network == null) {
        network = networks['homestead'];
    }

    if (typeof(network.chainId) !== 'number') { throw new Error('invalid chainId'); }

    return network;
});

utils.defineProperty(Provider, 'networks', networks);

utils.defineProperty(Provider, 'fetchJSON', function(url, json, processFunc) {
    var headers = [ ];

    if (typeof(url) === 'object' && url.url != null && url.user != null && url.password != null) {
        if (url.url.substring(0, 6) !== 'https:' && url.forceInsecure !== true) {
            errors.throwError('basic authentication requires a secure https url', errors.INVALID_ARGUMENT, { arg: 'url', url: url.url, user: url.user, password: '[REDACTED]' });
        }

        var authorization = url.user + ':' + url.password;
        headers.push({
            key: 'Authorization',
            value: 'Basic ' + utils.base64.encode(utils.toUtf8Bytes(authorization))
        });

        url = url.url;
    }

    return new Promise(function(resolve, reject) {
        var request = new XMLHttpRequest();

        if (json) {
            request.open('POST', url, true);
            headers.push({ key: 'Content-Type', value: 'application/json' });
        } else {
            request.open('GET', url, true);
        }

        headers.forEach(function(header) {
            request.setRequestHeader(header.key, header.value);
        });

        request.onreadystatechange = function() {
            if (request.readyState !== 4) { return; }

            try {
                var result = JSON.parse(request.responseText);
            } catch (error) {
                var jsonError = new Error('invalid json response');
                jsonError.orginialError = error;
                jsonError.responseText = request.responseText;
                jsonError.url = url;
                reject(jsonError);
                return;
            }

            if (processFunc) {
                try {
                    result = processFunc(result);
                } catch (error) {
                    error.url = url;
                    error.body = json;
                    error.responseText = request.responseText;
                    reject(error);
                    return;
                }
            }

            if (request.status != 200) {
                var error = new Error('invalid response - ' + request.status);
                error.statusCode = request.statusCode;
                reject(error);
                return;
            }

            resolve(result);
        };

        request.onerror = function(error) {
            reject(error);
        }

        try {
            if (json) {
                request.send(json);
            } else {
                request.send();
            }

        } catch (error) {
            var connectionError = new Error('connection error');
            connectionError.error = error;
            reject(connectionError);
        }
    });
});


utils.defineProperty(Provider.prototype, 'waitForTransaction', function(transactionHash, timeout) {
    var self = this;
    return new Promise(function(resolve, reject) {
        var timer = null;

        function complete(transaction) {
            if (timer) { clearTimeout(timer); }
            resolve(transaction);
        }

        self.once(transactionHash, complete);

        if (typeof(timeout) === 'number' && timeout > 0) {
            timer = setTimeout(function() {
                self.removeListener(transactionHash, complete);
                reject(new Error('timeout'));
            }, timeout);
        }

    });
});


utils.defineProperty(Provider.prototype, 'getBlockNumber', function() {
    try {
        return this.perform('getBlockNumber').then(function(result) {
            var value = parseInt(result);
            if (value != result) { throw new Error('invalid response - getBlockNumber'); }
            return value;
        });
    } catch (error) {
        return Promise.reject(error);
    }
});

utils.defineProperty(Provider.prototype, 'getGasPrice', function() {
    try {
        return this.perform('getGasPrice').then(function(result) {
            return utils.bigNumberify(result);
        });
    } catch (error) {
        return Promise.reject(error);
    }
});


utils.defineProperty(Provider.prototype, 'getBalance', function(addressOrName, blockTag) {
    var self = this;
    return this.resolveName(addressOrName).then(function(address) {
        var params = { address: address, blockTag: checkBlockTag(blockTag) };
        return self.perform('getBalance', params).then(function(result) {
            return utils.bigNumberify(result);
        });
    });
});

utils.defineProperty(Provider.prototype, 'getTransactionCount', function(addressOrName, blockTag) {
    var self = this;
    return this.resolveName(addressOrName).then(function(address) {
        var params = { address: address, blockTag: checkBlockTag(blockTag) };
        return self.perform('getTransactionCount', params).then(function(result) {
            var value = parseInt(result);
            if (value != result) { throw new Error('invalid response - getTransactionCount'); }
            return value;
        });
    });
});

utils.defineProperty(Provider.prototype, 'getCode', function(addressOrName, blockTag) {
    var self = this;
    return this.resolveName(addressOrName).then(function(address) {
        var params = {address: address, blockTag: checkBlockTag(blockTag)};
        return self.perform('getCode', params).then(function(result) {
            return utils.hexlify(result);
        });
    });
});

utils.defineProperty(Provider.prototype, 'getStorageAt', function(addressOrName, position, blockTag) {
    var self = this;
    return this.resolveName(addressOrName).then(function(address) {
        var params = {
            address: address,
            blockTag: checkBlockTag(blockTag),
            position: utils.hexStripZeros(utils.hexlify(position)),
        };
        return self.perform('getStorageAt', params).then(function(result) {
            return utils.hexlify(result);
        });
    });
});

utils.defineProperty(Provider.prototype, 'sendTransaction', function(signedTransaction) {
    try {
        var params = {signedTransaction: utils.hexlify(signedTransaction)};
        return this.perform('sendTransaction', params).then(function(result) {
            result = utils.hexlify(result);
            if (result.length !== 66) { throw new Error('invalid response - sendTransaction'); }
            return result;
        });
    } catch (error) {
        return Promise.reject(error);
    }
});


utils.defineProperty(Provider.prototype, 'call', function(transaction) {
    var self = this;
    return this._resolveNames(transaction, [ 'to', 'from' ]).then(function(transaction) {
        var params = { transaction: checkTransactionRequest(transaction) };
        return self.perform('call', params).then(function(result) {
            return utils.hexlify(result);
        });
    });
});

utils.defineProperty(Provider.prototype, 'estimateGas', function(transaction) {
    var self = this;
    return this._resolveNames(transaction, [ 'to', 'from' ]).then(function(transaction) {
        var params = {transaction: checkTransactionRequest(transaction)};
        return self.perform('estimateGas', params).then(function(result) {
             return utils.bigNumberify(result);
        });
    });
});

function stallPromise(allowNullFunc, executeFunc) {
    return new Promise(function(resolve, reject) {
        var attempt = 0;
        function check() {
            executeFunc().then(function(result) {
                // If we have a result, or are allowed null then we're done
                if (result || allowNullFunc()) {
                    resolve(result);

                // Otherwise, exponential back-off (up to 10s) our next request
                } else {
                    attempt++;
                    var timeout = 500 + 250 * parseInt(Math.random() * (1 << attempt));
                    if (timeout > 10000) { timeout = 10000; }
                    setTimeout(check, timeout);
                }
                return null;
            }, function(error) {
                reject(error);
            }).catch(function(error) { reject(error); });
        }
        check();
    });
}

utils.defineProperty(Provider.prototype, 'getBlock', function(blockHashOrBlockTag) {
    var self = this;
    try {
        var blockHash = utils.hexlify(blockHashOrBlockTag);
        if (blockHash.length === 66) {
            return stallPromise(function() {
                return (self._emitted['b:' + blockHash.toLowerCase()] == null);
            }, function() {
                return self.perform('getBlock', {blockHash: blockHash}).then(function(block) {
                    if (block == null) { return null; }
                    return checkBlock(block);
                });
            });
        }
    } catch (error) { }

    try {
        var blockTag = checkBlockTag(blockHashOrBlockTag);
        return stallPromise(function() {
            if (utils.isHexString(blockTag)) {
                var blockNumber = parseInt(blockTag.substring(2), 16);
                return blockNumber > self._emitted.block;
            }
            return true;
        }, function() {
            return self.perform('getBlock', { blockTag: blockTag }).then(function(block) {
                if (block == null) { return null; }
                return checkBlock(block);
            });
        });
    } catch (error) { }

    return Promise.reject(new Error('invalid block hash or block tag'));
});

utils.defineProperty(Provider.prototype, 'getTransaction', function(transactionHash) {
    var self = this;
    try {
        var params = { transactionHash: checkHash(transactionHash) };
        return stallPromise(function() {
            return (self._emitted['t:' + transactionHash.toLowerCase()] == null);
        }, function() {
            return self.perform('getTransaction', params).then(function(result) {
                if (result != null) { result = checkTransaction(result); }
                return result;
            });
        });
    } catch (error) {
        return Promise.reject(error);
    }
});

utils.defineProperty(Provider.prototype, 'getTransactionReceipt', function(transactionHash) {
    var self = this;

    try {
        var params = { transactionHash: checkHash(transactionHash) };
        return stallPromise(function() {
            return (self._emitted['t:' + transactionHash.toLowerCase()] == null);
        }, function() {
            return self.perform('getTransactionReceipt', params).then(function(result) {
                if (result != null) { result = checkTransactionReceipt(result); }
                return result;
            });
        });
    } catch (error) {
        return Promise.reject(error);
    }
});

utils.defineProperty(Provider.prototype, 'getLogs', function(filter) {
    var self = this;
    return this._resolveNames(filter, ['address']).then(function(filter) {
        var params = { filter: checkFilter(filter) };
        return self.perform('getLogs', params).then(function(result) {
            return arrayOf(checkLog)(result);
        });
    });
});

utils.defineProperty(Provider.prototype, 'getEtherPrice', function() {
    try {
        return this.perform('getEtherPrice', {}).then(function(result) {
            // @TODO: Check valid float
            return result;
        });
    } catch (error) {
        return Promise.reject(error);
    }
});


utils.defineProperty(Provider.prototype, '_resolveNames', function(object, keys) {
    var promises = [];

    var result = copyObject(object);

    keys.forEach(function(key) {
        if (result[key] === undefined) { return; }
        promises.push(this.resolveName(result[key]).then(function(address) {
            result[key] = address;
            return null;
        }));
    }, this);

    return Promise.all(promises).then(function() { return result; });
});

utils.defineProperty(Provider.prototype, '_getResolver', function(name) {
    var nodeHash = utils.namehash(name);

    // keccak256('resolver(bytes32)')
    var data = '0x0178b8bf' + nodeHash.substring(2);
    var transaction = { to: this.ensAddress, data: data };

    // Get the resolver from the blockchain
    return this.call(transaction).then(function(data) {

        // extract the address from the data
        if (data.length != 66) { return null; }
        return utils.getAddress('0x' + data.substring(26));
    });
});

utils.defineProperty(Provider.prototype, 'resolveName', function(name) {
    // If it is already an address, nothing to resolve
    try {
        return Promise.resolve(utils.getAddress(name));
    } catch (error) { }

    if (!this.ensAddress) { throw new Error('network does not have ENS deployed'); }

    var self = this;

    var nodeHash = utils.namehash(name);

    // Get the addr from the resovler
    return this._getResolver(name).then(function(resolverAddress) {

        // keccak256('addr(bytes32)')
        var data = '0x3b3b57de' + nodeHash.substring(2);
        var transaction = { to: resolverAddress, data: data };
        return self.call(transaction);

    // extract the address from the data
    }).then(function(data) {
        if (data.length != 66) { return null; }
        var address = utils.getAddress('0x' + data.substring(26));
        if (address === '0x0000000000000000000000000000000000000000') { return null; }
        return address;
    });
});

utils.defineProperty(Provider.prototype, 'lookupAddress', function(address) {
    if (!this.ensAddress) { throw new Error('network does not have ENS deployed'); }

    address = utils.getAddress(address);

    var name = address.substring(2) + '.addr.reverse'
    var nodehash = utils.namehash(name);

    var self = this;

    return this._getResolver(name).then(function(resolverAddress) {
        if (!resolverAddress) { return null; }

        // keccak('name(bytes32)')
        var data = '0x691f3431' + nodehash.substring(2);
        var transaction = { to: resolverAddress, data: data };
        return self.call(transaction);

    }).then(function(data) {
        // Strip off the "0x"
        data = data.substring(2);

        // Strip off the dynamic string pointer (0x20)
        if (data.length < 64) { return null; }
        data = data.substring(64);

        if (data.length < 64) { return null; }
        var length = utils.bigNumberify('0x' + data.substring(0, 64)).toNumber();
        data = data.substring(64);

        if (2 * length > data.length) { return null; }

        var name = utils.toUtf8String('0x' + data.substring(0, 2 * length));

        // Make sure the reverse record matches the foward record
        return self.resolveName(name).then(function(addr) {
            if (addr != address) { return null; }
            return name;
        });

    });
});

utils.defineProperty(Provider.prototype, 'doPoll', function() {
});

utils.defineProperty(Provider.prototype, 'perform', function(method, params) {
    return Promise.reject(new Error('not implemented - ' + method));
});

function recurse(object, convertFunc) {
    if (Array.isArray(object)) {
        var result = [];
        object.forEach(function(object) {
            result.push(recurse(object, convertFunc));
        });
        return result;
    }
    return convertFunc(object);
}

function getEventString(object) {
    try {
        return 'address:' + utils.getAddress(object);
    } catch (error) { }

    if (object === 'block') {
        return 'block';

    } else if (object === 'pending') {
        return 'pending';

    } else if (utils.isHexString(object)) {
        if (object.length === 66) {
            return 'tx:' + object;
        }
    } else if (Array.isArray(object)) {
        object = recurse(object, function(object) {
            if (object == null) { object = '0x'; }
            return object;
        });

        try {
            return 'topic:' + utils.RLP.encode(object);
        } catch (error) {
            console.log(error);
        }
    }

    throw new Error('invalid event - ' + object);
}

function parseEventString(string) {
    if (string.substring(0, 3) === 'tx:') {
        return {type: 'transaction', hash: string.substring(3)};

    } else if (string === 'block') {
        return {type: 'block'};

    } else if (string === 'pending') {
        return {type: 'pending'};

    } else if (string.substring(0, 8) === 'address:') {
        return {type: 'address', address: string.substring(8)};

    } else if (string.substring(0, 6) === 'topic:') {
        try {
            var object = utils.RLP.decode(string.substring(6));
            object = recurse(object, function(object) {
                if (object === '0x') { object = null; }
                return object;
            });
            return {type: 'topic', topic: object};
        } catch (error) {
            console.log(error);
        }
    }

    throw new Error('invalid event string');
}

utils.defineProperty(Provider.prototype, '_startPending', function() {
    console.log('WARNING: this provider does not support pending events');
});

utils.defineProperty(Provider.prototype, '_stopPending', function() {
});

utils.defineProperty(Provider.prototype, 'on', function(eventName, listener) {
    var key = getEventString(eventName);
    if (!this._events[key]) { this._events[key] = []; }
    this._events[key].push({eventName: eventName, listener: listener, type: 'on'});
    if (key === 'pending') { this._startPending(); }
    this.polling = true;
});

utils.defineProperty(Provider.prototype, 'once', function(eventName, listener) {
    var key = getEventString(eventName);
    if (!this._events[key]) { this._events[key] = []; }
    this._events[key].push({eventName: eventName, listener: listener, type: 'once'});
    if (key === 'pending') { this._startPending(); }
    this.polling = true;
});

utils.defineProperty(Provider.prototype, 'emit', function(eventName) {
    var key = getEventString(eventName);

    var args = Array.prototype.slice.call(arguments, 1);
    var listeners = this._events[key];
    if (!listeners) { return; }

    for (var i = 0; i < listeners.length; i++) {
        var listener = listeners[i];
        if (listener.type === 'once') {
            listeners.splice(i, 1);
            i--;
        }

        try {
            listener.listener.apply(this, args);
        } catch (error) {
            console.log('Event Listener Error: ' + error.message);
        }
    }

    if (listeners.length === 0) {
        delete this._events[key];
        if (key === 'pending') { this._stopPending(); }
    }

    if (this.listenerCount() === 0) { this.polling = false; }
});

utils.defineProperty(Provider.prototype, 'listenerCount', function(eventName) {
    if (!eventName) {
        var result = 0;
        for (var key in this._events) {
            result += this._events[key].length;
        }
        return result;
    }

    var listeners = this._events[getEventString(eventName)];
    if (!listeners) { return 0; }
    return listeners.length;
});

utils.defineProperty(Provider.prototype, 'listeners', function(eventName) {
    var listeners = this._events[getEventString(eventName)];
    if (!listeners) { return 0; }
    var result = [];
    for (var i = 0; i < listeners.length; i++) {
        result.push(listeners[i].listener);
    }
    return result;
});

utils.defineProperty(Provider.prototype, 'removeAllListeners', function(eventName) {
    delete this._events[getEventString(eventName)];
    if (this.listenerCount() === 0) { this.polling = false; }
});

utils.defineProperty(Provider.prototype, 'removeListener', function(eventName, listener) {
    var eventNameString = getEventString(eventName);
    var listeners = this._events[eventNameString];
    if (!listeners) { return 0; }
    for (var i = 0; i < listeners.length; i++) {
        if (listeners[i].listener === listener) {
            listeners.splice(i, 1);
            break;
        }
    }

    if (listeners.length === 0) {
        this.removeAllListeners(eventName);
    }
});

utils.defineProperty(Provider, '_formatters', {
    checkTransactionResponse: checkTransaction
});

module.exports = Provider;

},{"inherits":"../../node_modules/ethers/node_modules/inherits/inherits_browser.js","xmlhttprequest":"../../node_modules/ethers/providers/browser-xmlhttprequest.js","./networks.json":"../../node_modules/ethers/providers/networks.json","../utils/convert":"../../node_modules/ethers/utils/convert.js","../utils/utf8":"../../node_modules/ethers/utils/utf8.js","../utils/properties":"../../node_modules/ethers/utils/properties.js","../utils/address":"../../node_modules/ethers/utils/address.js","../utils/contract-address":"../../node_modules/ethers/utils/contract-address.js","../utils/bignumber":"../../node_modules/ethers/utils/bignumber.js","../utils/base64":"../../node_modules/ethers/utils/browser-base64.js","../utils/namehash":"../../node_modules/ethers/utils/namehash.js","../utils/rlp":"../../node_modules/ethers/utils/rlp.js","../utils/errors":"../../node_modules/ethers/utils/errors.js"}],"../../node_modules/ethers/providers/etherscan-provider.js":[function(require,module,exports) {
'use strict';

var Provider = require('./provider.js');

var utils = (function() {
    var convert = require('../utils/convert.js');
    return {
        defineProperty: require('../utils/properties.js').defineProperty,

        hexlify: convert.hexlify,
        hexStripZeros: convert.hexStripZeros,
    };
})();


function getTransactionString(transaction) {
    var result = [];
    for (var key in transaction) {
        if (transaction[key] == null) { continue; }
        var value = utils.hexlify(transaction[key]);
        if ({ gasLimit: true, gasPrice: true, nonce: true, value: true }[key]) {
            value = utils.hexStripZeros(value);
        }
        result.push(key + '=' + value);
    }
    return result.join('&');
}

function EtherscanProvider(network, apiKey) {
    Provider.call(this, network);

    var baseUrl = null;
    switch(this.name) {
        case 'homestead':
            baseUrl = 'https://api.etherscan.io';
            break;
        case 'ropsten':
            baseUrl = 'https://api-ropsten.etherscan.io';
            break;
        case 'rinkeby':
            baseUrl = 'https://api-rinkeby.etherscan.io';
            break;
        case 'kovan':
            baseUrl = 'https://api-kovan.etherscan.io';
            break;
        default:
            throw new Error('unsupported network');
    }
    utils.defineProperty(this, 'baseUrl', baseUrl);

    utils.defineProperty(this, 'apiKey', apiKey || null);
}
Provider.inherits(EtherscanProvider);

utils.defineProperty(EtherscanProvider.prototype, '_call', function() {
});

utils.defineProperty(EtherscanProvider.prototype, '_callProxy', function() {
});

function getResult(result) {
    // getLogs, getHistory have weird success responses
    if (result.status == 0 && (result.message === 'No records found' || result.message === 'No transactions found')) {
        return result.result;
    }

    if (result.status != 1 || result.message != 'OK') {
        var error = new Error('invalid response');
        error.result = JSON.stringify(result);
        throw error;
    }

    return result.result;
}

function getJsonResult(result) {
    if (result.jsonrpc != '2.0') {
        var error = new Error('invalid response');
        error.result = JSON.stringify(result);
        throw error;
    }

    if (result.error) {
        var error = new Error(result.error.message || 'unknown error');
        if (result.error.code) { error.code = result.error.code; }
        if (result.error.data) { error.data = result.error.data; }
        throw error;
    }

    return result.result;
}

function checkLogTag(blockTag) {
    if (blockTag === 'pending') { throw new Error('pending not supported'); }
    if (blockTag === 'latest') { return blockTag; }

    return parseInt(blockTag.substring(2), 16);
}


utils.defineProperty(EtherscanProvider.prototype, 'perform', function(method, params) {
    if (!params) { params = {}; }

    var url = this.baseUrl;

    var apiKey = '';
    if (this.apiKey) { apiKey += '&apikey=' + this.apiKey; }

    switch (method) {
        case 'getBlockNumber':
            url += '/api?module=proxy&action=eth_blockNumber' + apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);

        case 'getGasPrice':
            url += '/api?module=proxy&action=eth_gasPrice' + apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);


        case 'getBalance':
            // Returns base-10 result
            url += '/api?module=account&action=balance&address=' + params.address;
            url += '&tag=' + params.blockTag + apiKey;
            return Provider.fetchJSON(url, null, getResult);

        case 'getTransactionCount':
            url += '/api?module=proxy&action=eth_getTransactionCount&address=' + params.address;
            url += '&tag=' + params.blockTag + apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);

        case 'getCode':
            url += '/api?module=proxy&action=eth_getCode&address=' + params.address;
            url += '&tag=' + params.blockTag + apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);

        case 'getStorageAt':
            url += '/api?module=proxy&action=eth_getStorageAt&address=' + params.address;
            url += '&position=' + params.position;
            url += '&tag=' + params.blockTag + apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);

        case 'sendTransaction':
            url += '/api?module=proxy&action=eth_sendRawTransaction&hex=' + params.signedTransaction;
            url += apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);


        case 'getBlock':
            if (params.blockTag) {
                url += '/api?module=proxy&action=eth_getBlockByNumber&tag=' + params.blockTag;
                url += '&boolean=false';
                url += apiKey;
                return Provider.fetchJSON(url, null, getJsonResult);
            }
            throw new Error('getBlock by blockHash not implmeneted');

        case 'getTransaction':
            url += '/api?module=proxy&action=eth_getTransactionByHash&txhash=' + params.transactionHash;
            url += apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);

        case 'getTransactionReceipt':
            url += '/api?module=proxy&action=eth_getTransactionReceipt&txhash=' + params.transactionHash;
            url += apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);


        case 'call':
            var transaction = getTransactionString(params.transaction);
            if (transaction) { transaction = '&' + transaction; }
            url += '/api?module=proxy&action=eth_call' + transaction;
            url += apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);

        case 'estimateGas':
            var transaction = getTransactionString(params.transaction);
            if (transaction) { transaction = '&' + transaction; }
            url += '/api?module=proxy&action=eth_estimateGas&' + transaction;
            url += apiKey;
            return Provider.fetchJSON(url, null, getJsonResult);

        case 'getLogs':
            url += '/api?module=logs&action=getLogs';
            try {
                if (params.filter.fromBlock) {
                    url += '&fromBlock=' + checkLogTag(params.filter.fromBlock);
                }

                if (params.filter.toBlock) {
                    url += '&toBlock=' + checkLogTag(params.filter.toBlock);
                }

                if (params.filter.address) {
                    url += '&address=' + params.filter.address;
                }

                // @TODO: We can handle slightly more complicated logs using the logs API
                if (params.filter.topics && params.filter.topics.length > 0) {
                    if (params.filter.topics.length > 1) {
                        throw new Error('unsupported topic format');
                    }
                    var topic0 = params.filter.topics[0];
                    if (typeof(topic0) !== 'string' || topic0.length !== 66) {
                        throw new Error('unsupported topic0 format');
                    }
                    url += '&topic0=' + topic0;
                }
            } catch (error) {
                return Promise.reject(error);
            }


            url += apiKey;

            var self = this;
            return Provider.fetchJSON(url, null, getResult).then(function(logs) {
                var txs = {};

                var seq = Promise.resolve();
                logs.forEach(function(log) {
                    seq = seq.then(function() {
                        if (log.blockHash != null) { return null; }
                        log.blockHash = txs[log.transactionHash];
                        if (log.blockHash == null) {
                            return self.getTransaction(log.transactionHash).then(function(tx) {
                                txs[log.transactionHash] = tx.blockHash;
                                log.blockHash = tx.blockHash;
                                return log;
                            });
                        }
                        return null;
                    });
                })

                return seq.then(function() {
                    return logs;
                });
            });

        case 'getEtherPrice':
            if (this.name !== 'homestead') { return Promise.resolve(0.0); }
            url += '/api?module=stats&action=ethprice';
            url += apiKey;
            return Provider.fetchJSON(url, null, getResult).then(function(result) {
                return parseFloat(result.ethusd);
            });

        default:
            break;
    }

    return Promise.reject(new Error('not implemented - ' + method));
});

utils.defineProperty(EtherscanProvider.prototype, 'getHistory', function(addressOrName, startBlock, endBlock) {

    var url = this.baseUrl;

    var apiKey = '';
    if (this.apiKey) { apiKey += '&apikey=' + this.apiKey; }

    if (startBlock == null) { startBlock = 0; }
    if (endBlock == null) { endBlock = 99999999; }

    return this.resolveName(addressOrName).then(function(address) {
        url += '/api?module=account&action=txlist&address=' + address;
        url += '&startblock=' + startBlock;
        url += '&endblock=' + endBlock;
        url += '&sort=asc';

        return Provider.fetchJSON(url, null, getResult).then(function(result) {
            var output = [];
            result.forEach(function(tx) {
                ['contractAddress', 'to'].forEach(function(key) {
                    if (tx[key] == '') { delete tx[key]; }
                });
                if (tx.creates == null && tx.contractAddress != null) {
                    tx.creates = tx.contractAddress;
                }
                var item = Provider._formatters.checkTransactionResponse(tx);
                if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }
                output.push(item);
            });
            return output;
        });
    });
});

module.exports = EtherscanProvider;;

},{"./provider.js":"../../node_modules/ethers/providers/provider.js","../utils/convert.js":"../../node_modules/ethers/utils/convert.js","../utils/properties.js":"../../node_modules/ethers/utils/properties.js"}],"../../node_modules/ethers/providers/fallback-provider.js":[function(require,module,exports) {
'use strict';

var inherits = require('inherits');

var Provider = require('./provider.js');

var utils = (function() {
    return {
        defineProperty: require('../utils/properties.js').defineProperty,
    };
})();


function FallbackProvider(providers) {
    if (providers.length === 0) { throw new Error('no providers'); }

    var network = {};
    ['chainId', 'ensAddress', 'name', 'testnet'].forEach(function(key) {
        for (var i = 1; i < providers.length; i++) {
            if (providers[0][key] !== providers[i][key]) {
                throw new Error('incompatible providers - ' + key + ' mismatch');
            }
        }
        network[key] = providers[0][key];
    });

    if (!(this instanceof FallbackProvider)) { throw new Error('missing new'); }
    Provider.call(this, network);

    providers = providers.slice(0);
    Object.defineProperty(this, 'providers', {
        get: function() {
            return providers.slice(0);
        }
    });
}
inherits(FallbackProvider, Provider);


utils.defineProperty(FallbackProvider.prototype, 'perform', function(method, params) {
    var providers = this.providers;
    return new Promise(function(resolve, reject) {
        var firstError = null;
        function next() {
            if (!providers.length) {
                reject(firstError);
                return;
            }

            var provider = providers.shift();
            provider.perform(method, params).then(function(result) {
                return resolve(result);
            }, function (error) {
                if (!firstError) { firstError = error; }
                next();
            }).catch(function(error) { });
        }
        next();
    });
});

module.exports = FallbackProvider;

},{"inherits":"../../node_modules/ethers/node_modules/inherits/inherits_browser.js","./provider.js":"../../node_modules/ethers/providers/provider.js","../utils/properties.js":"../../node_modules/ethers/utils/properties.js"}],"../../node_modules/ethers/utils/empty.js":[function(require,module,exports) {
module.exports = undefined;

},{}],"../../node_modules/ethers/providers/json-rpc-provider.js":[function(require,module,exports) {
'use strict';

// See: https://github.com/ethereum/wiki/wiki/JSON-RPC

var Provider = require('./provider.js');

var utils = (function() {
    var convert = require('../utils/convert');
    return {
        defineProperty: require('../utils/properties').defineProperty,

        hexlify: convert.hexlify,
        isHexString: convert.isHexString,
        hexStripZeros: convert.hexStripZeros,

        toUtf8Bytes: require('../utils/utf8').toUtf8Bytes,

        getAddress: require('../utils/address').getAddress,
    }
})();

var errors = require('../utils/errors');

function timer(timeout) {
    return new Promise(function(resolve) {
        setTimeout(function() {
            resolve();
        }, timeout);
    });
}

function getResult(payload) {
    if (payload.error) {
        var error = new Error(payload.error.message);
        error.code = payload.error.code;
        error.data = payload.error.data;
        throw error;
    }

    return payload.result;
}

function getTransaction(transaction) {
    var result = {};

    for (var key in transaction) {
        result[key] = utils.hexlify(transaction[key]);
    }

    // Some nodes (INFURA ropsten; INFURA mainnet is fine) don't like extra zeros.
    ['gasLimit', 'gasPrice', 'nonce', 'value'].forEach(function(key) {
        if (!result[key]) { return; }
        result[key] = utils.hexStripZeros(result[key]);
    });

    // Transform "gasLimit" to "gas"
    if (result.gasLimit != null && result.gas == null) {
        result.gas = result.gasLimit;
        delete result.gasLimit;
    }

    return result;
}

function getLowerCase(value) {
    if (value) { return value.toLowerCase(); }
    return value;
}

function JsonRpcSigner(provider, address) {
    errors.checkNew(this, JsonRpcSigner);

    utils.defineProperty(this, 'provider', provider);

    // Statically attach to a given address
    if (address) {
        utils.defineProperty(this, 'address', address);
        utils.defineProperty(this, '_syncAddress', true);

    } else {
        Object.defineProperty(this, 'address', {
            enumerable: true,
            get: function() {
                errors.throwError('no sync sync address available; use getAddress', errors.UNSUPPORTED_OPERATION, { operation: 'address' });
            }
        });
        utils.defineProperty(this, '_syncAddress', false);
    }
}

utils.defineProperty(JsonRpcSigner.prototype, 'getAddress', function() {
    if (this._syncAddress) { return Promise.resolve(this.address); }

    return this.provider.send('eth_accounts', []).then(function(accounts) {
        if (accounts.length === 0) {
            errors.throwError('no accounts', errors.UNSUPPORTED_OPERATION, { operation: 'getAddress' });
        }
        return utils.getAddress(accounts[0]);
    });
});

utils.defineProperty(JsonRpcSigner.prototype, 'getBalance', function(blockTag) {
    var provider = this.provider;
    return this.getAddress().then(function(address) {
        return provider.getBalance(address, blockTag);
    });
});

utils.defineProperty(JsonRpcSigner.prototype, 'getTransactionCount', function(blockTag) {
    var provider = this.provider;
    return this.getAddress().then(function(address) {
        return provider.getTransactionCount(address, blockTag);
    });
});

utils.defineProperty(JsonRpcSigner.prototype, 'sendTransaction', function(transaction) {
    var provider = this.provider;
    transaction = getTransaction(transaction);
    return this.getAddress().then(function(address) {
        transaction.from = address.toLowerCase();
        return provider.send('eth_sendTransaction', [ transaction ]).then(function(hash) {
            return new Promise(function(resolve, reject) {
                function check() {
                    provider.getTransaction(hash).then(function(transaction) {
                        if (!transaction) {
                            setTimeout(check, 1000);
                            return null;
                        }
                        transaction.wait = function() {
                            return provider.waitForTransaction(hash);
                        };
                        resolve(transaction);
                        return null;
                    }).catch(function(error) {
                        setTimeout(check, 1000);
                        return null;
                    });
                }
                check();
            });
        });
    });
});

utils.defineProperty(JsonRpcSigner.prototype, 'signMessage', function(message) {
    var provider = this.provider;

    var data = ((typeof(message) === 'string') ? utils.toUtf8Bytes(message): message);
    return this.getAddress().then(function(address) {

        // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign
        return provider.send('eth_sign', [ address.toLowerCase(), utils.hexlify(data) ]);
    });
});

utils.defineProperty(JsonRpcSigner.prototype, 'unlock', function(password) {
    var provider = this.provider;

    return this.getAddress().then(function(address) {
        return provider.send('personal_unlockAccount', [ address.toLowerCase(), password, null ]);
    });
});


function JsonRpcProvider(url, network) {
    errors.checkNew(this, JsonRpcProvider);

    if (arguments.length == 1) {
        if (typeof(url) === 'string') {
            try {
                network = Provider.getNetwork(url);
                url = null;
            } catch (error) { }
        } else if (url && url.url == null) {
            network = url;
            url = null;
        }
    }

    Provider.call(this, network);

    if (!url) { url = 'http://localhost:8545'; }

    utils.defineProperty(this, 'url', url);
}
Provider.inherits(JsonRpcProvider);

utils.defineProperty(JsonRpcProvider.prototype, 'getSigner', function(address) {
    return new JsonRpcSigner(this, address);
});

utils.defineProperty(JsonRpcProvider.prototype, 'listAccounts', function() {
    return this.send('eth_accounts', []).then(function(accounts) {
        accounts.forEach(function(address, index) {
            accounts[index] = utils.getAddress(address);
        });
        return accounts;
    });
});

utils.defineProperty(JsonRpcProvider.prototype, 'send', function(method, params) {
    var request = {
        method: method,
        params: params,
        id: 42,
        jsonrpc: "2.0"
    };
    return Provider.fetchJSON(this.url, JSON.stringify(request), getResult);
});

utils.defineProperty(JsonRpcProvider.prototype, 'perform', function(method, params) {
    switch (method) {
        case 'getBlockNumber':
            return this.send('eth_blockNumber', []);

        case 'getGasPrice':
            return this.send('eth_gasPrice', []);

        case 'getBalance':
            return this.send('eth_getBalance', [getLowerCase(params.address), params.blockTag]);

        case 'getTransactionCount':
            return this.send('eth_getTransactionCount', [getLowerCase(params.address), params.blockTag]);

        case 'getCode':
            return this.send('eth_getCode', [getLowerCase(params.address), params.blockTag]);

        case 'getStorageAt':
            return this.send('eth_getStorageAt', [getLowerCase(params.address), params.position, params.blockTag]);

        case 'sendTransaction':
            return this.send('eth_sendRawTransaction', [params.signedTransaction]);

        case 'getBlock':
            if (params.blockTag) {
                return this.send('eth_getBlockByNumber', [params.blockTag, false]);
            } else if (params.blockHash) {
                return this.send('eth_getBlockByHash', [params.blockHash, false]);
            }
            return Promise.reject(new Error('invalid block tag or block hash'));

        case 'getTransaction':
            return this.send('eth_getTransactionByHash', [params.transactionHash]);

        case 'getTransactionReceipt':
            return this.send('eth_getTransactionReceipt', [params.transactionHash]);

        case 'call':
            return this.send('eth_call', [getTransaction(params.transaction), 'latest']);

        case 'estimateGas':
            return this.send('eth_estimateGas', [getTransaction(params.transaction)]);

        case 'getLogs':
            if (params.filter && params.filter.address != null) {
                params.filter.address = getLowerCase(params.filter.address);
            }
            return this.send('eth_getLogs', [params.filter]);

        default:
            break;
    }

    return Promise.reject(new Error('not implemented - ' + method));
});

utils.defineProperty(JsonRpcProvider.prototype, '_startPending', function() {
    if (this._pendingFilter != null) { return; }
    var self = this;

    var pendingFilter = this.send('eth_newPendingTransactionFilter', []);
    this._pendingFilter = pendingFilter;

    pendingFilter.then(function(filterId) {
        function poll() {
            self.send('eth_getFilterChanges', [ filterId ]).then(function(hashes) {
                if (self._pendingFilter != pendingFilter) { return; }

                var seq = Promise.resolve();
                hashes.forEach(function(hash) {
                    self._emitted['t:' + hash.toLowerCase()] = 'pending';
                    seq = seq.then(function() {
                        return self.getTransaction(hash).then(function(tx) {
                            self.emit('pending', tx);
                            return null;
                        });
                    });
                });

                return seq.then(function() {
                    return timer(1000);
                });
            }).then(function() {
                if (self._pendingFilter != pendingFilter) {
                    self.send('eth_uninstallFilter', [ filterIf ]);
                    return null;
                }
                setTimeout(function() { poll(); }, 0);
                return null;
            }).catch(function(error) {
                
            });
        }
        poll();

        return filterId;
    }).catch(function(error) {
    });
});

utils.defineProperty(JsonRpcProvider.prototype, '_stopPending', function() {
    this._pendingFilter = null;
});

utils.defineProperty(JsonRpcProvider, '_hexlifyTransaction', function(transaction) {
    return getTransaction(transaction);
});

module.exports = JsonRpcProvider;

},{"./provider.js":"../../node_modules/ethers/providers/provider.js","../utils/convert":"../../node_modules/ethers/utils/convert.js","../utils/properties":"../../node_modules/ethers/utils/properties.js","../utils/utf8":"../../node_modules/ethers/utils/utf8.js","../utils/address":"../../node_modules/ethers/utils/address.js","../utils/errors":"../../node_modules/ethers/utils/errors.js"}],"../../node_modules/ethers/providers/infura-provider.js":[function(require,module,exports) {
'use strict';

var Provider = require('./provider');
var JsonRpcProvider = require('./json-rpc-provider');

var utils = (function() {
    return {
        defineProperty: require('../utils/properties').defineProperty
    }
})();

var errors = require('../utils/errors');

function InfuraProvider(network, apiAccessToken) {
    errors.checkNew(this, InfuraProvider);

    network = Provider.getNetwork(network);

    var host = null;
    switch(network.name) {
        case 'homestead':
            host = 'mainnet.infura.io';
            break;
        case 'ropsten':
            host = 'ropsten.infura.io';
            break;
        case 'rinkeby':
            host = 'rinkeby.infura.io';
            break;
        case 'kovan':
            host = 'kovan.infura.io';
            break;
        default:
            throw new Error('unsupported network');
    }

    var url = 'https://' + host + '/' + (apiAccessToken || '');

    JsonRpcProvider.call(this, url, network);

    utils.defineProperty(this, 'apiAccessToken', apiAccessToken || null);
}
JsonRpcProvider.inherits(InfuraProvider);

utils.defineProperty(InfuraProvider.prototype, '_startPending', function() {
    console.log('WARNING: INFURA does not support pending filters');
});

utils.defineProperty(InfuraProvider.prototype, '_stopPending', function() {
});

utils.defineProperty(InfuraProvider.prototype, 'getSigner', function(address) {
    errors.throwError('INFURA does not support signing', errors.UNSUPPORTED_OPERATION, { operation: 'getSigner' });
});

utils.defineProperty(InfuraProvider.prototype, 'listAccounts', function() {
    return Promise.resolve([]);
});

module.exports = InfuraProvider;

},{"./provider":"../../node_modules/ethers/providers/provider.js","./json-rpc-provider":"../../node_modules/ethers/providers/json-rpc-provider.js","../utils/properties":"../../node_modules/ethers/utils/properties.js","../utils/errors":"../../node_modules/ethers/utils/errors.js"}],"../../node_modules/ethers/providers/web3-provider.js":[function(require,module,exports) {
'use strict';

var Provider = require('./provider');
var JsonRpcProvider = require('./json-rpc-provider');

var utils = (function() {
    return {
        defineProperty: require('../utils/properties').defineProperty,
    }
})();

var errors = require('../utils/errors');

/*
@TODO
utils.defineProperty(Web3Signer, 'onchange', {

});
*/

function Web3Provider(web3Provider, network) {
    errors.checkNew(this, Web3Provider);

    // HTTP has a host; IPC has a path.
    var url = web3Provider.host || web3Provider.path || 'unknown';

    if (network == null) { network = 'homestead'; }

    JsonRpcProvider.call(this, url, network);
    utils.defineProperty(this, '_web3Provider', web3Provider);
}
JsonRpcProvider.inherits(Web3Provider);

utils.defineProperty(Web3Provider.prototype, 'send', function(method, params) {

    // Metamask complains about eth_sign (and on some versions hangs)
    if (method == 'eth_sign' && this._web3Provider.isMetaMask) {
        // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign
        method = 'personal_sign';
        params = [ params[1], params[0] ];
    }

    var provider = this._web3Provider;
    return new Promise(function(resolve, reject) {
        var request = {
            method: method,
            params: params,
            id: 42,
            jsonrpc: "2.0"
        };
        provider.sendAsync(request, function(error, result) {
            if (error) {
                reject(error);
                return;
            }
            if (result.error) {
                var error = new Error(result.error.message);
                error.code = result.error.code;
                error.data = result.error.data;
                reject(error);
                return;
            }
            resolve(result.result);
        });
    });
});

module.exports = Web3Provider;

},{"./provider":"../../node_modules/ethers/providers/provider.js","./json-rpc-provider":"../../node_modules/ethers/providers/json-rpc-provider.js","../utils/properties":"../../node_modules/ethers/utils/properties.js","../utils/errors":"../../node_modules/ethers/utils/errors.js"}],"../../node_modules/ethers/providers/index.js":[function(require,module,exports) {
'use strict';

var Provider = require('./provider');

var EtherscanProvider = require('./etherscan-provider');
var FallbackProvider = require('./fallback-provider');
var IpcProvider = require('./ipc-provider');
var InfuraProvider = require('./infura-provider');
var JsonRpcProvider = require('./json-rpc-provider');
var Web3Provider = require('./web3-provider');

function getDefaultProvider(network) {
    return new FallbackProvider([
        new InfuraProvider(network),
        new EtherscanProvider(network),
    ]);
}

var exports = {
    EtherscanProvider: EtherscanProvider,
    FallbackProvider: FallbackProvider,
    InfuraProvider: InfuraProvider,
    JsonRpcProvider: JsonRpcProvider,
    Web3Provider: Web3Provider,

    isProvider: Provider.isProvider,

    networks: Provider.networks,

    getDefaultProvider:getDefaultProvider,

    Provider: Provider,
}

// Only available in node, so we do not include it in browsers
if (IpcProvider) {
    exports.IpcProvider = IpcProvider;
}

module.exports = exports;

},{"./provider":"../../node_modules/ethers/providers/provider.js","./etherscan-provider":"../../node_modules/ethers/providers/etherscan-provider.js","./fallback-provider":"../../node_modules/ethers/providers/fallback-provider.js","./ipc-provider":"../../node_modules/ethers/utils/empty.js","./infura-provider":"../../node_modules/ethers/providers/infura-provider.js","./json-rpc-provider":"../../node_modules/ethers/providers/json-rpc-provider.js","./web3-provider":"../../node_modules/ethers/providers/web3-provider.js"}],"../../node_modules/ethers/utils/id.js":[function(require,module,exports) {
'use strict';

var keccak256 = require('./keccak256');
var utf8 = require('./utf8');

function id(text) {
    return keccak256(utf8.toUtf8Bytes(text));
}

module.exports = id;

},{"./keccak256":"../../node_modules/ethers/utils/keccak256.js","./utf8":"../../node_modules/ethers/utils/utf8.js"}],"../../node_modules/minimalistic-assert/index.js":[function(require,module,exports) {
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],"../../node_modules/inherits/inherits_browser.js":[function(require,module,exports) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],"../../node_modules/hash.js/lib/hash/utils.js":[function(require,module,exports) {
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"minimalistic-assert":"../../node_modules/minimalistic-assert/index.js","inherits":"../../node_modules/inherits/inherits_browser.js"}],"../../node_modules/hash.js/lib/hash/common.js":[function(require,module,exports) {
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":"../../node_modules/hash.js/lib/hash/utils.js","minimalistic-assert":"../../node_modules/minimalistic-assert/index.js"}],"../../node_modules/hash.js/lib/hash/sha/common.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":"../../node_modules/hash.js/lib/hash/utils.js"}],"../../node_modules/hash.js/lib/hash/sha/1.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../utils":"../../node_modules/hash.js/lib/hash/utils.js","../common":"../../node_modules/hash.js/lib/hash/common.js","./common":"../../node_modules/hash.js/lib/hash/sha/common.js"}],"../../node_modules/hash.js/lib/hash/sha/256.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../utils":"../../node_modules/hash.js/lib/hash/utils.js","../common":"../../node_modules/hash.js/lib/hash/common.js","./common":"../../node_modules/hash.js/lib/hash/sha/common.js","minimalistic-assert":"../../node_modules/minimalistic-assert/index.js"}],"../../node_modules/hash.js/lib/hash/sha/224.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":"../../node_modules/hash.js/lib/hash/utils.js","./256":"../../node_modules/hash.js/lib/hash/sha/256.js"}],"../../node_modules/hash.js/lib/hash/sha/512.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../utils":"../../node_modules/hash.js/lib/hash/utils.js","../common":"../../node_modules/hash.js/lib/hash/common.js","minimalistic-assert":"../../node_modules/minimalistic-assert/index.js"}],"../../node_modules/hash.js/lib/hash/sha/384.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":"../../node_modules/hash.js/lib/hash/utils.js","./512":"../../node_modules/hash.js/lib/hash/sha/512.js"}],"../../node_modules/hash.js/lib/hash/sha.js":[function(require,module,exports) {
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":"../../node_modules/hash.js/lib/hash/sha/1.js","./sha/224":"../../node_modules/hash.js/lib/hash/sha/224.js","./sha/256":"../../node_modules/hash.js/lib/hash/sha/256.js","./sha/384":"../../node_modules/hash.js/lib/hash/sha/384.js","./sha/512":"../../node_modules/hash.js/lib/hash/sha/512.js"}],"../../node_modules/hash.js/lib/hash/ripemd.js":[function(require,module,exports) {
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./utils":"../../node_modules/hash.js/lib/hash/utils.js","./common":"../../node_modules/hash.js/lib/hash/common.js"}],"../../node_modules/hash.js/lib/hash/hmac.js":[function(require,module,exports) {
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":"../../node_modules/hash.js/lib/hash/utils.js","minimalistic-assert":"../../node_modules/minimalistic-assert/index.js"}],"../../node_modules/hash.js/lib/hash.js":[function(require,module,exports) {
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/utils":"../../node_modules/hash.js/lib/hash/utils.js","./hash/common":"../../node_modules/hash.js/lib/hash/common.js","./hash/sha":"../../node_modules/hash.js/lib/hash/sha.js","./hash/ripemd":"../../node_modules/hash.js/lib/hash/ripemd.js","./hash/hmac":"../../node_modules/hash.js/lib/hash/hmac.js"}],"../../node_modules/ethers/utils/sha2.js":[function(require,module,exports) {
'use strict';

var hash = require('hash.js');

var convert = require('./convert.js');

function sha256(data) {
    data = convert.arrayify(data);
    return '0x' + (hash.sha256().update(data).digest('hex'));
}

function sha512(data) {
    data = convert.arrayify(data);
    return '0x' + (hash.sha512().update(data).digest('hex'));
}

module.exports = {
    sha256: sha256,
    sha512: sha512,

    createSha256: hash.sha256,
    createSha512: hash.sha512,
}

},{"hash.js":"../../node_modules/hash.js/lib/hash.js","./convert.js":"../../node_modules/ethers/utils/convert.js"}],"../../node_modules/ethers/utils/solidity.js":[function(require,module,exports) {
'use strict';

var bigNumberify = require('./bignumber').bigNumberify;
var convert = require('./convert');
var getAddress = require('./address').getAddress;
var utf8 = require('./utf8');

var hashKeccak256 = require('./keccak256');
var hashSha256 = require('./sha2').sha256;

var regexBytes = new RegExp("^bytes([0-9]+)$");
var regexNumber = new RegExp("^(u?int)([0-9]*)$");
var regexArray = new RegExp("^(.*)\\[([0-9]*)\\]$");

var Zeros = '0000000000000000000000000000000000000000000000000000000000000000';

function _pack(type, value, isArray) {
    switch(type) {
        case 'address':
            if (isArray) { return convert.padZeros(value, 32); }
            return convert.arrayify(value);
        case 'string':
            return utf8.toUtf8Bytes(value);
        case 'bytes':
            return convert.arrayify(value);
        case 'bool':
            value = (value ? '0x01': '0x00');
            if (isArray) { return convert.padZeros(value, 32); }
            return convert.arrayify(value);
    }

    var match =  type.match(regexNumber);
    if (match) {
        var signed = (match[1] === 'int')
        var size = parseInt(match[2] || "256")
        if ((size % 8 != 0) || size === 0 || size > 256) {
            throw new Error('invalid number type - ' + type);
        }

        if (isArray) { size = 256; }

        value = bigNumberify(value).toTwos(size);

        return convert.padZeros(value, size / 8);
    }

    match = type.match(regexBytes);
    if (match) {
        var size = match[1];
        if (size != parseInt(size) || size === 0 || size > 32) {
            throw new Error('invalid number type - ' + type);
        }
        size = parseInt(size);
        if (convert.arrayify(value).byteLength !== size) { throw new Error('invalid value for ' + type); }
        if (isArray) { return (value + Zeros).substring(0, 66); }
        return value;
    }

    match = type.match(regexArray);
    if (match) {
        var baseType = match[1];
        var count = parseInt(match[2] || value.length);
        if (count != value.length) { throw new Error('invalid value for ' + type); }
        var result = [];
        value.forEach(function(value) {
            value = _pack(baseType, value, true);
            result.push(value);
        });
        return convert.concat(result);
    }

    throw new Error('unknown type - ' + type);
}

function pack(types, values) {
    if (types.length != values.length) { throw new Error('type/value count mismatch'); }
    var tight = [];
    types.forEach(function(type, index) {
        tight.push(_pack(type, values[index]));
    });
    return convert.hexlify(convert.concat(tight));
}

function keccak256(types, values) {
    return hashKeccak256(pack(types, values));
}

function sha256(types, values) {
    return hashSha256(pack(types, values));
}

module.exports = {
    pack: pack,

    keccak256: keccak256,
    sha256: sha256,
}

},{"./bignumber":"../../node_modules/ethers/utils/bignumber.js","./convert":"../../node_modules/ethers/utils/convert.js","./address":"../../node_modules/ethers/utils/address.js","./utf8":"../../node_modules/ethers/utils/utf8.js","./keccak256":"../../node_modules/ethers/utils/keccak256.js","./sha2":"../../node_modules/ethers/utils/sha2.js"}],"../../node_modules/ethers/utils/browser-random-bytes.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';

var convert = require('./convert');
var defineProperty = require('./properties').defineProperty;

var crypto = global.crypto || global.msCrypto;
if (!crypto || !crypto.getRandomValues) {

    console.log('WARNING: Missing strong random number source; using weak randomBytes');

    crypto = {
        getRandomValues: function(buffer) {
            for (var round = 0; round < 20; round++) {
                for (var i = 0; i < buffer.length; i++) {
                    if (round) {
                        buffer[i] ^= parseInt(256 * Math.random());
                    } else {
                        buffer[i] = parseInt(256 * Math.random());
                    }
                }
            }

            return buffer;
        },
        _weakCrypto: true
    };
}

function randomBytes(length) {
    if (length <= 0 || length > 1024 || parseInt(length) != length) {
        throw new Error('invalid length');
    }

    var result = new Uint8Array(length);
    crypto.getRandomValues(result);
    return convert.arrayify(result);
};

if (crypto._weakCrypto === true) {
    defineProperty(randomBytes, '_weakCrypto', true);
}

module.exports = randomBytes;

},{"./convert":"../../node_modules/ethers/utils/convert.js","./properties":"../../node_modules/ethers/utils/properties.js"}],"../../node_modules/ethers/utils/units.js":[function(require,module,exports) {
var bigNumberify = require('./bignumber.js').bigNumberify;
var throwError = require('./throw-error');

var zero = new bigNumberify(0);
var negative1 = new bigNumberify(-1);

var names = [
    'wei',
    'kwei',
    'Mwei',
    'Gwei',
    'szabo',
    'finny',
    'ether',
];

var getUnitInfo = (function() {
    var unitInfos = {};

    function getUnitInfo(value) {
        return {
            decimals: value.length - 1,
            tenPower: bigNumberify(value)
        };
    }

    // Cache the common units
    var value = '1';
    names.forEach(function(name) {
        var info = getUnitInfo(value);
        unitInfos[name.toLowerCase()] = info;
        unitInfos[String(info.decimals)] = info;
        value += '000';
    });

    return function(name) {
        // Try the cache
        var info = unitInfos[String(name).toLowerCase()];

        if (!info && typeof(name) === 'number' && parseInt(name) == name && name >= 0 && name <= 256) {
            var value = '1';
            for (var i = 0; i < name; i++) { value += '0'; }
            info = getUnitInfo(value);
        }

        // Make sure we got something
        if (!info) { throwError('invalid unitType', { unitType: name }); }

        return info;
    }
})();

function formatUnits(value, unitType, options) {
    if (typeof(unitType) === 'object' && !options) {
        options = unitType;
        unitType = undefined;
    }

    if (unitType == null) { unitType = 18; }
    var unitInfo = getUnitInfo(unitType);

    // Make sure wei is a big number (convert as necessary)
    value = bigNumberify(value);

    if (!options) { options = {}; }

    var negative = value.lt(zero);
    if (negative) { value = value.mul(negative1); }

    var fraction = value.mod(unitInfo.tenPower).toString(10);
    while (fraction.length < unitInfo.decimals) { fraction = '0' + fraction; }

    // Strip off trailing zeros (but keep one if would otherwise be bare decimal point)
    if (!options.pad) {
        fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
    }

    var whole = value.div(unitInfo.tenPower).toString(10);

    if (options.commify) {
        whole = whole.replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    }

    var value = whole + '.' + fraction;

    if (negative) { value = '-' + value; }

    return value;
}

function parseUnits(value, unitType) {
    if (unitType == null) { unitType = 18; }
    var unitInfo = getUnitInfo(unitType);

    if (typeof(value) !== 'string' || !value.match(/^-?[0-9.,]+$/)) {
        throwError('invalid value', { input: value });
    }

    // Remove commas
    var value = value.replace(/,/g,'');

    // Is it negative?
    var negative = (value.substring(0, 1) === '-');
    if (negative) { value = value.substring(1); }

    if (value === '.') { throwError('invalid value', { input: value }); }

    // Split it into a whole and fractional part
    var comps = value.split('.');
    if (comps.length > 2) { throwError('too many decimal points', { input: value }); }

    var whole = comps[0], fraction = comps[1];
    if (!whole) { whole = '0'; }
    if (!fraction) { fraction = '0'; }

    // Prevent underflow
    if (fraction.length > unitInfo.decimals) {
        throwError('too many decimal places', { input: value, decimals: fraction.length });
    }

    // Fully pad the string with zeros to get to wei
    while (fraction.length < unitInfo.decimals) { fraction += '0'; }

    whole = bigNumberify(whole);
    fraction = bigNumberify(fraction);

    var wei = (whole.mul(unitInfo.tenPower)).add(fraction);

    if (negative) { wei = wei.mul(negative1); }

    return wei;
}

function formatEther(wei, options) {
    return formatUnits(wei, 18, options);
}

function parseEther(ether) {
    return parseUnits(ether, 18);
}

module.exports = {
    formatEther: formatEther,
    parseEther: parseEther,

    formatUnits: formatUnits,
    parseUnits: parseUnits,
}

},{"./bignumber.js":"../../node_modules/ethers/utils/bignumber.js","./throw-error":"../../node_modules/ethers/utils/throw-error.js"}],"../../node_modules/ethers/utils/index.js":[function(require,module,exports) {
'use strict';

// This is SUPER useful, but adds 140kb (even zipped, adds 40kb)
//var unorm = require('unorm');

var address = require('./address');
var AbiCoder = require('./abi-coder');
var base64 = require('./base64');
var bigNumber = require('./bignumber');
var contractAddress = require('./contract-address');
var convert = require('./convert');
var id = require('./id');
var keccak256 = require('./keccak256');
var namehash = require('./namehash');
var sha256 = require('./sha2').sha256;
var solidity = require('./solidity');
var randomBytes = require('./random-bytes');
var properties = require('./properties');
var RLP = require('./rlp');
var utf8 = require('./utf8');
var units = require('./units');


module.exports = {
    AbiCoder: AbiCoder,

    RLP: RLP,

    defineProperty: properties.defineProperty,

    // NFKD (decomposed)
    //etherSymbol: '\uD835\uDF63',

    // NFKC (composed)
    etherSymbol: '\u039e',

    arrayify: convert.arrayify,

    concat: convert.concat,
    padZeros: convert.padZeros,
    stripZeros: convert.stripZeros,

    base64: base64,

    bigNumberify: bigNumber.bigNumberify,
    BigNumber: bigNumber.BigNumber,

    hexlify: convert.hexlify,

    toUtf8Bytes: utf8.toUtf8Bytes,
    toUtf8String: utf8.toUtf8String,

    namehash: namehash,
    id: id,

    getAddress: address.getAddress,
    getContractAddress: contractAddress.getContractAddress,

    formatEther: units.formatEther,
    parseEther: units.parseEther,

    formatUnits: units.formatUnits,
    parseUnits: units.parseUnits,

    keccak256: keccak256,
    sha256: sha256,

    randomBytes: randomBytes,

    solidityPack: solidity.pack,
    solidityKeccak256: solidity.keccak256,
    soliditySha256: solidity.sha256,

    splitSignature: convert.splitSignature,
}

},{"./address":"../../node_modules/ethers/utils/address.js","./abi-coder":"../../node_modules/ethers/utils/abi-coder.js","./base64":"../../node_modules/ethers/utils/browser-base64.js","./bignumber":"../../node_modules/ethers/utils/bignumber.js","./contract-address":"../../node_modules/ethers/utils/contract-address.js","./convert":"../../node_modules/ethers/utils/convert.js","./id":"../../node_modules/ethers/utils/id.js","./keccak256":"../../node_modules/ethers/utils/keccak256.js","./namehash":"../../node_modules/ethers/utils/namehash.js","./sha2":"../../node_modules/ethers/utils/sha2.js","./solidity":"../../node_modules/ethers/utils/solidity.js","./random-bytes":"../../node_modules/ethers/utils/browser-random-bytes.js","./properties":"../../node_modules/ethers/utils/properties.js","./rlp":"../../node_modules/ethers/utils/rlp.js","./utf8":"../../node_modules/ethers/utils/utf8.js","./units":"../../node_modules/ethers/utils/units.js"}],"../../node_modules/scrypt-js/scrypt.js":[function(require,module,exports) {
var define;
"use strict";

(function(root) {
    var MAX_VALUE = 0x7fffffff;

    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:
    // See: https://github.com/dchest/scrypt-async-js
    function SHA256(m) {
        var K = [
           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,
           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,
           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,
           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,
           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,
           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,
           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
       ];

        var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;
        var h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;
        var w = new Array(64);

        function blocks(p) {
            var off = 0, len = p.length;
            while (len >= 64) {
                var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;

                for (i = 0; i < 16; i++) {
                    j = off + i*4;
                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |
                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);
                }

                for (i = 16; i < 64; i++) {
                    u = w[i-2];
                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);

                    u = w[i-15];
                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);

                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;
                }

                for (i = 0; i < 64; i++) {
                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^
                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +
                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;

                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^
                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;

                    h = g;
                    g = f;
                    f = e;
                    e = (d + t1) | 0;
                    d = c;
                    c = b;
                    b = a;
                    a = (t1 + t2) | 0;
                }

                h0 = (h0 + a) | 0;
                h1 = (h1 + b) | 0;
                h2 = (h2 + c) | 0;
                h3 = (h3 + d) | 0;
                h4 = (h4 + e) | 0;
                h5 = (h5 + f) | 0;
                h6 = (h6 + g) | 0;
                h7 = (h7 + h) | 0;

                off += 64;
                len -= 64;
            }
        }

        blocks(m);

        var i, bytesLeft = m.length % 64,
        bitLenHi = (m.length / 0x20000000) | 0,
        bitLenLo = m.length << 3,
        numZeros = (bytesLeft < 56) ? 56 : 120,
        p = m.slice(m.length - bytesLeft, m.length);

        p.push(0x80);
        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }
        p.push((bitLenHi>>>24) & 0xff);
        p.push((bitLenHi>>>16) & 0xff);
        p.push((bitLenHi>>>8)  & 0xff);
        p.push((bitLenHi>>>0)  & 0xff);
        p.push((bitLenLo>>>24) & 0xff);
        p.push((bitLenLo>>>16) & 0xff);
        p.push((bitLenLo>>>8)  & 0xff);
        p.push((bitLenLo>>>0)  & 0xff);

        blocks(p);

        return [
            (h0>>>24) & 0xff, (h0>>>16) & 0xff, (h0>>>8) & 0xff, (h0>>>0) & 0xff,
            (h1>>>24) & 0xff, (h1>>>16) & 0xff, (h1>>>8) & 0xff, (h1>>>0) & 0xff,
            (h2>>>24) & 0xff, (h2>>>16) & 0xff, (h2>>>8) & 0xff, (h2>>>0) & 0xff,
            (h3>>>24) & 0xff, (h3>>>16) & 0xff, (h3>>>8) & 0xff, (h3>>>0) & 0xff,
            (h4>>>24) & 0xff, (h4>>>16) & 0xff, (h4>>>8) & 0xff, (h4>>>0) & 0xff,
            (h5>>>24) & 0xff, (h5>>>16) & 0xff, (h5>>>8) & 0xff, (h5>>>0) & 0xff,
            (h6>>>24) & 0xff, (h6>>>16) & 0xff, (h6>>>8) & 0xff, (h6>>>0) & 0xff,
            (h7>>>24) & 0xff, (h7>>>16) & 0xff, (h7>>>8) & 0xff, (h7>>>0) & 0xff
        ];
    }

    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {
        // compress password if it's longer than hash block length
        password = password.length <= 64 ? password : SHA256(password);

        var i;
        var innerLen = 64 + salt.length + 4;
        var inner = new Array(innerLen);
        var outerKey = new Array(64);
        var dk = [];

        // inner = (password ^ ipad) || salt || counter
        for (i = 0; i < 64; i++) inner[i] = 0x36;
        for (i = 0; i < password.length; i++) inner[i] ^= password[i];
        for (i = 0; i < salt.length; i++) inner[64+i] = salt[i];
        for (i = innerLen - 4; i < innerLen; i++) inner[i] = 0;

        // outerKey = password ^ opad
        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;
        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];

        // increments counter inside inner
        function incrementCounter() {
            for (var i = innerLen-1; i >= innerLen-4; i--) {
                inner[i]++;
                if (inner[i] <= 0xff) return;
                inner[i] = 0;
            }
        }

        // output blocks = SHA256(outerKey || SHA256(inner)) ...
        while (dkLen >= 32) {
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));
            dkLen -= 32;
        }
        if (dkLen > 0) {
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));
        }

        return dk;
    }

    // The following is an adaptation of scryptsy
    // See: https://www.npmjs.com/package/scryptsy
    function blockmix_salsa8(BY, Yi, r, x, _X) {
        var i;

        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);
        for (i = 0; i < 2 * r; i++) {
            blockxor(BY, i * 16, _X, 16);
            salsa20_8(_X, x);
            arraycopy(_X, 0, BY, Yi + (i * 16), 16);
        }

        for (i = 0; i < r; i++) {
            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);
        }

        for (i = 0; i < r; i++) {
            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);
        }
    }

    function R(a, b) {
        return (a << b) | (a >>> (32 - b));
    }

    function salsa20_8(B, x) {
        arraycopy(B, 0, x, 0, 16);

        for (var i = 8; i > 0; i -= 2) {
            x[ 4] ^= R(x[ 0] + x[12], 7);
            x[ 8] ^= R(x[ 4] + x[ 0], 9);
            x[12] ^= R(x[ 8] + x[ 4], 13);
            x[ 0] ^= R(x[12] + x[ 8], 18);
            x[ 9] ^= R(x[ 5] + x[ 1], 7);
            x[13] ^= R(x[ 9] + x[ 5], 9);
            x[ 1] ^= R(x[13] + x[ 9], 13);
            x[ 5] ^= R(x[ 1] + x[13], 18);
            x[14] ^= R(x[10] + x[ 6], 7);
            x[ 2] ^= R(x[14] + x[10], 9);
            x[ 6] ^= R(x[ 2] + x[14], 13);
            x[10] ^= R(x[ 6] + x[ 2], 18);
            x[ 3] ^= R(x[15] + x[11], 7);
            x[ 7] ^= R(x[ 3] + x[15], 9);
            x[11] ^= R(x[ 7] + x[ 3], 13);
            x[15] ^= R(x[11] + x[ 7], 18);
            x[ 1] ^= R(x[ 0] + x[ 3], 7);
            x[ 2] ^= R(x[ 1] + x[ 0], 9);
            x[ 3] ^= R(x[ 2] + x[ 1], 13);
            x[ 0] ^= R(x[ 3] + x[ 2], 18);
            x[ 6] ^= R(x[ 5] + x[ 4], 7);
            x[ 7] ^= R(x[ 6] + x[ 5], 9);
            x[ 4] ^= R(x[ 7] + x[ 6], 13);
            x[ 5] ^= R(x[ 4] + x[ 7], 18);
            x[11] ^= R(x[10] + x[ 9], 7);
            x[ 8] ^= R(x[11] + x[10], 9);
            x[ 9] ^= R(x[ 8] + x[11], 13);
            x[10] ^= R(x[ 9] + x[ 8], 18);
            x[12] ^= R(x[15] + x[14], 7);
            x[13] ^= R(x[12] + x[15], 9);
            x[14] ^= R(x[13] + x[12], 13);
            x[15] ^= R(x[14] + x[13], 18);
        }

        for (i = 0; i < 16; ++i) {
            B[i] += x[i];
        }
    }

    // naive approach... going back to loop unrolling may yield additional performance
    function blockxor(S, Si, D, len) {
        for (var i = 0; i < len; i++) {
            D[i] ^= S[Si + i]
        }
    }

    function arraycopy(src, srcPos, dest, destPos, length) {
        while (length--) {
            dest[destPos++] = src[srcPos++];
        }
    }

    function checkBufferish(o) {
        if (!o || typeof(o.length) !== 'number') {
            return false;
        }
        for (var i = 0; i < o.length; i++) {
            if (typeof(o[i]) !== 'number') { return false; }

            var v = parseInt(o[i]);
            if (v != o[i] || v < 0 || v >= 256) {
                return false;
            }
        }
        return true;
    }

    function ensureInteger(value, name) {
        var intValue = parseInt(value);
        if (value != intValue) { throw new Error('invalid ' + name); }
        return intValue;
    }

    // N = Cpu cost, r = Memory cost, p = parallelization cost
    // callback(error, progress, key)
    function scrypt(password, salt, N, r, p, dkLen, callback) {

        if (!callback) { throw new Error('missing callback'); }

        N = ensureInteger(N, 'N');
        r = ensureInteger(r, 'r');
        p = ensureInteger(p, 'p');

        dkLen = ensureInteger(dkLen, 'dkLen');

        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }

        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }
        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }

        if (!checkBufferish(password)) {
            throw new Error('password must be an array or buffer');
        }

        if (!checkBufferish(salt)) {
            throw new Error('salt must be an array or buffer');
        }

        var b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);
        var B = new Uint32Array(p * 32 * r)
        for (var i = 0; i < B.length; i++) {
            var j = i * 4;
            B[i] = ((b[j + 3] & 0xff) << 24) |
                   ((b[j + 2] & 0xff) << 16) |
                   ((b[j + 1] & 0xff) << 8) |
                   ((b[j + 0] & 0xff) << 0);
        }

        var XY = new Uint32Array(64 * r);
        var V = new Uint32Array(32 * r * N);

        var Yi = 32 * r;

        // scratch space
        var x = new Uint32Array(16);       // salsa20_8
        var _X = new Uint32Array(16);      // blockmix_salsa8

        var totalOps = p * N * 2;
        var currentOp = 0;
        var lastPercent10 = null;

        // Set this to true to abandon the scrypt on the next step
        var stop = false;

        // State information
        var state = 0;
        var i0 = 0, i1;
        var Bi;

        // How many blockmix_salsa8 can we do per step?
        var limit = parseInt(1000 / r);

        // Trick from scrypt-async; if there is a setImmediate shim in place, use it
        var nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;

        // This is really all I changed; making scryptsy a state machine so we occasionally
        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo
        var incrementalSMix = function() {
            if (stop) {
                return callback(new Error('cancelled'), currentOp / totalOps);
            }

            switch (state) {
                case 0:
                    // for (var i = 0; i < p; i++)...
                    Bi = i0 * 32 * r;

                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1

                    state = 1;                                         // Move to ROMix 2
                    i1 = 0;

                    // Fall through

                case 1:

                    // Run up to 1000 steps of the first inner smix loop
                    var steps = N - i1;
                    if (steps > limit) { steps = limit; }
                    for (var i = 0; i < steps; i++) {                  // ROMix - 2
                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3
                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4
                    }

                    // for (var i = 0; i < N; i++)
                    i1 += steps;
                    currentOp += steps;

                    // Call the callback with the progress (optionally stopping us)
                    var percent10 = parseInt(1000 * currentOp / totalOps);
                    if (percent10 !== lastPercent10) {
                        stop = callback(null, currentOp / totalOps);
                        if (stop) { break; }
                        lastPercent10 = percent10;
                    }

                    if (i1 < N) {
                        break;
                    }

                    i1 = 0;                                          // Move to ROMix 6
                    state = 2;

                    // Fall through

                case 2:

                    // Run up to 1000 steps of the second inner smix loop
                    var steps = N - i1;
                    if (steps > limit) { steps = limit; }
                    for (var i = 0; i < steps; i++) {                // ROMix - 6
                        var offset = (2 * r - 1) * 16;               // ROMix - 7
                        var j = XY[offset] & (N - 1);
                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)
                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)
                    }

                    // for (var i = 0; i < N; i++)...
                    i1 += steps;
                    currentOp += steps;

                    // Call the callback with the progress (optionally stopping us)
                    var percent10 = parseInt(1000 * currentOp / totalOps);
                    if (percent10 !== lastPercent10) {
                        stop = callback(null, currentOp / totalOps);
                        if (stop) { break; }
                        lastPercent10 = percent10;
                    }

                    if (i1 < N) {
                        break;
                    }

                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10

                    // for (var i = 0; i < p; i++)...
                    i0++;
                    if (i0 < p) {
                        state = 0;
                        break;
                    }

                    b = [];
                    for (var i = 0; i < B.length; i++) {
                        b.push((B[i] >>  0) & 0xff);
                        b.push((B[i] >>  8) & 0xff);
                        b.push((B[i] >> 16) & 0xff);
                        b.push((B[i] >> 24) & 0xff);
                    }

                    var derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);

                    // Done; don't break (which would reschedule)
                    return callback(null, 1.0, derivedKey);
                }

                // Schedule the next steps
                nextTick(incrementalSMix);
            }

            // Bootstrap the incremental smix
            incrementalSMix();
    }

    // node.js
    if (typeof(exports) !== 'undefined') {
       module.exports = scrypt;

    // RequireJS/AMD
    // http://www.requirejs.org/docs/api.html
    // https://github.com/amdjs/amdjs-api/wiki/AMD
    } else if (typeof(define) === 'function' && define.amd) {
        define(scrypt);

    // Web Browsers
    } else if (root) {

        // If there was an existing library "scrypt", make sure it is still available
        if (root.scrypt) {
            root._scrypt = root.scrypt;
        }

        root.scrypt = scrypt;
    }

})(this);

},{}],"../../node_modules/ethers/node_modules/elliptic/package.json":[function(require,module,exports) {
module.exports = {
  "name": "elliptic",
  "version": "6.3.3",
  "description": "EC cryptography",
  "main": "lib/elliptic.js",
  "files": [
    "lib"
  ],
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "test": "npm run lint && npm run unit",
    "version": "grunt dist && git add dist/"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:indutny/elliptic"
  },
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "author": "Fedor Indutny <fedor@indutny.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "homepage": "https://github.com/indutny/elliptic",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^2.11.3",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^8.6.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "inherits": "^2.0.1"
  }
}
;
},{}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/utils.js":[function(require,module,exports) {
'use strict';

var utils = exports;
var BN = require('bn.js');

utils.assert = function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
};

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (!enc) {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  } else if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":"../../node_modules/bn.js/lib/bn.js"}],"../../node_modules/brorand/index.js":[function(require,module,exports) {
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":"../../node_modules/parcel-bundler/src/builtins/_empty.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/hmac-drbg.js":[function(require,module,exports) {
'use strict';

var hash = require('hash.js');
var elliptic = require('../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this.reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc);
  var nonce = utils.toArray(options.nonce, options.nonceEnc);
  var pers = utils.toArray(options.pers, options.persEnc);
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this.reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toBuffer(entropy, entropyEnc);
  add = utils.toBuffer(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this.reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this.reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc);
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this.reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":"../../node_modules/hash.js/lib/hash.js","../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/base.js":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"bn.js":"../../node_modules/bn.js/lib/bn.js","../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js"}],"../../node_modules/ethers/node_modules/elliptic/node_modules/inherits/inherits_browser.js":[function(require,module,exports) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/short.js":[function(require,module,exports) {
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../curve":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/index.js","../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js","bn.js":"../../node_modules/bn.js/lib/bn.js","inherits":"../../node_modules/ethers/node_modules/elliptic/node_modules/inherits/inherits_browser.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/mont.js":[function(require,module,exports) {
'use strict';

var curve = require('../curve');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var elliptic = require('../../elliptic');
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../curve":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/index.js","bn.js":"../../node_modules/bn.js/lib/bn.js","inherits":"../../node_modules/ethers/node_modules/elliptic/node_modules/inherits/inherits_browser.js","../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/edwards.js":[function(require,module,exports) {
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../curve":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/index.js","../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js","bn.js":"../../node_modules/bn.js/lib/bn.js","inherits":"../../node_modules/ethers/node_modules/elliptic/node_modules/inherits/inherits_browser.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/index.js":[function(require,module,exports) {
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/base.js","./short":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/short.js","./mont":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/mont.js","./edwards":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/edwards.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":[function(require,module,exports) {
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};

},{}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curves.js":[function(require,module,exports) {
'use strict';

var curves = exports;

var hash = require('hash.js');
var elliptic = require('../elliptic');

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});

},{"hash.js":"../../node_modules/hash.js/lib/hash.js","../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js","./precomputed/secp256k1":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/ec/key.js":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"bn.js":"../../node_modules/bn.js/lib/bn.js","../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/ec/signature.js":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"bn.js":"../../node_modules/bn.js/lib/bn.js","../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/ec/index.js":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    pers: options.pers,
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"bn.js":"../../node_modules/bn.js/lib/bn.js","../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js","./key":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/ec/key.js","./signature":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/ec/signature.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/eddsa/key.js":[function(require,module,exports) {
'use strict';

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/eddsa/signature.js":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"bn.js":"../../node_modules/bn.js/lib/bn.js","../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/eddsa/index.js":[function(require,module,exports) {
'use strict';

var hash = require('hash.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"hash.js":"../../node_modules/hash.js/lib/hash.js","../../elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js","./key":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/eddsa/key.js","./signature":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/eddsa/signature.js"}],"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js":[function(require,module,exports) {
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.hmacDRBG = require('./elliptic/hmac-drbg');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":"../../node_modules/ethers/node_modules/elliptic/package.json","./elliptic/utils":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/utils.js","brorand":"../../node_modules/brorand/index.js","./elliptic/hmac-drbg":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/hmac-drbg.js","./elliptic/curve":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curve/index.js","./elliptic/curves":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/curves.js","./elliptic/ec":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/ec/index.js","./elliptic/eddsa":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic/eddsa/index.js"}],"../../node_modules/ethers/wallet/words.json":[function(require,module,exports) {
module.exports = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo"
;
},{}],"../../node_modules/ethers/utils/hmac.js":[function(require,module,exports) {
'use strict';

var hash = require('hash.js');

var sha2 = require('./sha2.js');

var convert = require('./convert.js');

// @TODO: Make this use create-hmac in node

function createSha256Hmac(key) {
    if (!key.buffer) { key = convert.arrayify(key); }
    return new hash.hmac(sha2.createSha256, key);
}

function createSha512Hmac(key) {
    if (!key.buffer) { key = convert.arrayify(key); }
    return new hash.hmac(sha2.createSha512, key);
}

module.exports = {
    createSha256Hmac: createSha256Hmac,
    createSha512Hmac: createSha512Hmac,
};

},{"hash.js":"../../node_modules/hash.js/lib/hash.js","./sha2.js":"../../node_modules/ethers/utils/sha2.js","./convert.js":"../../node_modules/ethers/utils/convert.js"}],"../../node_modules/ethers/utils/pbkdf2.js":[function(require,module,exports) {
'use strict';

var convert = require('./convert');

function pbkdf2(password, salt, iterations, keylen, createHmac) {
    var hLen
    var l = 1
    var DK = new Uint8Array(keylen)
    var block1 = new Uint8Array(salt.length + 4)
    block1.set(salt);
    //salt.copy(block1, 0, 0, salt.length)

    var r
    var T

    for (var i = 1; i <= l; i++) {
        //block1.writeUInt32BE(i, salt.length)
        block1[salt.length] = (i >> 24) & 0xff;
        block1[salt.length + 1] = (i >> 16) & 0xff;
        block1[salt.length + 2] = (i >> 8) & 0xff;
        block1[salt.length + 3] = i & 0xff;

        var U = createHmac(password).update(block1).digest();

        if (!hLen) {
            hLen = U.length
            T = new Uint8Array(hLen)
            l = Math.ceil(keylen / hLen)
            r = keylen - (l - 1) * hLen
        }

        //U.copy(T, 0, 0, hLen)
        T.set(U);


        for (var j = 1; j < iterations; j++) {
            U = createHmac(password).update(U).digest()
            for (var k = 0; k < hLen; k++) T[k] ^= U[k]
        }


        var destPos = (i - 1) * hLen
        var len = (i === l ? r : hLen)
        //T.copy(DK, destPos, 0, len)
        DK.set(convert.arrayify(T).slice(0, len), destPos);
    }

    return convert.arrayify(DK)
}

module.exports = pbkdf2;

},{"./convert":"../../node_modules/ethers/utils/convert.js"}],"../../node_modules/ethers/wallet/hdnode.js":[function(require,module,exports) {
// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki
// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki

var secp256k1 = new (require('elliptic')).ec('secp256k1');

var wordlist = (function() {
    var words = require('./words.json');
    return words.replace(/([A-Z])/g, ' $1').toLowerCase().substring(1).split(' ');
})();

var utils = (function() {
    var convert = require('../utils/convert.js');

    var sha2 = require('../utils/sha2');

    var hmac = require('../utils/hmac');

    return {
        defineProperty: require('../utils/properties.js').defineProperty,

        arrayify: convert.arrayify,
        bigNumberify: require('../utils/bignumber.js').bigNumberify,
        hexlify: convert.hexlify,

        toUtf8Bytes: require('../utils/utf8.js').toUtf8Bytes,

        sha256: sha2.sha256,
        createSha512Hmac: hmac.createSha512Hmac,

        pbkdf2: require('../utils/pbkdf2.js'),
    }
})();

// "Bitcoin seed"
var MasterSecret = utils.toUtf8Bytes('Bitcoin seed');

var HardenedBit = 0x80000000;

// Returns a byte with the MSB bits set
function getUpperMask(bits) {
   return ((1 << bits) - 1) << (8 - bits);
}

// Returns a byte with the LSB bits set
function getLowerMask(bits) {
   return (1 << bits) - 1;
}

function HDNode(keyPair, chainCode, index, depth) {
    if (!(this instanceof HDNode)) { throw new Error('missing new'); }

    utils.defineProperty(this, '_keyPair', keyPair);

    utils.defineProperty(this, 'privateKey', utils.hexlify(keyPair.priv.toArray('be', 32)));
    utils.defineProperty(this, 'publicKey', '0x' + keyPair.getPublic(true, 'hex'));

    utils.defineProperty(this, 'chainCode', utils.hexlify(chainCode));

    utils.defineProperty(this, 'index', index);
    utils.defineProperty(this, 'depth', depth);
}

utils.defineProperty(HDNode.prototype, '_derive', function(index) {

    // Public parent key -> public child key
    if (!this.privateKey) {
        if (index >= HardenedBit) { throw new Error('cannot derive child of neutered node'); }
        throw new Error('not implemented');
    }

    var data = new Uint8Array(37);

    if (index & HardenedBit) {
        // Data = 0x00 || ser_256(k_par)
        data.set(utils.arrayify(this.privateKey), 1);

    } else {
        // Data = ser_p(point(k_par))
        data.set(this._keyPair.getPublic().encode(null, true));
    }

    // Data += ser_32(i)
    for (var i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }

    var I = utils.arrayify(utils.createSha512Hmac(this.chainCode).update(data).digest());
    var IL = utils.bigNumberify(I.slice(0, 32));
    var IR = I.slice(32);

    var ki = IL.add('0x' + this._keyPair.getPrivate('hex')).mod('0x' + secp256k1.curve.n.toString(16));

    return new HDNode(secp256k1.keyFromPrivate(utils.arrayify(ki)), I.slice(32), index, this.depth + 1);
});

utils.defineProperty(HDNode.prototype, 'derivePath', function(path) {
    var components = path.split('/');

    if (components.length === 0 || (components[0] === 'm' && this.depth !== 0)) {
        throw new Error('invalid path');
    }

    if (components[0] === 'm') { components.shift(); }

    var result = this;
    for (var i = 0; i < components.length; i++) {
        var component = components[i];
        if (component.match(/^[0-9]+'$/)) {
            var index = parseInt(component.substring(0, component.length - 1));
            if (index >= HardenedBit) { throw new Error('invalid path index - ' + component); }
            result = result._derive(HardenedBit + index);
        } else if (component.match(/^[0-9]+$/)) {
            var index = parseInt(component);
            if (index >= HardenedBit) { throw new Error('invalid path index - ' + component); }
            result = result._derive(index);
        } else {
            throw new Error('invalid path component - ' + component);
        }
    }

    return result;
});

utils.defineProperty(HDNode, 'fromMnemonic', function(mnemonic) {
    // Check that the checksum s valid (will throw an error)
    mnemonicToEntropy(mnemonic);

    return HDNode.fromSeed(mnemonicToSeed(mnemonic));
});

utils.defineProperty(HDNode, 'fromSeed', function(seed) {
    seed = utils.arrayify(seed);
    if (seed.length < 16 || seed.length > 64) { throw new Error('invalid seed'); }

    var I = utils.arrayify(utils.createSha512Hmac(MasterSecret).update(seed).digest());

    return new HDNode(secp256k1.keyFromPrivate(I.slice(0, 32)), I.slice(32), 0, 0, 0);
});

function mnemonicToSeed(mnemonic, password) {

    if (!password) {
        password = '';

    } else if (password.normalize) {
        password = password.normalize('NFKD');

    } else {
        for (var i = 0; i < password.length; i++) {
            var c = password.charCodeAt(i);
            if (c < 32 || c > 127) { throw new Error('passwords with non-ASCII characters not supported in this environment'); }
        }
    }

    mnemonic = utils.toUtf8Bytes(mnemonic, 'NFKD');
    var salt = utils.toUtf8Bytes('mnemonic' + password, 'NFKD');

    return utils.hexlify(utils.pbkdf2(mnemonic, salt, 2048, 64, utils.createSha512Hmac));
}

function mnemonicToEntropy(mnemonic) {
   var words = mnemonic.toLowerCase().split(' ');
   if ((words.length % 3) !== 0) { throw new Error('invalid mnemonic'); }

   var entropy = utils.arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));

   var offset = 0;
   for (var i = 0; i < words.length; i++) {
       var index = wordlist.indexOf(words[i]);
       if (index === -1) { throw new Error('invalid mnemonic'); }

       for (var bit = 0; bit < 11; bit++) {
           if (index & (1 << (10 - bit))) {
               entropy[offset >> 3] |= (1 << (7 - (offset % 8)));
           }
           offset++;
       }
   }

   var entropyBits = 32 * words.length / 3;

   var checksumBits = words.length / 3;
   var checksumMask = getUpperMask(checksumBits);

   var checksum = utils.arrayify(utils.sha256(entropy.slice(0, entropyBits / 8)))[0];
   checksum &= checksumMask;

   if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {
       throw new Error('invalid checksum');
   }

   return utils.hexlify(entropy.slice(0, entropyBits / 8));
}

function entropyToMnemonic(entropy) {
    entropy = utils.arrayify(entropy);

    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {
        throw new Error('invalid entropy');
    }

    var words = [0];

    var remainingBits = 11;
    for (var i = 0; i < entropy.length; i++) {

        // Consume the whole byte (with still more to go)
        if (remainingBits > 8) {
            words[words.length - 1] <<= 8;
            words[words.length - 1] |= entropy[i];

            remainingBits -= 8;

        // This byte will complete an 11-bit index
        } else {
            words[words.length - 1] <<= remainingBits;
            words[words.length - 1] |= entropy[i] >> (8 - remainingBits);

            // Start the next word
            words.push(entropy[i] & getLowerMask(8 - remainingBits));

            remainingBits += 3;
        }
    }

    // Compute the checksum bits
    var checksum = utils.arrayify(utils.sha256(entropy))[0];
    var checksumBits = entropy.length / 4;
    checksum &= getUpperMask(checksumBits);

    // Shift the checksum into the word indices
    words[words.length - 1] <<= checksumBits;
    words[words.length - 1] |= (checksum >> (8 - checksumBits));

    // Convert indices into words
    for (var i = 0; i < words.length; i++) {
        words[i] = wordlist[words[i]];
    }

    return words.join(' ');
}

function isValidMnemonic(mnemonic) {
    try {
        mnemonicToEntropy(mnemonic);
        return true;
    } catch (error) { }

    return false;
}

module.exports = {
    fromMnemonic: HDNode.fromMnemonic,
    fromSeed: HDNode.fromSeed,

    mnemonicToEntropy: mnemonicToEntropy,
    entropyToMnemonic: entropyToMnemonic,
    mnemonicToSeed: mnemonicToSeed,

    isValidMnemonic: isValidMnemonic,
};

},{"elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js","./words.json":"../../node_modules/ethers/wallet/words.json","../utils/convert.js":"../../node_modules/ethers/utils/convert.js","../utils/sha2":"../../node_modules/ethers/utils/sha2.js","../utils/hmac":"../../node_modules/ethers/utils/hmac.js","../utils/properties.js":"../../node_modules/ethers/utils/properties.js","../utils/bignumber.js":"../../node_modules/ethers/utils/bignumber.js","../utils/utf8.js":"../../node_modules/ethers/utils/utf8.js","../utils/pbkdf2.js":"../../node_modules/ethers/utils/pbkdf2.js"}],"../../node_modules/aes-js/index.js":[function(require,module,exports) {
var define;
"use strict";

(function(root) {

    function checkInt(value) {
        return (parseInt(value) === value);
    }

    function checkInts(arrayish) {
        if (!checkInt(arrayish.length)) { return false; }

        for (var i = 0; i < arrayish.length; i++) {
            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {
                return false;
            }
        }

        return true;
    }

    function coerceArray(arg, copy) {

        // ArrayBuffer view
        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {

            if (copy) {
                if (arg.slice) {
                    arg = arg.slice();
                } else {
                    arg = Array.prototype.slice.call(arg);
                }
            }

            return arg;
        }

        // It's an array; check it is a valid representation of a byte
        if (Array.isArray(arg)) {
            if (!checkInts(arg)) {
                throw new Error('Array contains invalid value: ' + arg);
            }

            return new Uint8Array(arg);
        }

        // Something else, but behaves like an array (maybe a Buffer? Arguments?)
        if (checkInt(arg.length) && checkInts(arg)) {
            return new Uint8Array(arg);
        }

        throw new Error('unsupported array-like object');
    }

    function createArray(length) {
        return new Uint8Array(length);
    }

    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
        if (sourceStart != null || sourceEnd != null) {
            if (sourceArray.slice) {
                sourceArray = sourceArray.slice(sourceStart, sourceEnd);
            } else {
                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);
            }
        }
        targetArray.set(sourceArray, targetStart);
    }



    var convertUtf8 = (function() {
        function toBytes(text) {
            var result = [], i = 0;
            text = encodeURI(text);
            while (i < text.length) {
                var c = text.charCodeAt(i++);

                // if it is a % sign, encode the following 2 bytes as a hex value
                if (c === 37) {
                    result.push(parseInt(text.substr(i, 2), 16))
                    i += 2;

                // otherwise, just the actual byte
                } else {
                    result.push(c)
                }
            }

            return coerceArray(result);
        }

        function fromBytes(bytes) {
            var result = [], i = 0;

            while (i < bytes.length) {
                var c = bytes[i];

                if (c < 128) {
                    result.push(String.fromCharCode(c));
                    i++;
                } else if (c > 191 && c < 224) {
                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));
                    i += 2;
                } else {
                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));
                    i += 3;
                }
            }

            return result.join('');
        }

        return {
            toBytes: toBytes,
            fromBytes: fromBytes,
        }
    })();

    var convertHex = (function() {
        function toBytes(text) {
            var result = [];
            for (var i = 0; i < text.length; i += 2) {
                result.push(parseInt(text.substr(i, 2), 16));
            }

            return result;
        }

        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html
        var Hex = '0123456789abcdef';

        function fromBytes(bytes) {
                var result = [];
                for (var i = 0; i < bytes.length; i++) {
                    var v = bytes[i];
                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);
                }
                return result.join('');
        }

        return {
            toBytes: toBytes,
            fromBytes: fromBytes,
        }
    })();


    // Number of rounds by keysize
    var numberOfRounds = {16: 10, 24: 12, 32: 14}

    // Round constant words
    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];

    // S-box and Inverse S-box (S is for Substitution)
    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];
    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];

    // Transformations for encryption
    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];
    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];
    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];
    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];

    // Transformations for decryption
    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];
    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];
    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];
    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];

    // Transformations for decryption key expansion
    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];
    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];
    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];
    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];

    function convertToInt32(bytes) {
        var result = [];
        for (var i = 0; i < bytes.length; i += 4) {
            result.push(
                (bytes[i    ] << 24) |
                (bytes[i + 1] << 16) |
                (bytes[i + 2] <<  8) |
                 bytes[i + 3]
            );
        }
        return result;
    }

    var AES = function(key) {
        if (!(this instanceof AES)) {
            throw Error('AES must be instanitated with `new`');
        }

        Object.defineProperty(this, 'key', {
            value: coerceArray(key, true)
        });

        this._prepare();
    }


    AES.prototype._prepare = function() {

        var rounds = numberOfRounds[this.key.length];
        if (rounds == null) {
            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');
        }

        // encryption round keys
        this._Ke = [];

        // decryption round keys
        this._Kd = [];

        for (var i = 0; i <= rounds; i++) {
            this._Ke.push([0, 0, 0, 0]);
            this._Kd.push([0, 0, 0, 0]);
        }

        var roundKeyCount = (rounds + 1) * 4;
        var KC = this.key.length / 4;

        // convert the key into ints
        var tk = convertToInt32(this.key);

        // copy values into round key arrays
        var index;
        for (var i = 0; i < KC; i++) {
            index = i >> 2;
            this._Ke[index][i % 4] = tk[i];
            this._Kd[rounds - index][i % 4] = tk[i];
        }

        // key expansion (fips-197 section 5.2)
        var rconpointer = 0;
        var t = KC, tt;
        while (t < roundKeyCount) {
            tt = tk[KC - 1];
            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^
                      (S[(tt >>  8) & 0xFF] << 16) ^
                      (S[ tt        & 0xFF] <<  8) ^
                       S[(tt >> 24) & 0xFF]        ^
                      (rcon[rconpointer] << 24));
            rconpointer += 1;

            // key expansion (for non-256 bit)
            if (KC != 8) {
                for (var i = 1; i < KC; i++) {
                    tk[i] ^= tk[i - 1];
                }

            // key expansion for 256-bit keys is "slightly different" (fips-197)
            } else {
                for (var i = 1; i < (KC / 2); i++) {
                    tk[i] ^= tk[i - 1];
                }
                tt = tk[(KC / 2) - 1];

                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^
                              (S[(tt >>  8) & 0xFF] <<  8) ^
                              (S[(tt >> 16) & 0xFF] << 16) ^
                              (S[(tt >> 24) & 0xFF] << 24));

                for (var i = (KC / 2) + 1; i < KC; i++) {
                    tk[i] ^= tk[i - 1];
                }
            }

            // copy values into round key arrays
            var i = 0, r, c;
            while (i < KC && t < roundKeyCount) {
                r = t >> 2;
                c = t % 4;
                this._Ke[r][c] = tk[i];
                this._Kd[rounds - r][c] = tk[i++];
                t++;
            }
        }

        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)
        for (var r = 1; r < rounds; r++) {
            for (var c = 0; c < 4; c++) {
                tt = this._Kd[r][c];
                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^
                                  U2[(tt >> 16) & 0xFF] ^
                                  U3[(tt >>  8) & 0xFF] ^
                                  U4[ tt        & 0xFF]);
            }
        }
    }

    AES.prototype.encrypt = function(plaintext) {
        if (plaintext.length != 16) {
            throw new Error('invalid plaintext size (must be 16 bytes)');
        }

        var rounds = this._Ke.length - 1;
        var a = [0, 0, 0, 0];

        // convert plaintext to (ints ^ key)
        var t = convertToInt32(plaintext);
        for (var i = 0; i < 4; i++) {
            t[i] ^= this._Ke[0][i];
        }

        // apply round transforms
        for (var r = 1; r < rounds; r++) {
            for (var i = 0; i < 4; i++) {
                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^
                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^
                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^
                        T4[ t[(i + 3) % 4]        & 0xff] ^
                        this._Ke[r][i]);
            }
            t = a.slice();
        }

        // the last round is special
        var result = createArray(16), tt;
        for (var i = 0; i < 4; i++) {
            tt = this._Ke[rounds][i];
            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;
            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;
            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;
            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;
        }

        return result;
    }

    AES.prototype.decrypt = function(ciphertext) {
        if (ciphertext.length != 16) {
            throw new Error('invalid ciphertext size (must be 16 bytes)');
        }

        var rounds = this._Kd.length - 1;
        var a = [0, 0, 0, 0];

        // convert plaintext to (ints ^ key)
        var t = convertToInt32(ciphertext);
        for (var i = 0; i < 4; i++) {
            t[i] ^= this._Kd[0][i];
        }

        // apply round transforms
        for (var r = 1; r < rounds; r++) {
            for (var i = 0; i < 4; i++) {
                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^
                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^
                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^
                        T8[ t[(i + 1) % 4]        & 0xff] ^
                        this._Kd[r][i]);
            }
            t = a.slice();
        }

        // the last round is special
        var result = createArray(16), tt;
        for (var i = 0; i < 4; i++) {
            tt = this._Kd[rounds][i];
            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;
            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;
            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;
            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;
        }

        return result;
    }


    /**
     *  Mode Of Operation - Electonic Codebook (ECB)
     */
    var ModeOfOperationECB = function(key) {
        if (!(this instanceof ModeOfOperationECB)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Electronic Code Block";
        this.name = "ecb";

        this._aes = new AES(key);
    }

    ModeOfOperationECB.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);

        if ((plaintext.length % 16) !== 0) {
            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
        }

        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);

        for (var i = 0; i < plaintext.length; i += 16) {
            copyArray(plaintext, block, 0, i, i + 16);
            block = this._aes.encrypt(block);
            copyArray(block, ciphertext, i);
        }

        return ciphertext;
    }

    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);

        if ((ciphertext.length % 16) !== 0) {
            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
        }

        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);

        for (var i = 0; i < ciphertext.length; i += 16) {
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);
            copyArray(block, plaintext, i);
        }

        return plaintext;
    }


    /**
     *  Mode Of Operation - Cipher Block Chaining (CBC)
     */
    var ModeOfOperationCBC = function(key, iv) {
        if (!(this instanceof ModeOfOperationCBC)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Cipher Block Chaining";
        this.name = "cbc";

        if (!iv) {
            iv = createArray(16);

        } else if (iv.length != 16) {
            throw new Error('invalid initialation vector size (must be 16 bytes)');
        }

        this._lastCipherblock = coerceArray(iv, true);

        this._aes = new AES(key);
    }

    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);

        if ((plaintext.length % 16) !== 0) {
            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
        }

        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);

        for (var i = 0; i < plaintext.length; i += 16) {
            copyArray(plaintext, block, 0, i, i + 16);

            for (var j = 0; j < 16; j++) {
                block[j] ^= this._lastCipherblock[j];
            }

            this._lastCipherblock = this._aes.encrypt(block);
            copyArray(this._lastCipherblock, ciphertext, i);
        }

        return ciphertext;
    }

    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);

        if ((ciphertext.length % 16) !== 0) {
            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
        }

        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);

        for (var i = 0; i < ciphertext.length; i += 16) {
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);

            for (var j = 0; j < 16; j++) {
                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
            }

            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
        }

        return plaintext;
    }


    /**
     *  Mode Of Operation - Cipher Feedback (CFB)
     */
    var ModeOfOperationCFB = function(key, iv, segmentSize) {
        if (!(this instanceof ModeOfOperationCFB)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Cipher Feedback";
        this.name = "cfb";

        if (!iv) {
            iv = createArray(16);

        } else if (iv.length != 16) {
            throw new Error('invalid initialation vector size (must be 16 size)');
        }

        if (!segmentSize) { segmentSize = 1; }

        this.segmentSize = segmentSize;

        this._shiftRegister = coerceArray(iv, true);

        this._aes = new AES(key);
    }

    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {
        if ((plaintext.length % this.segmentSize) != 0) {
            throw new Error('invalid plaintext size (must be segmentSize bytes)');
        }

        var encrypted = coerceArray(plaintext, true);

        var xorSegment;
        for (var i = 0; i < encrypted.length; i += this.segmentSize) {
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for (var j = 0; j < this.segmentSize; j++) {
                encrypted[i + j] ^= xorSegment[j];
            }

            // Shift the register
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }

        return encrypted;
    }

    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {
        if ((ciphertext.length % this.segmentSize) != 0) {
            throw new Error('invalid ciphertext size (must be segmentSize bytes)');
        }

        var plaintext = coerceArray(ciphertext, true);

        var xorSegment;
        for (var i = 0; i < plaintext.length; i += this.segmentSize) {
            xorSegment = this._aes.encrypt(this._shiftRegister);

            for (var j = 0; j < this.segmentSize; j++) {
                plaintext[i + j] ^= xorSegment[j];
            }

            // Shift the register
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }

        return plaintext;
    }

    /**
     *  Mode Of Operation - Output Feedback (OFB)
     */
    var ModeOfOperationOFB = function(key, iv) {
        if (!(this instanceof ModeOfOperationOFB)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Output Feedback";
        this.name = "ofb";

        if (!iv) {
            iv = createArray(16);

        } else if (iv.length != 16) {
            throw new Error('invalid initialation vector size (must be 16 bytes)');
        }

        this._lastPrecipher = coerceArray(iv, true);
        this._lastPrecipherIndex = 16;

        this._aes = new AES(key);
    }

    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);

        for (var i = 0; i < encrypted.length; i++) {
            if (this._lastPrecipherIndex === 16) {
                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);
                this._lastPrecipherIndex = 0;
            }
            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
        }

        return encrypted;
    }

    // Decryption is symetric
    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;


    /**
     *  Counter object for CTR common mode of operation
     */
    var Counter = function(initialValue) {
        if (!(this instanceof Counter)) {
            throw Error('Counter must be instanitated with `new`');
        }

        // We allow 0, but anything false-ish uses the default 1
        if (initialValue !== 0 && !initialValue) { initialValue = 1; }

        if (typeof(initialValue) === 'number') {
            this._counter = createArray(16);
            this.setValue(initialValue);

        } else {
            this.setBytes(initialValue);
        }
    }

    Counter.prototype.setValue = function(value) {
        if (typeof(value) !== 'number' || parseInt(value) != value) {
            throw new Error('invalid counter value (must be an integer)');
        }

        for (var index = 15; index >= 0; --index) {
            this._counter[index] = value % 256;
            value = value >> 8;
        }
    }

    Counter.prototype.setBytes = function(bytes) {
        bytes = coerceArray(bytes, true);

        if (bytes.length != 16) {
            throw new Error('invalid counter bytes size (must be 16 bytes)');
        }

        this._counter = bytes;
    };

    Counter.prototype.increment = function() {
        for (var i = 15; i >= 0; i--) {
            if (this._counter[i] === 255) {
                this._counter[i] = 0;
            } else {
                this._counter[i]++;
                break;
            }
        }
    }


    /**
     *  Mode Of Operation - Counter (CTR)
     */
    var ModeOfOperationCTR = function(key, counter) {
        if (!(this instanceof ModeOfOperationCTR)) {
            throw Error('AES must be instanitated with `new`');
        }

        this.description = "Counter";
        this.name = "ctr";

        if (!(counter instanceof Counter)) {
            counter = new Counter(counter)
        }

        this._counter = counter;

        this._remainingCounter = null;
        this._remainingCounterIndex = 16;

        this._aes = new AES(key);
    }

    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);

        for (var i = 0; i < encrypted.length; i++) {
            if (this._remainingCounterIndex === 16) {
                this._remainingCounter = this._aes.encrypt(this._counter._counter);
                this._remainingCounterIndex = 0;
                this._counter.increment();
            }
            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
        }

        return encrypted;
    }

    // Decryption is symetric
    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;


    ///////////////////////
    // Padding

    // See:https://tools.ietf.org/html/rfc2315
    function pkcs7pad(data) {
        data = coerceArray(data, true);
        var padder = 16 - (data.length % 16);
        var result = createArray(data.length + padder);
        copyArray(data, result);
        for (var i = data.length; i < result.length; i++) {
            result[i] = padder;
        }
        return result;
    }

    function pkcs7strip(data) {
        data = coerceArray(data, true);
        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }

        var padder = data[data.length - 1];
        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }

        var length = data.length - padder;
        for (var i = 0; i < padder; i++) {
            if (data[length + i] !== padder) {
                throw new Error('PKCS#7 invalid padding byte');
            }
        }

        var result = createArray(length);
        copyArray(data, result, 0, 0, length);
        return result;
    }

    ///////////////////////
    // Exporting


    // The block cipher
    var aesjs = {
        AES: AES,
        Counter: Counter,

        ModeOfOperation: {
            ecb: ModeOfOperationECB,
            cbc: ModeOfOperationCBC,
            cfb: ModeOfOperationCFB,
            ofb: ModeOfOperationOFB,
            ctr: ModeOfOperationCTR
        },

        utils: {
            hex: convertHex,
            utf8: convertUtf8
        },

        padding: {
            pkcs7: {
                pad: pkcs7pad,
                strip: pkcs7strip
            }
        },

        _arrayTest: {
            coerceArray: coerceArray,
            createArray: createArray,
            copyArray: copyArray,
        }
    };


    // node.js
    if (typeof exports !== 'undefined') {
        module.exports = aesjs

    // RequireJS/AMD
    // http://www.requirejs.org/docs/api.html
    // https://github.com/amdjs/amdjs-api/wiki/AMD
    } else if (typeof(define) === 'function' && define.amd) {
        define(aesjs);

    // Web Browsers
    } else {

        // If there was an existing library at "aesjs" make sure it's still available
        if (root.aesjs) {
            aesjs._aesjs = root.aesjs;
        }

        root.aesjs = aesjs;
    }


})(this);

},{}],"../../node_modules/uuid/rng-browser.js":[function(require,module,exports) {
var global = arguments[3];

var rng;

if (global.crypto && crypto.getRandomValues) {
  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
  // Moderately fast, high quality
  var _rnds8 = new Uint8Array(16);
  rng = function whatwgRNG() {
    crypto.getRandomValues(_rnds8);
    return _rnds8;
  };
}

if (!rng) {
  // Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().  It's fast, but is of unspecified
  // quality.
  var  _rnds = new Array(16);
  rng = function() {
    for (var i = 0, r; i < 16; i++) {
      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
    }

    return _rnds;
  };
}

module.exports = rng;


},{}],"../../node_modules/uuid/uuid.js":[function(require,module,exports) {
//     uuid.js
//
//     Copyright (c) 2010-2012 Robert Kieffer
//     MIT License - http://opensource.org/licenses/mit-license.php

// Unique ID creation requires a high quality random # generator.  We feature
// detect to determine the best RNG source, normalizing to a function that
// returns 128-bits of randomness, since that's what's usually required
var _rng = require('./rng');

// Maps for number <-> hex string conversion
var _byteToHex = [];
var _hexToByte = {};
for (var i = 0; i < 256; i++) {
  _byteToHex[i] = (i + 0x100).toString(16).substr(1);
  _hexToByte[_byteToHex[i]] = i;
}

// **`parse()` - Parse a UUID into it's component bytes**
function parse(s, buf, offset) {
  var i = (buf && offset) || 0, ii = 0;

  buf = buf || [];
  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {
    if (ii < 16) { // Don't overflow!
      buf[i + ii++] = _hexToByte[oct];
    }
  });

  // Zero out remaining bytes if string was short
  while (ii < 16) {
    buf[i + ii++] = 0;
  }

  return buf;
}

// **`unparse()` - Convert UUID byte array (ala parse()) into a string**
function unparse(buf, offset) {
  var i = offset || 0, bth = _byteToHex;
  return  bth[buf[i++]] + bth[buf[i++]] +
          bth[buf[i++]] + bth[buf[i++]] + '-' +
          bth[buf[i++]] + bth[buf[i++]] + '-' +
          bth[buf[i++]] + bth[buf[i++]] + '-' +
          bth[buf[i++]] + bth[buf[i++]] + '-' +
          bth[buf[i++]] + bth[buf[i++]] +
          bth[buf[i++]] + bth[buf[i++]] +
          bth[buf[i++]] + bth[buf[i++]];
}

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

// random #'s we need to init node and clockseq
var _seedBytes = _rng();

// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
var _nodeId = [
  _seedBytes[0] | 0x01,
  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]
];

// Per 4.2.2, randomize (14 bit) clockseq
var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

// Previous uuid creation time
var _lastMSecs = 0, _lastNSecs = 0;

// See https://github.com/broofa/node-uuid for API details
function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];

  options = options || {};

  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

  // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

  // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock
  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

  // Time since last uuid creation (in msecs)
  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

  // Per 4.2.1.2, Bump clockseq on clock regression
  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  }

  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval
  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  }

  // Per 4.2.1.2 Throw error if too many uuids are requested
  if (nsecs >= 10000) {
    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq;

  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
  msecs += 12219292800000;

  // `time_low`
  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff;

  // `time_mid`
  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff;

  // `time_high_and_version`
  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
  b[i++] = tmh >>> 16 & 0xff;

  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
  b[i++] = clockseq >>> 8 | 0x80;

  // `clock_seq_low`
  b[i++] = clockseq & 0xff;

  // `node`
  var node = options.node || _nodeId;
  for (var n = 0; n < 6; n++) {
    b[i + n] = node[n];
  }

  return buf ? buf : unparse(b);
}

// **`v4()` - Generate random UUID**

// See https://github.com/broofa/node-uuid for API details
function v4(options, buf, offset) {
  // Deprecated - 'format' argument, as supported in v1.2
  var i = buf && offset || 0;

  if (typeof(options) == 'string') {
    buf = options == 'binary' ? new Array(16) : null;
    options = null;
  }
  options = options || {};

  var rnds = options.random || (options.rng || _rng)();

  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6] = (rnds[6] & 0x0f) | 0x40;
  rnds[8] = (rnds[8] & 0x3f) | 0x80;

  // Copy bytes to buffer, if provided
  if (buf) {
    for (var ii = 0; ii < 16; ii++) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || unparse(rnds);
}

// Export public API
var uuid = v4;
uuid.v1 = v1;
uuid.v4 = v4;
uuid.parse = parse;
uuid.unparse = unparse;

module.exports = uuid;

},{"./rng":"../../node_modules/uuid/rng-browser.js"}],"../../node_modules/ethers/wallet/signing-key.js":[function(require,module,exports) {
'use strict';

/**
 *  SigningKey
 *
 *
 */

var secp256k1 = new (require('elliptic')).ec('secp256k1');
var utils = (function() {
    var convert = require('../utils/convert');
    return {
        defineProperty: require('../utils/properties').defineProperty,

        arrayify: convert.arrayify,
        hexlify: convert.hexlify,
        padZeros: convert.padZeros,

        getAddress: require('../utils/address').getAddress,

        keccak256: require('../utils/keccak256')
    };
})();

var errors = require('../utils/errors');


function SigningKey(privateKey) {
    errors.checkNew(this, SigningKey);

    try {
        privateKey = utils.arrayify(privateKey);
        if (privateKey.length !== 32) {
            errors.throwError('exactly 32 bytes required', errors.INVALID_ARGUMENT, { value: privateKey });
        }
    } catch(error) {
        var params = { arg: 'privateKey', reason: error.reason, value: '[REDACTED]' }
        if (error.value) {
            if(typeof(error.value.length) === 'number') {
                params.length = error.value.length;
            }
            params.type = typeof(error.value);
        }
        errors.throwError('invalid private key', error.code, params);
    }

    utils.defineProperty(this, 'privateKey', utils.hexlify(privateKey))

    var keyPair = secp256k1.keyFromPrivate(privateKey);

    utils.defineProperty(this, 'publicKey', '0x' + keyPair.getPublic(true, 'hex'))

    var address = SigningKey.publicKeyToAddress('0x' + keyPair.getPublic(false, 'hex'));
    utils.defineProperty(this, 'address', address)

    utils.defineProperty(this, 'signDigest', function(digest) {
        var signature = keyPair.sign(utils.arrayify(digest), {canonical: true});
        var r = '0x' + signature.r.toString(16);
        var s = '0x' + signature.s.toString(16);

        return {
            recoveryParam: signature.recoveryParam,
            r: utils.hexlify(utils.padZeros(r, 32)),
            s: utils.hexlify(utils.padZeros(s, 32))
        }
    });
}

utils.defineProperty(SigningKey, 'recover', function(digest, r, s, recoveryParam) {
    var signature = {
        r: utils.arrayify(r),
        s: utils.arrayify(s)
    };
    var publicKey = secp256k1.recoverPubKey(utils.arrayify(digest), signature, recoveryParam);
    return SigningKey.publicKeyToAddress('0x' + publicKey.encode('hex', false));
});


utils.defineProperty(SigningKey, 'getPublicKey', function(value, compressed) {
    value = utils.arrayify(value);
    compressed = !!compressed;

    if (value.length === 32) {
        var keyPair = secp256k1.keyFromPrivate(value);
        return '0x' + keyPair.getPublic(compressed, 'hex');

    } else if (value.length === 33) {
        var keyPair = secp256k1.keyFromPublic(value);
        return '0x' + keyPair.getPublic(compressed, 'hex');

    } else if (value.length === 65) {
        var keyPair = secp256k1.keyFromPublic(value);
        return '0x' + keyPair.getPublic(compressed, 'hex');
    }

    throw new Error('invalid value');
});

utils.defineProperty(SigningKey, 'publicKeyToAddress', function(publicKey) {
    publicKey = '0x' + SigningKey.getPublicKey(publicKey, false).slice(4);
    return utils.getAddress('0x' + utils.keccak256(publicKey).substring(26));
});

module.exports = SigningKey;

},{"elliptic":"../../node_modules/ethers/node_modules/elliptic/lib/elliptic.js","../utils/convert":"../../node_modules/ethers/utils/convert.js","../utils/properties":"../../node_modules/ethers/utils/properties.js","../utils/address":"../../node_modules/ethers/utils/address.js","../utils/keccak256":"../../node_modules/ethers/utils/keccak256.js","../utils/errors":"../../node_modules/ethers/utils/errors.js"}],"../../node_modules/ethers/wallet/secret-storage.js":[function(require,module,exports) {
'use strict';

var aes = require('aes-js');
var scrypt = require('scrypt-js');
var uuid = require('uuid');

var hmac = require('../utils/hmac');
var pbkdf2 = require('../utils/pbkdf2');
var utils = require('../utils');

var SigningKey = require('./signing-key');
var HDNode = require('./hdnode');

// @TODO: Maybe move this to HDNode?
var defaultPath = "m/44'/60'/0'/0/0";

function arrayify(hexString) {
    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {
        hexString = '0x' + hexString;
    }
    return utils.arrayify(hexString);
}

function zpad(value, length) {
    value = String(value);
    while (value.length < length) { value = '0' + value; }
    return value;
}

function getPassword(password) {
    if (typeof(password) === 'string') {
        return utils.toUtf8Bytes(password, 'NFKC');
    }
    return utils.arrayify(password, 'password');
}

// Search an Object and its children recursively, caselessly.
function searchPath(object, path) {
    var currentChild = object;

    var comps = path.toLowerCase().split('/');
    for (var i = 0; i < comps.length; i++) {

        // Search for a child object with a case-insensitive matching key
        var matchingChild = null;
        for (var key in currentChild) {
             if (key.toLowerCase() === comps[i]) {
                 matchingChild = currentChild[key];
                 break;
             }
        }

        // Didn't find one. :'(
        if (matchingChild === null) {
            return null;
        }

        // Now check this child...
        currentChild = matchingChild;
    }

    return currentChild;
}

var secretStorage = {};


utils.defineProperty(secretStorage, 'isCrowdsaleWallet', function(json) {
    try {
        var data = JSON.parse(json);
    } catch (error) { return false; }

    return (data.encseed && data.ethaddr);
});

utils.defineProperty(secretStorage, 'isValidWallet', function(json) {
    try {
        var data = JSON.parse(json);
    } catch (error) { return false; }

    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {
        return false;
    }

    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff
    return true;
});


// See: https://github.com/ethereum/pyethsaletool
utils.defineProperty(secretStorage, 'decryptCrowdsale', function(json, password) {
    var data = JSON.parse(json);

    password = getPassword(password);

    // Ethereum Address
    var ethaddr = utils.getAddress(searchPath(data, 'ethaddr'));

    // Encrypted Seed
    var encseed = arrayify(searchPath(data, 'encseed'));
    if (!encseed || (encseed.length % 16) !== 0) {
        throw new Error('invalid encseed');
    }

    var key = pbkdf2(password, password, 2000, 32, hmac.createSha256Hmac).slice(0, 16);

    var iv = encseed.slice(0, 16);
    var encryptedSeed = encseed.slice(16);

    // Decrypt the seed
    var aesCbc = new aes.ModeOfOperation.cbc(key, iv);
    var seed = utils.arrayify(aesCbc.decrypt(encryptedSeed));
    seed = aes.padding.pkcs7.strip(seed);

    // This wallet format is weird... Convert the binary encoded hex to a string.
    var seedHex = '';
    for (var i = 0; i < seed.length; i++) {
        seedHex += String.fromCharCode(seed[i]);
    }

    var seedHexBytes = utils.toUtf8Bytes(seedHex);

    var signingKey = new SigningKey(utils.keccak256(seedHexBytes));

    if (signingKey.address !== ethaddr) {
        throw new Error('corrupt crowdsale wallet');
    }

    return signingKey;
});


utils.defineProperty(secretStorage, 'decrypt', function(json, password, progressCallback) {
    var data = JSON.parse(json);

    password = getPassword(password);

    var decrypt = function(key, ciphertext) {
        var cipher = searchPath(data, 'crypto/cipher');
        if (cipher === 'aes-128-ctr') {
            var iv = arrayify(searchPath(data, 'crypto/cipherparams/iv'), 'crypto/cipherparams/iv')
            var counter = new aes.Counter(iv);

            var aesCtr = new aes.ModeOfOperation.ctr(key, counter);

            return arrayify(aesCtr.decrypt(ciphertext));
        }

        return null;
    };

    var computeMAC = function(derivedHalf, ciphertext) {
        return utils.keccak256(utils.concat([derivedHalf, ciphertext]));
    }

    var getSigningKey = function(key, reject) {
        var ciphertext = arrayify(searchPath(data, 'crypto/ciphertext'));

        var computedMAC = utils.hexlify(computeMAC(key.slice(16, 32), ciphertext)).substring(2);
        if (computedMAC !== searchPath(data, 'crypto/mac').toLowerCase()) {
            reject(new Error('invalid password'));
            return null;
        }

        var privateKey = decrypt(key.slice(0, 16), ciphertext);
        var mnemonicKey = key.slice(32, 64);

        if (!privateKey) {
            reject(new Error('unsupported cipher'));
            return null;
        }

        var signingKey = new SigningKey(privateKey);
        if (signingKey.address !== utils.getAddress(data.address)) {
            reject(new Error('address mismatch'));
            return null;
        }

        // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase
        if (searchPath(data, 'x-ethers/version') === '0.1') {
            var mnemonicCiphertext = arrayify(searchPath(data, 'x-ethers/mnemonicCiphertext'), 'x-ethers/mnemonicCiphertext');
            var mnemonicIv = arrayify(searchPath(data, 'x-ethers/mnemonicCounter'), 'x-ethers/mnemonicCounter');

            var mnemonicCounter = new aes.Counter(mnemonicIv);
            var mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);

            var path = searchPath(data, 'x-ethers/path') || defaultPath;

            var entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));
            var mnemonic = HDNode.entropyToMnemonic(entropy);

            if (HDNode.fromMnemonic(mnemonic).derivePath(path).privateKey != utils.hexlify(privateKey)) {
                reject(new Error('mnemonic mismatch'));
                return null;
            }

            signingKey.mnemonic = mnemonic;
            signingKey.path = path;
        }

        return signingKey;
    }


    return new Promise(function(resolve, reject) {
        var kdf = searchPath(data, 'crypto/kdf');
        if (kdf && typeof(kdf) === 'string') {
            if (kdf.toLowerCase() === 'scrypt') {
                var salt = arrayify(searchPath(data, 'crypto/kdfparams/salt'), 'crypto/kdfparams/salt');
                var N = parseInt(searchPath(data, 'crypto/kdfparams/n'));
                var r = parseInt(searchPath(data, 'crypto/kdfparams/r'));
                var p = parseInt(searchPath(data, 'crypto/kdfparams/p'));
                if (!N || !r || !p) {
                    reject(new Error('unsupported key-derivation function parameters'));
                    return;
                }

                // Make sure N is a power of 2
                if ((N & (N - 1)) !== 0) {
                    reject(new Error('unsupported key-derivation function parameter value for N'));
                    return;
                }

                var dkLen = parseInt(searchPath(data, 'crypto/kdfparams/dklen'));
                if (dkLen !== 32) {
                    reject( new Error('unsupported key-derivation derived-key length'));
                    return;
                }

                scrypt(password, salt, N, r, p, 64, function(error, progress, key) {
                    if (error) {
                        error.progress = progress;
                        reject(error);

                    } else if (key) {
                        key = arrayify(key);

                        var signingKey = getSigningKey(key, reject);
                        if (!signingKey) { return; }

                        if (progressCallback) { progressCallback(1); }
                        resolve(signingKey);

                    } else if (progressCallback) {
                        return progressCallback(progress);
                    }
                });

            } else if (kdf.toLowerCase() === 'pbkdf2') {
                var salt = arrayify(searchPath(data, 'crypto/kdfparams/salt'), 'crypto/kdfparams/salt');

                var prfFunc = null;
                var prf = searchPath(data, 'crypto/kdfparams/prf');
                if (prf === 'hmac-sha256') {
                    prfFunc = hmac.createSha256Hmac;
                } else if (prf === 'hmac-sha512') {
                    prfFunc = hmac.createSha512Hmac;
                } else {
                    reject(new Error('unsupported prf'));
                    return;
                }

                var c = parseInt(searchPath(data, 'crypto/kdfparams/c'));

                var dkLen = parseInt(searchPath(data, 'crypto/kdfparams/dklen'));
                if (dkLen !== 32) {
                    reject( new Error('unsupported key-derivation derived-key length'));
                    return;
                }

                var key = pbkdf2(password, salt, c, dkLen, prfFunc);

                var signingKey = getSigningKey(key, reject);
                if (!signingKey) { return; }

                resolve(signingKey);

            } else {
                reject(new Error('unsupported key-derivation function'));
            }

        } else {
            reject(new Error('unsupported key-derivation function'));
        }
    });
});

utils.defineProperty(secretStorage, 'encrypt', function(privateKey, password, options, progressCallback) {

    // the options are optional, so adjust the call as needed
    if (typeof(options) === 'function' && !progressCallback) {
        progressCallback = options;
        options = {};
    }
    if (!options) { options = {}; }

    // Check the private key
    if (privateKey instanceof SigningKey) {
        privateKey = privateKey.privateKey;
    }
    privateKey = arrayify(privateKey, 'private key');
    if (privateKey.length !== 32) { throw new Error('invalid private key'); }

    password = getPassword(password);

    var entropy = options.entropy;
    if (options.mnemonic) {
        if (entropy) {
            if (HDNode.entropyToMnemonic(entropy) !== options.mnemonic) {
                throw new Error('entropy and mnemonic mismatch');
            }
        } else {
            entropy = HDNode.mnemonicToEntropy(options.mnemonic);
        }
    }
    if (entropy) {
        entropy = arrayify(entropy, 'entropy');
    }

    var path = options.path;
    if (entropy && !path) {
        path = defaultPath;
    }

    var client = options.client;
    if (!client) { client = "ethers.js"; }

    // Check/generate the salt
    var salt = options.salt;
    if (salt) {
        salt = arrayify(salt, 'salt');
    } else {
        salt = utils.randomBytes(32);;
    }

    // Override initialization vector
    var iv = null;
    if (options.iv) {
        iv = arrayify(options.iv, 'iv');
        if (iv.length !== 16) { throw new Error('invalid iv'); }
    } else {
       iv = utils.randomBytes(16);
    }

    // Override the uuid
    var uuidRandom = options.uuid;
    if (uuidRandom) {
        uuidRandom = arrayify(uuidRandom, 'uuid');
        if (uuidRandom.length !== 16) { throw new Error('invalid uuid'); }
    } else {
        uuidRandom = utils.randomBytes(16);
    }

    // Override the scrypt password-based key derivation function parameters
    var N = (1 << 17), r = 8, p = 1;
    if (options.scrypt) {
        if (options.scrypt.N) { N = options.scrypt.N; }
        if (options.scrypt.r) { r = options.scrypt.r; }
        if (options.scrypt.p) { p = options.scrypt.p; }
    }

    return new Promise(function(resolve, reject) {

        // We take 64 bytes:
        //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)
        //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)
        scrypt(password, salt, N, r, p, 64, function(error, progress, key) {
            if (error) {
                error.progress = progress;
                reject(error);

            } else if (key) {
                key = arrayify(key);

                // This will be used to encrypt the wallet (as per Web3 secret storage)
                var derivedKey = key.slice(0, 16);
                var macPrefix = key.slice(16, 32);

                // This will be used to encrypt the mnemonic phrase (if any)
                var mnemonicKey = key.slice(32, 64);

                // Get the address for this private key
                var address = (new SigningKey(privateKey)).address;

                // Encrypt the private key
                var counter = new aes.Counter(iv);
                var aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);
                var ciphertext = utils.arrayify(aesCtr.encrypt(privateKey));

                // Compute the message authentication code, used to check the password
                var mac = utils.keccak256(utils.concat([macPrefix, ciphertext]))

                // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition
                var data = {
                    address: address.substring(2).toLowerCase(),
                    id: uuid.v4({ random: uuidRandom }),
                    version: 3,
                    Crypto: {
                        cipher: 'aes-128-ctr',
                        cipherparams: {
                            iv: utils.hexlify(iv).substring(2),
                        },
                        ciphertext: utils.hexlify(ciphertext).substring(2),
                        kdf: 'scrypt',
                        kdfparams: {
                            salt: utils.hexlify(salt).substring(2),
                            n: N,
                            dklen: 32,
                            p: p,
                            r: r
                        },
                        mac: mac.substring(2)
                    }
                };

                // If we have a mnemonic, encrypt it into the JSON wallet
                if (entropy) {
                    var mnemonicIv = utils.randomBytes(16);
                    var mnemonicCounter = new aes.Counter(mnemonicIv);
                    var mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
                    var mnemonicCiphertext = utils.arrayify(mnemonicAesCtr.encrypt(entropy));
                    var now = new Date();
                    var timestamp = (now.getUTCFullYear() + '-' +
                                     zpad(now.getUTCMonth() + 1, 2) + '-' +
                                     zpad(now.getUTCDate(), 2) + 'T' +
                                     zpad(now.getUTCHours(), 2) + '-' +
                                     zpad(now.getUTCMinutes(), 2) + '-' +
                                     zpad(now.getUTCSeconds(), 2) + '.0Z'
                                    );
                    data['x-ethers'] = {
                        client: client,
                        gethFilename: ('UTC--' + timestamp + '--' + data.address),
                        mnemonicCounter: utils.hexlify(mnemonicIv).substring(2),
                        mnemonicCiphertext: utils.hexlify(mnemonicCiphertext).substring(2),
                        version: "0.1"
                    };
                }

                if (progressCallback) { progressCallback(1); }
                resolve(JSON.stringify(data));

            } else if (progressCallback) {
                return progressCallback(progress);
            }
        });
    });
});

module.exports = secretStorage;

},{"aes-js":"../../node_modules/aes-js/index.js","scrypt-js":"../../node_modules/scrypt-js/scrypt.js","uuid":"../../node_modules/uuid/uuid.js","../utils/hmac":"../../node_modules/ethers/utils/hmac.js","../utils/pbkdf2":"../../node_modules/ethers/utils/pbkdf2.js","../utils":"../../node_modules/ethers/utils/index.js","./signing-key":"../../node_modules/ethers/wallet/signing-key.js","./hdnode":"../../node_modules/ethers/wallet/hdnode.js"}],"../../node_modules/ethers/node_modules/setimmediate/setImmediate.js":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var setImmediate;

    function addFromSetImmediateArguments(args) {
        tasksByHandle[nextHandle] = partiallyApplied.apply(undefined, args);
        return nextHandle++;
    }

    // This function accepts the same arguments as setImmediate, but
    // returns a function that requires no arguments.
    function partiallyApplied(handler) {
        var args = [].slice.call(arguments, 1);
        return function() {
            if (typeof handler === "function") {
                handler.apply(undefined, args);
            } else {
                (new Function("" + handler))();
            }
        };
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(partiallyApplied(runIfPresent, handle), 0);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    task();
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function installNextTickImplementation() {
        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            process.nextTick(partiallyApplied(runIfPresent, handle));
            return handle;
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            global.postMessage(messagePrefix + handle, "*");
            return handle;
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            channel.port2.postMessage(handle);
            return handle;
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
            return handle;
        };
    }

    function installSetTimeoutImplementation() {
        setImmediate = function() {
            var handle = addFromSetImmediateArguments(arguments);
            setTimeout(partiallyApplied(runIfPresent, handle), 0);
            return handle;
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

},{"process":"../../node_modules/process/browser.js"}],"../../node_modules/ethers/wallet/wallet.js":[function(require,module,exports) {
'use strict';

var scrypt = require('scrypt-js');

var utils = (function() {
    var convert = require('../utils/convert');
    return {
        defineProperty: require('../utils/properties').defineProperty,

        arrayify: convert.arrayify,
        concat: convert.concat,
        hexlify: convert.hexlify,
        stripZeros: convert.stripZeros,
        hexZeroPad: convert.hexZeroPad,

        bigNumberify: require('../utils/bignumber').bigNumberify,

        toUtf8Bytes: require('../utils/utf8').toUtf8Bytes,

        getAddress: require('../utils/address').getAddress,

        keccak256: require('../utils/keccak256'),

        //randomBytes: require('../utils/random-bytes'),
        randomBytes: require('../utils').randomBytes,

        RLP: require('../utils/rlp')
    };
})();

var errors = require('../utils/errors');

var HDNode = require('./hdnode');

var secretStorage = require('./secret-storage');
var SigningKey = require('./signing-key');

// This ensures we inject a setImmediate into the global space, which
// dramatically improves the performance of the scrypt PBKDF.
require('setimmediate');

var defaultPath = "m/44'/60'/0'/0/0";

var transactionFields = [
    {name: 'nonce',    maxLength: 32, },
    {name: 'gasPrice', maxLength: 32, },
    {name: 'gasLimit', maxLength: 32, },
    {name: 'to',          length: 20, },
    {name: 'value',    maxLength: 32, },
    {name: 'data'},
];

function Wallet(privateKey, provider) {
    errors.checkNew(this, Wallet);

    // Make sure we have a valid signing key
    var signingKey = privateKey;
    if (!(privateKey instanceof SigningKey)) {
        signingKey = new SigningKey(privateKey);
    }
    utils.defineProperty(this, 'privateKey', signingKey.privateKey);

    // Provider
    Object.defineProperty(this, 'provider', {
        enumerable: true,
        get: function() { return provider; },
        set: function(value) {
            provider = value;
        }
    });
    if (provider) { this.provider = provider; }

    var defaultGasLimit = 1500000;
    Object.defineProperty(this, 'defaultGasLimit', {
        enumerable: true,
        get: function() { return defaultGasLimit; },
        set: function(value) {
            if (typeof(value) !== 'number') { throw new Error('invalid defaultGasLimit'); }
            defaultGasLimit = value;
        }
    });

    utils.defineProperty(this, 'address', signingKey.address);

    utils.defineProperty(this, 'sign', function(transaction) {
        var chainId = transaction.chainId;
        if (chainId == null && this.provider) { chainId = this.provider.chainId; }
        if (!chainId) { chainId = 0; }

        var raw = [];
        transactionFields.forEach(function(fieldInfo) {
            var value = transaction[fieldInfo.name] || ([]);
            value = utils.arrayify(utils.hexlify(value), fieldInfo.name);

            // Fixed-width field
            if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {
                var error = new Error('invalid ' + fieldInfo.name);
                error.reason = 'wrong length';
                error.value = value;
                throw error;
            }

            // Variable-width (with a maximum)
            if (fieldInfo.maxLength) {
                value = utils.stripZeros(value);
                if (value.length > fieldInfo.maxLength) {
                    var error = new Error('invalid ' + fieldInfo.name);
                    error.reason = 'too long';
                    error.value = value;
                    throw error;
                }
            }

            raw.push(utils.hexlify(value));
        });

        if (chainId) {
            raw.push(utils.hexlify(chainId));
            raw.push('0x');
            raw.push('0x');
        }

        var digest = utils.keccak256(utils.RLP.encode(raw));

        var signature = signingKey.signDigest(digest);

        var v = 27 + signature.recoveryParam
        if (chainId) {
            raw.pop();
            raw.pop();
            raw.pop();
            v += chainId * 2 + 8;
        }

        raw.push(utils.hexlify(v));
        raw.push(utils.stripZeros(utils.arrayify(signature.r)));
        raw.push(utils.stripZeros(utils.arrayify(signature.s)));

        return utils.RLP.encode(raw);
    });
}

utils.defineProperty(Wallet, 'parseTransaction', function(rawTransaction) {
    rawTransaction = utils.hexlify(rawTransaction, 'rawTransaction');
    var signedTransaction = utils.RLP.decode(rawTransaction);
    if (signedTransaction.length !== 9) { throw new Error('invalid transaction'); }

    var raw = [];

    var transaction = {};
    transactionFields.forEach(function(fieldInfo, index) {
        transaction[fieldInfo.name] = signedTransaction[index];
        raw.push(signedTransaction[index]);
    });

    if (transaction.to) {
        if (transaction.to == '0x') {
            delete transaction.to;
        } else {
            transaction.to = utils.getAddress(transaction.to);
        }
    }

    ['gasPrice', 'gasLimit', 'nonce', 'value'].forEach(function(name) {
        if (!transaction[name]) { return; }
        if (transaction[name].length === 0) {
            transaction[name] = utils.bigNumberify(0);
        } else {
            transaction[name] = utils.bigNumberify(transaction[name]);
        }
    });

    if (transaction.nonce) {
        transaction.nonce = transaction.nonce.toNumber();
    } else {
        transaction.nonce = 0;
    }

    var v = utils.arrayify(signedTransaction[6]);
    var r = utils.arrayify(signedTransaction[7]);
    var s = utils.arrayify(signedTransaction[8]);

    if (v.length >= 1 && r.length >= 1 && r.length <= 32 && s.length >= 1 && s.length <= 32) {
        transaction.v = utils.bigNumberify(v).toNumber();
        transaction.r = signedTransaction[7];
        transaction.s = signedTransaction[8];

        var chainId = (transaction.v - 35) / 2;
        if (chainId < 0) { chainId = 0; }
        chainId = parseInt(chainId);

        transaction.chainId = chainId;

        var recoveryParam = transaction.v - 27;

        if (chainId) {
            raw.push(utils.hexlify(chainId));
            raw.push('0x');
            raw.push('0x');
            recoveryParam -= chainId * 2 + 8;
        }

        var digest = utils.keccak256(utils.RLP.encode(raw));
        try {
            transaction.from = SigningKey.recover(digest, r, s, recoveryParam);
        } catch (error) {
            console.log(error);
        }
    }


    return transaction;
});

utils.defineProperty(Wallet.prototype, 'getAddress', function() {
    return this.address;
});

utils.defineProperty(Wallet.prototype, 'getBalance', function(blockTag) {
    if (!this.provider) { throw new Error('missing provider'); }
    return this.provider.getBalance(this.address, blockTag);
});

utils.defineProperty(Wallet.prototype, 'getTransactionCount', function(blockTag) {
    if (!this.provider) { throw new Error('missing provider'); }
    return this.provider.getTransactionCount(this.address, blockTag);
});

utils.defineProperty(Wallet.prototype, 'estimateGas', function(transaction) {
    if (!this.provider) { throw new Error('missing provider'); }

    var calculate = {};
    ['from', 'to', 'data', 'value'].forEach(function(key) {
        if (transaction[key] == null) { return; }
        calculate[key] = transaction[key];
    });

    if (transaction.from == null) { calculate.from = this.address; }

    return this.provider.estimateGas(calculate);
});

utils.defineProperty(Wallet.prototype, 'sendTransaction', function(transaction) {
    if (!this.provider) { throw new Error('missing provider'); }

    if (!transaction || typeof(transaction) !== 'object') {
        throw new Error('invalid transaction object');
    }

    var gasLimit = transaction.gasLimit;
    if (gasLimit == null) { gasLimit = this.defaultGasLimit; }

    var self = this;

    var gasPricePromise = null;
    if (transaction.gasPrice) {
        gasPricePromise = Promise.resolve(transaction.gasPrice);
    } else {
        gasPricePromise = this.provider.getGasPrice();
    }

    var noncePromise = null;
    if (transaction.nonce) {
        noncePromise = Promise.resolve(transaction.nonce);
    } else {
        noncePromise = this.provider.getTransactionCount(self.address, 'pending');
    }

    var chainId = this.provider.chainId;

    var toPromise = null;
    if (transaction.to) {
        toPromise = this.provider.resolveName(transaction.to);
    } else {
        toPromise = Promise.resolve(undefined);
    }

    var data = utils.hexlify(transaction.data || '0x');
    var value = utils.hexlify(transaction.value || 0);

    return Promise.all([gasPricePromise, noncePromise, toPromise]).then(function(results) {
        var signedTransaction = self.sign({
            to: results[2],
            data: data,
            gasLimit: gasLimit,
            gasPrice: results[0],
            nonce: results[1],
            value: value,
            chainId: chainId
        });

        return self.provider.sendTransaction(signedTransaction).then(function(hash) {
            var transaction = Wallet.parseTransaction(signedTransaction);
            transaction.hash = hash;
            transaction.wait = function() {
                return self.provider.waitForTransaction(hash);
            };
            return transaction;
        });
    });
});

utils.defineProperty(Wallet.prototype, 'send', function(addressOrName, amountWei, options) {
    if (!options) { options = {}; }

    return this.sendTransaction({
        to: addressOrName,
        gasLimit: options.gasLimit,
        gasPrice: options.gasPrice,
        nonce: options.nonce,
        value: amountWei,
    });
});

utils.defineProperty(Wallet, 'hashMessage', function (message) {
    var payload = utils.concat([
        utils.toUtf8Bytes('\x19Ethereum Signed Message:\n'),
        utils.toUtf8Bytes(String(message.length)),
        ((typeof(message) === 'string') ? utils.toUtf8Bytes(message): message)
    ]);
    return utils.keccak256(payload);
});

utils.defineProperty(Wallet.prototype, 'signMessage', function(message) {
    var signingKey = new SigningKey(this.privateKey);
    var sig = signingKey.signDigest(Wallet.hashMessage(message));

    return (utils.hexZeroPad(sig.r, 32) + utils.hexZeroPad(sig.s, 32).substring(2) + (sig.recoveryParam ? '1c': '1b'));
});

utils.defineProperty(Wallet, 'verifyMessage', function(message, signature) {
    signature = utils.hexlify(signature);
    if (signature.length != 132) { throw new Error('invalid signature'); }
    var digest = Wallet.hashMessage(message);

    var recoveryParam = parseInt(signature.substring(130), 16);
    if (recoveryParam >= 27) { recoveryParam -= 27; }
    if (recoveryParam < 0) { throw new Error('invalid signature'); }

    return SigningKey.recover(
        digest,
        signature.substring(0, 66),
        '0x' + signature.substring(66, 130),
        recoveryParam
    );
});

utils.defineProperty(Wallet.prototype, 'encrypt', function(password, options, progressCallback) {
    if (typeof(options) === 'function' && !progressCallback) {
        progressCallback = options;
        options = {};
    }

    if (progressCallback && typeof(progressCallback) !== 'function') {
        throw new Error('invalid callback');
    }

    if (!options) { options = {}; }

    if (this.mnemonic) {
        // Make sure we don't accidentally bubble the mnemonic up the call-stack
        var safeOptions = {};
        for (var key in options) { safeOptions[key] = options[key]; }
        options = safeOptions;

        // Set the mnemonic and path
        options.mnemonic = this.mnemonic;
        options.path = this.path
    }

    return secretStorage.encrypt(this.privateKey, password, options, progressCallback);
});


utils.defineProperty(Wallet, 'isEncryptedWallet', function(json) {
    return (secretStorage.isValidWallet(json) || secretStorage.isCrowdsaleWallet(json));
});



utils.defineProperty(Wallet, 'createRandom', function(options) {
    var entropy = utils.randomBytes(16);

    if (!options) { options = { }; }

    if (options.extraEntropy) {
        entropy = utils.keccak256(utils.concat([entropy, options.extraEntropy])).substring(0, 34);
    }

    var mnemonic = HDNode.entropyToMnemonic(entropy);
    return Wallet.fromMnemonic(mnemonic, options.path);
});


utils.defineProperty(Wallet, 'fromEncryptedWallet', function(json, password, progressCallback) {
    if (progressCallback && typeof(progressCallback) !== 'function') {
        throw new Error('invalid callback');
    }

    return new Promise(function(resolve, reject) {

        if (secretStorage.isCrowdsaleWallet(json)) {
            try {
                var privateKey = secretStorage.decryptCrowdsale(json, password);
                resolve(new Wallet(privateKey));
            } catch (error) {
                reject(error);
            }

        } else if (secretStorage.isValidWallet(json)) {

            secretStorage.decrypt(json, password, progressCallback).then(function(signingKey) {
                var wallet = new Wallet(signingKey);
                if (signingKey.mnemonic && signingKey.path) {
                    utils.defineProperty(wallet, 'mnemonic', signingKey.mnemonic);
                    utils.defineProperty(wallet, 'path', signingKey.path);
                }
                resolve(wallet);
                return null;
            }, function(error) {
                reject(error);
            }).catch(function(error) { reject(error); });

        } else {
            reject('invalid wallet JSON');
        }
    });
});

utils.defineProperty(Wallet, 'fromMnemonic', function(mnemonic, path) {
    if (!path) { path = defaultPath; }

    var hdnode = HDNode.fromMnemonic(mnemonic).derivePath(path);

    var wallet = new Wallet(hdnode.privateKey);
    utils.defineProperty(wallet, 'mnemonic', mnemonic);
    utils.defineProperty(wallet, 'path', path);

    return wallet;
});


utils.defineProperty(Wallet, 'fromBrainWallet', function(username, password, progressCallback) {
    if (progressCallback && typeof(progressCallback) !== 'function') {
        throw new Error('invalid callback');
    }

    if (typeof(username) === 'string') {
        username =  utils.toUtf8Bytes(username, 'NFKC');
    } else {
        username = utils.arrayify(username, 'password');
    }

    if (typeof(password) === 'string') {
        password =  utils.toUtf8Bytes(password, 'NFKC');
    } else {
        password = utils.arrayify(password, 'password');
    }

    return new Promise(function(resolve, reject) {
        scrypt(password, username, (1 << 18), 8, 1, 32, function(error, progress, key) {
            if (error) {
                reject(error);

            } else if (key) {
                resolve(new Wallet(utils.hexlify(key)));

            } else if (progressCallback) {
                return progressCallback(progress);
            }
        });
    });
});

//utils.defineProperty(Wallet, 'isCrowdsaleWallet', secretStorage.isCrowdsaleWallet);

//utils.defineProperty(Wallet, 'decryptCrowdsale', function(json, password) {
//    return new Wallet(secretStorage.decryptCrowdsale(json, password));
//});

module.exports = Wallet;

},{"scrypt-js":"../../node_modules/scrypt-js/scrypt.js","../utils/convert":"../../node_modules/ethers/utils/convert.js","../utils/properties":"../../node_modules/ethers/utils/properties.js","../utils/bignumber":"../../node_modules/ethers/utils/bignumber.js","../utils/utf8":"../../node_modules/ethers/utils/utf8.js","../utils/address":"../../node_modules/ethers/utils/address.js","../utils/keccak256":"../../node_modules/ethers/utils/keccak256.js","../utils":"../../node_modules/ethers/utils/index.js","../utils/rlp":"../../node_modules/ethers/utils/rlp.js","../utils/errors":"../../node_modules/ethers/utils/errors.js","./hdnode":"../../node_modules/ethers/wallet/hdnode.js","./secret-storage":"../../node_modules/ethers/wallet/secret-storage.js","./signing-key":"../../node_modules/ethers/wallet/signing-key.js","setimmediate":"../../node_modules/ethers/node_modules/setimmediate/setImmediate.js"}],"../../node_modules/ethers/wallet/index.js":[function(require,module,exports) {
'use strict';

var Wallet = require('./wallet');
var HDNode = require('./hdnode');
var SigningKey = require('./signing-key');

module.exports = {
    HDNode: HDNode,
    Wallet: Wallet,

    SigningKey: SigningKey,
}

},{"./wallet":"../../node_modules/ethers/wallet/wallet.js","./hdnode":"../../node_modules/ethers/wallet/hdnode.js","./signing-key":"../../node_modules/ethers/wallet/signing-key.js"}],"../../node_modules/ethers/index.js":[function(require,module,exports) {
'use strict';

var version = require('./package.json').version;

var contracts = require('./contracts');
var providers = require('./providers');
var errors = require('./utils/errors');
var utils = require('./utils');
var wallet = require('./wallet');

module.exports = {
    Wallet: wallet.Wallet,

    HDNode: wallet.HDNode,
    SigningKey: wallet.SigningKey,

    Contract: contracts.Contract,
    Interface: contracts.Interface,

    networks: providers.networks,
    providers: providers,

    errors: errors,
    utils: utils,

    version: version,
};

},{"./package.json":"../../node_modules/ethers/package.json","./contracts":"../../node_modules/ethers/contracts/index.js","./providers":"../../node_modules/ethers/providers/index.js","./utils/errors":"../../node_modules/ethers/utils/errors.js","./utils":"../../node_modules/ethers/utils/index.js","./wallet":"../../node_modules/ethers/wallet/index.js"}],"../../node_modules/universal-login-contracts/build/Identity.json":[function(require,module,exports) {
module.exports = {
  "assembly": {
    ".code": [
      {
        "begin": 85,
        "end": 279,
        "name": "PUSH",
        "value": "80"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "PUSH",
        "value": "40"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "MSTORE"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "PUSH",
        "value": "40"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "MLOAD"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "PUSH",
        "value": "20"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "DUP1"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "PUSHSIZE"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "DUP4"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "CODECOPY"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "DUP2"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "ADD"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "PUSH",
        "value": "40"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "MSTORE"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "MLOAD"
      },
      {
        "begin": 184,
        "end": 202,
        "name": "PUSH [tag]",
        "value": "3"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "DUP2"
      },
      {
        "begin": 184,
        "end": 196,
        "name": "PUSH",
        "value": "100000000"
      },
      {
        "begin": 184,
        "end": 196,
        "name": "PUSH [tag]",
        "value": "18446744073709551729"
      },
      {
        "begin": 184,
        "end": 196,
        "name": "PUSH [tag]",
        "value": "4"
      },
      {
        "begin": 184,
        "end": 196,
        "name": "DUP3"
      },
      {
        "begin": 184,
        "end": 196,
        "name": "MUL"
      },
      {
        "begin": 184,
        "end": 196,
        "name": "OR"
      },
      {
        "begin": 184,
        "end": 202,
        "name": "DIV"
      },
      {
        "begin": 184,
        "end": 202,
        "name": "JUMP",
        "value": "[in]"
      },
      {
        "begin": 184,
        "end": 202,
        "name": "tag",
        "value": "3"
      },
      {
        "begin": 184,
        "end": 202,
        "name": "JUMPDEST"
      },
      {
        "begin": 136,
        "end": 207,
        "name": "POP"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "PUSH [tag]",
        "value": "5"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "JUMP"
      },
      {
        "begin": 392,
        "end": 462,
        "name": "tag",
        "value": "4"
      },
      {
        "begin": 392,
        "end": 462,
        "name": "JUMPDEST"
      },
      {
        "begin": 435,
        "end": 455,
        "name": "PUSH [tag]",
        "value": "7"
      },
      {
        "begin": 450,
        "end": 454,
        "name": "DUP2"
      },
      {
        "begin": 435,
        "end": 449,
        "name": "PUSH",
        "value": "100000000"
      },
      {
        "begin": 435,
        "end": 449,
        "name": "PUSH [tag]",
        "value": "18446744073709551848"
      },
      {
        "begin": 435,
        "end": 449,
        "name": "PUSH [tag]",
        "value": "8"
      },
      {
        "begin": 435,
        "end": 449,
        "name": "DUP3"
      },
      {
        "begin": 435,
        "end": 449,
        "name": "MUL"
      },
      {
        "begin": 435,
        "end": 449,
        "name": "OR"
      },
      {
        "begin": 435,
        "end": 455,
        "name": "DIV"
      },
      {
        "begin": 435,
        "end": 455,
        "name": "JUMP",
        "value": "[in]"
      },
      {
        "begin": 435,
        "end": 455,
        "name": "tag",
        "value": "7"
      },
      {
        "begin": 435,
        "end": 455,
        "name": "JUMPDEST"
      },
      {
        "begin": 392,
        "end": 462,
        "name": "POP"
      },
      {
        "begin": 392,
        "end": 462,
        "name": "JUMP",
        "value": "[out]"
      },
      {
        "begin": 196,
        "end": 487,
        "name": "tag",
        "value": "8"
      },
      {
        "begin": 196,
        "end": 487,
        "name": "JUMPDEST"
      },
      {
        "begin": 241,
        "end": 245,
        "name": "PUSH",
        "value": "0"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "DUP2"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "DUP2"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "MSTORE"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "PUSH",
        "value": "20"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "DUP2"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "SWAP1"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "MSTORE"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "PUSH",
        "value": "40"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "DUP1"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "DUP3"
      },
      {
        "begin": 241,
        "end": 251,
        "name": "KECCAK256"
      },
      {
        "begin": 241,
        "end": 255,
        "name": "PUSH",
        "value": "2"
      },
      {
        "begin": 241,
        "end": 255,
        "name": "DUP2"
      },
      {
        "begin": 241,
        "end": 255,
        "name": "ADD"
      },
      {
        "begin": 241,
        "end": 262,
        "name": "DUP5"
      },
      {
        "begin": 241,
        "end": 262,
        "name": "DUP2"
      },
      {
        "begin": 241,
        "end": 262,
        "name": "SSTORE"
      },
      {
        "begin": 96,
        "end": 97,
        "name": "PUSH",
        "value": "1"
      },
      {
        "begin": 272,
        "end": 307,
        "name": "DUP1"
      },
      {
        "begin": 272,
        "end": 307,
        "name": "DUP4"
      },
      {
        "begin": 272,
        "end": 307,
        "name": "SSTORE"
      },
      {
        "begin": 317,
        "end": 335,
        "name": "DUP1"
      },
      {
        "begin": 317,
        "end": 335,
        "name": "DUP4"
      },
      {
        "begin": 317,
        "end": 335,
        "name": "ADD"
      },
      {
        "begin": 317,
        "end": 348,
        "name": "DUP2"
      },
      {
        "begin": 317,
        "end": 348,
        "name": "DUP2"
      },
      {
        "begin": 317,
        "end": 348,
        "name": "SSTORE"
      },
      {
        "begin": 359,
        "end": 388,
        "name": "PUSH",
        "value": "CC69885FDA6BCC1A4ACE058B4A62BF5E179EA78FD58A1CCD71C22CC9B688792F"
      },
      {
        "begin": 27,
        "end": 37,
        "name": "DUP1"
      },
      {
        "begin": 27,
        "end": 37,
        "name": "SLOAD"
      },
      {
        "begin": 23,
        "end": 41,
        "name": "SWAP3"
      },
      {
        "begin": 23,
        "end": 41,
        "name": "DUP4"
      },
      {
        "begin": 23,
        "end": 41,
        "name": "ADD"
      },
      {
        "begin": 45,
        "end": 68,
        "name": "SWAP1"
      },
      {
        "begin": 45,
        "end": 68,
        "name": "SSTORE"
      },
      {
        "begin": 359,
        "end": 399,
        "name": "PUSH",
        "value": "66B32740AD8041BCC3B909C72D7E1AFE60094EC55E3CDE329B4B3A28501D826C"
      },
      {
        "begin": 359,
        "end": 399,
        "name": "SWAP1"
      },
      {
        "begin": 359,
        "end": 399,
        "name": "SWAP2"
      },
      {
        "begin": 359,
        "end": 399,
        "name": "ADD"
      },
      {
        "begin": 359,
        "end": 399,
        "name": "DUP7"
      },
      {
        "begin": 359,
        "end": 399,
        "name": "SWAP1"
      },
      {
        "begin": 359,
        "end": 399,
        "name": "SSTORE"
      },
      {
        "begin": 461,
        "end": 479,
        "name": "SLOAD"
      },
      {
        "begin": 441,
        "end": 459,
        "name": "SWAP2"
      },
      {
        "begin": 441,
        "end": 459,
        "name": "SLOAD"
      },
      {
        "begin": 424,
        "end": 438,
        "name": "SWAP1"
      },
      {
        "begin": 424,
        "end": 438,
        "name": "SLOAD"
      },
      {
        "begin": 415,
        "end": 480,
        "name": "SWAP3"
      },
      {
        "begin": 415,
        "end": 480,
        "name": "MLOAD"
      },
      {
        "begin": 461,
        "end": 479,
        "name": "SWAP2"
      },
      {
        "begin": 461,
        "end": 479,
        "name": "SWAP4"
      },
      {
        "begin": 441,
        "end": 459,
        "name": "SWAP1"
      },
      {
        "begin": 441,
        "end": 459,
        "name": "SWAP3"
      },
      {
        "begin": 424,
        "end": 438,
        "name": "SWAP2"
      },
      {
        "begin": 415,
        "end": 480,
        "name": "PUSH",
        "value": "480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9"
      },
      {
        "begin": 415,
        "end": 480,
        "name": "SWAP2"
      },
      {
        "begin": 241,
        "end": 245,
        "name": "SWAP1"
      },
      {
        "begin": 415,
        "end": 480,
        "name": "LOG4"
      },
      {
        "begin": 196,
        "end": 487,
        "name": "POP"
      },
      {
        "begin": 196,
        "end": 487,
        "name": "JUMP",
        "value": "[out]"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "tag",
        "value": "5"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "JUMPDEST"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "PUSH #[$]",
        "value": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "DUP1"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "PUSH [$]",
        "value": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "PUSH",
        "value": "0"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "CODECOPY"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "PUSH",
        "value": "0"
      },
      {
        "begin": 85,
        "end": 279,
        "name": "RETURN"
      }
    ],
    ".data": {
      "0": {
        ".auxdata": "a165627a7a72305820b97ec717cd5d3114fa5e6dadcff45964d1afe90471d5210e92a71e64e11229ca0029",
        ".code": [
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "80"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "MSTORE"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "LT"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "FFFFFFFF"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "100000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DIV"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "AND"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "32C1A8A"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "D384994"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "3"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "12AAAC70"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "4"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "1D381240"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "5"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "23F74052"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "6"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "37C7C2C8"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "7"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "3B663195"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "8"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "52631AB4"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "9"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "53D413C5"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "10"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "6D633064"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "11"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "70586BB3"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "12"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "724854B0"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "13"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "7FBC22BA"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "14"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "87ECF05A"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "15"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "9010F726"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "16"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "9DEA1277"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "17"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "A30C8C75"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "18"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "CAA3782B"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "19"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "D202158D"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "20"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "DDE5B7A1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "21"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "F0AB5F84"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "EQ"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "22"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "tag",
            "value": "1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPDEST"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "STOP"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "tag",
            "value": "2"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "JUMPDEST"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "25"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "25"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "PUSH [tag]",
            "value": "26"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "PUSH [tag]",
            "value": "27"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "JUMP"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "tag",
            "value": "26"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "JUMPDEST"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "DUP1"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "MLOAD"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "SWAP2"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "DUP3"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "MSTORE"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "MLOAD"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "SWAP1"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "DUP2"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "SWAP1"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "SUB"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "ADD"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "SWAP1"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "RETURN"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "tag",
            "value": "3"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "JUMPDEST"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "28"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "28"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "MLOAD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP2"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP2"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "ADD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP3"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP4"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "ADD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP5"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DIV"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP5"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "MUL"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP6"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "ADD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP5"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "ADD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP6"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "MSTORE"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP2"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP5"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "MSTORE"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP2"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP2"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "AND"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP6"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP3"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "AND"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP6"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP6"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP6"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "84"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP5"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "ADD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP2"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP2"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP5"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "ADD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP4"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP3"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP3"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP5"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP5"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH [tag]",
            "value": "30"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "JUMP"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "tag",
            "value": "29"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "JUMPDEST"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "MLOAD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP2"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "ISZERO"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "ISZERO"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP3"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "MSTORE"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "MLOAD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "DUP2"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SUB"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "ADD"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP1"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "RETURN"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "tag",
            "value": "4"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "JUMPDEST"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "31"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "31"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "PUSH [tag]",
            "value": "32"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "PUSH [tag]",
            "value": "33"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "JUMP"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "tag",
            "value": "32"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "JUMPDEST"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "DUP1"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "MLOAD"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "SWAP4"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "DUP5"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "MSTORE"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "DUP5"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "ADD"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "SWAP3"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "SWAP1"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "SWAP3"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "MSTORE"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "DUP3"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "DUP3"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "ADD"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "MSTORE"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "MLOAD"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "SWAP1"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "DUP2"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "SWAP1"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "SUB"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "PUSH",
            "value": "60"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "ADD"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "SWAP1"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "RETURN"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "tag",
            "value": "5"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "JUMPDEST"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "34"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "34"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "PUSH [tag]",
            "value": "36"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "JUMP"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "tag",
            "value": "6"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "JUMPDEST"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "37"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "37"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "PUSH [tag]",
            "value": "39"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "JUMP"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "tag",
            "value": "7"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "JUMPDEST"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "40"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "40"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "AND"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "PUSH [tag]",
            "value": "42"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "JUMP"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "tag",
            "value": "8"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "JUMPDEST"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "43"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "43"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "PUSH [tag]",
            "value": "1"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "PUSH [tag]",
            "value": "45"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "JUMP"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "tag",
            "value": "9"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "JUMPDEST"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "46"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "46"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "POP"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "PUSH [tag]",
            "value": "26"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "PUSH [tag]",
            "value": "48"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "JUMP"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "tag",
            "value": "10"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "JUMPDEST"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "49"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "49"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "PUSH [tag]",
            "value": "51"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "JUMP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "tag",
            "value": "11"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "JUMPDEST"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "52"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "52"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "MLOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP2"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP2"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP2"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DIV"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "MUL"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP6"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP6"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "MSTORE"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "MSTORE"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH [tag]",
            "value": "26"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP3"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "AND"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP6"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP6"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP3"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP2"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP2"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP4"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP3"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP3"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "MLOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP10"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP11"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP2"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP4"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DIV"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP4"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "MUL"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP4"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP6"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "MSTORE"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "MSTORE"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP9"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP12"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP11"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP12"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP12"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP12"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP6"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP7"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "AND"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP11"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "60"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP8"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP11"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "80"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP8"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "AND"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP10"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP2"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP6"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH",
            "value": "C0"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP4"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP3"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP2"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP2"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "ADD"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP4"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP3"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP1"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP3"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "DUP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP5"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "PUSH [tag]",
            "value": "54"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "JUMP"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "tag",
            "value": "12"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "JUMPDEST"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "55"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "55"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP1"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "MLOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP2"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP2"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP3"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP4"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP5"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP1"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DIV"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP5"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "MUL"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP6"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP5"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP1"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP6"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "MSTORE"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP2"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP5"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "MSTORE"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH [tag]",
            "value": "26"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP2"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP2"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "AND"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP6"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP1"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP1"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP3"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "AND"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP6"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP6"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP6"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "84"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP5"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP2"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP2"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP1"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP5"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP4"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP3"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP1"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP3"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP5"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP5"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP5"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP6"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP4"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP3"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP2"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "AND"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP3"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "60"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "DUP2"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "SWAP2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "80"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "ADD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "AND"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "PUSH [tag]",
            "value": "57"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "JUMP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "tag",
            "value": "13"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "JUMPDEST"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "58"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "58"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MLOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP3"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP4"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DIV"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MUL"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP6"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP6"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MSTORE"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MSTORE"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH [tag]",
            "value": "59"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "AND"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP6"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP3"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "AND"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP6"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP6"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP6"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "84"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP4"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP3"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP3"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MLOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP10"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP11"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP4"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DIV"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP4"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MUL"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP4"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP6"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MSTORE"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MSTORE"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP9"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP12"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP11"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP12"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP12"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP12"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP6"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP7"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "AND"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP11"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "60"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP8"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP11"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "80"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP8"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "AND"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP10"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP6"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "C0"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP4"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP3"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP4"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP3"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP3"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP5"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH [tag]",
            "value": "60"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "JUMP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "tag",
            "value": "59"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "JUMPDEST"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP3"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "AND"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP3"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MSTORE"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "MLOAD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "DUP2"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SUB"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "ADD"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP1"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "RETURN"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "tag",
            "value": "14"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "JUMPDEST"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "61"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "61"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP1"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "MLOAD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP2"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP2"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "ADD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP2"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "ADD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP1"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DIV"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "MUL"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP6"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "ADD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "ADD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP1"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP6"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "MSTORE"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "MSTORE"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP3"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "CALLDATALOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP1"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP2"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "AND"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP6"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP1"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP1"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP3"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "AND"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP6"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP6"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP3"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP4"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "ADD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP2"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP1"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP2"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP1"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "ADD"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP4"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP3"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP1"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP3"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "DUP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP5"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "PUSH [tag]",
            "value": "63"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "JUMP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "tag",
            "value": "15"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "JUMPDEST"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "64"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "64"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "MLOAD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "84"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DIV"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "MUL"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP6"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP6"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "MSTORE"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "MSTORE"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP3"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATALOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "AND"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP6"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP7"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "AND"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP7"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "AND"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP6"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP6"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "A4"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP4"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP4"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP3"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP3"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "MLOAD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP10"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP12"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP3"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP4"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DIV"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP4"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "MUL"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP4"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "MSTORE"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP4"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "MSTORE"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP8"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP11"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP10"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP9"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP8"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP2"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP3"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP3"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP3"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "ADD"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP4"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP3"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP3"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "DUP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP5"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "PUSH [tag]",
            "value": "66"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "JUMP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "tag",
            "value": "16"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "JUMPDEST"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "67"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "67"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "PUSH [tag]",
            "value": "68"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "PUSH [tag]",
            "value": "69"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "JUMP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "tag",
            "value": "68"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "JUMPDEST"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP1"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "MLOAD"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP1"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP3"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "MSTORE"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP4"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "MLOAD"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP2"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP4"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "ADD"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "MSTORE"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP4"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "MLOAD"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP2"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP3"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP4"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP3"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP1"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP4"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "ADD"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP2"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP6"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP2"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "ADD"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP2"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "MUL"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP1"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP4"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP4"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "tag",
            "value": "70"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "JUMPDEST"
          },
          {
            "begin": 33,
            "end": 36,
            "name": "DUP4"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "DUP2"
          },
          {
            "begin": 27,
            "end": 37,
            "name": "LT"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "PUSH [tag]",
            "value": "71"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "JUMPI"
          },
          {
            "begin": 90,
            "end": 101,
            "name": "DUP2"
          },
          {
            "begin": 90,
            "end": 101,
            "name": "DUP2"
          },
          {
            "begin": 90,
            "end": 101,
            "name": "ADD"
          },
          {
            "begin": 84,
            "end": 102,
            "name": "MLOAD"
          },
          {
            "begin": 71,
            "end": 82,
            "name": "DUP4"
          },
          {
            "begin": 71,
            "end": 82,
            "name": "DUP3"
          },
          {
            "begin": 71,
            "end": 82,
            "name": "ADD"
          },
          {
            "begin": 64,
            "end": 103,
            "name": "MSTORE"
          },
          {
            "begin": 52,
            "end": 54,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 45,
            "end": 55,
            "name": "ADD"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "PUSH [tag]",
            "value": "70"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "JUMP"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "tag",
            "value": "71"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "JUMPDEST"
          },
          {
            "begin": 12,
            "end": 26,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP1"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "ADD"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP3"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "MLOAD"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "DUP1"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP2"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SUB"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP1"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "RETURN"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "tag",
            "value": "17"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "JUMPDEST"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "73"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "73"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "MLOAD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "84"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DIV"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "MUL"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP6"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP6"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "MSTORE"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "MSTORE"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH [tag]",
            "value": "1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP3"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATALOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "AND"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP6"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP7"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP7"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "AND"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP6"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP6"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "A4"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP4"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP4"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP3"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP3"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "MLOAD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP10"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP12"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP3"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP4"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DIV"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP4"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "MUL"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP4"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "MSTORE"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP4"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "MSTORE"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP8"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP11"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP10"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP9"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP8"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP2"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP3"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP3"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP3"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "ADD"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP4"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP3"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP1"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP3"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "DUP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP5"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "PUSH [tag]",
            "value": "75"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "JUMP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "tag",
            "value": "18"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "JUMPDEST"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "76"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "76"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "MLOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP2"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP2"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP2"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DIV"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "MUL"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP6"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP6"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "MSTORE"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "MSTORE"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP3"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "AND"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP6"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP6"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP3"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP2"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP2"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP4"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP3"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP3"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "MLOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP10"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP11"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP2"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP4"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DIV"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP4"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "MUL"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP4"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP6"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "MSTORE"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "MSTORE"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP9"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP12"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP11"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP12"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP12"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP12"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP6"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP7"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "AND"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP11"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "60"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP8"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP11"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "80"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP8"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "AND"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP10"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP2"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP6"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH",
            "value": "C0"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP4"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP3"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP2"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP2"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "ADD"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP4"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP3"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP1"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP3"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "DUP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP5"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "PUSH [tag]",
            "value": "78"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "JUMP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "tag",
            "value": "19"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "JUMPDEST"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "79"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "79"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MLOAD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP4"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MUL"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP7"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP7"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MSTORE"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MSTORE"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATASIZE"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP4"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP4"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MLOAD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP8"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP10"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MUL"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MSTORE"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MSTORE"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP9"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP12"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP11"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP10"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP10"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP9"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP6"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP4"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP4"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP3"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MLOAD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP8"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP10"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MUL"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MSTORE"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP2"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "MSTORE"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP9"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP12"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP11"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP10"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP10"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP9"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP6"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP4"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP4"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP3"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "ADD"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP1"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP3"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "DUP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "CALLDATACOPY"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP5"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP8"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "PUSH [tag]",
            "value": "81"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "JUMP"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "tag",
            "value": "20"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "JUMPDEST"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "82"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "82"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "PUSH [tag]",
            "value": "84"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "JUMP"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "tag",
            "value": "21"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "JUMPDEST"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "85"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "85"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "PUSH [tag]",
            "value": "32"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "PUSH [tag]",
            "value": "87"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "JUMP"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "tag",
            "value": "22"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "JUMPDEST"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "CALLVALUE"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "88"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "88"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "PUSH [tag]",
            "value": "29"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "AND"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "CALLDATALOAD"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "PUSH [tag]",
            "value": "90"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "JUMP"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "tag",
            "value": "27"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "JUMPDEST"
          },
          {
            "begin": 1405,
            "end": 1420,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "SWAP1"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "DUP2"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "MSTORE"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "DUP2"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "SWAP1"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "MSTORE"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "SWAP1"
          },
          {
            "begin": 1439,
            "end": 1449,
            "name": "KECCAK256"
          },
          {
            "begin": 1439,
            "end": 1457,
            "name": "SLOAD"
          },
          {
            "begin": 1439,
            "end": 1457,
            "name": "SWAP1"
          },
          {
            "begin": 1348,
            "end": 1464,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "tag",
            "value": "30"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "JUMPDEST"
          },
          {
            "begin": 2303,
            "end": 2307,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2355,
            "end": 2367,
            "name": "DUP1"
          },
          {
            "begin": 2544,
            "end": 2558,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2409,
            "end": 2421,
            "name": "DUP6"
          },
          {
            "begin": 2434,
            "end": 2445,
            "name": "DUP6"
          },
          {
            "begin": 2458,
            "end": 2471,
            "name": "DUP9"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "MLOAD"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "ADD"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "DUP1"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "DUP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "AND"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "AND"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "PUSH",
            "value": "1000000000000000000000000"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "MUL"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "DUP2"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "MSTORE"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "PUSH",
            "value": "14"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "ADD"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "DUP4"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "DUP2"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "MSTORE"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "ADD"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "DUP3"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "AND"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "AND"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "PUSH",
            "value": "1000000000000000000000000"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "MUL"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "DUP2"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "MSTORE"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "PUSH",
            "value": "14"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "ADD"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "SWAP4"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "POP"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "POP"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "POP"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "POP"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "MLOAD"
          },
          {
            "begin": 49,
            "end": 53,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 39,
            "end": 46,
            "name": "DUP2"
          },
          {
            "begin": 30,
            "end": 37,
            "name": "DUP4"
          },
          {
            "begin": 26,
            "end": 47,
            "name": "SUB"
          },
          {
            "begin": 22,
            "end": 54,
            "name": "SUB"
          },
          {
            "begin": 13,
            "end": 20,
            "name": "DUP2"
          },
          {
            "begin": 6,
            "end": 55,
            "name": "MSTORE"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "SWAP1"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2380,
            "end": 2484,
            "name": "MSTORE"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "MLOAD"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "DUP1"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "DUP3"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "DUP1"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "MLOAD"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "SWAP1"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "ADD"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "SWAP1"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "DUP1"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "DUP4"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "DUP4"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "93"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 66,
            "end": 68,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "DUP4"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "LT"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "94"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPI"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "DUP1"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "MLOAD"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "DUP3"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "MSTORE"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP1"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP3"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "ADD"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP2"
          },
          {
            "begin": 98,
            "end": 100,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "DUP3"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "ADD"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 114,
            "end": 126,
            "name": "ADD"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "93"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMP"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "94"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 274,
            "end": 275,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 267,
            "end": 270,
            "name": "DUP4"
          },
          {
            "begin": 263,
            "end": 265,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SUB"
          },
          {
            "begin": 254,
            "end": 257,
            "name": "PUSH",
            "value": "100"
          },
          {
            "begin": 250,
            "end": 272,
            "name": "EXP"
          },
          {
            "begin": 246,
            "end": 276,
            "name": "SUB"
          },
          {
            "begin": 315,
            "end": 319,
            "name": "DUP1"
          },
          {
            "begin": 311,
            "end": 320,
            "name": "NOT"
          },
          {
            "begin": 305,
            "end": 308,
            "name": "DUP3"
          },
          {
            "begin": 299,
            "end": 309,
            "name": "MLOAD"
          },
          {
            "begin": 295,
            "end": 321,
            "name": "AND"
          },
          {
            "begin": 356,
            "end": 360,
            "name": "DUP2"
          },
          {
            "begin": 350,
            "end": 353,
            "name": "DUP5"
          },
          {
            "begin": 344,
            "end": 354,
            "name": "MLOAD"
          },
          {
            "begin": 340,
            "end": 361,
            "name": "AND"
          },
          {
            "begin": 389,
            "end": 396,
            "name": "DUP1"
          },
          {
            "begin": 380,
            "end": 387,
            "name": "DUP3"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "OR"
          },
          {
            "begin": 372,
            "end": 375,
            "name": "DUP6"
          },
          {
            "begin": 365,
            "end": 398,
            "name": "MSTORE"
          },
          {
            "begin": 3,
            "end": 402,
            "name": "POP"
          },
          {
            "begin": 3,
            "end": 402,
            "name": "POP"
          },
          {
            "begin": 3,
            "end": 402,
            "name": "POP"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "POP"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "POP"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "POP"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "SWAP1"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "POP"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "ADD"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "SWAP2"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "POP"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "POP"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "MLOAD"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "DUP1"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "SWAP2"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "SUB"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "SWAP1"
          },
          {
            "begin": 2370,
            "end": 2485,
            "name": "KECCAK256"
          },
          {
            "begin": 2355,
            "end": 2485,
            "name": "SWAP2"
          },
          {
            "begin": 2355,
            "end": 2485,
            "name": "POP"
          },
          {
            "begin": 2561,
            "end": 2609,
            "name": "PUSH [tag]",
            "value": "96"
          },
          {
            "begin": 2599,
            "end": 2608,
            "name": "DUP5"
          },
          {
            "begin": 2561,
            "end": 2590,
            "name": "PUSH [tag]",
            "value": "97"
          },
          {
            "begin": 2561,
            "end": 2565,
            "name": "DUP5"
          },
          {
            "begin": 2561,
            "end": 2588,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2561,
            "end": 2588,
            "name": "NOT"
          },
          {
            "begin": 2561,
            "end": 2588,
            "name": "AND"
          },
          {
            "begin": 2561,
            "end": 2588,
            "name": "PUSH [tag]",
            "value": "98"
          },
          {
            "begin": 2561,
            "end": 2590,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2561,
            "end": 2590,
            "name": "tag",
            "value": "97"
          },
          {
            "begin": 2561,
            "end": 2590,
            "name": "JUMPDEST"
          },
          {
            "begin": 2561,
            "end": 2598,
            "name": "SWAP1"
          },
          {
            "begin": 2561,
            "end": 2609,
            "name": "PUSH",
            "value": "FFFFFFFF"
          },
          {
            "begin": 2561,
            "end": 2598,
            "name": "PUSH [tag]",
            "value": "99"
          },
          {
            "begin": 2561,
            "end": 2609,
            "name": "AND"
          },
          {
            "begin": 2561,
            "end": 2609,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2561,
            "end": 2609,
            "name": "tag",
            "value": "96"
          },
          {
            "begin": 2561,
            "end": 2609,
            "name": "JUMPDEST"
          },
          {
            "begin": 2544,
            "end": 2609,
            "name": "SWAP1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2622,
            "end": 2647,
            "name": "PUSH [tag]",
            "value": "100"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2631,
            "end": 2646,
            "name": "DUP3"
          },
          {
            "begin": 2631,
            "end": 2646,
            "name": "AND"
          },
          {
            "begin": 2622,
            "end": 2630,
            "name": "PUSH [tag]",
            "value": "39"
          },
          {
            "begin": 2622,
            "end": 2647,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2622,
            "end": 2647,
            "name": "tag",
            "value": "100"
          },
          {
            "begin": 2622,
            "end": 2647,
            "name": "JUMPDEST"
          },
          {
            "begin": 2615,
            "end": 2647,
            "name": "SWAP8"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2156,
            "end": 2652,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "tag",
            "value": "33"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "JUMPDEST"
          },
          {
            "begin": 1215,
            "end": 1230,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "SWAP1"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "DUP2"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "MSTORE"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "DUP2"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "SWAP1"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "MSTORE"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "SWAP1"
          },
          {
            "begin": 1280,
            "end": 1290,
            "name": "KECCAK256"
          },
          {
            "begin": 1280,
            "end": 1298,
            "name": "DUP1"
          },
          {
            "begin": 1280,
            "end": 1298,
            "name": "SLOAD"
          },
          {
            "begin": 1300,
            "end": 1318,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 1300,
            "end": 1318,
            "name": "DUP3"
          },
          {
            "begin": 1300,
            "end": 1318,
            "name": "ADD"
          },
          {
            "begin": 1300,
            "end": 1318,
            "name": "SLOAD"
          },
          {
            "begin": 1320,
            "end": 1334,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 1320,
            "end": 1334,
            "name": "SWAP1"
          },
          {
            "begin": 1320,
            "end": 1334,
            "name": "SWAP3"
          },
          {
            "begin": 1320,
            "end": 1334,
            "name": "ADD"
          },
          {
            "begin": 1320,
            "end": 1334,
            "name": "SLOAD"
          },
          {
            "begin": 1280,
            "end": 1298,
            "name": "SWAP1"
          },
          {
            "begin": 1280,
            "end": 1298,
            "name": "SWAP3"
          },
          {
            "begin": 1165,
            "end": 1342,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "tag",
            "value": "36"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "JUMPDEST"
          },
          {
            "begin": 1856,
            "end": 1868,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1856,
            "end": 1868,
            "name": "DUP1"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "PUSH [tag]",
            "value": "103"
          },
          {
            "begin": 903,
            "end": 913,
            "name": "CALLER"
          },
          {
            "begin": 895,
            "end": 914,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 881,
            "end": 894,
            "name": "PUSH [tag]",
            "value": "84"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "tag",
            "value": "103"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "JUMPDEST"
          },
          {
            "begin": 858,
            "end": 931,
            "name": "SWAP1"
          },
          {
            "begin": 858,
            "end": 931,
            "name": "POP"
          },
          {
            "begin": 949,
            "end": 964,
            "name": "DUP1"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "DUP1"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "PUSH [tag]",
            "value": "104"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "JUMPI"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 968,
            "end": 978,
            "name": "CALLER"
          },
          {
            "begin": 990,
            "end": 994,
            "name": "ADDRESS"
          },
          {
            "begin": 968,
            "end": 995,
            "name": "EQ"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "tag",
            "value": "104"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "JUMPDEST"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ISZERO"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ISZERO"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH [tag]",
            "value": "105"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "JUMPI"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP2"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP3"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "17"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP3"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "53656E646572206E6F74207065726D697373696F6E6564000000000000000000"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP3"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MLOAD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP2"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SUB"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "REVERT"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "tag",
            "value": "105"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "JUMPDEST"
          },
          {
            "begin": 1888,
            "end": 1910,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "DUP6"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "DUP2"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "MSTORE"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "DUP2"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "SWAP1"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "MSTORE"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "SWAP1"
          },
          {
            "begin": 1888,
            "end": 1898,
            "name": "KECCAK256"
          },
          {
            "begin": 1888,
            "end": 1902,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 1888,
            "end": 1902,
            "name": "ADD"
          },
          {
            "begin": 1888,
            "end": 1902,
            "name": "SLOAD"
          },
          {
            "begin": 1888,
            "end": 1910,
            "name": "DUP6"
          },
          {
            "begin": 1888,
            "end": 1910,
            "name": "EQ"
          },
          {
            "begin": 1888,
            "end": 1910,
            "name": "ISZERO"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "PUSH [tag]",
            "value": "107"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "JUMPI"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "DUP1"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "DUP2"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "MSTORE"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "DUP3"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "ADD"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "MSTORE"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "PUSH",
            "value": "11"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "DUP3"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "ADD"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "MSTORE"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "PUSH",
            "value": "4B657920616C7265616479206164646564000000000000000000000000000000"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "DUP3"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "ADD"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "MSTORE"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "SWAP1"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "MLOAD"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "SWAP1"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "DUP2"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "SWAP1"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "SUB"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "ADD"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "SWAP1"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "REVERT"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "tag",
            "value": "107"
          },
          {
            "begin": 1880,
            "end": 1932,
            "name": "JUMPDEST"
          },
          {
            "begin": 1943,
            "end": 1947,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "DUP6"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "DUP2"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "MSTORE"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "DUP2"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "DUP2"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "MSTORE"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "DUP1"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "DUP4"
          },
          {
            "begin": 1943,
            "end": 1953,
            "name": "KECCAK256"
          },
          {
            "begin": 1943,
            "end": 1957,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 1943,
            "end": 1957,
            "name": "DUP2"
          },
          {
            "begin": 1943,
            "end": 1957,
            "name": "ADD"
          },
          {
            "begin": 1943,
            "end": 1964,
            "name": "DUP10"
          },
          {
            "begin": 1943,
            "end": 1964,
            "name": "DUP2"
          },
          {
            "begin": 1943,
            "end": 1964,
            "name": "SSTORE"
          },
          {
            "begin": 1974,
            "end": 2003,
            "name": "DUP9"
          },
          {
            "begin": 1974,
            "end": 2003,
            "name": "DUP3"
          },
          {
            "begin": 1974,
            "end": 2003,
            "name": "SSTORE"
          },
          {
            "begin": 2013,
            "end": 2031,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 2013,
            "end": 2031,
            "name": "DUP1"
          },
          {
            "begin": 2013,
            "end": 2031,
            "name": "DUP4"
          },
          {
            "begin": 2013,
            "end": 2031,
            "name": "ADD"
          },
          {
            "begin": 2013,
            "end": 2039,
            "name": "DUP10"
          },
          {
            "begin": 2013,
            "end": 2039,
            "name": "DUP2"
          },
          {
            "begin": 2013,
            "end": 2039,
            "name": "SSTORE"
          },
          {
            "begin": 2050,
            "end": 2073,
            "name": "DUP11"
          },
          {
            "begin": 2050,
            "end": 2073,
            "name": "DUP8"
          },
          {
            "begin": 2050,
            "end": 2073,
            "name": "MSTORE"
          },
          {
            "begin": 2050,
            "end": 2073,
            "name": "DUP2"
          },
          {
            "begin": 2050,
            "end": 2073,
            "name": "DUP7"
          },
          {
            "begin": 2050,
            "end": 2073,
            "name": "MSTORE"
          },
          {
            "begin": 2050,
            "end": 2073,
            "name": "DUP5"
          },
          {
            "begin": 2050,
            "end": 2073,
            "name": "DUP8"
          },
          {
            "begin": 2050,
            "end": 2073,
            "name": "KECCAK256"
          },
          {
            "begin": 27,
            "end": 37,
            "name": "DUP1"
          },
          {
            "begin": 27,
            "end": 37,
            "name": "SLOAD"
          },
          {
            "begin": 23,
            "end": 41,
            "name": "SWAP3"
          },
          {
            "begin": 23,
            "end": 41,
            "name": "DUP4"
          },
          {
            "begin": 23,
            "end": 41,
            "name": "ADD"
          },
          {
            "begin": 45,
            "end": 68,
            "name": "DUP2"
          },
          {
            "begin": 45,
            "end": 68,
            "name": "SSTORE"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "DUP8"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "MSTORE"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "DUP6"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "DUP8"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "KECCAK256"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "SWAP1"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "SWAP2"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "ADD"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "DUP12"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "SWAP1"
          },
          {
            "begin": 2050,
            "end": 2084,
            "name": "SSTORE"
          },
          {
            "begin": 2146,
            "end": 2156,
            "name": "DUP11"
          },
          {
            "begin": 2146,
            "end": 2156,
            "name": "DUP7"
          },
          {
            "begin": 2146,
            "end": 2156,
            "name": "MSTORE"
          },
          {
            "begin": 2146,
            "end": 2156,
            "name": "SWAP4"
          },
          {
            "begin": 2146,
            "end": 2156,
            "name": "DUP6"
          },
          {
            "begin": 2146,
            "end": 2156,
            "name": "SWAP1"
          },
          {
            "begin": 2146,
            "end": 2156,
            "name": "MSTORE"
          },
          {
            "begin": 2146,
            "end": 2164,
            "name": "SWAP3"
          },
          {
            "begin": 2146,
            "end": 2164,
            "name": "SLOAD"
          },
          {
            "begin": 2126,
            "end": 2144,
            "name": "SWAP1"
          },
          {
            "begin": 2126,
            "end": 2144,
            "name": "SLOAD"
          },
          {
            "begin": 2109,
            "end": 2123,
            "name": "SWAP3"
          },
          {
            "begin": 2109,
            "end": 2123,
            "name": "SLOAD"
          },
          {
            "begin": 2100,
            "end": 2165,
            "name": "SWAP2"
          },
          {
            "begin": 2100,
            "end": 2165,
            "name": "MLOAD"
          },
          {
            "begin": 2146,
            "end": 2164,
            "name": "SWAP1"
          },
          {
            "begin": 2146,
            "end": 2164,
            "name": "SWAP4"
          },
          {
            "begin": 2100,
            "end": 2165,
            "name": "PUSH",
            "value": "480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9"
          },
          {
            "begin": 2100,
            "end": 2165,
            "name": "SWAP2"
          },
          {
            "begin": 2100,
            "end": 2165,
            "name": "LOG4"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2183,
            "end": 2187,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 2183,
            "end": 2187,
            "name": "SWAP5"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "SWAP4"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1746,
            "end": 2194,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "tag",
            "value": "39"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "JUMPDEST"
          },
          {
            "begin": 1099,
            "end": 1103,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "SWAP1"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "DUP2"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "MSTORE"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "DUP2"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "SWAP1"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "MSTORE"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "SWAP1"
          },
          {
            "begin": 1122,
            "end": 1132,
            "name": "KECCAK256"
          },
          {
            "begin": 1122,
            "end": 1136,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 1122,
            "end": 1136,
            "name": "ADD"
          },
          {
            "begin": 1122,
            "end": 1136,
            "name": "SLOAD"
          },
          {
            "begin": 1122,
            "end": 1152,
            "name": "ISZERO"
          },
          {
            "begin": 1122,
            "end": 1152,
            "name": "ISZERO"
          },
          {
            "begin": 1122,
            "end": 1152,
            "name": "SWAP1"
          },
          {
            "begin": 1047,
            "end": 1159,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "tag",
            "value": "42"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "AND"
          },
          {
            "begin": 1690,
            "end": 1694,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "SWAP1"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "DUP2"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "MSTORE"
          },
          {
            "begin": 1709,
            "end": 1718,
            "name": "PUSH",
            "value": "3"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "MSTORE"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "SWAP1"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "KECCAK256"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "SLOAD"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "AND"
          },
          {
            "begin": 1709,
            "end": 1733,
            "name": "SWAP1"
          },
          {
            "begin": 1625,
            "end": 1738,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "tag",
            "value": "45"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "JUMPDEST"
          },
          {
            "begin": 252,
            "end": 270,
            "name": "PUSH [tag]",
            "value": "112"
          },
          {
            "begin": 265,
            "end": 269,
            "name": "DUP2"
          },
          {
            "begin": 252,
            "end": 264,
            "name": "PUSH [tag]",
            "value": "113"
          },
          {
            "begin": 252,
            "end": 270,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 252,
            "end": 270,
            "name": "tag",
            "value": "112"
          },
          {
            "begin": 252,
            "end": 270,
            "name": "JUMPDEST"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "POP"
          },
          {
            "begin": 211,
            "end": 275,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "tag",
            "value": "48"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "JUMPDEST"
          },
          {
            "begin": 533,
            "end": 543,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 533,
            "end": 543,
            "name": "SLOAD"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "tag",
            "value": "114"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "JUMPDEST"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "SWAP1"
          },
          {
            "begin": 468,
            "end": 550,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "tag",
            "value": "51"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "JUMPDEST"
          },
          {
            "begin": 2744,
            "end": 2756,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2744,
            "end": 2756,
            "name": "DUP1"
          },
          {
            "begin": 2744,
            "end": 2756,
            "name": "DUP1"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "PUSH [tag]",
            "value": "116"
          },
          {
            "begin": 903,
            "end": 913,
            "name": "CALLER"
          },
          {
            "begin": 895,
            "end": 914,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 881,
            "end": 894,
            "name": "PUSH [tag]",
            "value": "84"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "tag",
            "value": "116"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "JUMPDEST"
          },
          {
            "begin": 858,
            "end": 931,
            "name": "SWAP1"
          },
          {
            "begin": 858,
            "end": 931,
            "name": "POP"
          },
          {
            "begin": 949,
            "end": 964,
            "name": "DUP1"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "DUP1"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "PUSH [tag]",
            "value": "117"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "JUMPI"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 968,
            "end": 978,
            "name": "CALLER"
          },
          {
            "begin": 990,
            "end": 994,
            "name": "ADDRESS"
          },
          {
            "begin": 968,
            "end": 995,
            "name": "EQ"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "tag",
            "value": "117"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "JUMPDEST"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ISZERO"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ISZERO"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH [tag]",
            "value": "118"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "JUMPI"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP2"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP3"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "17"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP3"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "53656E646572206E6F74207065726D697373696F6E6564000000000000000000"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP3"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MLOAD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP2"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SUB"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "REVERT"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "tag",
            "value": "118"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "JUMPDEST"
          },
          {
            "begin": 2776,
            "end": 2780,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "DUP6"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "DUP2"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "MSTORE"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "DUP2"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "SWAP1"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "MSTORE"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "SWAP1"
          },
          {
            "begin": 2776,
            "end": 2786,
            "name": "KECCAK256"
          },
          {
            "begin": 2776,
            "end": 2794,
            "name": "SLOAD"
          },
          {
            "begin": 96,
            "end": 97,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 2776,
            "end": 2812,
            "name": "EQ"
          },
          {
            "begin": 2776,
            "end": 2812,
            "name": "ISZERO"
          },
          {
            "begin": 2776,
            "end": 2812,
            "name": "DUP1"
          },
          {
            "begin": 2776,
            "end": 2856,
            "name": "PUSH [tag]",
            "value": "120"
          },
          {
            "begin": 2776,
            "end": 2856,
            "name": "JUMPI"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2855,
            "end": 2856,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 2816,
            "end": 2845,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2816,
            "end": 2845,
            "name": "DUP2"
          },
          {
            "begin": 2816,
            "end": 2845,
            "name": "SWAP1"
          },
          {
            "begin": 2816,
            "end": 2845,
            "name": "MSTORE"
          },
          {
            "begin": 2816,
            "end": 2845,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2816,
            "end": 2845,
            "name": "DUP2"
          },
          {
            "begin": 2816,
            "end": 2845,
            "name": "SWAP1"
          },
          {
            "begin": 2816,
            "end": 2845,
            "name": "MSTORE"
          },
          {
            "begin": 2816,
            "end": 2845,
            "name": "PUSH",
            "value": "CC69885FDA6BCC1A4ACE058B4A62BF5E179EA78FD58A1CCD71C22CC9B688792F"
          },
          {
            "begin": 2816,
            "end": 2852,
            "name": "SLOAD"
          },
          {
            "begin": 2816,
            "end": 2856,
            "name": "GT"
          },
          {
            "begin": 2776,
            "end": 2856,
            "name": "tag",
            "value": "120"
          },
          {
            "begin": 2776,
            "end": 2856,
            "name": "JUMPDEST"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "ISZERO"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "ISZERO"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "PUSH [tag]",
            "value": "121"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "JUMPI"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "DUP1"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "DUP2"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "MSTORE"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "DUP3"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "ADD"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "MSTORE"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "PUSH",
            "value": "1D"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "DUP3"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "ADD"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "MSTORE"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "PUSH",
            "value": "43616E206E6F742072656D6F7665206D616E6167656D656E74206B6579000000"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "DUP3"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "ADD"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "MSTORE"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "SWAP1"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "MLOAD"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "SWAP1"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "DUP2"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "SWAP1"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "SUB"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "ADD"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "SWAP1"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "REVERT"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "tag",
            "value": "121"
          },
          {
            "begin": 2768,
            "end": 2890,
            "name": "JUMPDEST"
          },
          {
            "begin": 2908,
            "end": 2912,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "DUP6"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "DUP2"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "MSTORE"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "DUP2"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "SWAP1"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "MSTORE"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "SWAP1"
          },
          {
            "begin": 2908,
            "end": 2918,
            "name": "KECCAK256"
          },
          {
            "begin": 2908,
            "end": 2926,
            "name": "SLOAD"
          },
          {
            "begin": 2908,
            "end": 2938,
            "name": "DUP5"
          },
          {
            "begin": 2908,
            "end": 2938,
            "name": "EQ"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "PUSH [tag]",
            "value": "122"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "JUMPI"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "DUP1"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "DUP2"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "MSTORE"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "DUP3"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "ADD"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "MSTORE"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "PUSH",
            "value": "B"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "DUP3"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "ADD"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "MSTORE"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "PUSH",
            "value": "496E76616C6964206B6579000000000000000000000000000000000000000000"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "DUP3"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "ADD"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "MSTORE"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "SWAP1"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "MLOAD"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "SWAP1"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "DUP2"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "SWAP1"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "SUB"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "ADD"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "SWAP1"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "REVERT"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "tag",
            "value": "122"
          },
          {
            "begin": 2900,
            "end": 2954,
            "name": "JUMPDEST"
          },
          {
            "begin": 3017,
            "end": 3021,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "DUP6"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "DUP2"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "MSTORE"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "DUP2"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "SWAP1"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "MSTORE"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "DUP1"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "DUP3"
          },
          {
            "begin": 3017,
            "end": 3027,
            "name": "KECCAK256"
          },
          {
            "begin": 3017,
            "end": 3035,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3017,
            "end": 3035,
            "name": "DUP2"
          },
          {
            "begin": 3017,
            "end": 3035,
            "name": "ADD"
          },
          {
            "begin": 3017,
            "end": 3035,
            "name": "SLOAD"
          },
          {
            "begin": 2997,
            "end": 3015,
            "name": "DUP2"
          },
          {
            "begin": 2997,
            "end": 3015,
            "name": "SLOAD"
          },
          {
            "begin": 2981,
            "end": 2995,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 2981,
            "end": 2995,
            "name": "SWAP1"
          },
          {
            "begin": 2981,
            "end": 2995,
            "name": "SWAP3"
          },
          {
            "begin": 2981,
            "end": 2995,
            "name": "ADD"
          },
          {
            "begin": 2981,
            "end": 2995,
            "name": "SLOAD"
          },
          {
            "begin": 2970,
            "end": 3036,
            "name": "SWAP3"
          },
          {
            "begin": 2970,
            "end": 3036,
            "name": "MLOAD"
          },
          {
            "begin": 3017,
            "end": 3035,
            "name": "SWAP1"
          },
          {
            "begin": 3017,
            "end": 3035,
            "name": "SWAP4"
          },
          {
            "begin": 2997,
            "end": 3015,
            "name": "SWAP2"
          },
          {
            "begin": 2997,
            "end": 3015,
            "name": "SWAP3"
          },
          {
            "begin": 2981,
            "end": 2995,
            "name": "SWAP2"
          },
          {
            "begin": 2970,
            "end": 3036,
            "name": "PUSH",
            "value": "585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397"
          },
          {
            "begin": 2970,
            "end": 3036,
            "name": "SWAP2"
          },
          {
            "begin": 2970,
            "end": 3036,
            "name": "LOG4"
          },
          {
            "begin": 3054,
            "end": 3058,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "DUP6"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "DUP2"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "MSTORE"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "DUP2"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "SWAP1"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "MSTORE"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "DUP2"
          },
          {
            "begin": 3054,
            "end": 3064,
            "name": "KECCAK256"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "DUP2"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "DUP2"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "SSTORE"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "DUP2"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "ADD"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "DUP3"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "SWAP1"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "SSTORE"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "ADD"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "DUP2"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "SWAP1"
          },
          {
            "begin": 3047,
            "end": 3064,
            "name": "SSTORE"
          },
          {
            "begin": 3054,
            "end": 3058,
            "name": "SWAP2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3075,
            "end": 3452,
            "name": "tag",
            "value": "123"
          },
          {
            "begin": 3075,
            "end": 3452,
            "name": "JUMPDEST"
          },
          {
            "begin": 3096,
            "end": 3119,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3096,
            "end": 3119,
            "name": "DUP5"
          },
          {
            "begin": 3096,
            "end": 3119,
            "name": "DUP2"
          },
          {
            "begin": 3096,
            "end": 3119,
            "name": "MSTORE"
          },
          {
            "begin": 3096,
            "end": 3109,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3096,
            "end": 3119,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3096,
            "end": 3119,
            "name": "MSTORE"
          },
          {
            "begin": 3096,
            "end": 3119,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3096,
            "end": 3119,
            "name": "SWAP1"
          },
          {
            "begin": 3096,
            "end": 3119,
            "name": "KECCAK256"
          },
          {
            "begin": 3096,
            "end": 3126,
            "name": "SLOAD"
          },
          {
            "begin": 3092,
            "end": 3126,
            "name": "DUP3"
          },
          {
            "begin": 3092,
            "end": 3126,
            "name": "LT"
          },
          {
            "begin": 3075,
            "end": 3452,
            "name": "ISZERO"
          },
          {
            "begin": 3075,
            "end": 3452,
            "name": "PUSH [tag]",
            "value": "124"
          },
          {
            "begin": 3075,
            "end": 3452,
            "name": "JUMPI"
          },
          {
            "begin": 3151,
            "end": 3185,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3151,
            "end": 3174,
            "name": "DUP5"
          },
          {
            "begin": 3151,
            "end": 3174,
            "name": "DUP2"
          },
          {
            "begin": 3151,
            "end": 3174,
            "name": "MSTORE"
          },
          {
            "begin": 3151,
            "end": 3164,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3151,
            "end": 3174,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3151,
            "end": 3174,
            "name": "MSTORE"
          },
          {
            "begin": 3151,
            "end": 3174,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3151,
            "end": 3174,
            "name": "SWAP1"
          },
          {
            "begin": 3151,
            "end": 3174,
            "name": "KECCAK256"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "DUP1"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "SLOAD"
          },
          {
            "begin": 3181,
            "end": 3185,
            "name": "DUP7"
          },
          {
            "begin": 3181,
            "end": 3185,
            "name": "SWAP2"
          },
          {
            "begin": 3151,
            "end": 3174,
            "name": "SWAP1"
          },
          {
            "begin": 3175,
            "end": 3176,
            "name": "DUP5"
          },
          {
            "begin": 3175,
            "end": 3176,
            "name": "SWAP1"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "DUP2"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "LT"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "PUSH [tag]",
            "value": "126"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "JUMPI"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "INVALID"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "tag",
            "value": "126"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "JUMPDEST"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "SWAP2"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "DUP3"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "MSTORE"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "SWAP1"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "SWAP2"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "KECCAK256"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "ADD"
          },
          {
            "begin": 3151,
            "end": 3177,
            "name": "SLOAD"
          },
          {
            "begin": 3151,
            "end": 3185,
            "name": "EQ"
          },
          {
            "begin": 3147,
            "end": 3442,
            "name": "ISZERO"
          },
          {
            "begin": 3147,
            "end": 3442,
            "name": "PUSH [tag]",
            "value": "128"
          },
          {
            "begin": 3147,
            "end": 3442,
            "name": "JUMPI"
          },
          {
            "begin": 3234,
            "end": 3257,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3234,
            "end": 3257,
            "name": "DUP5"
          },
          {
            "begin": 3234,
            "end": 3257,
            "name": "DUP2"
          },
          {
            "begin": 3234,
            "end": 3257,
            "name": "MSTORE"
          },
          {
            "begin": 3234,
            "end": 3247,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3234,
            "end": 3257,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3234,
            "end": 3257,
            "name": "MSTORE"
          },
          {
            "begin": 3234,
            "end": 3257,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3234,
            "end": 3257,
            "name": "SWAP1"
          },
          {
            "begin": 3234,
            "end": 3257,
            "name": "KECCAK256"
          },
          {
            "begin": 3258,
            "end": 3288,
            "name": "DUP1"
          },
          {
            "begin": 3258,
            "end": 3288,
            "name": "SLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 3258,
            "end": 3292,
            "name": "DUP2"
          },
          {
            "begin": 3258,
            "end": 3292,
            "name": "ADD"
          },
          {
            "begin": 3258,
            "end": 3292,
            "name": "SWAP1"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "DUP2"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "LT"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "PUSH [tag]",
            "value": "129"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "JUMPI"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "INVALID"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "tag",
            "value": "129"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "JUMPDEST"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "SWAP1"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "MSTORE"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "KECCAK256"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "ADD"
          },
          {
            "begin": 3234,
            "end": 3293,
            "name": "SLOAD"
          },
          {
            "begin": 3205,
            "end": 3218,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3219,
            "end": 3227,
            "name": "DUP7"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "DUP2"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "MSTORE"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "ADD"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "SWAP1"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "DUP2"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "MSTORE"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "ADD"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3205,
            "end": 3228,
            "name": "KECCAK256"
          },
          {
            "begin": 3229,
            "end": 3230,
            "name": "DUP4"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "DUP2"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "SLOAD"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "DUP2"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "LT"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "ISZERO"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "ISZERO"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "PUSH [tag]",
            "value": "131"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "JUMPI"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "INVALID"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "tag",
            "value": "131"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "JUMPDEST"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "SWAP2"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "DUP3"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "MSTORE"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "DUP1"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "DUP4"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "KECCAK256"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "SWAP1"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "SWAP2"
          },
          {
            "begin": 3205,
            "end": 3231,
            "name": "ADD"
          },
          {
            "begin": 3205,
            "end": 3293,
            "name": "SWAP3"
          },
          {
            "begin": 3205,
            "end": 3293,
            "name": "SWAP1"
          },
          {
            "begin": 3205,
            "end": 3293,
            "name": "SWAP3"
          },
          {
            "begin": 3205,
            "end": 3293,
            "name": "SSTORE"
          },
          {
            "begin": 3318,
            "end": 3341,
            "name": "DUP6"
          },
          {
            "begin": 3318,
            "end": 3341,
            "name": "DUP2"
          },
          {
            "begin": 3318,
            "end": 3341,
            "name": "MSTORE"
          },
          {
            "begin": 3318,
            "end": 3331,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3318,
            "end": 3341,
            "name": "SWAP1"
          },
          {
            "begin": 3318,
            "end": 3341,
            "name": "SWAP2"
          },
          {
            "begin": 3318,
            "end": 3341,
            "name": "MSTORE"
          },
          {
            "begin": 3318,
            "end": 3341,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3318,
            "end": 3341,
            "name": "SWAP1"
          },
          {
            "begin": 3318,
            "end": 3341,
            "name": "KECCAK256"
          },
          {
            "begin": 3342,
            "end": 3372,
            "name": "DUP1"
          },
          {
            "begin": 3342,
            "end": 3372,
            "name": "SLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 3342,
            "end": 3376,
            "name": "DUP2"
          },
          {
            "begin": 3342,
            "end": 3376,
            "name": "ADD"
          },
          {
            "begin": 3342,
            "end": 3376,
            "name": "SWAP1"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "DUP2"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "LT"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "PUSH [tag]",
            "value": "133"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "JUMPI"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "INVALID"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "tag",
            "value": "133"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "JUMPDEST"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "SWAP2"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "DUP3"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "MSTORE"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "DUP1"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "DUP4"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "KECCAK256"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "SWAP1"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "SWAP2"
          },
          {
            "begin": 3318,
            "end": 3377,
            "name": "ADD"
          },
          {
            "begin": 3311,
            "end": 3377,
            "name": "DUP3"
          },
          {
            "begin": 3311,
            "end": 3377,
            "name": "SWAP1"
          },
          {
            "begin": 3311,
            "end": 3377,
            "name": "SSTORE"
          },
          {
            "begin": 3395,
            "end": 3418,
            "name": "DUP6"
          },
          {
            "begin": 3395,
            "end": 3418,
            "name": "DUP3"
          },
          {
            "begin": 3395,
            "end": 3418,
            "name": "MSTORE"
          },
          {
            "begin": 3395,
            "end": 3408,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3395,
            "end": 3418,
            "name": "SWAP1"
          },
          {
            "begin": 3395,
            "end": 3418,
            "name": "MSTORE"
          },
          {
            "begin": 3395,
            "end": 3418,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3395,
            "end": 3418,
            "name": "SWAP1"
          },
          {
            "begin": 3395,
            "end": 3418,
            "name": "KECCAK256"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "DUP1"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "SLOAD"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "SWAP1"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "PUSH [tag]",
            "value": "135"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "SWAP1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "DUP4"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "ADD"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "PUSH [tag]",
            "value": "136"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "tag",
            "value": "135"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "JUMPDEST"
          },
          {
            "begin": 3395,
            "end": 3427,
            "name": "POP"
          },
          {
            "begin": 3147,
            "end": 3442,
            "name": "tag",
            "value": "128"
          },
          {
            "begin": 3147,
            "end": 3442,
            "name": "JUMPDEST"
          },
          {
            "begin": 3128,
            "end": 3131,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3128,
            "end": 3131,
            "name": "SWAP1"
          },
          {
            "begin": 3128,
            "end": 3131,
            "name": "SWAP2"
          },
          {
            "begin": 3128,
            "end": 3131,
            "name": "ADD"
          },
          {
            "begin": 3128,
            "end": 3131,
            "name": "SWAP1"
          },
          {
            "begin": 3075,
            "end": 3452,
            "name": "PUSH [tag]",
            "value": "123"
          },
          {
            "begin": 3075,
            "end": 3452,
            "name": "JUMP"
          },
          {
            "begin": 3075,
            "end": 3452,
            "name": "tag",
            "value": "124"
          },
          {
            "begin": 3075,
            "end": 3452,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3469,
            "end": 3473,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3469,
            "end": 3473,
            "name": "SWAP5"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "SWAP4"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2645,
            "end": 3480,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "tag",
            "value": "54"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "JUMPDEST"
          },
          {
            "begin": 2549,
            "end": 2556,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2758,
            "end": 2777,
            "name": "DUP1"
          },
          {
            "begin": 2861,
            "end": 2873,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2912,
            "end": 2931,
            "name": "DUP1"
          },
          {
            "begin": 3124,
            "end": 3139,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2589,
            "end": 2599,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 2589,
            "end": 2599,
            "name": "SLOAD"
          },
          {
            "begin": 2580,
            "end": 2585,
            "name": "DUP12"
          },
          {
            "begin": 2580,
            "end": 2599,
            "name": "EQ"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "ISZERO"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "ISZERO"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "PUSH [tag]",
            "value": "138"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "JUMPI"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "DUP1"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "DUP2"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "MSTORE"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "DUP3"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "ADD"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "MSTORE"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "PUSH",
            "value": "D"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "DUP3"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "ADD"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "MSTORE"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "PUSH",
            "value": "496E76616C6964206E6F6E636500000000000000000000000000000000000000"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "DUP3"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "ADD"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "MSTORE"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "SWAP1"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "MLOAD"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "SWAP1"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "DUP2"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "SWAP1"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "SUB"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "ADD"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "SWAP1"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "REVERT"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "tag",
            "value": "138"
          },
          {
            "begin": 2572,
            "end": 2617,
            "name": "JUMPDEST"
          },
          {
            "begin": 2635,
            "end": 2726,
            "name": "PUSH [tag]",
            "value": "139"
          },
          {
            "begin": 2646,
            "end": 2648,
            "name": "DUP15"
          },
          {
            "begin": 2650,
            "end": 2655,
            "name": "DUP15"
          },
          {
            "begin": 2657,
            "end": 2661,
            "name": "DUP15"
          },
          {
            "begin": 2663,
            "end": 2668,
            "name": "DUP15"
          },
          {
            "begin": 2670,
            "end": 2678,
            "name": "DUP15"
          },
          {
            "begin": 2680,
            "end": 2688,
            "name": "DUP15"
          },
          {
            "begin": 2690,
            "end": 2698,
            "name": "DUP15"
          },
          {
            "begin": 2700,
            "end": 2713,
            "name": "DUP15"
          },
          {
            "begin": 2715,
            "end": 2725,
            "name": "DUP15"
          },
          {
            "begin": 2635,
            "end": 2645,
            "name": "PUSH [tag]",
            "value": "78"
          },
          {
            "begin": 2635,
            "end": 2726,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2635,
            "end": 2726,
            "name": "tag",
            "value": "139"
          },
          {
            "begin": 2635,
            "end": 2726,
            "name": "JUMPDEST"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "ISZERO"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "ISZERO"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "PUSH [tag]",
            "value": "140"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "JUMPI"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "DUP1"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "DUP2"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "MSTORE"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "DUP3"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "ADD"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "MSTORE"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "PUSH",
            "value": "11"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "DUP3"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "ADD"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "MSTORE"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "PUSH",
            "value": "496E76616C6964207369676E6174757265000000000000000000000000000000"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "DUP3"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "ADD"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "MSTORE"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "SWAP1"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "MLOAD"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "SWAP1"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "DUP2"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "SWAP1"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "SUB"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "ADD"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "SWAP1"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "REVERT"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "tag",
            "value": "140"
          },
          {
            "begin": 2627,
            "end": 2748,
            "name": "JUMPDEST"
          },
          {
            "begin": 2780,
            "end": 2789,
            "name": "GAS"
          },
          {
            "begin": 2758,
            "end": 2789,
            "name": "SWAP4"
          },
          {
            "begin": 2758,
            "end": 2789,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2878,
            "name": "DUP14"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2876,
            "end": 2883,
            "name": "AND"
          },
          {
            "begin": 2890,
            "end": 2895,
            "name": "DUP14"
          },
          {
            "begin": 2897,
            "end": 2901,
            "name": "DUP14"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "MLOAD"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP3"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "MLOAD"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SWAP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "ADD"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SWAP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP4"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP4"
          },
          {
            "begin": 23,
            "end": 24,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "tag",
            "value": "141"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "JUMPDEST"
          },
          {
            "begin": 33,
            "end": 36,
            "name": "DUP4"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "DUP2"
          },
          {
            "begin": 27,
            "end": 37,
            "name": "LT"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "PUSH [tag]",
            "value": "142"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "JUMPI"
          },
          {
            "begin": 90,
            "end": 101,
            "name": "DUP2"
          },
          {
            "begin": 90,
            "end": 101,
            "name": "DUP2"
          },
          {
            "begin": 90,
            "end": 101,
            "name": "ADD"
          },
          {
            "begin": 84,
            "end": 102,
            "name": "MLOAD"
          },
          {
            "begin": 71,
            "end": 82,
            "name": "DUP4"
          },
          {
            "begin": 71,
            "end": 82,
            "name": "DUP3"
          },
          {
            "begin": 71,
            "end": 82,
            "name": "ADD"
          },
          {
            "begin": 64,
            "end": 103,
            "name": "MSTORE"
          },
          {
            "begin": 52,
            "end": 54,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 45,
            "end": 55,
            "name": "ADD"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "PUSH [tag]",
            "value": "141"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "JUMP"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "tag",
            "value": "142"
          },
          {
            "begin": 8,
            "end": 108,
            "name": "JUMPDEST"
          },
          {
            "begin": 12,
            "end": 26,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SWAP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SWAP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP2"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "ADD"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SWAP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "AND"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "ISZERO"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH [tag]",
            "value": "144"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "JUMPI"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP3"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SUB"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "MLOAD"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP4"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SUB"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH",
            "value": "100"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "EXP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SUB"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "NOT"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "AND"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP2"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "MSTORE"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "ADD"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SWAP2"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "tag",
            "value": "144"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "JUMPDEST"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SWAP2"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "MLOAD"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP1"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP4"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SUB"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP2"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP6"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "DUP8"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "GAS"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "CALL"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "SWAP3"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2876,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2861,
            "end": 2902,
            "name": "SWAP3"
          },
          {
            "begin": 2861,
            "end": 2902,
            "name": "POP"
          },
          {
            "begin": 2934,
            "end": 3029,
            "name": "PUSH [tag]",
            "value": "145"
          },
          {
            "begin": 2955,
            "end": 2959,
            "name": "ADDRESS"
          },
          {
            "begin": 2961,
            "end": 2963,
            "name": "DUP16"
          },
          {
            "begin": 2965,
            "end": 2970,
            "name": "DUP16"
          },
          {
            "begin": 2972,
            "end": 2976,
            "name": "DUP16"
          },
          {
            "begin": 2978,
            "end": 2983,
            "name": "DUP16"
          },
          {
            "begin": 2985,
            "end": 2993,
            "name": "DUP16"
          },
          {
            "begin": 2995,
            "end": 3003,
            "name": "DUP16"
          },
          {
            "begin": 3005,
            "end": 3013,
            "name": "DUP16"
          },
          {
            "begin": 3015,
            "end": 3028,
            "name": "DUP16"
          },
          {
            "begin": 2934,
            "end": 2954,
            "name": "PUSH [tag]",
            "value": "57"
          },
          {
            "begin": 2934,
            "end": 3029,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2934,
            "end": 3029,
            "name": "tag",
            "value": "145"
          },
          {
            "begin": 2934,
            "end": 3029,
            "name": "JUMPDEST"
          },
          {
            "begin": 3072,
            "end": 3082,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 3072,
            "end": 3082,
            "name": "SLOAD"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "MLOAD"
          },
          {
            "begin": 2912,
            "end": 3029,
            "name": "SWAP2"
          },
          {
            "begin": 2912,
            "end": 3029,
            "name": "SWAP4"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "DUP5"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "ISZERO"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "ISZERO"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "SWAP2"
          },
          {
            "begin": 2912,
            "end": 3029,
            "name": "DUP5"
          },
          {
            "begin": 2912,
            "end": 3029,
            "name": "SWAP1"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "PUSH",
            "value": "30C13BF5D64D4BB93EC9B93F68B635DDC58B81DA7E18C8B4FBB5061CEB70CD41"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "SWAP1"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "SWAP1"
          },
          {
            "begin": 3044,
            "end": 3092,
            "name": "LOG4"
          },
          {
            "begin": 3102,
            "end": 3112,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 3102,
            "end": 3114,
            "name": "DUP1"
          },
          {
            "begin": 3102,
            "end": 3114,
            "name": "SLOAD"
          },
          {
            "begin": 3102,
            "end": 3114,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3102,
            "end": 3114,
            "name": "ADD"
          },
          {
            "begin": 3102,
            "end": 3114,
            "name": "SWAP1"
          },
          {
            "begin": 3102,
            "end": 3114,
            "name": "SSTORE"
          },
          {
            "begin": 3142,
            "end": 3168,
            "name": "PUSH [tag]",
            "value": "146"
          },
          {
            "begin": 3158,
            "end": 3167,
            "name": "GAS"
          },
          {
            "begin": 3142,
            "end": 3153,
            "name": "DUP6"
          },
          {
            "begin": 3142,
            "end": 3153,
            "name": "SWAP1"
          },
          {
            "begin": 3142,
            "end": 3168,
            "name": "PUSH",
            "value": "FFFFFFFF"
          },
          {
            "begin": 3142,
            "end": 3157,
            "name": "PUSH [tag]",
            "value": "147"
          },
          {
            "begin": 3142,
            "end": 3168,
            "name": "AND"
          },
          {
            "begin": 3142,
            "end": 3168,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 3142,
            "end": 3168,
            "name": "tag",
            "value": "146"
          },
          {
            "begin": 3142,
            "end": 3168,
            "name": "JUMPDEST"
          },
          {
            "begin": 3124,
            "end": 3168,
            "name": "SWAP1"
          },
          {
            "begin": 3124,
            "end": 3168,
            "name": "POP"
          },
          {
            "begin": 3178,
            "end": 3213,
            "name": "PUSH [tag]",
            "value": "148"
          },
          {
            "begin": 3185,
            "end": 3192,
            "name": "DUP2"
          },
          {
            "begin": 3194,
            "end": 3202,
            "name": "DUP12"
          },
          {
            "begin": 3204,
            "end": 3212,
            "name": "DUP12"
          },
          {
            "begin": 3178,
            "end": 3184,
            "name": "PUSH [tag]",
            "value": "149"
          },
          {
            "begin": 3178,
            "end": 3213,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 3178,
            "end": 3213,
            "name": "tag",
            "value": "148"
          },
          {
            "begin": 3178,
            "end": 3213,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3230,
            "end": 3241,
            "name": "SWAP13"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "SWAP12"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2291,
            "end": 3248,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "tag",
            "value": "57"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "JUMPDEST"
          },
          {
            "begin": 1391,
            "end": 1398,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1478,
            "end": 1482,
            "name": "DUP10"
          },
          {
            "begin": 1500,
            "end": 1502,
            "name": "DUP10"
          },
          {
            "begin": 1520,
            "end": 1525,
            "name": "DUP10"
          },
          {
            "begin": 1553,
            "end": 1557,
            "name": "DUP10"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "MLOAD"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "DUP1"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "DUP3"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "DUP1"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "MLOAD"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "SWAP1"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "ADD"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "SWAP1"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "DUP1"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "DUP4"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "DUP4"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "151"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 66,
            "end": 68,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "DUP4"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "LT"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "152"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPI"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "DUP1"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "MLOAD"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "DUP3"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "MSTORE"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP1"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP3"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "ADD"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP2"
          },
          {
            "begin": 98,
            "end": 100,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "DUP3"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "ADD"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 114,
            "end": 126,
            "name": "ADD"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "151"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMP"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "152"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 274,
            "end": 275,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 267,
            "end": 270,
            "name": "DUP4"
          },
          {
            "begin": 263,
            "end": 265,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SUB"
          },
          {
            "begin": 254,
            "end": 257,
            "name": "PUSH",
            "value": "100"
          },
          {
            "begin": 250,
            "end": 272,
            "name": "EXP"
          },
          {
            "begin": 246,
            "end": 276,
            "name": "SUB"
          },
          {
            "begin": 315,
            "end": 319,
            "name": "DUP1"
          },
          {
            "begin": 311,
            "end": 320,
            "name": "NOT"
          },
          {
            "begin": 305,
            "end": 308,
            "name": "DUP3"
          },
          {
            "begin": 299,
            "end": 309,
            "name": "MLOAD"
          },
          {
            "begin": 295,
            "end": 321,
            "name": "AND"
          },
          {
            "begin": 356,
            "end": 360,
            "name": "DUP2"
          },
          {
            "begin": 350,
            "end": 353,
            "name": "DUP5"
          },
          {
            "begin": 344,
            "end": 354,
            "name": "MLOAD"
          },
          {
            "begin": 340,
            "end": 361,
            "name": "AND"
          },
          {
            "begin": 389,
            "end": 396,
            "name": "DUP1"
          },
          {
            "begin": 380,
            "end": 387,
            "name": "DUP3"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "OR"
          },
          {
            "begin": 372,
            "end": 375,
            "name": "DUP6"
          },
          {
            "begin": 365,
            "end": 398,
            "name": "MSTORE"
          },
          {
            "begin": 3,
            "end": 402,
            "name": "POP"
          },
          {
            "begin": 3,
            "end": 402,
            "name": "POP"
          },
          {
            "begin": 3,
            "end": 402,
            "name": "POP"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "POP"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "POP"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "POP"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "SWAP1"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "POP"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "ADD"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "SWAP2"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "POP"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "POP"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "MLOAD"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "DUP1"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "SWAP2"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "SUB"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "SWAP1"
          },
          {
            "begin": 1543,
            "end": 1558,
            "name": "KECCAK256"
          },
          {
            "begin": 1576,
            "end": 1581,
            "name": "DUP10"
          },
          {
            "begin": 1599,
            "end": 1607,
            "name": "DUP10"
          },
          {
            "begin": 1625,
            "end": 1633,
            "name": "DUP10"
          },
          {
            "begin": 1651,
            "end": 1659,
            "name": "DUP10"
          },
          {
            "begin": 1682,
            "end": 1695,
            "name": "DUP10"
          },
          {
            "begin": 1677,
            "end": 1696,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 1677,
            "end": 1696,
            "name": "DUP2"
          },
          {
            "begin": 1677,
            "end": 1696,
            "name": "GT"
          },
          {
            "begin": 1677,
            "end": 1696,
            "name": "ISZERO"
          },
          {
            "begin": 1677,
            "end": 1696,
            "name": "PUSH [tag]",
            "value": "154"
          },
          {
            "begin": 1677,
            "end": 1696,
            "name": "JUMPI"
          },
          {
            "begin": 1677,
            "end": 1696,
            "name": "INVALID"
          },
          {
            "begin": 1677,
            "end": 1696,
            "name": "tag",
            "value": "154"
          },
          {
            "begin": 1677,
            "end": 1696,
            "name": "JUMPDEST"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MLOAD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "1000000000000000000000000"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP12"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP13"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "AND"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP2"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MUL"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP5"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP2"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP2"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP11"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP13"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "AND"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP2"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MUL"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "34"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP4"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "48"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP3"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP10"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP10"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "68"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP2"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP8"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP8"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "88"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP8"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP6"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP6"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "A8"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP7"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP4"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP4"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP7"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "AND"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP4"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MUL"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "C8"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP4"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "DC"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP3"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP5"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP5"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "FC"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP3"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP3"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP3"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP4"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MLOAD"
          },
          {
            "begin": 26,
            "end": 47,
            "name": "DUP1"
          },
          {
            "begin": 26,
            "end": 47,
            "name": "DUP3"
          },
          {
            "begin": 26,
            "end": 47,
            "name": "SUB"
          },
          {
            "begin": 22,
            "end": 54,
            "name": "SWAP1"
          },
          {
            "begin": 22,
            "end": 54,
            "name": "SWAP3"
          },
          {
            "begin": 22,
            "end": 54,
            "name": "ADD"
          },
          {
            "begin": 6,
            "end": 55,
            "name": "DUP3"
          },
          {
            "begin": 6,
            "end": 55,
            "name": "MSTORE"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "PUSH",
            "value": "11C"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "ADD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP3"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP4"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "MSTORE"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "DUP1"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "MLOAD"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP3"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP2"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP3"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "SWAP2"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "SWAP1"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "DUP5"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "ADD"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "SWAP1"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "DUP1"
          },
          {
            "begin": 1444,
            "end": 1706,
            "name": "DUP4"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "DUP4"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "155"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 66,
            "end": 68,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "DUP4"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "LT"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "156"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPI"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "DUP1"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "MLOAD"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "DUP3"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "MSTORE"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP1"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP3"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "ADD"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP2"
          },
          {
            "begin": 98,
            "end": 100,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "DUP3"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "ADD"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 114,
            "end": 126,
            "name": "ADD"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "155"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMP"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "156"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 299,
            "end": 309,
            "name": "MLOAD"
          },
          {
            "begin": 344,
            "end": 354,
            "name": "DUP2"
          },
          {
            "begin": 344,
            "end": 354,
            "name": "MLOAD"
          },
          {
            "begin": 263,
            "end": 265,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SWAP4"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SWAP1"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SWAP4"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SUB"
          },
          {
            "begin": 254,
            "end": 257,
            "name": "PUSH",
            "value": "100"
          },
          {
            "begin": 250,
            "end": 272,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 246,
            "end": 276,
            "name": "ADD"
          },
          {
            "begin": 311,
            "end": 320,
            "name": "DUP1"
          },
          {
            "begin": 311,
            "end": 320,
            "name": "NOT"
          },
          {
            "begin": 295,
            "end": 321,
            "name": "SWAP1"
          },
          {
            "begin": 295,
            "end": 321,
            "name": "SWAP2"
          },
          {
            "begin": 295,
            "end": 321,
            "name": "AND"
          },
          {
            "begin": 340,
            "end": 361,
            "name": "SWAP3"
          },
          {
            "begin": 340,
            "end": 361,
            "name": "AND"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "SWAP2"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "SWAP1"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "SWAP2"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "OR"
          },
          {
            "begin": 365,
            "end": 398,
            "name": "SWAP1"
          },
          {
            "begin": 365,
            "end": 398,
            "name": "MSTORE"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "MLOAD"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "SWAP3"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "ADD"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "DUP3"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "SWAP1"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "SUB"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "SWAP1"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "SWAP2"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "KECCAK256"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "SWAP14"
          },
          {
            "begin": 1421,
            "end": 1707,
            "name": "SWAP13"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1125,
            "end": 1714,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "tag",
            "value": "60"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "JUMPDEST"
          },
          {
            "begin": 1999,
            "end": 2006,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2029,
            "end": 2278,
            "name": "PUSH [tag]",
            "value": "159"
          },
          {
            "begin": 2267,
            "end": 2277,
            "name": "DUP3"
          },
          {
            "begin": 2029,
            "end": 2258,
            "name": "PUSH [tag]",
            "value": "97"
          },
          {
            "begin": 2029,
            "end": 2233,
            "name": "PUSH [tag]",
            "value": "161"
          },
          {
            "begin": 2063,
            "end": 2067,
            "name": "DUP15"
          },
          {
            "begin": 2081,
            "end": 2083,
            "name": "DUP15"
          },
          {
            "begin": 2097,
            "end": 2102,
            "name": "DUP15"
          },
          {
            "begin": 2116,
            "end": 2120,
            "name": "DUP15"
          },
          {
            "begin": 2134,
            "end": 2139,
            "name": "DUP15"
          },
          {
            "begin": 2153,
            "end": 2161,
            "name": "DUP15"
          },
          {
            "begin": 2175,
            "end": 2183,
            "name": "DUP15"
          },
          {
            "begin": 2197,
            "end": 2205,
            "name": "DUP15"
          },
          {
            "begin": 2219,
            "end": 2232,
            "name": "DUP15"
          },
          {
            "begin": 2029,
            "end": 2049,
            "name": "PUSH [tag]",
            "value": "57"
          },
          {
            "begin": 2029,
            "end": 2233,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2029,
            "end": 2233,
            "name": "tag",
            "value": "161"
          },
          {
            "begin": 2029,
            "end": 2233,
            "name": "JUMPDEST"
          },
          {
            "begin": 2029,
            "end": 2256,
            "name": "PUSH [tag]",
            "value": "98"
          },
          {
            "begin": 2029,
            "end": 2258,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2029,
            "end": 2278,
            "name": "tag",
            "value": "159"
          },
          {
            "begin": 2029,
            "end": 2278,
            "name": "JUMPDEST"
          },
          {
            "begin": 2022,
            "end": 2278,
            "name": "SWAP12"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "SWAP11"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1720,
            "end": 2285,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "tag",
            "value": "63"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "JUMPDEST"
          },
          {
            "begin": 1877,
            "end": 1881,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1947,
            "end": 1959,
            "name": "DUP1"
          },
          {
            "begin": 2038,
            "end": 2052,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1989,
            "end": 2004,
            "name": "DUP6"
          },
          {
            "begin": 2017,
            "end": 2030,
            "name": "DUP6"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "MLOAD"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "ADD"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "DUP1"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "DUP4"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "AND"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "AND"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "PUSH",
            "value": "1000000000000000000000000"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "MUL"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "DUP2"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "MSTORE"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "PUSH",
            "value": "14"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "ADD"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "DUP3"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "AND"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "AND"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "PUSH",
            "value": "1000000000000000000000000"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "MUL"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "DUP2"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "MSTORE"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "PUSH",
            "value": "14"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "ADD"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "SWAP3"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "POP"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "POP"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "POP"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "MLOAD"
          },
          {
            "begin": 49,
            "end": 53,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 39,
            "end": 46,
            "name": "DUP2"
          },
          {
            "begin": 30,
            "end": 37,
            "name": "DUP4"
          },
          {
            "begin": 26,
            "end": 47,
            "name": "SUB"
          },
          {
            "begin": 22,
            "end": 54,
            "name": "SUB"
          },
          {
            "begin": 13,
            "end": 20,
            "name": "DUP2"
          },
          {
            "begin": 6,
            "end": 55,
            "name": "MSTORE"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "SWAP1"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1972,
            "end": 2031,
            "name": "MSTORE"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "MLOAD"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "DUP1"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "DUP3"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "DUP1"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "MLOAD"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "SWAP1"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "ADD"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "SWAP1"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "DUP1"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "DUP4"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "DUP4"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "163"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 66,
            "end": 68,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "DUP4"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "LT"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "164"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPI"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "DUP1"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "MLOAD"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "DUP3"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "MSTORE"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP1"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP3"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "ADD"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP2"
          },
          {
            "begin": 98,
            "end": 100,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "DUP3"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "ADD"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 114,
            "end": 126,
            "name": "ADD"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "163"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMP"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "164"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 274,
            "end": 275,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 267,
            "end": 270,
            "name": "DUP4"
          },
          {
            "begin": 263,
            "end": 265,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SUB"
          },
          {
            "begin": 254,
            "end": 257,
            "name": "PUSH",
            "value": "100"
          },
          {
            "begin": 250,
            "end": 272,
            "name": "EXP"
          },
          {
            "begin": 246,
            "end": 276,
            "name": "SUB"
          },
          {
            "begin": 315,
            "end": 319,
            "name": "DUP1"
          },
          {
            "begin": 311,
            "end": 320,
            "name": "NOT"
          },
          {
            "begin": 305,
            "end": 308,
            "name": "DUP3"
          },
          {
            "begin": 299,
            "end": 309,
            "name": "MLOAD"
          },
          {
            "begin": 295,
            "end": 321,
            "name": "AND"
          },
          {
            "begin": 356,
            "end": 360,
            "name": "DUP2"
          },
          {
            "begin": 350,
            "end": 353,
            "name": "DUP5"
          },
          {
            "begin": 344,
            "end": 354,
            "name": "MLOAD"
          },
          {
            "begin": 340,
            "end": 361,
            "name": "AND"
          },
          {
            "begin": 389,
            "end": 396,
            "name": "DUP1"
          },
          {
            "begin": 380,
            "end": 387,
            "name": "DUP3"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "OR"
          },
          {
            "begin": 372,
            "end": 375,
            "name": "DUP6"
          },
          {
            "begin": 365,
            "end": 398,
            "name": "MSTORE"
          },
          {
            "begin": 3,
            "end": 402,
            "name": "POP"
          },
          {
            "begin": 3,
            "end": 402,
            "name": "POP"
          },
          {
            "begin": 3,
            "end": 402,
            "name": "POP"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "POP"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "POP"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "POP"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "SWAP1"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "POP"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "ADD"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "SWAP2"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "POP"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "POP"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "MLOAD"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "DUP1"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "SWAP2"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "SUB"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "SWAP1"
          },
          {
            "begin": 1962,
            "end": 2032,
            "name": "KECCAK256"
          },
          {
            "begin": 1947,
            "end": 2032,
            "name": "SWAP2"
          },
          {
            "begin": 1947,
            "end": 2032,
            "name": "POP"
          },
          {
            "begin": 2055,
            "end": 2105,
            "name": "PUSH [tag]",
            "value": "166"
          },
          {
            "begin": 2093,
            "end": 2104,
            "name": "DUP5"
          },
          {
            "begin": 2055,
            "end": 2084,
            "name": "PUSH [tag]",
            "value": "97"
          },
          {
            "begin": 2055,
            "end": 2059,
            "name": "DUP5"
          },
          {
            "begin": 2055,
            "end": 2082,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2055,
            "end": 2082,
            "name": "NOT"
          },
          {
            "begin": 2055,
            "end": 2082,
            "name": "AND"
          },
          {
            "begin": 2055,
            "end": 2082,
            "name": "PUSH [tag]",
            "value": "98"
          },
          {
            "begin": 2055,
            "end": 2084,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2055,
            "end": 2105,
            "name": "tag",
            "value": "166"
          },
          {
            "begin": 2055,
            "end": 2105,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "SWAP1"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "DUP2"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "AND"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "SWAP6"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "AND"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "SWAP5"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "SWAP1"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "SWAP5"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "EQ"
          },
          {
            "begin": 2118,
            "end": 2141,
            "name": "SWAP6"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "SWAP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1745,
            "end": 2151,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "tag",
            "value": "66"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "JUMPDEST"
          },
          {
            "begin": 711,
            "end": 715,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 776,
            "end": 818,
            "name": "PUSH [tag]",
            "value": "169"
          },
          {
            "begin": 792,
            "end": 804,
            "name": "DUP8"
          },
          {
            "begin": 806,
            "end": 817,
            "name": "DUP8"
          },
          {
            "begin": 776,
            "end": 791,
            "name": "PUSH [tag]",
            "value": "90"
          },
          {
            "begin": 776,
            "end": 818,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 776,
            "end": 818,
            "name": "tag",
            "value": "169"
          },
          {
            "begin": 776,
            "end": 818,
            "name": "JUMPDEST"
          },
          {
            "begin": 768,
            "end": 819,
            "name": "ISZERO"
          },
          {
            "begin": 768,
            "end": 819,
            "name": "ISZERO"
          },
          {
            "begin": 768,
            "end": 819,
            "name": "PUSH [tag]",
            "value": "170"
          },
          {
            "begin": 768,
            "end": 819,
            "name": "JUMPI"
          },
          {
            "begin": 768,
            "end": 819,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 768,
            "end": 819,
            "name": "DUP1"
          },
          {
            "begin": 768,
            "end": 819,
            "name": "REVERT"
          },
          {
            "begin": 768,
            "end": 819,
            "name": "tag",
            "value": "170"
          },
          {
            "begin": 768,
            "end": 819,
            "name": "JUMPDEST"
          },
          {
            "begin": 916,
            "end": 1036,
            "name": "PUSH [tag]",
            "value": "171"
          },
          {
            "begin": 947,
            "end": 960,
            "name": "DUP5"
          },
          {
            "begin": 971,
            "end": 983,
            "name": "DUP9"
          },
          {
            "begin": 994,
            "end": 1005,
            "name": "DUP9"
          },
          {
            "begin": 1016,
            "end": 1025,
            "name": "DUP7"
          },
          {
            "begin": 916,
            "end": 936,
            "name": "PUSH [tag]",
            "value": "30"
          },
          {
            "begin": 916,
            "end": 1036,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 916,
            "end": 1036,
            "name": "tag",
            "value": "171"
          },
          {
            "begin": 916,
            "end": 1036,
            "name": "JUMPDEST"
          },
          {
            "begin": 908,
            "end": 1037,
            "name": "ISZERO"
          },
          {
            "begin": 908,
            "end": 1037,
            "name": "ISZERO"
          },
          {
            "begin": 908,
            "end": 1037,
            "name": "PUSH [tag]",
            "value": "172"
          },
          {
            "begin": 908,
            "end": 1037,
            "name": "JUMPI"
          },
          {
            "begin": 908,
            "end": 1037,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 908,
            "end": 1037,
            "name": "DUP1"
          },
          {
            "begin": 908,
            "end": 1037,
            "name": "REVERT"
          },
          {
            "begin": 908,
            "end": 1037,
            "name": "tag",
            "value": "172"
          },
          {
            "begin": 908,
            "end": 1037,
            "name": "JUMPDEST"
          },
          {
            "begin": 1124,
            "end": 1225,
            "name": "PUSH [tag]",
            "value": "173"
          },
          {
            "begin": 1159,
            "end": 1174,
            "name": "DUP6"
          },
          {
            "begin": 1187,
            "end": 1200,
            "name": "DUP6"
          },
          {
            "begin": 1213,
            "end": 1224,
            "name": "DUP5"
          },
          {
            "begin": 1124,
            "end": 1146,
            "name": "PUSH [tag]",
            "value": "63"
          },
          {
            "begin": 1124,
            "end": 1225,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 1124,
            "end": 1225,
            "name": "tag",
            "value": "173"
          },
          {
            "begin": 1124,
            "end": 1225,
            "name": "JUMPDEST"
          },
          {
            "begin": 1116,
            "end": 1226,
            "name": "ISZERO"
          },
          {
            "begin": 1116,
            "end": 1226,
            "name": "ISZERO"
          },
          {
            "begin": 1116,
            "end": 1226,
            "name": "PUSH [tag]",
            "value": "174"
          },
          {
            "begin": 1116,
            "end": 1226,
            "name": "JUMPI"
          },
          {
            "begin": 1116,
            "end": 1226,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1116,
            "end": 1226,
            "name": "DUP1"
          },
          {
            "begin": 1116,
            "end": 1226,
            "name": "REVERT"
          },
          {
            "begin": 1116,
            "end": 1226,
            "name": "tag",
            "value": "174"
          },
          {
            "begin": 1116,
            "end": 1226,
            "name": "JUMPDEST"
          },
          {
            "begin": 1297,
            "end": 1323,
            "name": "PUSH [tag]",
            "value": "175"
          },
          {
            "begin": 1309,
            "end": 1322,
            "name": "DUP5"
          },
          {
            "begin": 1297,
            "end": 1308,
            "name": "PUSH [tag]",
            "value": "42"
          },
          {
            "begin": 1297,
            "end": 1323,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 1297,
            "end": 1323,
            "name": "tag",
            "value": "175"
          },
          {
            "begin": 1297,
            "end": 1323,
            "name": "JUMPDEST"
          },
          {
            "begin": 1297,
            "end": 1332,
            "name": "ISZERO"
          },
          {
            "begin": 1289,
            "end": 1333,
            "name": "PUSH [tag]",
            "value": "176"
          },
          {
            "begin": 1289,
            "end": 1333,
            "name": "JUMPI"
          },
          {
            "begin": 1289,
            "end": 1333,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1289,
            "end": 1333,
            "name": "DUP1"
          },
          {
            "begin": 1289,
            "end": 1333,
            "name": "REVERT"
          },
          {
            "begin": 1289,
            "end": 1333,
            "name": "tag",
            "value": "176"
          },
          {
            "begin": 1289,
            "end": 1333,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1347,
            "end": 1351,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP7"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "SWAP6"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "POP"
          },
          {
            "begin": 481,
            "end": 1356,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "tag",
            "value": "69"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "JUMPDEST"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "DUP2"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "DUP2"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "MSTORE"
          },
          {
            "begin": 1562,
            "end": 1575,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "SWAP1"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "DUP2"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "MSTORE"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "SWAP2"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "DUP3"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "SWAP1"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "KECCAK256"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SLOAD"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP4"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "MLOAD"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP2"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP5"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "MUL"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP2"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "ADD"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP5"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "ADD"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP5"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "MSTORE"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP5"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "MSTORE"
          },
          {
            "begin": 1534,
            "end": 1543,
            "name": "PUSH",
            "value": "60"
          },
          {
            "begin": 1534,
            "end": 1543,
            "name": "SWAP4"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP3"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP4"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "ADD"
          },
          {
            "begin": 1562,
            "end": 1585,
            "name": "DUP3"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP3"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "ISZERO"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "PUSH [tag]",
            "value": "178"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "JUMPI"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "MUL"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP3"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "ADD"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP2"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "MSTORE"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "KECCAK256"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "tag",
            "value": "179"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "JUMPDEST"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP2"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SLOAD"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP2"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "MSTORE"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP2"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "ADD"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "ADD"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "DUP4"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "GT"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "PUSH [tag]",
            "value": "179"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "JUMPI"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "tag",
            "value": "178"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "JUMPDEST"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "POP"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "POP"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "POP"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "POP"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "POP"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "SWAP1"
          },
          {
            "begin": 1555,
            "end": 1585,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP2"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "SWAP1"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "POP"
          },
          {
            "begin": 1470,
            "end": 1592,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "tag",
            "value": "75"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "JUMPDEST"
          },
          {
            "begin": 3412,
            "end": 3444,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3412,
            "end": 3444,
            "name": "DUP1"
          },
          {
            "begin": 3412,
            "end": 3444,
            "name": "DUP1"
          },
          {
            "begin": 2957,
            "end": 3123,
            "name": "PUSH [tag]",
            "value": "181"
          },
          {
            "begin": 2979,
            "end": 2991,
            "name": "DUP10"
          },
          {
            "begin": 3002,
            "end": 3013,
            "name": "DUP10"
          },
          {
            "begin": 3041,
            "end": 3055,
            "name": "DUP10"
          },
          {
            "begin": 3067,
            "end": 3080,
            "name": "DUP10"
          },
          {
            "begin": 3091,
            "end": 3100,
            "name": "DUP10"
          },
          {
            "begin": 3111,
            "end": 3122,
            "name": "DUP10"
          },
          {
            "begin": 2957,
            "end": 2968,
            "name": "PUSH [tag]",
            "value": "66"
          },
          {
            "begin": 2957,
            "end": 3123,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2957,
            "end": 3123,
            "name": "tag",
            "value": "181"
          },
          {
            "begin": 2957,
            "end": 3123,
            "name": "JUMPDEST"
          },
          {
            "begin": 2949,
            "end": 3124,
            "name": "ISZERO"
          },
          {
            "begin": 2949,
            "end": 3124,
            "name": "ISZERO"
          },
          {
            "begin": 2949,
            "end": 3124,
            "name": "PUSH [tag]",
            "value": "182"
          },
          {
            "begin": 2949,
            "end": 3124,
            "name": "JUMPI"
          },
          {
            "begin": 2949,
            "end": 3124,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2949,
            "end": 3124,
            "name": "DUP1"
          },
          {
            "begin": 2949,
            "end": 3124,
            "name": "REVERT"
          },
          {
            "begin": 2949,
            "end": 3124,
            "name": "tag",
            "value": "182"
          },
          {
            "begin": 2949,
            "end": 3124,
            "name": "JUMPDEST"
          },
          {
            "begin": 3199,
            "end": 3235,
            "name": "PUSH [tag]",
            "value": "183"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 3199,
            "end": 3233,
            "name": "DUP9"
          },
          {
            "begin": 3199,
            "end": 3233,
            "name": "AND"
          },
          {
            "begin": 3199,
            "end": 3233,
            "name": "PUSH [tag]",
            "value": "184"
          },
          {
            "begin": 3199,
            "end": 3235,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 3199,
            "end": 3235,
            "name": "tag",
            "value": "183"
          },
          {
            "begin": 3199,
            "end": 3235,
            "name": "JUMPDEST"
          },
          {
            "begin": 3198,
            "end": 3235,
            "name": "ISZERO"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH [tag]",
            "value": "185"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "JUMPI"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "DUP1"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "DUP2"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "MSTORE"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "DUP3"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "ADD"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "MSTORE"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "22"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "DUP3"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "ADD"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "MSTORE"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "436F6E74726163742061646472657373657320617265206E6F7420616C6C6F77"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "DUP3"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "ADD"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "MSTORE"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "6564000000000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "DUP3"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "ADD"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "MSTORE"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "SWAP1"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "MLOAD"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "SWAP1"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "DUP2"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "SWAP1"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "SUB"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "PUSH",
            "value": "84"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "ADD"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "SWAP1"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "REVERT"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "tag",
            "value": "185"
          },
          {
            "begin": 3190,
            "end": 3274,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "DUP7"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "AND"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "SWAP1"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "DUP2"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "MSTORE"
          },
          {
            "begin": 3340,
            "end": 3349,
            "name": "PUSH",
            "value": "3"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "SWAP1"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "DUP2"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "MSTORE"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "DUP1"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "DUP4"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "KECCAK256"
          },
          {
            "begin": 3340,
            "end": 3371,
            "name": "DUP1"
          },
          {
            "begin": 3340,
            "end": 3371,
            "name": "SLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 3340,
            "end": 3371,
            "name": "AND"
          },
          {
            "begin": 3367,
            "end": 3371,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 3340,
            "end": 3371,
            "name": "OR"
          },
          {
            "begin": 3340,
            "end": 3371,
            "name": "SWAP1"
          },
          {
            "begin": 3340,
            "end": 3371,
            "name": "SSTORE"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "DUP1"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "MLOAD"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "PUSH",
            "value": "A786721200000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "DUP2"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "MSTORE"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "DUP2"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "ADD"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "DUP12"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SWAP1"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "MSTORE"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SWAP1"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "MLOAD"
          },
          {
            "begin": 3463,
            "end": 3505,
            "name": "PUSH",
            "value": "E0F8804F944687DB7899943B53EB0A16600FCE39"
          },
          {
            "begin": 3463,
            "end": 3505,
            "name": "SWAP7"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3463,
            "end": 3505,
            "name": "DUP7"
          },
          {
            "begin": 3463,
            "end": 3505,
            "name": "SWAP4"
          },
          {
            "begin": 3541,
            "end": 3569,
            "name": "PUSH",
            "value": "A7867212"
          },
          {
            "begin": 3541,
            "end": 3569,
            "name": "SWAP4"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "DUP1"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "DUP6"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "ADD"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SWAP5"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "SWAP2"
          },
          {
            "begin": 3340,
            "end": 3364,
            "name": "SWAP4"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SWAP3"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SWAP2"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "DUP4"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SWAP1"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SUB"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "ADD"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SWAP1"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "DUP3"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SWAP1"
          },
          {
            "begin": 3463,
            "end": 3505,
            "name": "DUP8"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "DUP1"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "EXTCODESIZE"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "186"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "186"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "POP"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "GAS"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "CALL"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "187"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 45,
            "end": 61,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 42,
            "end": 43,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 39,
            "end": 40,
            "name": "DUP1"
          },
          {
            "begin": 24,
            "end": 62,
            "name": "RETURNDATACOPY"
          },
          {
            "begin": 77,
            "end": 93,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 74,
            "end": 75,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 67,
            "end": 94,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "187"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "POP"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "POP"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "POP"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "POP"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "MLOAD"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 13,
            "end": 15,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 8,
            "end": 11,
            "name": "DUP2"
          },
          {
            "begin": 5,
            "end": 16,
            "name": "LT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "ISZERO"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "PUSH [tag]",
            "value": "188"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPI"
          },
          {
            "begin": 29,
            "end": 30,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 26,
            "end": 27,
            "name": "DUP1"
          },
          {
            "begin": 19,
            "end": 31,
            "name": "REVERT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "tag",
            "value": "188"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "MLOAD"
          },
          {
            "begin": 3541,
            "end": 3585,
            "name": "SWAP2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 3595,
            "end": 3616,
            "name": "DUP3"
          },
          {
            "begin": 3595,
            "end": 3616,
            "name": "AND"
          },
          {
            "begin": 3595,
            "end": 3616,
            "name": "ISZERO"
          },
          {
            "begin": 3591,
            "end": 3703,
            "name": "ISZERO"
          },
          {
            "begin": 3591,
            "end": 3703,
            "name": "PUSH [tag]",
            "value": "189"
          },
          {
            "begin": 3591,
            "end": 3703,
            "name": "JUMPI"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "DUP1"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "MLOAD"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "PUSH",
            "value": "216B008900000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "DUP2"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "MSTORE"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "DUP2"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "ADD"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "DUP10"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "SWAP1"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "MSTORE"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "SWAP1"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 3643,
            "end": 3674,
            "name": "DUP6"
          },
          {
            "begin": 3643,
            "end": 3674,
            "name": "AND"
          },
          {
            "begin": 3643,
            "end": 3674,
            "name": "SWAP2"
          },
          {
            "begin": 3643,
            "end": 3674,
            "name": "PUSH",
            "value": "216B0089"
          },
          {
            "begin": 3643,
            "end": 3674,
            "name": "SWAP2"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "DUP1"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "DUP4"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "ADD"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "SWAP3"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "SWAP3"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "SWAP2"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "SWAP1"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "DUP3"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "SWAP1"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "SUB"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "ADD"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "DUP2"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3643,
            "end": 3674,
            "name": "DUP8"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "DUP1"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "EXTCODESIZE"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "190"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "190"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "POP"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "GAS"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "CALL"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "191"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 45,
            "end": 61,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 42,
            "end": 43,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 39,
            "end": 40,
            "name": "DUP1"
          },
          {
            "begin": 24,
            "end": 62,
            "name": "RETURNDATACOPY"
          },
          {
            "begin": 77,
            "end": 93,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 74,
            "end": 75,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 67,
            "end": 94,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "191"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "POP"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "POP"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "POP"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "POP"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "MLOAD"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 13,
            "end": 15,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 8,
            "end": 11,
            "name": "DUP2"
          },
          {
            "begin": 5,
            "end": 16,
            "name": "LT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "ISZERO"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "PUSH [tag]",
            "value": "192"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPI"
          },
          {
            "begin": 29,
            "end": 30,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 26,
            "end": 27,
            "name": "DUP1"
          },
          {
            "begin": 19,
            "end": 31,
            "name": "REVERT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "tag",
            "value": "192"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "MLOAD"
          },
          {
            "begin": 3643,
            "end": 3690,
            "name": "SWAP2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3591,
            "end": 3703,
            "name": "tag",
            "value": "189"
          },
          {
            "begin": 3591,
            "end": 3703,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP1"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "MLOAD"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "PUSH",
            "value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP2"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "MSTORE"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP4"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP2"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "AND"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP4"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "ADD"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "MSTORE"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP3"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "ADD"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP11"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "SWAP1"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "MSTORE"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "SWAP2"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "MLOAD"
          },
          {
            "begin": 3752,
            "end": 3764,
            "name": "DUP11"
          },
          {
            "begin": 3752,
            "end": 3764,
            "name": "SWAP3"
          },
          {
            "begin": 3771,
            "end": 3785,
            "name": "DUP4"
          },
          {
            "begin": 3771,
            "end": 3785,
            "name": "AND"
          },
          {
            "begin": 3771,
            "end": 3785,
            "name": "SWAP2"
          },
          {
            "begin": 3771,
            "end": 3785,
            "name": "PUSH",
            "value": "A9059CBB"
          },
          {
            "begin": 3771,
            "end": 3785,
            "name": "SWAP2"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP1"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP4"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "ADD"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "SWAP3"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "SWAP3"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "SWAP2"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "SWAP1"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP3"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "SWAP1"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "SUB"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "ADD"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3771,
            "end": 3785,
            "name": "DUP8"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "DUP1"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "EXTCODESIZE"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "193"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "193"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "POP"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "GAS"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "CALL"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "194"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 45,
            "end": 61,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 42,
            "end": 43,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 39,
            "end": 40,
            "name": "DUP1"
          },
          {
            "begin": 24,
            "end": 62,
            "name": "RETURNDATACOPY"
          },
          {
            "begin": 77,
            "end": 93,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 74,
            "end": 75,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 67,
            "end": 94,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "194"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "POP"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "POP"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "POP"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "POP"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "MLOAD"
          },
          {
            "begin": 3771,
            "end": 3814,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 13,
            "end": 15,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 8,
            "end": 11,
            "name": "DUP2"
          },
          {
            "begin": 5,
            "end": 16,
            "name": "LT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "ISZERO"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "PUSH [tag]",
            "value": "195"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPI"
          },
          {
            "begin": 29,
            "end": 30,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 26,
            "end": 27,
            "name": "DUP1"
          },
          {
            "begin": 19,
            "end": 31,
            "name": "REVERT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "tag",
            "value": "195"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2659,
            "end": 3819,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "tag",
            "value": "78"
          },
          {
            "begin": 556,
            "end": 1119,
            "name": "JUMPDEST"
          },
          {
            "begin": 816,
            "end": 820,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 836,
            "end": 850,
            "name": "DUP1"
          },
          {
            "begin": 853,
            "end": 1070,
            "name": "PUSH [tag]",
            "value": "197"
          },
          {
            "begin": 876,
            "end": 880,
            "name": "ADDRESS"
          },
          {
            "begin": 894,
            "end": 896,
            "name": "DUP13"
          },
          {
            "begin": 910,
            "end": 915,
            "name": "DUP13"
          },
          {
            "begin": 929,
            "end": 933,
            "name": "DUP13"
          },
          {
            "begin": 947,
            "end": 952,
            "name": "DUP13"
          },
          {
            "begin": 966,
            "end": 974,
            "name": "DUP13"
          },
          {
            "begin": 988,
            "end": 996,
            "name": "DUP13"
          },
          {
            "begin": 1010,
            "end": 1018,
            "name": "DUP13"
          },
          {
            "begin": 1032,
            "end": 1045,
            "name": "DUP13"
          },
          {
            "begin": 1059,
            "end": 1069,
            "name": "DUP13"
          },
          {
            "begin": 853,
            "end": 862,
            "name": "PUSH [tag]",
            "value": "60"
          },
          {
            "begin": 853,
            "end": 1070,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 853,
            "end": 1070,
            "name": "tag",
            "value": "197"
          },
          {
            "begin": 853,
            "end": 1070,
            "name": "JUMPDEST"
          },
          {
            "begin": 836,
            "end": 1070,
            "name": "SWAP1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1087,
            "end": 1112,
            "name": "PUSH [tag]",
            "value": "159"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1096,
            "end": 1111,
            "name": "DUP3"
          },
          {
            "begin": 1096,
            "end": 1111,
            "name": "AND"
          },
          {
            "begin": 1087,
            "end": 1095,
            "name": "PUSH [tag]",
            "value": "39"
          },
          {
            "begin": 1087,
            "end": 1112,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "tag",
            "value": "81"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "JUMPDEST"
          },
          {
            "begin": 2320,
            "end": 2332,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2320,
            "end": 2332,
            "name": "DUP1"
          },
          {
            "begin": 2320,
            "end": 2332,
            "name": "DUP1"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "PUSH [tag]",
            "value": "200"
          },
          {
            "begin": 903,
            "end": 913,
            "name": "CALLER"
          },
          {
            "begin": 895,
            "end": 914,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 881,
            "end": 894,
            "name": "PUSH [tag]",
            "value": "84"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "tag",
            "value": "200"
          },
          {
            "begin": 881,
            "end": 931,
            "name": "JUMPDEST"
          },
          {
            "begin": 858,
            "end": 931,
            "name": "SWAP1"
          },
          {
            "begin": 858,
            "end": 931,
            "name": "POP"
          },
          {
            "begin": 949,
            "end": 964,
            "name": "DUP1"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "DUP1"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "PUSH [tag]",
            "value": "201"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "JUMPI"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 968,
            "end": 978,
            "name": "CALLER"
          },
          {
            "begin": 990,
            "end": 994,
            "name": "ADDRESS"
          },
          {
            "begin": 968,
            "end": 995,
            "name": "EQ"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "tag",
            "value": "201"
          },
          {
            "begin": 949,
            "end": 995,
            "name": "JUMPDEST"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ISZERO"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ISZERO"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH [tag]",
            "value": "202"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "JUMPI"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP2"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP3"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "17"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP3"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "53656E646572206E6F74207065726D697373696F6E6564000000000000000000"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP3"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MSTORE"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "MLOAD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "DUP2"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SUB"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "ADD"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "SWAP1"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "REVERT"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "tag",
            "value": "202"
          },
          {
            "begin": 941,
            "end": 1023,
            "name": "JUMPDEST"
          },
          {
            "begin": 2368,
            "end": 2377,
            "name": "DUP5"
          },
          {
            "begin": 2368,
            "end": 2384,
            "name": "MLOAD"
          },
          {
            "begin": 2352,
            "end": 2357,
            "name": "DUP7"
          },
          {
            "begin": 2352,
            "end": 2364,
            "name": "MLOAD"
          },
          {
            "begin": 2352,
            "end": 2384,
            "name": "EQ"
          },
          {
            "begin": 2352,
            "end": 2417,
            "name": "DUP1"
          },
          {
            "begin": 2352,
            "end": 2417,
            "name": "ISZERO"
          },
          {
            "begin": 2352,
            "end": 2417,
            "name": "PUSH [tag]",
            "value": "204"
          },
          {
            "begin": 2352,
            "end": 2417,
            "name": "JUMPI"
          },
          {
            "begin": 2352,
            "end": 2417,
            "name": "POP"
          },
          {
            "begin": 2404,
            "end": 2410,
            "name": "DUP4"
          },
          {
            "begin": 2404,
            "end": 2417,
            "name": "MLOAD"
          },
          {
            "begin": 2388,
            "end": 2393,
            "name": "DUP7"
          },
          {
            "begin": 2388,
            "end": 2400,
            "name": "MLOAD"
          },
          {
            "begin": 2388,
            "end": 2417,
            "name": "EQ"
          },
          {
            "begin": 2352,
            "end": 2417,
            "name": "tag",
            "value": "204"
          },
          {
            "begin": 2352,
            "end": 2417,
            "name": "JUMPDEST"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "ISZERO"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "ISZERO"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "PUSH [tag]",
            "value": "205"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "JUMPI"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "DUP1"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "MLOAD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "E5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "461BCD"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "MUL"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "DUP2"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "MSTORE"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "DUP3"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "ADD"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "MSTORE"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "PUSH",
            "value": "1C"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "DUP3"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "ADD"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "MSTORE"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "PUSH",
            "value": "556E657175616C20617267756D656E7420736574206C656E6774687300000000"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "PUSH",
            "value": "44"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "DUP3"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "ADD"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "MSTORE"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "SWAP1"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "MLOAD"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "SWAP1"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "DUP2"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "SWAP1"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "SUB"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "PUSH",
            "value": "64"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "ADD"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "SWAP1"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "REVERT"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "tag",
            "value": "205"
          },
          {
            "begin": 2344,
            "end": 2450,
            "name": "JUMPDEST"
          },
          {
            "begin": 2474,
            "end": 2475,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 2465,
            "end": 2475,
            "name": "SWAP2"
          },
          {
            "begin": 2465,
            "end": 2475,
            "name": "POP"
          },
          {
            "begin": 2460,
            "end": 2566,
            "name": "tag",
            "value": "206"
          },
          {
            "begin": 2460,
            "end": 2566,
            "name": "JUMPDEST"
          },
          {
            "begin": 2481,
            "end": 2486,
            "name": "DUP6"
          },
          {
            "begin": 2481,
            "end": 2493,
            "name": "MLOAD"
          },
          {
            "begin": 2477,
            "end": 2478,
            "name": "DUP3"
          },
          {
            "begin": 2477,
            "end": 2493,
            "name": "LT"
          },
          {
            "begin": 2460,
            "end": 2566,
            "name": "ISZERO"
          },
          {
            "begin": 2460,
            "end": 2566,
            "name": "PUSH [tag]",
            "value": "207"
          },
          {
            "begin": 2460,
            "end": 2566,
            "name": "JUMPI"
          },
          {
            "begin": 2514,
            "end": 2555,
            "name": "PUSH [tag]",
            "value": "209"
          },
          {
            "begin": 2521,
            "end": 2526,
            "name": "DUP7"
          },
          {
            "begin": 2527,
            "end": 2528,
            "name": "DUP4"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "DUP2"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "MLOAD"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "DUP2"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "LT"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "ISZERO"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "ISZERO"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "PUSH [tag]",
            "value": "210"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "JUMPI"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "INVALID"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "tag",
            "value": "210"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "JUMPDEST"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "SWAP1"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "ADD"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "SWAP1"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "MUL"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "ADD"
          },
          {
            "begin": 2521,
            "end": 2529,
            "name": "MLOAD"
          },
          {
            "begin": 2531,
            "end": 2540,
            "name": "DUP7"
          },
          {
            "begin": 2541,
            "end": 2542,
            "name": "DUP5"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "DUP2"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "MLOAD"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "DUP2"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "LT"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "ISZERO"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "ISZERO"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "PUSH [tag]",
            "value": "211"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "JUMPI"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "INVALID"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "tag",
            "value": "211"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "JUMPDEST"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "SWAP1"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "ADD"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "SWAP1"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "MUL"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "ADD"
          },
          {
            "begin": 2531,
            "end": 2543,
            "name": "MLOAD"
          },
          {
            "begin": 2545,
            "end": 2551,
            "name": "DUP7"
          },
          {
            "begin": 2552,
            "end": 2553,
            "name": "DUP6"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "DUP2"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "MLOAD"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "DUP2"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "LT"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "ISZERO"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "ISZERO"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "PUSH [tag]",
            "value": "212"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "JUMPI"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "INVALID"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "tag",
            "value": "212"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "JUMPDEST"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "SWAP1"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "ADD"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "SWAP1"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "MUL"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "ADD"
          },
          {
            "begin": 2545,
            "end": 2554,
            "name": "MLOAD"
          },
          {
            "begin": 2514,
            "end": 2520,
            "name": "PUSH [tag]",
            "value": "36"
          },
          {
            "begin": 2514,
            "end": 2555,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 2514,
            "end": 2555,
            "name": "tag",
            "value": "209"
          },
          {
            "begin": 2514,
            "end": 2555,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2495,
            "end": 2498,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 2495,
            "end": 2498,
            "name": "SWAP1"
          },
          {
            "begin": 2495,
            "end": 2498,
            "name": "SWAP2"
          },
          {
            "begin": 2495,
            "end": 2498,
            "name": "ADD"
          },
          {
            "begin": 2495,
            "end": 2498,
            "name": "SWAP1"
          },
          {
            "begin": 2460,
            "end": 2566,
            "name": "PUSH [tag]",
            "value": "206"
          },
          {
            "begin": 2460,
            "end": 2566,
            "name": "JUMP"
          },
          {
            "begin": 2460,
            "end": 2566,
            "name": "tag",
            "value": "207"
          },
          {
            "begin": 2460,
            "end": 2566,
            "name": "JUMPDEST"
          },
          {
            "begin": 2598,
            "end": 2610,
            "name": "DUP6"
          },
          {
            "begin": 2598,
            "end": 2610,
            "name": "MLOAD"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "DUP1"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "MLOAD"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "SWAP2"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "DUP3"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "MSTORE"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "MLOAD"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "PUSH",
            "value": "60ADF38C13A1938C05E8F58E818AC5A3F74AA8652155DF92802C3B64932747EE"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "SWAP2"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "DUP2"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "SWAP1"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "SUB"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "ADD"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "SWAP1"
          },
          {
            "begin": 2580,
            "end": 2611,
            "name": "LOG1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2628,
            "end": 2632,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 2628,
            "end": 2632,
            "name": "SWAP6"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "SWAP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 2200,
            "end": 2639,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "tag",
            "value": "84"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "JUMPDEST"
          },
          {
            "begin": 1673,
            "end": 1684,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "DUP3"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "DUP2"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "MSTORE"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "DUP2"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "SWAP1"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "MSTORE"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "SWAP1"
          },
          {
            "begin": 1703,
            "end": 1713,
            "name": "KECCAK256"
          },
          {
            "begin": 1703,
            "end": 1721,
            "name": "SLOAD"
          },
          {
            "begin": 1703,
            "end": 1733,
            "name": "DUP2"
          },
          {
            "begin": 1703,
            "end": 1733,
            "name": "EQ"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "tag",
            "value": "213"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "JUMPDEST"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "SWAP3"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "SWAP2"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "POP"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "POP"
          },
          {
            "begin": 1598,
            "end": 1740,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "tag",
            "value": "87"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "JUMPDEST"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "DUP2"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SWAP1"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "MSTORE"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SWAP1"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "DUP2"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "MSTORE"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SWAP1"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "KECCAK256"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "DUP1"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SLOAD"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "DUP3"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "ADD"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SLOAD"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SWAP1"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SWAP3"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "ADD"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SLOAD"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SWAP1"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SWAP2"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "SWAP1"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "DUP4"
          },
          {
            "begin": 103,
            "end": 139,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "tag",
            "value": "90"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "JUMPDEST"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "DUP1"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "MLOAD"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "PUSH",
            "value": "70A0823100000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "DUP2"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "MSTORE"
          },
          {
            "begin": 1545,
            "end": 1549,
            "name": "ADDRESS"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "DUP3"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "ADD"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "MSTORE"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "SWAP1"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "MLOAD"
          },
          {
            "begin": 1449,
            "end": 1453,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1449,
            "end": 1453,
            "name": "SWAP2"
          },
          {
            "begin": 1481,
            "end": 1493,
            "name": "DUP5"
          },
          {
            "begin": 1481,
            "end": 1493,
            "name": "SWAP2"
          },
          {
            "begin": 1449,
            "end": 1453,
            "name": "DUP4"
          },
          {
            "begin": 1449,
            "end": 1453,
            "name": "SWAP2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 1521,
            "end": 1536,
            "name": "DUP5"
          },
          {
            "begin": 1521,
            "end": 1536,
            "name": "AND"
          },
          {
            "begin": 1521,
            "end": 1536,
            "name": "SWAP2"
          },
          {
            "begin": 1521,
            "end": 1536,
            "name": "PUSH",
            "value": "70A08231"
          },
          {
            "begin": 1521,
            "end": 1536,
            "name": "SWAP2"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "PUSH",
            "value": "24"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "DUP1"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "DUP3"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "ADD"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "SWAP3"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "SWAP3"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "SWAP1"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "SWAP2"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "SWAP1"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "DUP3"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "SWAP1"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "SUB"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "ADD"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "DUP2"
          },
          {
            "begin": 1449,
            "end": 1453,
            "name": "DUP8"
          },
          {
            "begin": 1521,
            "end": 1536,
            "name": "DUP8"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "DUP1"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "EXTCODESIZE"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "215"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "215"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "POP"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "GAS"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "CALL"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "216"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 45,
            "end": 61,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 42,
            "end": 43,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 39,
            "end": 40,
            "name": "DUP1"
          },
          {
            "begin": 24,
            "end": 62,
            "name": "RETURNDATACOPY"
          },
          {
            "begin": 77,
            "end": 93,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 74,
            "end": 75,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 67,
            "end": 94,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "216"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "POP"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "POP"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "POP"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "POP"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "MLOAD"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 13,
            "end": 15,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 8,
            "end": 11,
            "name": "DUP2"
          },
          {
            "begin": 5,
            "end": 16,
            "name": "LT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "ISZERO"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "PUSH [tag]",
            "value": "217"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPI"
          },
          {
            "begin": 29,
            "end": 30,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 26,
            "end": 27,
            "name": "DUP1"
          },
          {
            "begin": 19,
            "end": 31,
            "name": "REVERT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "tag",
            "value": "217"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "MLOAD"
          },
          {
            "begin": 1521,
            "end": 1551,
            "name": "SWAP1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1580,
            "end": 1581,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1564,
            "end": 1581,
            "name": "DUP2"
          },
          {
            "begin": 1564,
            "end": 1581,
            "name": "GT"
          },
          {
            "begin": 1564,
            "end": 1613,
            "name": "DUP1"
          },
          {
            "begin": 1564,
            "end": 1613,
            "name": "ISZERO"
          },
          {
            "begin": 1564,
            "end": 1613,
            "name": "PUSH [tag]",
            "value": "218"
          },
          {
            "begin": 1564,
            "end": 1613,
            "name": "JUMPI"
          },
          {
            "begin": 1564,
            "end": 1613,
            "name": "POP"
          },
          {
            "begin": 1602,
            "end": 1613,
            "name": "DUP4"
          },
          {
            "begin": 1585,
            "end": 1598,
            "name": "DUP2"
          },
          {
            "begin": 1585,
            "end": 1613,
            "name": "LT"
          },
          {
            "begin": 1585,
            "end": 1613,
            "name": "ISZERO"
          },
          {
            "begin": 1564,
            "end": 1613,
            "name": "tag",
            "value": "218"
          },
          {
            "begin": 1564,
            "end": 1613,
            "name": "JUMPDEST"
          },
          {
            "begin": 1557,
            "end": 1613,
            "name": "SWAP6"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "SWAP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1363,
            "end": 1618,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 1678,
            "end": 1957,
            "name": "tag",
            "value": "98"
          },
          {
            "begin": 1678,
            "end": 1957,
            "name": "JUMPDEST"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP1"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "MLOAD"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "PUSH",
            "value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP1"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP4"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "ADD"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP2"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP1"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP2"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "MSTORE"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "PUSH",
            "value": "3C"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP1"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP4"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "ADD"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP6"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP1"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "MSTORE"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP4"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "MLOAD"
          },
          {
            "begin": 26,
            "end": 47,
            "name": "DUP1"
          },
          {
            "begin": 26,
            "end": 47,
            "name": "DUP5"
          },
          {
            "begin": 26,
            "end": 47,
            "name": "SUB"
          },
          {
            "begin": 22,
            "end": 54,
            "name": "SWAP1"
          },
          {
            "begin": 22,
            "end": 54,
            "name": "SWAP2"
          },
          {
            "begin": 22,
            "end": 54,
            "name": "ADD"
          },
          {
            "begin": 6,
            "end": 55,
            "name": "DUP2"
          },
          {
            "begin": 6,
            "end": 55,
            "name": "MSTORE"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "PUSH",
            "value": "5C"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP1"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP3"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "ADD"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP3"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP4"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP1"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "MSTORE"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "DUP2"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "MLOAD"
          },
          {
            "begin": 1760,
            "end": 1767,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1760,
            "end": 1767,
            "name": "SWAP4"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP2"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP3"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "SWAP2"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "SWAP1"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "DUP5"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "ADD"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "SWAP1"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "DUP1"
          },
          {
            "begin": 1887,
            "end": 1946,
            "name": "DUP4"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "DUP4"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "220"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 66,
            "end": 68,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "DUP4"
          },
          {
            "begin": 58,
            "end": 69,
            "name": "LT"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "221"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPI"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "DUP1"
          },
          {
            "begin": 176,
            "end": 186,
            "name": "MLOAD"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "DUP3"
          },
          {
            "begin": 164,
            "end": 187,
            "name": "MSTORE"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP1"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP3"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "ADD"
          },
          {
            "begin": 139,
            "end": 151,
            "name": "SWAP2"
          },
          {
            "begin": 98,
            "end": 100,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "DUP3"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "ADD"
          },
          {
            "begin": 89,
            "end": 101,
            "name": "SWAP2"
          },
          {
            "begin": 114,
            "end": 126,
            "name": "ADD"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "PUSH [tag]",
            "value": "220"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMP"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "tag",
            "value": "221"
          },
          {
            "begin": 36,
            "end": 189,
            "name": "JUMPDEST"
          },
          {
            "begin": 299,
            "end": 309,
            "name": "MLOAD"
          },
          {
            "begin": 344,
            "end": 354,
            "name": "DUP2"
          },
          {
            "begin": 344,
            "end": 354,
            "name": "MLOAD"
          },
          {
            "begin": 263,
            "end": 265,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SWAP4"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SWAP1"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SWAP4"
          },
          {
            "begin": 259,
            "end": 271,
            "name": "SUB"
          },
          {
            "begin": 254,
            "end": 257,
            "name": "PUSH",
            "value": "100"
          },
          {
            "begin": 250,
            "end": 272,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 246,
            "end": 276,
            "name": "ADD"
          },
          {
            "begin": 311,
            "end": 320,
            "name": "DUP1"
          },
          {
            "begin": 311,
            "end": 320,
            "name": "NOT"
          },
          {
            "begin": 295,
            "end": 321,
            "name": "SWAP1"
          },
          {
            "begin": 295,
            "end": 321,
            "name": "SWAP2"
          },
          {
            "begin": 295,
            "end": 321,
            "name": "AND"
          },
          {
            "begin": 340,
            "end": 361,
            "name": "SWAP3"
          },
          {
            "begin": 340,
            "end": 361,
            "name": "AND"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "SWAP2"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "SWAP1"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "SWAP2"
          },
          {
            "begin": 377,
            "end": 397,
            "name": "OR"
          },
          {
            "begin": 365,
            "end": 398,
            "name": "SWAP1"
          },
          {
            "begin": 365,
            "end": 398,
            "name": "MSTORE"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "MLOAD"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "SWAP3"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "ADD"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "DUP3"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "SWAP1"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "SUB"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "SWAP1"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "SWAP2"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "KECCAK256"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "SWAP6"
          },
          {
            "begin": 1870,
            "end": 1952,
            "name": "SWAP5"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1678,
            "end": 1957,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "tag",
            "value": "99"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "JUMPDEST"
          },
          {
            "begin": 680,
            "end": 687,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 697,
            "end": 706,
            "name": "DUP1"
          },
          {
            "begin": 712,
            "end": 721,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 727,
            "end": 734,
            "name": "DUP1"
          },
          {
            "begin": 779,
            "end": 783,
            "name": "DUP5"
          },
          {
            "begin": 779,
            "end": 790,
            "name": "MLOAD"
          },
          {
            "begin": 794,
            "end": 796,
            "name": "PUSH",
            "value": "41"
          },
          {
            "begin": 779,
            "end": 796,
            "name": "EQ"
          },
          {
            "begin": 779,
            "end": 796,
            "name": "ISZERO"
          },
          {
            "begin": 775,
            "end": 832,
            "name": "ISZERO"
          },
          {
            "begin": 775,
            "end": 832,
            "name": "PUSH [tag]",
            "value": "224"
          },
          {
            "begin": 775,
            "end": 832,
            "name": "JUMPI"
          },
          {
            "begin": 822,
            "end": 823,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 806,
            "end": 825,
            "name": "SWAP4"
          },
          {
            "begin": 806,
            "end": 825,
            "name": "POP"
          },
          {
            "begin": 806,
            "end": 825,
            "name": "PUSH [tag]",
            "value": "228"
          },
          {
            "begin": 806,
            "end": 825,
            "name": "JUMP"
          },
          {
            "begin": 775,
            "end": 832,
            "name": "tag",
            "value": "224"
          },
          {
            "begin": 775,
            "end": 832,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1103,
            "end": 1105,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1093,
            "end": 1106,
            "name": "DUP3"
          },
          {
            "begin": 1093,
            "end": 1106,
            "name": "ADD"
          },
          {
            "begin": 1087,
            "end": 1107,
            "name": "MLOAD"
          },
          {
            "begin": 1135,
            "end": 1137,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1125,
            "end": 1138,
            "name": "DUP4"
          },
          {
            "begin": 1125,
            "end": 1138,
            "name": "ADD"
          },
          {
            "begin": 1119,
            "end": 1139,
            "name": "MLOAD"
          },
          {
            "begin": 1175,
            "end": 1177,
            "name": "PUSH",
            "value": "60"
          },
          {
            "begin": 1165,
            "end": 1178,
            "name": "DUP5"
          },
          {
            "begin": 1165,
            "end": 1178,
            "name": "ADD"
          },
          {
            "begin": 1159,
            "end": 1179,
            "name": "MLOAD"
          },
          {
            "begin": 1156,
            "end": 1157,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1151,
            "end": 1180,
            "name": "BYTE"
          },
          {
            "begin": 1287,
            "end": 1289,
            "name": "PUSH",
            "value": "1B"
          },
          {
            "begin": 1283,
            "end": 1289,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": 1283,
            "end": 1289,
            "name": "DUP3"
          },
          {
            "begin": 1283,
            "end": 1289,
            "name": "AND"
          },
          {
            "begin": 1283,
            "end": 1289,
            "name": "LT"
          },
          {
            "begin": 1279,
            "end": 1313,
            "name": "ISZERO"
          },
          {
            "begin": 1279,
            "end": 1313,
            "name": "PUSH [tag]",
            "value": "225"
          },
          {
            "begin": 1279,
            "end": 1313,
            "name": "JUMPI"
          },
          {
            "begin": 1304,
            "end": 1306,
            "name": "PUSH",
            "value": "1B"
          },
          {
            "begin": 1299,
            "end": 1306,
            "name": "ADD"
          },
          {
            "begin": 1279,
            "end": 1313,
            "name": "tag",
            "value": "225"
          },
          {
            "begin": 1279,
            "end": 1313,
            "name": "JUMPDEST"
          },
          {
            "begin": 1382,
            "end": 1383,
            "name": "DUP1"
          },
          {
            "begin": 1382,
            "end": 1389,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": 1382,
            "end": 1389,
            "name": "AND"
          },
          {
            "begin": 1387,
            "end": 1389,
            "name": "PUSH",
            "value": "1B"
          },
          {
            "begin": 1382,
            "end": 1389,
            "name": "EQ"
          },
          {
            "begin": 1382,
            "end": 1389,
            "name": "ISZERO"
          },
          {
            "begin": 1382,
            "end": 1400,
            "name": "DUP1"
          },
          {
            "begin": 1382,
            "end": 1400,
            "name": "ISZERO"
          },
          {
            "begin": 1382,
            "end": 1400,
            "name": "PUSH [tag]",
            "value": "226"
          },
          {
            "begin": 1382,
            "end": 1400,
            "name": "JUMPI"
          },
          {
            "begin": 1382,
            "end": 1400,
            "name": "POP"
          },
          {
            "begin": 1393,
            "end": 1394,
            "name": "DUP1"
          },
          {
            "begin": 1393,
            "end": 1400,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": 1393,
            "end": 1400,
            "name": "AND"
          },
          {
            "begin": 1398,
            "end": 1400,
            "name": "PUSH",
            "value": "1C"
          },
          {
            "begin": 1393,
            "end": 1400,
            "name": "EQ"
          },
          {
            "begin": 1393,
            "end": 1400,
            "name": "ISZERO"
          },
          {
            "begin": 1382,
            "end": 1400,
            "name": "tag",
            "value": "226"
          },
          {
            "begin": 1382,
            "end": 1400,
            "name": "JUMPDEST"
          },
          {
            "begin": 1378,
            "end": 1536,
            "name": "ISZERO"
          },
          {
            "begin": 1378,
            "end": 1536,
            "name": "PUSH [tag]",
            "value": "227"
          },
          {
            "begin": 1378,
            "end": 1536,
            "name": "JUMPI"
          },
          {
            "begin": 1426,
            "end": 1427,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1410,
            "end": 1429,
            "name": "SWAP4"
          },
          {
            "begin": 1410,
            "end": 1429,
            "name": "POP"
          },
          {
            "begin": 1410,
            "end": 1429,
            "name": "PUSH [tag]",
            "value": "228"
          },
          {
            "begin": 1410,
            "end": 1429,
            "name": "JUMP"
          },
          {
            "begin": 1378,
            "end": 1536,
            "name": "tag",
            "value": "227"
          },
          {
            "begin": 1378,
            "end": 1536,
            "name": "JUMPDEST"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MLOAD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP3"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MSTORE"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP4"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "ADD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP6"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MSTORE"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP11"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MSTORE"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "FF"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP6"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "AND"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP4"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP6"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "ADD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MSTORE"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "60"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP4"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "ADD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP8"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MSTORE"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "80"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP4"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "ADD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP7"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MSTORE"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP3"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MLOAD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP4"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP6"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "ADD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP5"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP2"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP4"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1F"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "NOT"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP5"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "ADD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP4"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP3"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP4"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SUB"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP2"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "ADD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP2"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SWAP1"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "DUP7"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "GAS"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "CALL"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "229"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 45,
            "end": 61,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 42,
            "end": 43,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 39,
            "end": 40,
            "name": "DUP1"
          },
          {
            "begin": 24,
            "end": 62,
            "name": "RETURNDATACOPY"
          },
          {
            "begin": 77,
            "end": 93,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 74,
            "end": 75,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 67,
            "end": 94,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "229"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "POP"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "POP"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "POP"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MLOAD"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "SUB"
          },
          {
            "begin": 1504,
            "end": 1529,
            "name": "MLOAD"
          },
          {
            "begin": 1497,
            "end": 1529,
            "name": "SWAP4"
          },
          {
            "begin": 1497,
            "end": 1529,
            "name": "POP"
          },
          {
            "begin": 1378,
            "end": 1536,
            "name": "tag",
            "value": "228"
          },
          {
            "begin": 1378,
            "end": 1536,
            "name": "JUMPDEST"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "POP"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "POP"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "POP"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "SWAP3"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "SWAP2"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "POP"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "POP"
          },
          {
            "begin": 601,
            "end": 1540,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 392,
            "end": 462,
            "name": "tag",
            "value": "113"
          },
          {
            "begin": 392,
            "end": 462,
            "name": "JUMPDEST"
          },
          {
            "begin": 435,
            "end": 455,
            "name": "PUSH [tag]",
            "value": "112"
          },
          {
            "begin": 450,
            "end": 454,
            "name": "DUP2"
          },
          {
            "begin": 435,
            "end": 449,
            "name": "PUSH [tag]",
            "value": "232"
          },
          {
            "begin": 435,
            "end": 455,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 1060,
            "end": 1176,
            "name": "tag",
            "value": "147"
          },
          {
            "begin": 1060,
            "end": 1176,
            "name": "JUMPDEST"
          },
          {
            "begin": 1120,
            "end": 1127,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 1142,
            "end": 1150,
            "name": "DUP3"
          },
          {
            "begin": 1142,
            "end": 1150,
            "name": "DUP3"
          },
          {
            "begin": 1142,
            "end": 1150,
            "name": "GT"
          },
          {
            "begin": 1142,
            "end": 1150,
            "name": "ISZERO"
          },
          {
            "begin": 1135,
            "end": 1151,
            "name": "PUSH [tag]",
            "value": "234"
          },
          {
            "begin": 1135,
            "end": 1151,
            "name": "JUMPI"
          },
          {
            "begin": 1135,
            "end": 1151,
            "name": "INVALID"
          },
          {
            "begin": 1135,
            "end": 1151,
            "name": "tag",
            "value": "234"
          },
          {
            "begin": 1135,
            "end": 1151,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 1164,
            "end": 1171,
            "name": "SWAP1"
          },
          {
            "begin": 1164,
            "end": 1171,
            "name": "SUB"
          },
          {
            "begin": 1164,
            "end": 1171,
            "name": "SWAP1"
          },
          {
            "begin": 1060,
            "end": 1176,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 3254,
            "end": 3562,
            "name": "tag",
            "value": "149"
          },
          {
            "begin": 3254,
            "end": 3562,
            "name": "JUMPDEST"
          },
          {
            "begin": 3380,
            "end": 3391,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 3342,
            "end": 3364,
            "name": "DUP3"
          },
          {
            "begin": 3342,
            "end": 3364,
            "name": "AND"
          },
          {
            "begin": 3342,
            "end": 3364,
            "name": "ISZERO"
          },
          {
            "begin": 3338,
            "end": 3556,
            "name": "PUSH [tag]",
            "value": "236"
          },
          {
            "begin": 3338,
            "end": 3556,
            "name": "JUMPI"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3400,
            "end": 3408,
            "name": "DUP1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 3423,
            "end": 3437,
            "name": "DUP2"
          },
          {
            "begin": 3423,
            "end": 3437,
            "name": "AND"
          },
          {
            "begin": 3423,
            "end": 3437,
            "name": "PUSH",
            "value": "A9059CBB"
          },
          {
            "begin": 3438,
            "end": 3448,
            "name": "CALLER"
          },
          {
            "begin": 3450,
            "end": 3471,
            "name": "PUSH [tag]",
            "value": "237"
          },
          {
            "begin": 3450,
            "end": 3457,
            "name": "DUP8"
          },
          {
            "begin": 3462,
            "end": 3470,
            "name": "DUP8"
          },
          {
            "begin": 3450,
            "end": 3471,
            "name": "PUSH",
            "value": "FFFFFFFF"
          },
          {
            "begin": 3450,
            "end": 3461,
            "name": "PUSH [tag]",
            "value": "238"
          },
          {
            "begin": 3450,
            "end": 3471,
            "name": "AND"
          },
          {
            "begin": 3450,
            "end": 3471,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 3450,
            "end": 3471,
            "name": "tag",
            "value": "237"
          },
          {
            "begin": 3450,
            "end": 3471,
            "name": "JUMPDEST"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "MLOAD"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP4"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "FFFFFFFF"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "AND"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "100000000000000000000000000000000000000000000000000000000"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "MUL"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP2"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "MSTORE"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "4"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "ADD"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP1"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP4"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "AND"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "A0"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "EXP"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "SUB"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "AND"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP2"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "MSTORE"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "ADD"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP3"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP2"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "MSTORE"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "ADD"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "SWAP3"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "POP"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "POP"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "POP"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "MLOAD"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP1"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP4"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "SUB"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP2"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP8"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "DUP1"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "EXTCODESIZE"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "239"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 30,
            "end": 31,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 27,
            "end": 28,
            "name": "DUP1"
          },
          {
            "begin": 20,
            "end": 32,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "239"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "POP"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "GAS"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "CALL"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "240"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 45,
            "end": 61,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 42,
            "end": 43,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 39,
            "end": 40,
            "name": "DUP1"
          },
          {
            "begin": 24,
            "end": 62,
            "name": "RETURNDATACOPY"
          },
          {
            "begin": 77,
            "end": 93,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 74,
            "end": 75,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 67,
            "end": 94,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "240"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "POP"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "POP"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "POP"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "POP"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "MLOAD"
          },
          {
            "begin": 3423,
            "end": 3472,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 13,
            "end": 15,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 8,
            "end": 11,
            "name": "DUP2"
          },
          {
            "begin": 5,
            "end": 16,
            "name": "LT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "ISZERO"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "PUSH [tag]",
            "value": "241"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPI"
          },
          {
            "begin": 29,
            "end": 30,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 26,
            "end": 27,
            "name": "DUP1"
          },
          {
            "begin": 19,
            "end": 31,
            "name": "REVERT"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "tag",
            "value": "241"
          },
          {
            "begin": 2,
            "end": 4,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3338,
            "end": 3556,
            "name": "PUSH [tag]",
            "value": "242"
          },
          {
            "begin": 3338,
            "end": 3556,
            "name": "SWAP1"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 3338,
            "end": 3556,
            "name": "JUMP"
          },
          {
            "begin": 3338,
            "end": 3556,
            "name": "tag",
            "value": "236"
          },
          {
            "begin": 3338,
            "end": 3556,
            "name": "JUMPDEST"
          },
          {
            "begin": 3503,
            "end": 3513,
            "name": "CALLER"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "PUSH",
            "value": "8FC"
          },
          {
            "begin": 3523,
            "end": 3544,
            "name": "PUSH [tag]",
            "value": "243"
          },
          {
            "begin": 3523,
            "end": 3530,
            "name": "DUP7"
          },
          {
            "begin": 3535,
            "end": 3543,
            "name": "DUP7"
          },
          {
            "begin": 3523,
            "end": 3544,
            "name": "PUSH",
            "value": "FFFFFFFF"
          },
          {
            "begin": 3523,
            "end": 3534,
            "name": "PUSH [tag]",
            "value": "238"
          },
          {
            "begin": 3523,
            "end": 3544,
            "name": "AND"
          },
          {
            "begin": 3523,
            "end": 3544,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 3523,
            "end": 3544,
            "name": "tag",
            "value": "243"
          },
          {
            "begin": 3523,
            "end": 3544,
            "name": "JUMPDEST"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "MLOAD"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "DUP2"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "ISZERO"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "SWAP1"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "SWAP3"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "MUL"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "SWAP2"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "DUP2"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "DUP2"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "DUP2"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "DUP6"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "DUP9"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "DUP9"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "CALL"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "SWAP4"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "POP"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "POP"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "POP"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "POP"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "ISZERO"
          },
          {
            "begin": 8,
            "end": 17,
            "name": "DUP1"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "ISZERO"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "PUSH [tag]",
            "value": "244"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPI"
          },
          {
            "begin": 45,
            "end": 61,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 42,
            "end": 43,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 39,
            "end": 40,
            "name": "DUP1"
          },
          {
            "begin": 24,
            "end": 62,
            "name": "RETURNDATACOPY"
          },
          {
            "begin": 77,
            "end": 93,
            "name": "RETURNDATASIZE"
          },
          {
            "begin": 74,
            "end": 75,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 67,
            "end": 94,
            "name": "REVERT"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "tag",
            "value": "244"
          },
          {
            "begin": 5,
            "end": 7,
            "name": "JUMPDEST"
          },
          {
            "begin": 3503,
            "end": 3545,
            "name": "POP"
          },
          {
            "begin": 3338,
            "end": 3556,
            "name": "tag",
            "value": "242"
          },
          {
            "begin": 3338,
            "end": 3556,
            "name": "JUMPDEST"
          },
          {
            "begin": 3254,
            "end": 3562,
            "name": "POP"
          },
          {
            "begin": 3254,
            "end": 3562,
            "name": "POP"
          },
          {
            "begin": 3254,
            "end": 3562,
            "name": "POP"
          },
          {
            "begin": 3254,
            "end": 3562,
            "name": "POP"
          },
          {
            "begin": 3254,
            "end": 3562,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 438,
            "end": 1016,
            "name": "tag",
            "value": "184"
          },
          {
            "begin": 438,
            "end": 1016,
            "name": "JUMPDEST"
          },
          {
            "begin": 496,
            "end": 500,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 971,
            "end": 989,
            "name": "SWAP1"
          },
          {
            "begin": 971,
            "end": 989,
            "name": "EXTCODESIZE"
          },
          {
            "begin": 1003,
            "end": 1011,
            "name": "GT"
          },
          {
            "begin": 1003,
            "end": 1011,
            "name": "SWAP1"
          },
          {
            "begin": 438,
            "end": 1016,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 196,
            "end": 487,
            "name": "tag",
            "value": "232"
          },
          {
            "begin": 196,
            "end": 487,
            "name": "JUMPDEST"
          },
          {
            "begin": 241,
            "end": 245,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "DUP2"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "DUP2"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "MSTORE"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "DUP2"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "SWAP1"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "MSTORE"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "PUSH",
            "value": "40"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "DUP1"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "DUP3"
          },
          {
            "begin": 241,
            "end": 251,
            "name": "KECCAK256"
          },
          {
            "begin": 241,
            "end": 255,
            "name": "PUSH",
            "value": "2"
          },
          {
            "begin": 241,
            "end": 255,
            "name": "DUP2"
          },
          {
            "begin": 241,
            "end": 255,
            "name": "ADD"
          },
          {
            "begin": 241,
            "end": 262,
            "name": "DUP5"
          },
          {
            "begin": 241,
            "end": 262,
            "name": "DUP2"
          },
          {
            "begin": 241,
            "end": 262,
            "name": "SSTORE"
          },
          {
            "begin": 96,
            "end": 97,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 272,
            "end": 307,
            "name": "DUP1"
          },
          {
            "begin": 272,
            "end": 307,
            "name": "DUP4"
          },
          {
            "begin": 272,
            "end": 307,
            "name": "SSTORE"
          },
          {
            "begin": 317,
            "end": 335,
            "name": "DUP1"
          },
          {
            "begin": 317,
            "end": 335,
            "name": "DUP4"
          },
          {
            "begin": 317,
            "end": 335,
            "name": "ADD"
          },
          {
            "begin": 317,
            "end": 348,
            "name": "DUP2"
          },
          {
            "begin": 317,
            "end": 348,
            "name": "DUP2"
          },
          {
            "begin": 317,
            "end": 348,
            "name": "SSTORE"
          },
          {
            "begin": 359,
            "end": 388,
            "name": "PUSH",
            "value": "CC69885FDA6BCC1A4ACE058B4A62BF5E179EA78FD58A1CCD71C22CC9B688792F"
          },
          {
            "begin": 27,
            "end": 37,
            "name": "DUP1"
          },
          {
            "begin": 27,
            "end": 37,
            "name": "SLOAD"
          },
          {
            "begin": 23,
            "end": 41,
            "name": "SWAP3"
          },
          {
            "begin": 23,
            "end": 41,
            "name": "DUP4"
          },
          {
            "begin": 23,
            "end": 41,
            "name": "ADD"
          },
          {
            "begin": 45,
            "end": 68,
            "name": "SWAP1"
          },
          {
            "begin": 45,
            "end": 68,
            "name": "SSTORE"
          },
          {
            "begin": 359,
            "end": 399,
            "name": "PUSH",
            "value": "66B32740AD8041BCC3B909C72D7E1AFE60094EC55E3CDE329B4B3A28501D826C"
          },
          {
            "begin": 359,
            "end": 399,
            "name": "SWAP1"
          },
          {
            "begin": 359,
            "end": 399,
            "name": "SWAP2"
          },
          {
            "begin": 359,
            "end": 399,
            "name": "ADD"
          },
          {
            "begin": 359,
            "end": 399,
            "name": "DUP7"
          },
          {
            "begin": 359,
            "end": 399,
            "name": "SWAP1"
          },
          {
            "begin": 359,
            "end": 399,
            "name": "SSTORE"
          },
          {
            "begin": 461,
            "end": 479,
            "name": "SLOAD"
          },
          {
            "begin": 441,
            "end": 459,
            "name": "SWAP2"
          },
          {
            "begin": 441,
            "end": 459,
            "name": "SLOAD"
          },
          {
            "begin": 424,
            "end": 438,
            "name": "SWAP1"
          },
          {
            "begin": 424,
            "end": 438,
            "name": "SLOAD"
          },
          {
            "begin": 415,
            "end": 480,
            "name": "SWAP3"
          },
          {
            "begin": 415,
            "end": 480,
            "name": "MLOAD"
          },
          {
            "begin": 461,
            "end": 479,
            "name": "SWAP2"
          },
          {
            "begin": 461,
            "end": 479,
            "name": "SWAP4"
          },
          {
            "begin": 441,
            "end": 459,
            "name": "SWAP1"
          },
          {
            "begin": 441,
            "end": 459,
            "name": "SWAP3"
          },
          {
            "begin": 424,
            "end": 438,
            "name": "SWAP2"
          },
          {
            "begin": 415,
            "end": 480,
            "name": "PUSH",
            "value": "480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9"
          },
          {
            "begin": 415,
            "end": 480,
            "name": "SWAP2"
          },
          {
            "begin": 241,
            "end": 245,
            "name": "SWAP1"
          },
          {
            "begin": 415,
            "end": 480,
            "name": "LOG4"
          },
          {
            "begin": 196,
            "end": 487,
            "name": "POP"
          },
          {
            "begin": 196,
            "end": 487,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 203,
            "end": 583,
            "name": "tag",
            "value": "238"
          },
          {
            "begin": 203,
            "end": 583,
            "name": "JUMPDEST"
          },
          {
            "begin": 263,
            "end": 272,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 489,
            "end": 496,
            "name": "DUP3"
          },
          {
            "begin": 489,
            "end": 496,
            "name": "ISZERO"
          },
          {
            "begin": 485,
            "end": 521,
            "name": "ISZERO"
          },
          {
            "begin": 485,
            "end": 521,
            "name": "PUSH [tag]",
            "value": "249"
          },
          {
            "begin": 485,
            "end": 521,
            "name": "JUMPI"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 513,
            "end": 514,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 506,
            "end": 514,
            "name": "PUSH [tag]",
            "value": "213"
          },
          {
            "begin": 506,
            "end": 514,
            "name": "JUMP"
          },
          {
            "begin": 485,
            "end": 521,
            "name": "tag",
            "value": "249"
          },
          {
            "begin": 485,
            "end": 521,
            "name": "JUMPDEST"
          },
          {
            "begin": -1,
            "end": -1,
            "name": "POP"
          },
          {
            "begin": 531,
            "end": 538,
            "name": "DUP2"
          },
          {
            "begin": 531,
            "end": 538,
            "name": "DUP2"
          },
          {
            "begin": 531,
            "end": 538,
            "name": "MUL"
          },
          {
            "begin": 536,
            "end": 538,
            "name": "DUP2"
          },
          {
            "begin": 531,
            "end": 533,
            "name": "DUP4"
          },
          {
            "begin": 531,
            "end": 538,
            "name": "DUP3"
          },
          {
            "begin": 551,
            "end": 557,
            "name": "DUP2"
          },
          {
            "begin": 551,
            "end": 557,
            "name": "ISZERO"
          },
          {
            "begin": 551,
            "end": 557,
            "name": "ISZERO"
          },
          {
            "begin": 551,
            "end": 557,
            "name": "PUSH [tag]",
            "value": "250"
          },
          {
            "begin": 551,
            "end": 557,
            "name": "JUMPI"
          },
          {
            "begin": 551,
            "end": 557,
            "name": "INVALID"
          },
          {
            "begin": 551,
            "end": 557,
            "name": "tag",
            "value": "250"
          },
          {
            "begin": 551,
            "end": 557,
            "name": "JUMPDEST"
          },
          {
            "begin": 551,
            "end": 557,
            "name": "DIV"
          },
          {
            "begin": 551,
            "end": 563,
            "name": "EQ"
          },
          {
            "begin": 544,
            "end": 564,
            "name": "PUSH [tag]",
            "value": "213"
          },
          {
            "begin": 544,
            "end": 564,
            "name": "JUMPI"
          },
          {
            "begin": 544,
            "end": 564,
            "name": "INVALID"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "tag",
            "value": "136"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPDEST"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "SLOAD"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP4"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "SSTORE"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "GT"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "ISZERO"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "253"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP4"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "MSTORE"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "20"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "SWAP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "KECCAK256"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "253"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "SWAP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "ADD"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "SWAP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP4"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "ADD"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "254"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMP",
            "value": "[in]"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "tag",
            "value": "253"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPDEST"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "POP"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "POP"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "POP"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMP",
            "value": "[out]"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "tag",
            "value": "254"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPDEST"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "114"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "SWAP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "SWAP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "tag",
            "value": "256"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPDEST"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP3"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "GT"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "ISZERO"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "257"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPI"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "0"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "DUP2"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "SSTORE"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH",
            "value": "1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "ADD"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "PUSH [tag]",
            "value": "256"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMP"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "tag",
            "value": "257"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMPDEST"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "POP"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "SWAP1"
          },
          {
            "begin": 85,
            "end": 279,
            "name": "JUMP"
          }
        ]
      }
    }
  },
  "bytecode": "608060405260405160208062001e1b833981016040525161002c81640100000000611aa761003282021704565b506100ee565b61004881640100000000611bde61004b82021704565b50565b6000818152602081905260408082206002810184815560018083558083018181557fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f805492830190557f66b32740ad8041bcc3b909c72d7e1afe60094ec55e3cde329b4b3a28501d826c9091018690555491549054925191939092917f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e99190a450565b611d1d80620000fe6000396000f30060806040526004361061011c5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663032c1a8a811461011e5780630d3849941461014857806312aaac70146101cb5780631d3812401461020157806323f740521461021f57806337c7c2c8146102375780633b6631951461025857806352631ab41461027057806353d413c5146102855780636d633064146102a057806370586bb31461036e578063724854b0146104005780637fbc22ba146104f057806387ecf05a1461055f5780639010f726146106155780639dea12771461067d578063a30c8c7514610731578063caa3782b146107ff578063d202158d146108c6578063dde5b7a1146108e1578063f0ab5f84146108f9575b005b34801561012a57600080fd5b5061013660043561091d565b60408051918252519081900360200190f35b34801561015457600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526101b794600160a060020a03813581169560248035909216956044359536956084940191819084018382808284375094975061092f9650505050505050565b604080519115158252519081900360200190f35b3480156101d757600080fd5b506101e3600435610a40565b60408051938452602084019290925282820152519081900360600190f35b34801561020d57600080fd5b506101b7600435602435604435610a5f565b34801561022b57600080fd5b506101b7600435610bb4565b34801561024357600080fd5b506101b7600160a060020a0360043516610bcb565b34801561026457600080fd5b5061011c600435610be9565b34801561027c57600080fd5b50610136610bf5565b34801561029157600080fd5b506101b7600435602435610bfc565b3480156102ac57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610136948235600160a060020a03169460248035953695946064949201919081908401838280828437505060408051602060a08901358a018035601f81018390048302840183018552808452989b8a359b8b8401359b95860135600160a060020a03169a60608701359a50608087013560ff169950919750955060c090940193908201918190840183828082843750949750610ed89650505050505050565b34801561037a57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261013694600160a060020a038135811695602480359092169560443595369560849401918190840183828082843750949750508435955050506020830135926040810135600160a060020a03169250606081013591506080013560ff1661109d565b34801561040c57600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526104d494600160a060020a0381358116956024803590921695604435953695608494019181908401838280828437505060408051602060a08901358a018035601f81018390048302840183018552808452989b8a359b8b8401359b95860135600160a060020a03169a60608701359a50608087013560ff169950919750955060c0909401939082019181908401838280828437509497506111f69650505050505050565b60408051600160a060020a039092168252519081900360200190f35b3480156104fc57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101b7948235600160a060020a03908116956024803590921695369594606494929301919081908401838280828437509497506112249650505050505050565b34801561056b57600080fd5b50604080516020600460843581810135601f81018490048402850184019095528484526101b7948235600160a060020a0390811695602480359660443584169660643590941695369560a4949390910191819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061131c9650505050505050565b34801561062157600080fd5b5061062d600435611380565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610669578181015183820152602001610651565b505050509050019250505060405180910390f35b34801561068957600080fd5b50604080516020600460843581810135601f810184900484028501840190955284845261011c948235600160a060020a039081169560248035966044359660643590941695369560a4949390910191819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506113e39650505050505050565b34801561073d57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101b7948235600160a060020a03169460248035953695946064949201919081908401838280828437505060408051602060a08901358a018035601f81018390048302840183018552808452989b8a359b8b8401359b95860135600160a060020a03169a60608701359a50608087013560ff169950919750955060c0909401939082019181908401838280828437509497506116939650505050505050565b34801561080b57600080fd5b50604080516020600480358082013583810280860185019096528085526101b795369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506116bc9650505050505050565b3480156108d257600080fd5b506101b7600435602435611840565b3480156108ed57600080fd5b506101e3600435611858565b34801561090557600080fd5b506101b7600160a060020a0360043516602435611879565b60009081526020819052604090205490565b60008060008585886040516020018084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140193505050506040516020818303038152906040526040518082805190602001908083835b602083106109d55780518252601f1990920191602091820191016109b6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209150610a2184610a158460001916611928565b9063ffffffff6119d216565b9050610a35600160a060020a038216610bb4565b979650505050505050565b6000908152602081905260409020805460018201546002909201549092565b600080610a6d336001611840565b90508080610a7a57503330145b1515610ad0576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206e6f74207065726d697373696f6e6564000000000000000000604482015290519081900360640190fd5b600085815260208190526040902060020154851415610b39576040805160e560020a62461bcd02815260206004820152601160248201527f4b657920616c7265616479206164646564000000000000000000000000000000604482015290519081900360640190fd5b6000858152602081815260408083206002810189815588825560018083018981558a87528186528487208054928301815587528587209091018b90558a865293859052925490549254915190937f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e991a4506001949350505050565b600090815260208190526040902060020154151590565b600160a060020a031660009081526003602052604090205460ff1690565b610bf281611aa7565b50565b6002545b90565b60008080610c0b336001611840565b90508080610c1857503330145b1515610c6e576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206e6f74207065726d697373696f6e6564000000000000000000604482015290519081900360640190fd5b6000858152602081905260409020546001141580610cb757506001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54115b1515610d0d576040805160e560020a62461bcd02815260206004820152601d60248201527f43616e206e6f742072656d6f7665206d616e6167656d656e74206b6579000000604482015290519081900360640190fd5b6000858152602081905260409020548414610d72576040805160e560020a62461bcd02815260206004820152600b60248201527f496e76616c6964206b6579000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008581526020819052604080822060018101548154600290920154925190939192917f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339791a460008581526020819052604081208181556001810182905560020181905591505b600084815260016020526040902054821015610ecd576000848152600160205260409020805486919084908110610e0c57fe5b6000918252602090912001541415610ec257600084815260016020526040902080546000198101908110610e3c57fe5b90600052602060002001546001600086815260200190815260200160002083815481101515610e6757fe5b600091825260208083209091019290925585815260019091526040902080546000198101908110610e9457fe5b600091825260208083209091018290558582526001905260409020805490610ec0906000198301611caa565b505b600190910190610dd9565b506001949350505050565b60008060008060006002548b141515610f3b576040805160e560020a62461bcd02815260206004820152600d60248201527f496e76616c6964206e6f6e636500000000000000000000000000000000000000604482015290519081900360640190fd5b610f4c8e8e8e8e8e8e8e8e8e611693565b1515610fa2576040805160e560020a62461bcd02815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015290519081900360640190fd5b5a93508d600160a060020a03168d8d60405180828051906020019080838360005b83811015610fdb578181015183820152602001610fc3565b50505050905090810190601f1680156110085780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af1925050509250611030308f8f8f8f8f8f8f8f61109d565b6002546040519193508415159184907f30c13bf5d64d4bb93ec9b93f68b635ddc58b81da7e18c8b4fbb5061ceb70cd4190600090a460028054600101905561107f5a859063ffffffff611ab016565b905061108c818b8b611ac2565b509c9b505050505050505050505050565b6000898989896040518082805190602001908083835b602083106110d25780518252601f1990920191602091820191016110b3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208989898989600281111561110f57fe5b604080516c01000000000000000000000000600160a060020a039b8c1681026020808401919091529a8c168102603483015260488201999099526068810197909752608887019590955260a8860193909352961690930260c883015260dc82019490945260fc808201929092528351808203909201825261011c019283905280519092918291908401908083835b602083106111bc5780518252601f19909201916020918201910161119d565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209d9c50505050505050505050505050565b600061121582610a156112108e8e8e8e8e8e8e8e8e61109d565b611928565b9b9a5050505050505050505050565b600080600085856040516020018083600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140182600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401925050506040516020818303038152906040526040518082805190602001908083835b602083106112c25780518252601f1990920191602091820191016112a3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915061130284610a158460001916611928565b600160a060020a0390811695169490941495945050505050565b60006113288787611879565b151561133357600080fd5b61133f8488888661092f565b151561134a57600080fd5b611355858584611224565b151561136057600080fd5b61136984610bcb565b1561137357600080fd5b5060019695505050505050565b6000818152600160209081526040918290208054835181840281018401909452808452606093928301828280156113d757602002820191906000526020600020905b815481526001909101906020018083116113c2575b50505050509050919050565b600080806113f589898989898961131c565b151561140057600080fd5b611412600160a060020a038816611bd6565b1561148d576040805160e560020a62461bcd02815260206004820152602260248201527f436f6e74726163742061646472657373657320617265206e6f7420616c6c6f7760448201527f6564000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0386166000908152600360209081526040808320805460ff1916600117905580517fa7867212000000000000000000000000000000000000000000000000000000008152600481018b9052905173e0f8804f944687db7899943b53eb0a16600fce399650869363a786721293602480850194919392918390030190829087803b15801561152057600080fd5b505af1158015611534573d6000803e3d6000fd5b505050506040513d602081101561154a57600080fd5b50519150600160a060020a03821615156115ef57604080517f216b0089000000000000000000000000000000000000000000000000000000008152600481018990529051600160a060020a0385169163216b00899160248083019260209291908290030181600087803b1580156115c057600080fd5b505af11580156115d4573d6000803e3d6000fd5b505050506040513d60208110156115ea57600080fd5b505191505b50604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038381166004830152602482018a905291518a9283169163a9059cbb9160448083019260209291908290030181600087803b15801561165c57600080fd5b505af1158015611670573d6000803e3d6000fd5b505050506040513d602081101561168657600080fd5b5050505050505050505050565b6000806116a8308c8c8c8c8c8c8c8c8c6111f6565b9050611215600160a060020a038216610bb4565b600080806116cb336001611840565b905080806116d857503330145b151561172e576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206e6f74207065726d697373696f6e6564000000000000000000604482015290519081900360640190fd5b84518651148015611740575083518651145b1515611796576040805160e560020a62461bcd02815260206004820152601c60248201527f556e657175616c20617267756d656e7420736574206c656e6774687300000000604482015290519081900360640190fd5b600091505b8551821015611800576117f486838151811015156117b557fe5b9060200190602002015186848151811015156117cd57fe5b9060200190602002015186858151811015156117e557fe5b90602001906020020151610a5f565b5060019091019061179b565b855160408051918252517f60adf38c13a1938c05e8f58e818ac5a3f74aa8652155df92802c3b64932747ee9181900360200190a150600195945050505050565b60008281526020819052604090205481145b92915050565b60006020819052908152604090208054600182015460029092015490919083565b604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905160009184918391600160a060020a038416916370a082319160248082019260209290919082900301818787803b1580156118e157600080fd5b505af11580156118f5573d6000803e3d6000fd5b505050506040513d602081101561190b57600080fd5b5051905060008111801561191f5750838110155b95945050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c80830185905283518084039091018152605c909201928390528151600093918291908401908083835b602083106119a05780518252601f199092019160209182019101611981565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912095945050505050565b600080600080845160411415156119ec5760009350611a9e565b50505060208201516040830151606084015160001a601b60ff82161015611a1157601b015b8060ff16601b14158015611a2957508060ff16601c14155b15611a375760009350611a9e565b60408051600080825260208083018085528a905260ff8516838501526060830187905260808301869052925160019360a0808501949193601f19840193928390039091019190865af1158015611a91573d6000803e3d6000fd5b5050506020604051035193505b50505092915050565b610bf281611bde565b600082821115611abc57fe5b50900390565b6000600160a060020a03821615611b92575080600160a060020a03811663a9059cbb33611af5878763ffffffff611c8116565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015611b6057600080fd5b505af1158015611b74573d6000803e3d6000fd5b505050506040513d6020811015611b8a57600080fd5b50611bd09050565b336108fc611ba6868663ffffffff611c8116565b6040518115909202916000818181858888f19350505050158015611bce573d6000803e3d6000fd5b505b50505050565b6000903b1190565b6000818152602081905260408082206002810184815560018083558083018181557fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f805492830190557f66b32740ad8041bcc3b909c72d7e1afe60094ec55e3cde329b4b3a28501d826c9091018690555491549054925191939092917f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e99190a450565b6000821515611c9257506000611852565b50818102818382811515611ca257fe5b041461185257fe5b815481835581811115611cce57600083815260209020611cce918101908301611cd3565b505050565b610bf991905b80821115611ced5760008155600101611cd9565b50905600a165627a7a72305820b97ec717cd5d3114fa5e6dadcff45964d1afe90471d5210e92a71e64e11229ca0029",
  "functionHashes": {
    "addKey(bytes32,uint256,uint256)": "1d381240",
    "addKeys(bytes32[],uint256[],uint256[])": "caa3782b",
    "calculateMessageHash(address,address,uint256,bytes,uint256,uint256,address,uint256,uint8)": "70586bb3",
    "canExecute(address,uint256,bytes,uint256,uint256,address,uint256,uint8,bytes)": "a30c8c75",
    "checkReceiverSignature(address,address,bytes)": "7fbc22ba",
    "checkSenderSignature(address,address,uint256,bytes)": "0d384994",
    "executeSigned(address,uint256,bytes,uint256,uint256,address,uint256,uint8,bytes)": "6d633064",
    "getKey(bytes32)": "12aaac70",
    "getKeyPurpose(bytes32)": "032c1a8a",
    "getKeysByPurpose(uint256)": "9010f726",
    "getSigner(address,address,uint256,bytes,uint256,uint256,address,uint256,uint8,bytes)": "724854b0",
    "hasBeenUsed(address)": "37c7c2c8",
    "hasEnoughTokens(address,uint256)": "f0ab5f84",
    "init(bytes32)": "3b663195",
    "isLinkValid(address,uint256,address,address,bytes,bytes)": "87ecf05a",
    "keyExist(bytes32)": "23f74052",
    "keyHasPurpose(bytes32,uint256)": "d202158d",
    "keys(bytes32)": "dde5b7a1",
    "lastNonce()": "52631ab4",
    "removeKey(bytes32,uint256)": "53d413c5",
    "transferByLink(address,uint256,bytes32,address,bytes,bytes)": "9dea1277"
  },
  "gasEstimates": {
    "creation": [
      null,
      1490600
    ],
    "external": {
      "": 522,
      "addKey(bytes32,uint256,uint256)": 103947,
      "addKeys(bytes32[],uint256[],uint256[])": null,
      "calculateMessageHash(address,address,uint256,bytes,uint256,uint256,address,uint256,uint8)": null,
      "canExecute(address,uint256,bytes,uint256,uint256,address,uint256,uint8,bytes)": null,
      "checkReceiverSignature(address,address,bytes)": null,
      "checkSenderSignature(address,address,uint256,bytes)": null,
      "executeSigned(address,uint256,bytes,uint256,uint256,address,uint256,uint8,bytes)": null,
      "getKey(bytes32)": 969,
      "getKeyPurpose(bytes32)": 459,
      "getKeysByPurpose(uint256)": null,
      "getSigner(address,address,uint256,bytes,uint256,uint256,address,uint256,uint8,bytes)": null,
      "hasBeenUsed(address)": 728,
      "hasEnoughTokens(address,uint256)": null,
      "init(bytes32)": null,
      "isLinkValid(address,uint256,address,address,bytes,bytes)": null,
      "keyExist(bytes32)": 565,
      "keyHasPurpose(bytes32,uint256)": 881,
      "keys(bytes32)": 1349,
      "lastNonce()": 539,
      "removeKey(bytes32,uint256)": null,
      "transferByLink(address,uint256,bytes32,address,bytes,bytes)": null
    },
    "internal": {}
  },
  "interface": "[{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurpose\",\"outputs\":[{\"name\":\"purpose\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"transitPubKey\",\"type\":\"address\"},{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"sigSender\",\"type\":\"bytes\"}],\"name\":\"checkSenderSignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"name\":\"purpose\",\"type\":\"uint256\"},{\"name\":\"keyType\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"},{\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"keyExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"transitPubKey\",\"type\":\"address\"}],\"name\":\"hasBeenUsed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasToken\",\"type\":\"address\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"operationType\",\"type\":\"uint8\"},{\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"executeSigned\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasToken\",\"type\":\"address\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"operationType\",\"type\":\"uint8\"}],\"name\":\"calculateMessageHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasToken\",\"type\":\"address\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"operationType\",\"type\":\"uint8\"},{\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"getSigner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"receiverAddress\",\"type\":\"address\"},{\"name\":\"transitPubKey\",\"type\":\"address\"},{\"name\":\"sigReceiver\",\"type\":\"bytes\"}],\"name\":\"checkReceiverSignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"receiverAddress\",\"type\":\"address\"},{\"name\":\"transitPubKey\",\"type\":\"address\"},{\"name\":\"sigSender\",\"type\":\"bytes\"},{\"name\":\"sigReceiver\",\"type\":\"bytes\"}],\"name\":\"isLinkValid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"receiverPubKey\",\"type\":\"bytes32\"},{\"name\":\"transitPubKey\",\"type\":\"address\"},{\"name\":\"sigSender\",\"type\":\"bytes\"},{\"name\":\"sigReceiver\",\"type\":\"bytes\"}],\"name\":\"transferByLink\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasToken\",\"type\":\"address\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"operationType\",\"type\":\"uint8\"},{\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"canExecute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_keys\",\"type\":\"bytes32[]\"},{\"name\":\"_purposes\",\"type\":\"uint256[]\"},{\"name\":\"_types\",\"type\":\"uint256[]\"}],\"name\":\"addKeys\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"keys\",\"outputs\":[{\"name\":\"purpose\",\"type\":\"uint256\"},{\"name\":\"keyType\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"hasEnoughTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedSigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"MultipleKeysAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"}]",
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurpose\",\"outputs\":[{\"name\":\"purpose\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"transitPubKey\",\"type\":\"address\"},{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"sigSender\",\"type\":\"bytes\"}],\"name\":\"checkSenderSignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"name\":\"purpose\",\"type\":\"uint256\"},{\"name\":\"keyType\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"},{\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"keyExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"transitPubKey\",\"type\":\"address\"}],\"name\":\"hasBeenUsed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasToken\",\"type\":\"address\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"operationType\",\"type\":\"uint8\"},{\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"executeSigned\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasToken\",\"type\":\"address\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"operationType\",\"type\":\"uint8\"}],\"name\":\"calculateMessageHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasToken\",\"type\":\"address\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"operationType\",\"type\":\"uint8\"},{\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"getSigner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"receiverAddress\",\"type\":\"address\"},{\"name\":\"transitPubKey\",\"type\":\"address\"},{\"name\":\"sigReceiver\",\"type\":\"bytes\"}],\"name\":\"checkReceiverSignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"receiverAddress\",\"type\":\"address\"},{\"name\":\"transitPubKey\",\"type\":\"address\"},{\"name\":\"sigSender\",\"type\":\"bytes\"},{\"name\":\"sigReceiver\",\"type\":\"bytes\"}],\"name\":\"isLinkValid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"receiverPubKey\",\"type\":\"bytes32\"},{\"name\":\"transitPubKey\",\"type\":\"address\"},{\"name\":\"sigSender\",\"type\":\"bytes\"},{\"name\":\"sigReceiver\",\"type\":\"bytes\"}],\"name\":\"transferByLink\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasToken\",\"type\":\"address\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"operationType\",\"type\":\"uint8\"},{\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"canExecute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_keys\",\"type\":\"bytes32[]\"},{\"name\":\"_purposes\",\"type\":\"uint256[]\"},{\"name\":\"_types\",\"type\":\"uint256[]\"}],\"name\":\"addKeys\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"keys\",\"outputs\":[{\"name\":\"purpose\",\"type\":\"uint256\"},{\"name\":\"keyType\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"hasEnoughTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedSigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"MultipleKeysAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Identity.sol\":\"Identity\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CloneFactory.sol\":{\"keccak256\":\"0xd0e1d49a17cb1fc10608e4ecaf0f192d2816ec32b2d3288385aa16a01cc14e44\",\"urls\":[\"bzzr://31812cab40757e56f6de5bedf662b4c53079e6b724cfc1043eaff4996604f368\"]},\"contracts/ERC1077.sol\":{\"keccak256\":\"0x56cc8a6429d5748a762caec97f6381d99e30bfa6a4cffa8dcf7ae9caf6f5b987\",\"urls\":[\"bzzr://d8a155c27ea29a57db52c835501b2ff0b15f32e3ee7dcf188448d1d3428905ed\"]},\"contracts/ERC725KeyHolder.sol\":{\"keccak256\":\"0x68d6a4e777ee03386919011e054ebf0a810d207eac4022701726171a4e6748c5\",\"urls\":[\"bzzr://641352555f85138a7330eaacec727cc1d6caf4863337e174c59cf5627869347c\"]},\"contracts/IERC1077.sol\":{\"keccak256\":\"0xec7b6e21cfdf4ea6144050f22b458fea9fd58572a0f11f34999d868676c92511\",\"urls\":[\"bzzr://a96dc9064e479f12b91bc2dfb0f06bfd70e9ba211d6c8a30e82e4d9cac4b5e34\"]},\"contracts/Identity.sol\":{\"keccak256\":\"0x43e4926dbc99b067684e622ab6579df35383b6e06b9443fb837fa5a2e72180fe\",\"urls\":[\"bzzr://ee73a55a196c486385b7685136178e4a54fcb46955c5d07d22c44119df2539f1\"]},\"contracts/IdentityFactory.sol\":{\"keccak256\":\"0x150c8530a87d7b5cfedcb210d5c8c8cdb4dbacc7c12b62331ca1f6664d9a9997\",\"urls\":[\"bzzr://527a31d8408b54e2068a8afdbd4a5a210774d9e5cc9d00c52492028cd0dcd5c0\"]},\"contracts/InviteLinkScheme.sol\":{\"keccak256\":\"0x139b12b5262d61ba523081026fff1aeeb06054e44669e09471fc837969d4b197\",\"urls\":[\"bzzr://2c8d8a148faeaffe93df71778b02255d7a74085109dacd7e35e9a4f586aabcac\"]},\"contracts/KeyHolder.sol\":{\"keccak256\":\"0xe879d51f277456874c3d7a3b23b9b613592a650c18d94437bb8a4d671d1bcaf0\",\"urls\":[\"bzzr://ecf4a605abaa35972b1db310734235b138bcd54c95c5d89af82709ef19649550\"]},\"openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"openzeppelin-solidity/contracts/ECRecovery.sol\":{\"keccak256\":\"0xbdc784d7e9821c2e40a7a878b6ceb0336b9c54257894d965d39d5c9c36343c66\",\"urls\":[\"bzzr://6c5c9048aa3e23e5c68d8f3b9d07a222d53a3772dffbb2ed8e275583911a207e\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH3 0x1E1B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE MLOAD PUSH2 0x2C DUP2 PUSH5 0x100000000 PUSH2 0x1AA7 PUSH2 0x32 DUP3 MUL OR DIV JUMP JUMPDEST POP PUSH2 0xEE JUMP JUMPDEST PUSH2 0x48 DUP2 PUSH5 0x100000000 PUSH2 0x1BDE PUSH2 0x4B DUP3 MUL OR DIV JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP2 ADD DUP5 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 SSTORE DUP1 DUP4 ADD DUP2 DUP2 SSTORE PUSH32 0xCC69885FDA6BCC1A4ACE058B4A62BF5E179EA78FD58A1CCD71C22CC9B688792F DUP1 SLOAD SWAP3 DUP4 ADD SWAP1 SSTORE PUSH32 0x66B32740AD8041BCC3B909C72D7E1AFE60094EC55E3CDE329B4B3A28501D826C SWAP1 SWAP2 ADD DUP7 SWAP1 SSTORE SLOAD SWAP2 SLOAD SWAP1 SLOAD SWAP3 MLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 SWAP2 SWAP1 LOG4 POP JUMP JUMPDEST PUSH2 0x1D1D DUP1 PUSH3 0xFE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x32C1A8A DUP2 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD384994 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x12AAAC70 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x1D381240 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x23F74052 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x37C7C2C8 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x3B663195 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x52631AB4 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x53D413C5 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x6D633064 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x70586BB3 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x724854B0 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x7FBC22BA EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x87ECF05A EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x9010F726 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x9DEA1277 EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xA30C8C75 EQ PUSH2 0x731 JUMPI DUP1 PUSH4 0xCAA3782B EQ PUSH2 0x7FF JUMPI DUP1 PUSH4 0xD202158D EQ PUSH2 0x8C6 JUMPI DUP1 PUSH4 0xDDE5B7A1 EQ PUSH2 0x8E1 JUMPI DUP1 PUSH4 0xF0AB5F84 EQ PUSH2 0x8F9 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x136 PUSH1 0x4 CALLDATALOAD PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP2 DUP2 ADD CALLDATALOAD SWAP3 DUP4 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE PUSH2 0x1B7 SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP6 PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 SWAP3 AND SWAP6 PUSH1 0x44 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 PUSH1 0x84 SWAP5 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x92F SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH1 0x4 CALLDATALOAD PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 CALLDATALOAD PUSH2 0xBB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH1 0x4 CALLDATALOAD PUSH2 0xBE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x136 PUSH2 0xBF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xBFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x136 SWAP5 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP5 PUSH1 0x24 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 0x64 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0xA0 DUP10 ADD CALLDATALOAD DUP11 ADD DUP1 CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD DUP6 MSTORE DUP1 DUP5 MSTORE SWAP9 SWAP12 DUP11 CALLDATALOAD SWAP12 DUP12 DUP5 ADD CALLDATALOAD SWAP12 SWAP6 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP11 PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP11 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0xFF AND SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP3 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0xED8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP2 DUP2 ADD CALLDATALOAD SWAP3 DUP4 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE PUSH2 0x136 SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP6 PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 SWAP3 AND SWAP6 PUSH1 0x44 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 PUSH1 0x84 SWAP5 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP DUP5 CALLDATALOAD SWAP6 POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP3 POP PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x109D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP2 DUP2 ADD CALLDATALOAD SWAP3 DUP4 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE PUSH2 0x4D4 SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP6 PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 SWAP3 AND SWAP6 PUSH1 0x44 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 PUSH1 0x84 SWAP5 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0xA0 DUP10 ADD CALLDATALOAD DUP11 ADD DUP1 CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD DUP6 MSTORE DUP1 DUP5 MSTORE SWAP9 SWAP12 DUP11 CALLDATALOAD SWAP12 DUP12 DUP5 ADD CALLDATALOAD SWAP12 SWAP6 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP11 PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP11 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0xFF AND SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP3 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x11F6 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x1B7 SWAP5 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP6 PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 SWAP3 AND SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 0x64 SWAP5 SWAP3 SWAP4 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x1224 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x84 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x1B7 SWAP5 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP6 PUSH1 0x24 DUP1 CALLDATALOAD SWAP7 PUSH1 0x44 CALLDATALOAD DUP5 AND SWAP7 PUSH1 0x64 CALLDATALOAD SWAP1 SWAP5 AND SWAP6 CALLDATASIZE SWAP6 PUSH1 0xA4 SWAP5 SWAP4 SWAP1 SWAP2 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x131C SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62D PUSH1 0x4 CALLDATALOAD PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x669 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x651 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x84 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x11C SWAP5 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP6 PUSH1 0x24 DUP1 CALLDATALOAD SWAP7 PUSH1 0x44 CALLDATALOAD SWAP7 PUSH1 0x64 CALLDATALOAD SWAP1 SWAP5 AND SWAP6 CALLDATASIZE SWAP6 PUSH1 0xA4 SWAP5 SWAP4 SWAP1 SWAP2 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x13E3 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x1B7 SWAP5 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP5 PUSH1 0x24 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 0x64 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0xA0 DUP10 ADD CALLDATALOAD DUP11 ADD DUP1 CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD DUP6 MSTORE DUP1 DUP5 MSTORE SWAP9 SWAP12 DUP11 CALLDATALOAD SWAP12 DUP12 DUP5 ADD CALLDATALOAD SWAP12 SWAP6 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP11 PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP11 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0xFF AND SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP3 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x1693 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD DUP4 DUP2 MUL DUP1 DUP7 ADD DUP6 ADD SWAP1 SWAP7 MSTORE DUP1 DUP6 MSTORE PUSH2 0x1B7 SWAP6 CALLDATASIZE SWAP6 SWAP4 SWAP5 PUSH1 0x24 SWAP5 SWAP4 DUP6 ADD SWAP3 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x16BC SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x1840 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH1 0x4 CALLDATALOAD PUSH2 0x1858 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP6 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x9D5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP2 POP PUSH2 0xA21 DUP5 PUSH2 0xA15 DUP5 PUSH1 0x0 NOT AND PUSH2 0x1928 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x19D2 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA35 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0xBB4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA6D CALLER PUSH1 0x1 PUSH2 0x1840 JUMP JUMPDEST SWAP1 POP DUP1 DUP1 PUSH2 0xA7A JUMPI POP CALLER ADDRESS EQ JUMPDEST ISZERO ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206E6F74207065726D697373696F6E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP6 EQ ISZERO PUSH2 0xB39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B657920616C7265616479206164646564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 DUP2 ADD DUP10 DUP2 SSTORE DUP9 DUP3 SSTORE PUSH1 0x1 DUP1 DUP4 ADD DUP10 DUP2 SSTORE DUP11 DUP8 MSTORE DUP2 DUP7 MSTORE DUP5 DUP8 KECCAK256 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP8 MSTORE DUP6 DUP8 KECCAK256 SWAP1 SWAP2 ADD DUP12 SWAP1 SSTORE DUP11 DUP7 MSTORE SWAP4 DUP6 SWAP1 MSTORE SWAP3 SLOAD SWAP1 SLOAD SWAP3 SLOAD SWAP2 MLOAD SWAP1 SWAP4 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 SWAP2 LOG4 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xBF2 DUP2 PUSH2 0x1AA7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xC0B CALLER PUSH1 0x1 PUSH2 0x1840 JUMP JUMPDEST SWAP1 POP DUP1 DUP1 PUSH2 0xC18 JUMPI POP CALLER ADDRESS EQ JUMPDEST ISZERO ISZERO PUSH2 0xC6E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206E6F74207065726D697373696F6E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ ISZERO DUP1 PUSH2 0xCB7 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0xCC69885FDA6BCC1A4ACE058B4A62BF5E179EA78FD58A1CCD71C22CC9B688792F SLOAD GT JUMPDEST ISZERO ISZERO PUSH2 0xD0D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206E6F742072656D6F7665206D616E6167656D656E74206B6579000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 EQ PUSH2 0xD72 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206B6579000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP3 MLOAD SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 PUSH32 0x585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397 SWAP2 LOG4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 ADD DUP2 SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 LT ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP7 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xE0C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xE3C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xE67 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP6 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xE94 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE DUP6 DUP3 MSTORE PUSH1 0x1 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0xEC0 SWAP1 PUSH1 0x0 NOT DUP4 ADD PUSH2 0x1CAA JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SLOAD DUP12 EQ ISZERO ISZERO PUSH2 0xF3B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E6F6E636500000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xF4C DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 PUSH2 0x1693 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST GAS SWAP4 POP DUP14 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFDB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFC3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1008 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP SWAP3 POP PUSH2 0x1030 ADDRESS DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 DUP16 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP DUP5 ISZERO ISZERO SWAP2 DUP5 SWAP1 PUSH32 0x30C13BF5D64D4BB93EC9B93F68B635DDC58B81DA7E18C8B4FBB5061CEB70CD41 SWAP1 PUSH1 0x0 SWAP1 LOG4 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH2 0x107F GAS DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1AB0 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x108C DUP2 DUP12 DUP12 PUSH2 0x1AC2 JUMP JUMPDEST POP SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x10D2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x110F JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH13 0x1000000000000000000000000 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP12 DUP13 AND DUP2 MUL PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP11 DUP13 AND DUP2 MUL PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x48 DUP3 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x68 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x88 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA8 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP7 AND SWAP1 SWAP4 MUL PUSH1 0xC8 DUP4 ADD MSTORE PUSH1 0xDC DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xFC DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 MLOAD DUP1 DUP3 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH2 0x11C ADD SWAP3 DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP1 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x11BC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x119D JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1215 DUP3 PUSH2 0xA15 PUSH2 0x1210 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 PUSH2 0x109D JUMP JUMPDEST PUSH2 0x1928 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x12C2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP2 POP PUSH2 0x1302 DUP5 PUSH2 0xA15 DUP5 PUSH1 0x0 NOT AND PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP6 AND SWAP5 SWAP1 SWAP5 EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1328 DUP8 DUP8 PUSH2 0x1879 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133F DUP5 DUP9 DUP9 DUP7 PUSH2 0x92F JUMP JUMPDEST ISZERO ISZERO PUSH2 0x134A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1355 DUP6 DUP6 DUP5 PUSH2 0x1224 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1369 DUP5 PUSH2 0xBCB JUMP JUMPDEST ISZERO PUSH2 0x1373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13C2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x13F5 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x131C JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1412 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH2 0x1BD6 JUMP JUMPDEST ISZERO PUSH2 0x148D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726163742061646472657373657320617265206E6F7420616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD PUSH32 0xA786721200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0xE0F8804F944687DB7899943B53EB0A16600FCE39 SWAP7 POP DUP7 SWAP4 PUSH4 0xA7867212 SWAP4 PUSH1 0x24 DUP1 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1534 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x154A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x15EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x216B008900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND SWAP2 PUSH4 0x216B0089 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP11 SWAP1 MSTORE SWAP2 MLOAD DUP11 SWAP3 DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x165C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1670 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A8 ADDRESS DUP13 DUP13 DUP13 DUP13 DUP13 DUP13 DUP13 DUP13 DUP13 PUSH2 0x11F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1215 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x16CB CALLER PUSH1 0x1 PUSH2 0x1840 JUMP JUMPDEST SWAP1 POP DUP1 DUP1 PUSH2 0x16D8 JUMPI POP CALLER ADDRESS EQ JUMPDEST ISZERO ISZERO PUSH2 0x172E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206E6F74207065726D697373696F6E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP7 MLOAD EQ DUP1 ISZERO PUSH2 0x1740 JUMPI POP DUP4 MLOAD DUP7 MLOAD EQ JUMPDEST ISZERO ISZERO PUSH2 0x1796 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E657175616C20617267756D656E7420736574206C656E6774687300000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x1800 JUMPI PUSH2 0x17F4 DUP7 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17B5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17CD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17E5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0xA5F JUMP JUMPDEST POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x179B JUMP JUMPDEST DUP6 MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x60ADF38C13A1938C05E8F58E818AC5A3F74AA8652155DF92802C3B64932747EE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x191F JUMPI POP DUP4 DUP2 LT ISZERO JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x5C SWAP1 SWAP3 ADD SWAP3 DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 SWAP4 SWAP2 DUP3 SWAP2 SWAP1 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x19A0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1981 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x41 EQ ISZERO ISZERO PUSH2 0x19EC JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1A9E JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1A11 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1A29 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A37 JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 DUP6 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP6 AND DUP4 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 SWAP4 PUSH1 0xA0 DUP1 DUP6 ADD SWAP5 SWAP2 SWAP4 PUSH1 0x1F NOT DUP5 ADD SWAP4 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBF2 DUP2 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1ABC JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO PUSH2 0x1B92 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH4 0xA9059CBB CALLER PUSH2 0x1AF5 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1C81 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD0 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x1BA6 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1C81 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1BCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 EXTCODESIZE GT SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP2 ADD DUP5 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 SSTORE DUP1 DUP4 ADD DUP2 DUP2 SSTORE PUSH32 0xCC69885FDA6BCC1A4ACE058B4A62BF5E179EA78FD58A1CCD71C22CC9B688792F DUP1 SLOAD SWAP3 DUP4 ADD SWAP1 SSTORE PUSH32 0x66B32740AD8041BCC3B909C72D7E1AFE60094EC55E3CDE329B4B3A28501D826C SWAP1 SWAP2 ADD DUP7 SWAP1 SSTORE SLOAD SWAP2 SLOAD SWAP1 SLOAD SWAP3 MLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 SWAP2 SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 ISZERO ISZERO PUSH2 0x1C92 JUMPI POP PUSH1 0x0 PUSH2 0x1852 JUMP JUMPDEST POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 ISZERO ISZERO PUSH2 0x1CA2 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1852 JUMPI INVALID JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x1CCE JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x1CCE SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x1CD3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBF9 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1CED JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1CD9 JUMP JUMPDEST POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb9 PUSH31 0xC717CD5D3114FA5E6DADCFF45964D1AFE90471D5210E92A71E64E11229CA00 0x29 ",
  "runtimeBytecode": "60806040526004361061011c5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663032c1a8a811461011e5780630d3849941461014857806312aaac70146101cb5780631d3812401461020157806323f740521461021f57806337c7c2c8146102375780633b6631951461025857806352631ab41461027057806353d413c5146102855780636d633064146102a057806370586bb31461036e578063724854b0146104005780637fbc22ba146104f057806387ecf05a1461055f5780639010f726146106155780639dea12771461067d578063a30c8c7514610731578063caa3782b146107ff578063d202158d146108c6578063dde5b7a1146108e1578063f0ab5f84146108f9575b005b34801561012a57600080fd5b5061013660043561091d565b60408051918252519081900360200190f35b34801561015457600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526101b794600160a060020a03813581169560248035909216956044359536956084940191819084018382808284375094975061092f9650505050505050565b604080519115158252519081900360200190f35b3480156101d757600080fd5b506101e3600435610a40565b60408051938452602084019290925282820152519081900360600190f35b34801561020d57600080fd5b506101b7600435602435604435610a5f565b34801561022b57600080fd5b506101b7600435610bb4565b34801561024357600080fd5b506101b7600160a060020a0360043516610bcb565b34801561026457600080fd5b5061011c600435610be9565b34801561027c57600080fd5b50610136610bf5565b34801561029157600080fd5b506101b7600435602435610bfc565b3480156102ac57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610136948235600160a060020a03169460248035953695946064949201919081908401838280828437505060408051602060a08901358a018035601f81018390048302840183018552808452989b8a359b8b8401359b95860135600160a060020a03169a60608701359a50608087013560ff169950919750955060c090940193908201918190840183828082843750949750610ed89650505050505050565b34801561037a57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261013694600160a060020a038135811695602480359092169560443595369560849401918190840183828082843750949750508435955050506020830135926040810135600160a060020a03169250606081013591506080013560ff1661109d565b34801561040c57600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526104d494600160a060020a0381358116956024803590921695604435953695608494019181908401838280828437505060408051602060a08901358a018035601f81018390048302840183018552808452989b8a359b8b8401359b95860135600160a060020a03169a60608701359a50608087013560ff169950919750955060c0909401939082019181908401838280828437509497506111f69650505050505050565b60408051600160a060020a039092168252519081900360200190f35b3480156104fc57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101b7948235600160a060020a03908116956024803590921695369594606494929301919081908401838280828437509497506112249650505050505050565b34801561056b57600080fd5b50604080516020600460843581810135601f81018490048402850184019095528484526101b7948235600160a060020a0390811695602480359660443584169660643590941695369560a4949390910191819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061131c9650505050505050565b34801561062157600080fd5b5061062d600435611380565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610669578181015183820152602001610651565b505050509050019250505060405180910390f35b34801561068957600080fd5b50604080516020600460843581810135601f810184900484028501840190955284845261011c948235600160a060020a039081169560248035966044359660643590941695369560a4949390910191819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506113e39650505050505050565b34801561073d57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101b7948235600160a060020a03169460248035953695946064949201919081908401838280828437505060408051602060a08901358a018035601f81018390048302840183018552808452989b8a359b8b8401359b95860135600160a060020a03169a60608701359a50608087013560ff169950919750955060c0909401939082019181908401838280828437509497506116939650505050505050565b34801561080b57600080fd5b50604080516020600480358082013583810280860185019096528085526101b795369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506116bc9650505050505050565b3480156108d257600080fd5b506101b7600435602435611840565b3480156108ed57600080fd5b506101e3600435611858565b34801561090557600080fd5b506101b7600160a060020a0360043516602435611879565b60009081526020819052604090205490565b60008060008585886040516020018084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140193505050506040516020818303038152906040526040518082805190602001908083835b602083106109d55780518252601f1990920191602091820191016109b6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209150610a2184610a158460001916611928565b9063ffffffff6119d216565b9050610a35600160a060020a038216610bb4565b979650505050505050565b6000908152602081905260409020805460018201546002909201549092565b600080610a6d336001611840565b90508080610a7a57503330145b1515610ad0576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206e6f74207065726d697373696f6e6564000000000000000000604482015290519081900360640190fd5b600085815260208190526040902060020154851415610b39576040805160e560020a62461bcd02815260206004820152601160248201527f4b657920616c7265616479206164646564000000000000000000000000000000604482015290519081900360640190fd5b6000858152602081815260408083206002810189815588825560018083018981558a87528186528487208054928301815587528587209091018b90558a865293859052925490549254915190937f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e991a4506001949350505050565b600090815260208190526040902060020154151590565b600160a060020a031660009081526003602052604090205460ff1690565b610bf281611aa7565b50565b6002545b90565b60008080610c0b336001611840565b90508080610c1857503330145b1515610c6e576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206e6f74207065726d697373696f6e6564000000000000000000604482015290519081900360640190fd5b6000858152602081905260409020546001141580610cb757506001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54115b1515610d0d576040805160e560020a62461bcd02815260206004820152601d60248201527f43616e206e6f742072656d6f7665206d616e6167656d656e74206b6579000000604482015290519081900360640190fd5b6000858152602081905260409020548414610d72576040805160e560020a62461bcd02815260206004820152600b60248201527f496e76616c6964206b6579000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008581526020819052604080822060018101548154600290920154925190939192917f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339791a460008581526020819052604081208181556001810182905560020181905591505b600084815260016020526040902054821015610ecd576000848152600160205260409020805486919084908110610e0c57fe5b6000918252602090912001541415610ec257600084815260016020526040902080546000198101908110610e3c57fe5b90600052602060002001546001600086815260200190815260200160002083815481101515610e6757fe5b600091825260208083209091019290925585815260019091526040902080546000198101908110610e9457fe5b600091825260208083209091018290558582526001905260409020805490610ec0906000198301611caa565b505b600190910190610dd9565b506001949350505050565b60008060008060006002548b141515610f3b576040805160e560020a62461bcd02815260206004820152600d60248201527f496e76616c6964206e6f6e636500000000000000000000000000000000000000604482015290519081900360640190fd5b610f4c8e8e8e8e8e8e8e8e8e611693565b1515610fa2576040805160e560020a62461bcd02815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015290519081900360640190fd5b5a93508d600160a060020a03168d8d60405180828051906020019080838360005b83811015610fdb578181015183820152602001610fc3565b50505050905090810190601f1680156110085780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af1925050509250611030308f8f8f8f8f8f8f8f61109d565b6002546040519193508415159184907f30c13bf5d64d4bb93ec9b93f68b635ddc58b81da7e18c8b4fbb5061ceb70cd4190600090a460028054600101905561107f5a859063ffffffff611ab016565b905061108c818b8b611ac2565b509c9b505050505050505050505050565b6000898989896040518082805190602001908083835b602083106110d25780518252601f1990920191602091820191016110b3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208989898989600281111561110f57fe5b604080516c01000000000000000000000000600160a060020a039b8c1681026020808401919091529a8c168102603483015260488201999099526068810197909752608887019590955260a8860193909352961690930260c883015260dc82019490945260fc808201929092528351808203909201825261011c019283905280519092918291908401908083835b602083106111bc5780518252601f19909201916020918201910161119d565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209d9c50505050505050505050505050565b600061121582610a156112108e8e8e8e8e8e8e8e8e61109d565b611928565b9b9a5050505050505050505050565b600080600085856040516020018083600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140182600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401925050506040516020818303038152906040526040518082805190602001908083835b602083106112c25780518252601f1990920191602091820191016112a3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915061130284610a158460001916611928565b600160a060020a0390811695169490941495945050505050565b60006113288787611879565b151561133357600080fd5b61133f8488888661092f565b151561134a57600080fd5b611355858584611224565b151561136057600080fd5b61136984610bcb565b1561137357600080fd5b5060019695505050505050565b6000818152600160209081526040918290208054835181840281018401909452808452606093928301828280156113d757602002820191906000526020600020905b815481526001909101906020018083116113c2575b50505050509050919050565b600080806113f589898989898961131c565b151561140057600080fd5b611412600160a060020a038816611bd6565b1561148d576040805160e560020a62461bcd02815260206004820152602260248201527f436f6e74726163742061646472657373657320617265206e6f7420616c6c6f7760448201527f6564000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0386166000908152600360209081526040808320805460ff1916600117905580517fa7867212000000000000000000000000000000000000000000000000000000008152600481018b9052905173e0f8804f944687db7899943b53eb0a16600fce399650869363a786721293602480850194919392918390030190829087803b15801561152057600080fd5b505af1158015611534573d6000803e3d6000fd5b505050506040513d602081101561154a57600080fd5b50519150600160a060020a03821615156115ef57604080517f216b0089000000000000000000000000000000000000000000000000000000008152600481018990529051600160a060020a0385169163216b00899160248083019260209291908290030181600087803b1580156115c057600080fd5b505af11580156115d4573d6000803e3d6000fd5b505050506040513d60208110156115ea57600080fd5b505191505b50604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038381166004830152602482018a905291518a9283169163a9059cbb9160448083019260209291908290030181600087803b15801561165c57600080fd5b505af1158015611670573d6000803e3d6000fd5b505050506040513d602081101561168657600080fd5b5050505050505050505050565b6000806116a8308c8c8c8c8c8c8c8c8c6111f6565b9050611215600160a060020a038216610bb4565b600080806116cb336001611840565b905080806116d857503330145b151561172e576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206e6f74207065726d697373696f6e6564000000000000000000604482015290519081900360640190fd5b84518651148015611740575083518651145b1515611796576040805160e560020a62461bcd02815260206004820152601c60248201527f556e657175616c20617267756d656e7420736574206c656e6774687300000000604482015290519081900360640190fd5b600091505b8551821015611800576117f486838151811015156117b557fe5b9060200190602002015186848151811015156117cd57fe5b9060200190602002015186858151811015156117e557fe5b90602001906020020151610a5f565b5060019091019061179b565b855160408051918252517f60adf38c13a1938c05e8f58e818ac5a3f74aa8652155df92802c3b64932747ee9181900360200190a150600195945050505050565b60008281526020819052604090205481145b92915050565b60006020819052908152604090208054600182015460029092015490919083565b604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905160009184918391600160a060020a038416916370a082319160248082019260209290919082900301818787803b1580156118e157600080fd5b505af11580156118f5573d6000803e3d6000fd5b505050506040513d602081101561190b57600080fd5b5051905060008111801561191f5750838110155b95945050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c80830185905283518084039091018152605c909201928390528151600093918291908401908083835b602083106119a05780518252601f199092019160209182019101611981565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912095945050505050565b600080600080845160411415156119ec5760009350611a9e565b50505060208201516040830151606084015160001a601b60ff82161015611a1157601b015b8060ff16601b14158015611a2957508060ff16601c14155b15611a375760009350611a9e565b60408051600080825260208083018085528a905260ff8516838501526060830187905260808301869052925160019360a0808501949193601f19840193928390039091019190865af1158015611a91573d6000803e3d6000fd5b5050506020604051035193505b50505092915050565b610bf281611bde565b600082821115611abc57fe5b50900390565b6000600160a060020a03821615611b92575080600160a060020a03811663a9059cbb33611af5878763ffffffff611c8116565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015611b6057600080fd5b505af1158015611b74573d6000803e3d6000fd5b505050506040513d6020811015611b8a57600080fd5b50611bd09050565b336108fc611ba6868663ffffffff611c8116565b6040518115909202916000818181858888f19350505050158015611bce573d6000803e3d6000fd5b505b50505050565b6000903b1190565b6000818152602081905260408082206002810184815560018083558083018181557fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f805492830190557f66b32740ad8041bcc3b909c72d7e1afe60094ec55e3cde329b4b3a28501d826c9091018690555491549054925191939092917f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e99190a450565b6000821515611c9257506000611852565b50818102818382811515611ca257fe5b041461185257fe5b815481835581811115611cce57600083815260209020611cce918101908301611cd3565b505050565b610bf991905b80821115611ced5760008155600101611cd9565b50905600a165627a7a72305820b97ec717cd5d3114fa5e6dadcff45964d1afe90471d5210e92a71e64e11229ca0029",
  "srcmap": "85:194:6:-;;;136:71;;;;;;;;;;;;184:18;136:71;184:12;;;;;;:18;:::i;:::-;136:71;85:194;;392:70:1;435:20;450:4;435:14;;;;;;:20;:::i;:::-;392:70;:::o;196:291:9:-;241:4;:10;;;;;;;;;;;:14;;;:21;;;96:1:4;272:35:9;;;317:18;;;:31;;;359:29;27:10:-1;;23:18;;;45:23;;359:40:9;;;;;;;461:18;441;;424:14;;415:65;;461:18;;441;;424:14;415:65;;241:4;415:65;196:291;:::o;85:194:6:-;;;;;;;",
  "srcmapRuntime": "85:194:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:116:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1348:116:9;;;;;;;;;;;;;;;;;;;;;2156:496:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2156:496:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2156:496:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2156:496:8;;-1:-1:-1;2156:496:8;;-1:-1:-1;;;;;;;2156:496:8;;;;;;;;;;;;;;;;;;;1165:177:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1165:177:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:448;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1746:448:9;;;;;;;;;1047:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1047:112:9;;;;;1625:113:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1625:113:8;-1:-1:-1;;;;;1625:113:8;;;;;211:64:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;211:64:6;;;;;468:82:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:82:1;;;;2645:835:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2645:835:9;;;;;;;2291:957:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2291:957:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2291:957:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2291:957:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2291:957:1;;;;;;;-1:-1:-1;2291:957:1;;;;;;;-1:-1:-1;2291:957:1;;-1:-1:-1;2291:957:1;-1:-1:-1;2291:957:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;2291:957:1;;-1:-1:-1;2291:957:1;;-1:-1:-1;;;;;;;2291:957:1;1125:589;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1125:589:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1125:589:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1125:589:1;;-1:-1:-1;;1125:589:1;;;-1:-1:-1;;;1125:589:1;;;;;;;;;-1:-1:-1;;;;;1125:589:1;;-1:-1:-1;1125:589:1;;;;;-1:-1:-1;1125:589:1;;;;;;;1720:565;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1720:565:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1720:565:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1720:565:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1720:565:1;;;;;;;-1:-1:-1;1720:565:1;;;;;;;-1:-1:-1;1720:565:1;;-1:-1:-1;1720:565:1;-1:-1:-1;1720:565:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;1720:565:1;;-1:-1:-1;1720:565:1;;-1:-1:-1;;;;;;;1720:565:1;;;;;-1:-1:-1;;;;;1720:565:1;;;;;;;;;;;;;;1745:406:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1745:406:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1745:406:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1745:406:8;;-1:-1:-1;1745:406:8;;-1:-1:-1;;;;;;;1745:406:8;481:875;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;481:875:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;481:875:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:875:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:875:8;;;;-1:-1:-1;481:875:8;-1:-1:-1;481:875:8;;-1:-1:-1;481:875:8;;;;;;;;-1:-1:-1;481:875:8;;-1:-1:-1;481:875:8;;-1:-1:-1;;;;;;;481:875:8;1470:122:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1470:122:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1470:122:9;;;;;;;;;;;;;;;;;2659:1160:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2659:1160:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2659:1160:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2659:1160:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2659:1160:8;;;;-1:-1:-1;2659:1160:8;-1:-1:-1;2659:1160:8;;-1:-1:-1;2659:1160:8;;;;;;;;-1:-1:-1;2659:1160:8;;-1:-1:-1;2659:1160:8;;-1:-1:-1;;;;;;;2659:1160:8;556:563:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;556:563:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;556:563:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;556:563:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;556:563:1;;;;;;;-1:-1:-1;556:563:1;;;;;;;-1:-1:-1;556:563:1;;-1:-1:-1;556:563:1;-1:-1:-1;556:563:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;556:563:1;;-1:-1:-1;556:563:1;;-1:-1:-1;;;;;;;556:563:1;2200:439:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2200:439:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2200:439:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2200:439:9;;;;-1:-1:-1;2200:439:9;-1:-1:-1;2200:439:9;;-1:-1:-1;2200:439:9;;;;;;;;;-1:-1:-1;;2200:439:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2200:439:9;;;;-1:-1:-1;2200:439:9;-1:-1:-1;2200:439:9;;-1:-1:-1;2200:439:9;;;;;;;;;-1:-1:-1;2200:439:9;;-1:-1:-1;2200:439:9;;-1:-1:-1;;;;;;;2200:439:9;1598:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1598:142:9;;;;;;;103:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;103:36:9;;;;;1363:255:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1363:255:8;-1:-1:-1;;;;;1363:255:8;;;;;;;1348:116:9;1405:15;1439:10;;;;;;;;;;:18;;1348:116::o;2156:496:8:-;2303:4;2355:12;2544:14;2409:12;2434:11;2458:13;2380:104;;;;;;-1:-1:-1;;;;;2380:104:8;-1:-1:-1;;;;;2380:104:8;;;;;;;;;;;;;-1:-1:-1;;;;;2380:104:8;-1:-1:-1;;;;;2380:104:8;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2380:104:8;;;2370:115;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2370:115:8;;;;;;;;;;;;;;;;2355:130;;2561:48;2599:9;2561:29;:4;:27;;;;:29::i;:::-;:37;:48;:37;:48;:::i;:::-;2544:65;-1:-1:-1;2622:25:8;-1:-1:-1;;;;;2631:15:8;;2622:8;:25::i;:::-;2615:32;2156:496;-1:-1:-1;;;;;;;2156:496:8:o;1165:177:9:-;1215:15;1280:10;;;;;;;;;;:18;;1300;;;;1320:14;;;;;1280:18;;1165:177::o;1746:448::-;1856:12;;881:50;903:10;895:19;881:13;:50::i;:::-;858:73;;949:15;:46;;;-1:-1:-1;968:10:9;990:4;968:27;949:46;941:82;;;;;;;-1:-1:-1;;;;;941:82:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:22;:10;;;;;;;;;;:14;;;:22;;;1880:52;;;;;-1:-1:-1;;;;;1880:52:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:4;:10;;;;;;;;;;;:14;;;:21;;;1974:29;;;2013:18;;;;:26;;;2050:23;;;;;;;;;27:10:-1;;23:18;;;45:23;;2050:34:9;;;;;;;;;;;2146:10;;;;;;;:18;;2126;;2109:14;;2100:65;;2146:18;;2100:65;;;-1:-1:-1;2183:4:9;;1746:448;-1:-1:-1;;;;1746:448:9:o;1047:112::-;1099:4;1122:10;;;;;;;;;;:14;;;:30;;;1047:112::o;1625:113:8:-;-1:-1:-1;;;;;1709:24:8;1690:4;1709:24;;;:9;:24;;;;;;;;;1625:113::o;211:64:6:-;252:18;265:4;252:12;:18::i;:::-;211:64;:::o;468:82:1:-;533:10;;468:82;;:::o;2645:835:9:-;2744:12;;;881:50;903:10;895:19;881:13;:50::i;:::-;858:73;;949:15;:46;;;-1:-1:-1;968:10:9;990:4;968:27;949:46;941:82;;;;;;;-1:-1:-1;;;;;941:82:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;2776:4;:10;;;;;;;;;;:18;96:1:4;2776:36:9;;;:80;;-1:-1:-1;2855:1:9;2816:29;;;;;;;;;:36;:40;2776:80;2768:122;;;;;;;-1:-1:-1;;;;;2768:122:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;2908:4;:10;;;;;;;;;;:18;:30;;2900:54;;;;;-1:-1:-1;;;;;2900:54:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;3017:4;:10;;;;;;;;;;;:18;;;;2997;;2981:14;;;;;2970:66;;3017:18;;2997;;2981:14;2970:66;;;3054:4;:10;;;;;;;;;;3047:17;;;;;;;;;;;;;;3054:4;-1:-1:-1;3075:377:9;3096:23;;;;:13;:23;;;;;:30;3092:34;;3075:377;;;3151:34;:23;;;:13;:23;;;;;:26;;3181:4;;3151:23;3175:1;;3151:26;;;;;;;;;;;;;;;;:34;3147:295;;;3234:23;;;;:13;:23;;;;;3258:30;;-1:-1:-1;;3258:34:9;;;3234:59;;;;;;;;;;;;;;3205:13;:23;3219:8;3205:23;;;;;;;;;;;3229:1;3205:26;;;;;;;;;;;;;;;;;;;;;:88;;;;3318:23;;;:13;:23;;;;;;3342:30;;-1:-1:-1;;3342:34:9;;;3318:59;;;;;;;;;;;;;;;;;3311:66;;;3395:23;;;:13;:23;;;;;:32;;;;;-1:-1:-1;;3395:32:9;;;:::i;:::-;;3147:295;3128:3;;;;;3075:377;;;-1:-1:-1;3469:4:9;;2645:835;-1:-1:-1;;;;2645:835:9:o;2291:957:1:-;2549:7;2758:19;2861:12;2912:19;3124:15;2589:10;;2580:5;:19;2572:45;;;;;;;-1:-1:-1;;;;;2572:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2635:91;2646:2;2650:5;2657:4;2663:5;2670:8;2680;2690;2700:13;2715:10;2635;:91::i;:::-;2627:121;;;;;;;-1:-1:-1;;;;;2627:121:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2780:9;2758:31;;2876:2;-1:-1:-1;;;;;2876:7:1;2890:5;2897:4;2876:26;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2876:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:41;;2934:95;2955:4;2961:2;2965:5;2972:4;2978:5;2985:8;2995;3005;3015:13;2934:20;:95::i;:::-;3072:10;;3044:48;;2912:117;;-1:-1:-1;3044:48:1;;;;2912:117;;3044:48;;;;;3102:10;:12;;;;;;3142:26;3158:9;3142:11;;:26;:15;:26;:::i;:::-;3124:44;;3178:35;3185:7;3194:8;3204;3178:6;:35::i;:::-;-1:-1:-1;3230:11:1;2291:957;-1:-1:-1;;;;;;;;;;;;2291:957:1:o;1125:589::-;1391:7;1478:4;1500:2;1520:5;1553:4;1543:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1543:15:1;;;;;;;;;;;;;;;;1576:5;1599:8;1625;1651;1682:13;1677:19;;;;;;;;1444:262;;;;-1:-1:-1;;;;;1444:262:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1444:262:1;;;;;;1421:286;;1444:262;;;;;1421:286;;;;;1444:262;1421:286;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;1421:286:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;1125:589:1:o;1720:565::-;1999:7;2029:249;2267:10;2029:229;:204;2063:4;2081:2;2097:5;2116:4;2134:5;2153:8;2175;2197;2219:13;2029:20;:204::i;:::-;:227;:229::i;:249::-;2022:256;1720:565;-1:-1:-1;;;;;;;;;;;1720:565:1:o;1745:406:8:-;1877:4;1947:12;2038:14;1989:15;2017:13;1972:59;;;;;;-1:-1:-1;;;;;1972:59:8;-1:-1:-1;;;;;1972:59:8;;;;;;;;-1:-1:-1;;;;;1972:59:8;-1:-1:-1;;;;;1972:59:8;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1972:59:8;;;1962:70;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1962:70:8;;;;;;;;;;;;;;;;1947:85;;2055:50;2093:11;2055:29;:4;:27;;;;:29::i;:50::-;-1:-1:-1;;;;;2118:23:8;;;;;;;;;;1745:406;-1:-1:-1;;;;;1745:406:8:o;481:875::-;711:4;776:42;792:12;806:11;776:15;:42::i;:::-;768:51;;;;;;;;916:120;947:13;971:12;994:11;1016:9;916:20;:120::i;:::-;908:129;;;;;;;;1124:101;1159:15;1187:13;1213:11;1124:22;:101::i;:::-;1116:110;;;;;;;;1297:26;1309:13;1297:11;:26::i;:::-;:35;1289:44;;;;;;-1:-1:-1;1347:4:8;481:875;;;;;;;;:::o;1470:122:9:-;1562:23;;;;:13;:23;;;;;;;;;1555:30;;;;;;;;;;;;;;;;;1534:9;;1555:30;;;1562:23;1555:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1470:122;;;:::o;2659:1160:8:-;3412:32;;;2957:166;2979:12;3002:11;3041:14;3067:13;3091:9;3111:11;2957;:166::i;:::-;2949:175;;;;;;;;3199:36;-1:-1:-1;;;;;3199:34:8;;;:36::i;:::-;3198:37;3190:84;;;;;-1:-1:-1;;;;;3190:84:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3340:24:8;;;;;;:9;:24;;;;;;;;:31;;-1:-1:-1;;3340:31:8;3367:4;3340:31;;;3541:44;;;;;;;;;;;;;3463:42;;-1:-1:-1;3463:42:8;;3541:28;;:44;;;;;3340:24;;3541:44;;;;;;;;;3463:42;3541:44;;;5:2:-1;;;;30:1;27;20:12;5:2;3541:44:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3541:44:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3541:44:8;;-1:-1:-1;;;;;;3595:21:8;;;3591:112;;;3643:47;;;;;;;;;;;;;;-1:-1:-1;;;;;3643:31:8;;;;;:47;;;;;;;;;;;;;;;:31;:47;;;5:2:-1;;;;30:1;27;20:12;5:2;3643:47:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3643:47:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3643:47:8;;-1:-1:-1;3591:112:8;-1:-1:-1;3771:43:8;;;;;;-1:-1:-1;;;;;3771:43:8;;;;;;;;;;;;;;;3752:12;;3771:14;;;;;:43;;;;;;;;;;;;;;-1:-1:-1;3771:14:8;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;3771:43:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3771:43:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;;;;;;2659:1160:8:o;556:563:1:-;816:4;836:14;853:217;876:4;894:2;910:5;929:4;947:5;966:8;988;1010;1032:13;1059:10;853:9;:217::i;:::-;836:234;-1:-1:-1;1087:25:1;-1:-1:-1;;;;;1096:15:1;;1087:8;:25::i;2200:439:9:-;2320:12;;;881:50;903:10;895:19;881:13;:50::i;:::-;858:73;;949:15;:46;;;-1:-1:-1;968:10:9;990:4;968:27;949:46;941:82;;;;;;;-1:-1:-1;;;;;941:82:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;2368:9;:16;2352:5;:12;:32;:65;;;;;2404:6;:13;2388:5;:12;:29;2352:65;2344:106;;;;;;;-1:-1:-1;;;;;2344:106:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;2474:1;2465:10;;2460:106;2481:5;:12;2477:1;:16;2460:106;;;2514:41;2521:5;2527:1;2521:8;;;;;;;;;;;;;;;;;;2531:9;2541:1;2531:12;;;;;;;;;;;;;;;;;;2545:6;2552:1;2545:9;;;;;;;;;;;;;;;;;;2514:6;:41::i;:::-;-1:-1:-1;2495:3:9;;;;;2460:106;;;2598:12;;2580:31;;;;;;;;;;;;;;;;-1:-1:-1;2628:4:9;;2200:439;-1:-1:-1;;;;;2200:439:9:o;1598:142::-;1673:11;1703:10;;;;;;;;;;:18;:30;;1598:142;;;;;:::o;103:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1363:255:8:-;1521:30;;;;;;1545:4;1521:30;;;;;;1449:4;;1481:12;;1449:4;;-1:-1:-1;;;;;1521:15:8;;;;;:30;;;;;;;;;;;;;;;1449:4;1521:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;1521:30:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1521:30:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1521:30:8;;-1:-1:-1;1580:1:8;1564:17;;:49;;;;;1602:11;1585:13;:28;;1564:49;1557:56;1363:255;-1:-1:-1;;;;;1363:255:8:o;1678:279:14:-;1887:59;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1887:59:14;;;;;;;;1870:82;;1760:7;;1887:59;;;1870:82;;;;;1887:59;1870:82;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;1870:82:14;;;;;;;;;;;;-1:-1:-1;;;;;1678:279:14:o;601:939::-;680:7;697:9;712;727:7;779:4;:11;794:2;779:17;;775:57;;;822:1;806:19;;;;775:57;-1:-1:-1;;;1103:2:14;1093:13;;1087:20;1135:2;1125:13;;1119:20;1175:2;1165:13;;1159:20;1156:1;1151:29;1287:2;1283:6;;;;1279:34;;;1304:2;1299:7;1279:34;1382:1;:7;;1387:2;1382:7;;:18;;;;;1393:1;:7;;1398:2;1393:7;;1382:18;1378:158;;;1426:1;1410:19;;;;1378:158;1504:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1504:25:14;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1504:25:14;;;;;;;;1497:32;;1378:158;601:939;;;;;;;:::o;392:70:1:-;435:20;450:4;435:14;:20::i;1060:116:15:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:15;;;1060:116::o;3254:308:1:-;3380:11;-1:-1:-1;;;;;3342:22:1;;;3338:218;;-1:-1:-1;3400:8:1;-1:-1:-1;;;;;3423:14:1;;;3438:10;3450:21;:7;3462:8;3450:21;:11;:21;:::i;:::-;3423:49;;;;;;;;;;;;;-1:-1:-1;;;;;3423:49:1;-1:-1:-1;;;;;3423:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3423:49:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3423:49:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3338:218:1;;-1:-1:-1;3338:218:1;;3503:10;:42;3523:21;:7;3535:8;3523:21;:11;:21;:::i;:::-;3503:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3503:42:1;3338:218;3254:308;;;;:::o;438:578:13:-;496:4;971:18;;1003:8;;438:578::o;196:291:9:-;241:4;:10;;;;;;;;;;;:14;;;:21;;;96:1:4;272:35:9;;;317:18;;;:31;;;359:29;27:10:-1;;23:18;;;45:23;;359:40:9;;;;;;;461:18;441;;424:14;;415:65;;461:18;;441;;424:14;415:65;;241:4;415:65;196:291;:::o;203:380:15:-;263:9;489:7;;485:36;;;-1:-1:-1;513:1:15;506:8;;485:36;-1:-1:-1;531:7:15;;;536:2;531;:7;551:6;;;;;;;;:12;544:20;;;85:194:6;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;"
};
},{}],"../../node_modules/universal-login-contracts/lib/consts.js":[function(require,module,exports) {
const MANAGEMENT_KEY = 1;
const ACTION_KEY = 2;
const CLAIM_KEY = 3;
const ENCRYPTION_KEY = 4;

const ECDSA_TYPE = 1;
const RSA_TYPE = 2;

const EXECUTION_TYPE_MANAGEMENT = 0;
const EXECUTION_TYPE_ACTION = 1;

const OPERATION_CALL = 0;
const OPERATION_DELEGATECALL = 1;
const OPERATION_CREATE = 2;


module.exports = {
  MANAGEMENT_KEY,
  ACTION_KEY,
  CLAIM_KEY,
  ENCRYPTION_KEY,
  ECDSA_TYPE,
  RSA_TYPE,
  EXECUTION_TYPE_MANAGEMENT,
  EXECUTION_TYPE_ACTION,
  OPERATION_CALL,
  OPERATION_DELEGATECALL,
  OPERATION_CREATE
};


},{}],"../../node_modules/universal-login-contracts/index.js":[function(require,module,exports) {
const {MANAGEMENT_KEY, ACTION_KEY, CLAIM_KEY, ENCRYPTION_KEY, ECDSA_TYPE, RSA_TYPE, OPERATION_CALL} = require('./lib/consts.js');

module.exports = {
  MANAGEMENT_KEY, ACTION_KEY, CLAIM_KEY, ENCRYPTION_KEY, ECDSA_TYPE, RSA_TYPE, OPERATION_CALL
};

},{"./lib/consts.js":"../../node_modules/universal-login-contracts/lib/consts.js"}],"../../node_modules/universal-login-sdk/dist/utils/utils.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.waitForTransactionReceipt = exports.sleep = exports.addressToBytes32 = exports.waitForContractDeploy = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _ethers = require('ethers');

var _ethers2 = _interopRequireDefault(_ethers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var addressToBytes32 = function addressToBytes32(address) {
  return _ethers.utils.padZeros(_ethers.utils.arrayify(address), 32);
};

var sleep = function sleep(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
};

var waitForContractDeploy = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(providerOrWallet, contractJSON, transactionHash) {
    var abi, receipt;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            abi = contractJSON.interface;
            _context.next = 3;
            return waitForTransactionReceipt(providerOrWallet, transactionHash);

          case 3:
            receipt = _context.sent;
            return _context.abrupt('return', new _ethers2.default.Contract(receipt.contractAddress, abi, providerOrWallet));

          case 5:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function waitForContractDeploy(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

var waitForTransactionReceipt = function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(providerOrWallet, transactionHash) {
    var tick = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;
    var provider, receipt;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            provider = providerOrWallet.provider ? providerOrWallet.provider : providerOrWallet;
            _context2.next = 3;
            return provider.getTransactionReceipt(transactionHash);

          case 3:
            receipt = _context2.sent;

          case 4:
            if (receipt) {
              _context2.next = 11;
              break;
            }

            sleep(tick);
            _context2.next = 8;
            return provider.getTransactionReceipt(transactionHash);

          case 8:
            receipt = _context2.sent;
            _context2.next = 4;
            break;

          case 11:
            return _context2.abrupt('return', receipt);

          case 12:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, undefined);
  }));

  return function waitForTransactionReceipt(_x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();

exports.waitForContractDeploy = waitForContractDeploy;
exports.addressToBytes32 = addressToBytes32;
exports.sleep = sleep;
exports.waitForTransactionReceipt = waitForTransactionReceipt;
},{"babel-runtime/regenerator":"../../node_modules/babel-runtime/regenerator/index.js","babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","ethers":"../../node_modules/ethers/index.js"}],"../../node_modules/universal-login-contracts/lib/calculateMessageSignature.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.calculateMessageHash = void 0;

var _ethers = require("ethers");

const calculateMessageHash = msg => {
  const dataHash = _ethers.utils.solidityKeccak256(['bytes'], [msg.data]);

  return _ethers.utils.solidityKeccak256(['address', 'address', 'uint256', 'bytes32', 'uint256', 'uint', 'address', 'uint', 'uint'], [msg.from, msg.to, msg.value, dataHash, msg.nonce, msg.gasPrice, msg.gasToken, msg.gasLimit, msg.operationType]);
};

exports.calculateMessageHash = calculateMessageHash;

const calculateMessageSignature = (privateKey, msg) => {
  const wallet = new _ethers.Wallet(privateKey);
  const massageHash = calculateMessageHash(msg);
  return wallet.signMessage(_ethers.utils.arrayify(massageHash));
};

var _default = calculateMessageSignature;
exports.default = _default;
},{"ethers":"../../node_modules/ethers/index.js"}],"../../node_modules/universal-login-sdk/dist/utils/ethereum.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.codeEqual = exports.resolveName = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _ethers = require('ethers');

var _ethers2 = _interopRequireDefault(_ethers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import ENS from 'universal-login-contracts/build/ENS';
// import PublicResolver from 'universal-login-contracts/build/PublicResolver';

var resolveName = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(provider, ensAddress, ensName) {
    var node;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            node = _ethers.utils.namehash(ensName);
            // const ensContract = new ethers.Contract(ensAddress, ENS.interface, provider);
            // const resolverAddress = await ensContract.resolver(node);
            // if (resolverAddress !== '0x0000000000000000000000000000000000000000') {
            //   const resolverContract = new ethers.Contract(resolverAddress, PublicResolver.interface, provider);
            //   return await resolverContract.addr(node);
            //  }

            return _context.abrupt('return', false);

          case 2:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function resolveName(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

var codeEqual = function codeEqual(runtimeBytecode, liveBytecode) {
  // TODO: verify if it is working
  var compareLength = runtimeBytecode.length - 68;
  return runtimeBytecode.slice(0, compareLength) === liveBytecode.slice(2, compareLength + 2);
};

exports.resolveName = resolveName;
exports.codeEqual = codeEqual;
},{"babel-runtime/regenerator":"../../node_modules/babel-runtime/regenerator/index.js","babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","ethers":"../../node_modules/ethers/index.js"}],"../../node_modules/core-js/library/modules/_wks-ext.js":[function(require,module,exports) {
exports.f = require('./_wks');

},{"./_wks":"../../node_modules/core-js/library/modules/_wks.js"}],"../../node_modules/core-js/library/fn/symbol/iterator.js":[function(require,module,exports) {
require('../../modules/es6.string.iterator');
require('../../modules/web.dom.iterable');
module.exports = require('../../modules/_wks-ext').f('iterator');

},{"../../modules/es6.string.iterator":"../../node_modules/core-js/library/modules/es6.string.iterator.js","../../modules/web.dom.iterable":"../../node_modules/core-js/library/modules/web.dom.iterable.js","../../modules/_wks-ext":"../../node_modules/core-js/library/modules/_wks-ext.js"}],"../../node_modules/babel-runtime/core-js/symbol/iterator.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/symbol/iterator"), __esModule: true };
},{"core-js/library/fn/symbol/iterator":"../../node_modules/core-js/library/fn/symbol/iterator.js"}],"../../node_modules/core-js/library/modules/_meta.js":[function(require,module,exports) {
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

},{"./_uid":"../../node_modules/core-js/library/modules/_uid.js","./_is-object":"../../node_modules/core-js/library/modules/_is-object.js","./_has":"../../node_modules/core-js/library/modules/_has.js","./_object-dp":"../../node_modules/core-js/library/modules/_object-dp.js","./_fails":"../../node_modules/core-js/library/modules/_fails.js"}],"../../node_modules/core-js/library/modules/_wks-define.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

},{"./_global":"../../node_modules/core-js/library/modules/_global.js","./_core":"../../node_modules/core-js/library/modules/_core.js","./_library":"../../node_modules/core-js/library/modules/_library.js","./_wks-ext":"../../node_modules/core-js/library/modules/_wks-ext.js","./_object-dp":"../../node_modules/core-js/library/modules/_object-dp.js"}],"../../node_modules/core-js/library/modules/_enum-keys.js":[function(require,module,exports) {
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

},{"./_object-keys":"../../node_modules/core-js/library/modules/_object-keys.js","./_object-gops":"../../node_modules/core-js/library/modules/_object-gops.js","./_object-pie":"../../node_modules/core-js/library/modules/_object-pie.js"}],"../../node_modules/core-js/library/modules/_is-array.js":[function(require,module,exports) {
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

},{"./_cof":"../../node_modules/core-js/library/modules/_cof.js"}],"../../node_modules/core-js/library/modules/_object-gopn.js":[function(require,module,exports) {
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

},{"./_object-keys-internal":"../../node_modules/core-js/library/modules/_object-keys-internal.js","./_enum-bug-keys":"../../node_modules/core-js/library/modules/_enum-bug-keys.js"}],"../../node_modules/core-js/library/modules/_object-gopn-ext.js":[function(require,module,exports) {
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_to-iobject":"../../node_modules/core-js/library/modules/_to-iobject.js","./_object-gopn":"../../node_modules/core-js/library/modules/_object-gopn.js"}],"../../node_modules/core-js/library/modules/_object-gopd.js":[function(require,module,exports) {
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

},{"./_object-pie":"../../node_modules/core-js/library/modules/_object-pie.js","./_property-desc":"../../node_modules/core-js/library/modules/_property-desc.js","./_to-iobject":"../../node_modules/core-js/library/modules/_to-iobject.js","./_to-primitive":"../../node_modules/core-js/library/modules/_to-primitive.js","./_has":"../../node_modules/core-js/library/modules/_has.js","./_ie8-dom-define":"../../node_modules/core-js/library/modules/_ie8-dom-define.js","./_descriptors":"../../node_modules/core-js/library/modules/_descriptors.js"}],"../../node_modules/core-js/library/modules/es6.symbol.js":[function(require,module,exports) {

'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  require('./_object-gops').f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

},{"./_global":"../../node_modules/core-js/library/modules/_global.js","./_has":"../../node_modules/core-js/library/modules/_has.js","./_descriptors":"../../node_modules/core-js/library/modules/_descriptors.js","./_export":"../../node_modules/core-js/library/modules/_export.js","./_redefine":"../../node_modules/core-js/library/modules/_redefine.js","./_meta":"../../node_modules/core-js/library/modules/_meta.js","./_fails":"../../node_modules/core-js/library/modules/_fails.js","./_shared":"../../node_modules/core-js/library/modules/_shared.js","./_set-to-string-tag":"../../node_modules/core-js/library/modules/_set-to-string-tag.js","./_uid":"../../node_modules/core-js/library/modules/_uid.js","./_wks":"../../node_modules/core-js/library/modules/_wks.js","./_wks-ext":"../../node_modules/core-js/library/modules/_wks-ext.js","./_wks-define":"../../node_modules/core-js/library/modules/_wks-define.js","./_enum-keys":"../../node_modules/core-js/library/modules/_enum-keys.js","./_is-array":"../../node_modules/core-js/library/modules/_is-array.js","./_an-object":"../../node_modules/core-js/library/modules/_an-object.js","./_is-object":"../../node_modules/core-js/library/modules/_is-object.js","./_to-iobject":"../../node_modules/core-js/library/modules/_to-iobject.js","./_to-primitive":"../../node_modules/core-js/library/modules/_to-primitive.js","./_property-desc":"../../node_modules/core-js/library/modules/_property-desc.js","./_object-create":"../../node_modules/core-js/library/modules/_object-create.js","./_object-gopn-ext":"../../node_modules/core-js/library/modules/_object-gopn-ext.js","./_object-gopd":"../../node_modules/core-js/library/modules/_object-gopd.js","./_object-dp":"../../node_modules/core-js/library/modules/_object-dp.js","./_object-keys":"../../node_modules/core-js/library/modules/_object-keys.js","./_object-gopn":"../../node_modules/core-js/library/modules/_object-gopn.js","./_object-pie":"../../node_modules/core-js/library/modules/_object-pie.js","./_object-gops":"../../node_modules/core-js/library/modules/_object-gops.js","./_library":"../../node_modules/core-js/library/modules/_library.js","./_hide":"../../node_modules/core-js/library/modules/_hide.js"}],"../../node_modules/core-js/library/modules/es7.symbol.async-iterator.js":[function(require,module,exports) {
require('./_wks-define')('asyncIterator');

},{"./_wks-define":"../../node_modules/core-js/library/modules/_wks-define.js"}],"../../node_modules/core-js/library/modules/es7.symbol.observable.js":[function(require,module,exports) {
require('./_wks-define')('observable');

},{"./_wks-define":"../../node_modules/core-js/library/modules/_wks-define.js"}],"../../node_modules/core-js/library/fn/symbol/index.js":[function(require,module,exports) {
require('../../modules/es6.symbol');
require('../../modules/es6.object.to-string');
require('../../modules/es7.symbol.async-iterator');
require('../../modules/es7.symbol.observable');
module.exports = require('../../modules/_core').Symbol;

},{"../../modules/es6.symbol":"../../node_modules/core-js/library/modules/es6.symbol.js","../../modules/es6.object.to-string":"../../node_modules/core-js/library/modules/es6.object.to-string.js","../../modules/es7.symbol.async-iterator":"../../node_modules/core-js/library/modules/es7.symbol.async-iterator.js","../../modules/es7.symbol.observable":"../../node_modules/core-js/library/modules/es7.symbol.observable.js","../../modules/_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/babel-runtime/core-js/symbol.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/symbol"), __esModule: true };
},{"core-js/library/fn/symbol":"../../node_modules/core-js/library/fn/symbol/index.js"}],"../../node_modules/babel-runtime/helpers/typeof.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _iterator = require("../core-js/symbol/iterator");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require("../core-js/symbol");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
},{"../core-js/symbol/iterator":"../../node_modules/babel-runtime/core-js/symbol/iterator.js","../core-js/symbol":"../../node_modules/babel-runtime/core-js/symbol.js"}],"../../node_modules/babel-runtime/helpers/possibleConstructorReturn.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _typeof2 = require("../helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};
},{"../helpers/typeof":"../../node_modules/babel-runtime/helpers/typeof.js"}],"../../node_modules/core-js/library/modules/_set-proto.js":[function(require,module,exports) {
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = require('./_is-object');
var anObject = require('./_an-object');
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

},{"./_is-object":"../../node_modules/core-js/library/modules/_is-object.js","./_an-object":"../../node_modules/core-js/library/modules/_an-object.js","./_ctx":"../../node_modules/core-js/library/modules/_ctx.js","./_object-gopd":"../../node_modules/core-js/library/modules/_object-gopd.js"}],"../../node_modules/core-js/library/modules/es6.object.set-prototype-of.js":[function(require,module,exports) {
// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = require('./_export');
$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });

},{"./_export":"../../node_modules/core-js/library/modules/_export.js","./_set-proto":"../../node_modules/core-js/library/modules/_set-proto.js"}],"../../node_modules/core-js/library/fn/object/set-prototype-of.js":[function(require,module,exports) {
require('../../modules/es6.object.set-prototype-of');
module.exports = require('../../modules/_core').Object.setPrototypeOf;

},{"../../modules/es6.object.set-prototype-of":"../../node_modules/core-js/library/modules/es6.object.set-prototype-of.js","../../modules/_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/babel-runtime/core-js/object/set-prototype-of.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/object/set-prototype-of"), __esModule: true };
},{"core-js/library/fn/object/set-prototype-of":"../../node_modules/core-js/library/fn/object/set-prototype-of.js"}],"../../node_modules/core-js/library/modules/es6.object.create.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: require('./_object-create') });

},{"./_export":"../../node_modules/core-js/library/modules/_export.js","./_object-create":"../../node_modules/core-js/library/modules/_object-create.js"}],"../../node_modules/core-js/library/fn/object/create.js":[function(require,module,exports) {
require('../../modules/es6.object.create');
var $Object = require('../../modules/_core').Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};

},{"../../modules/es6.object.create":"../../node_modules/core-js/library/modules/es6.object.create.js","../../modules/_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/babel-runtime/core-js/object/create.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/object/create"), __esModule: true };
},{"core-js/library/fn/object/create":"../../node_modules/core-js/library/fn/object/create.js"}],"../../node_modules/babel-runtime/helpers/inherits.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _setPrototypeOf = require("../core-js/object/set-prototype-of");

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = require("../core-js/object/create");

var _create2 = _interopRequireDefault(_create);

var _typeof2 = require("../helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};
},{"../core-js/object/set-prototype-of":"../../node_modules/babel-runtime/core-js/object/set-prototype-of.js","../core-js/object/create":"../../node_modules/babel-runtime/core-js/object/create.js","../helpers/typeof":"../../node_modules/babel-runtime/helpers/typeof.js"}],"../../node_modules/fbemitter/lib/EventSubscription.js":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventSubscription
 * @typechecks
 */

'use strict';

/**
 * EventSubscription represents a subscription to a particular event. It can
 * remove its own subscription.
 */

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var EventSubscription = (function () {

  /**
   * @param {EventSubscriptionVendor} subscriber the subscriber that controls
   *   this subscription.
   */

  function EventSubscription(subscriber) {
    _classCallCheck(this, EventSubscription);

    this.subscriber = subscriber;
  }

  /**
   * Removes this subscription from the subscriber that controls it.
   */

  EventSubscription.prototype.remove = function remove() {
    if (this.subscriber) {
      this.subscriber.removeSubscription(this);
      this.subscriber = null;
    }
  };

  return EventSubscription;
})();

module.exports = EventSubscription;
},{}],"../../node_modules/fbemitter/lib/EmitterSubscription.js":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 * 
 * @providesModule EmitterSubscription
 * @typechecks
 */

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EventSubscription = require('./EventSubscription');

/**
 * EmitterSubscription represents a subscription with listener and context data.
 */

var EmitterSubscription = (function (_EventSubscription) {
  _inherits(EmitterSubscription, _EventSubscription);

  /**
   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls
   *   this subscription
   * @param {function} listener - Function to invoke when the specified event is
   *   emitted
   * @param {*} context - Optional context object to use when invoking the
   *   listener
   */

  function EmitterSubscription(subscriber, listener, context) {
    _classCallCheck(this, EmitterSubscription);

    _EventSubscription.call(this, subscriber);
    this.listener = listener;
    this.context = context;
  }

  return EmitterSubscription;
})(EventSubscription);

module.exports = EmitterSubscription;
},{"./EventSubscription":"../../node_modules/fbemitter/lib/EventSubscription.js"}],"../../node_modules/fbjs/lib/invariant.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
'use strict';
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if ("development" !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;

    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame

    throw error;
  }
}

module.exports = invariant;
},{}],"../../node_modules/fbemitter/lib/EventSubscriptionVendor.js":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 * 
 * @providesModule EventSubscriptionVendor
 * @typechecks
 */
'use strict';

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

var invariant = require('fbjs/lib/invariant');
/**
 * EventSubscriptionVendor stores a set of EventSubscriptions that are
 * subscribed to a particular event type.
 */


var EventSubscriptionVendor = function () {
  function EventSubscriptionVendor() {
    _classCallCheck(this, EventSubscriptionVendor);

    this._subscriptionsForType = {};
    this._currentSubscription = null;
  }
  /**
   * Adds a subscription keyed by an event type.
   *
   * @param {string} eventType
   * @param {EventSubscription} subscription
   */


  EventSubscriptionVendor.prototype.addSubscription = function addSubscription(eventType, subscription) {
    !(subscription.subscriber === this) ? "development" !== 'production' ? invariant(false, 'The subscriber of the subscription is incorrectly set.') : invariant(false) : undefined;

    if (!this._subscriptionsForType[eventType]) {
      this._subscriptionsForType[eventType] = [];
    }

    var key = this._subscriptionsForType[eventType].length;

    this._subscriptionsForType[eventType].push(subscription);

    subscription.eventType = eventType;
    subscription.key = key;
    return subscription;
  };
  /**
   * Removes a bulk set of the subscriptions.
   *
   * @param {?string} eventType - Optional name of the event type whose
   *   registered supscriptions to remove, if null remove all subscriptions.
   */


  EventSubscriptionVendor.prototype.removeAllSubscriptions = function removeAllSubscriptions(eventType) {
    if (eventType === undefined) {
      this._subscriptionsForType = {};
    } else {
      delete this._subscriptionsForType[eventType];
    }
  };
  /**
   * Removes a specific subscription. Instead of calling this function, call
   * `subscription.remove()` directly.
   *
   * @param {object} subscription
   */


  EventSubscriptionVendor.prototype.removeSubscription = function removeSubscription(subscription) {
    var eventType = subscription.eventType;
    var key = subscription.key;
    var subscriptionsForType = this._subscriptionsForType[eventType];

    if (subscriptionsForType) {
      delete subscriptionsForType[key];
    }
  };
  /**
   * Returns the array of subscriptions that are currently registered for the
   * given event type.
   *
   * Note: This array can be potentially sparse as subscriptions are deleted
   * from it when they are removed.
   *
   * TODO: This returns a nullable array. wat?
   *
   * @param {string} eventType
   * @return {?array}
   */


  EventSubscriptionVendor.prototype.getSubscriptionsForType = function getSubscriptionsForType(eventType) {
    return this._subscriptionsForType[eventType];
  };

  return EventSubscriptionVendor;
}();

module.exports = EventSubscriptionVendor;
},{"fbjs/lib/invariant":"../../node_modules/fbjs/lib/invariant.js"}],"../../node_modules/fbjs/lib/emptyFunction.js":[function(require,module,exports) {
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],"../../node_modules/fbemitter/lib/BaseEventEmitter.js":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BaseEventEmitter
 * @typechecks
 */
'use strict';

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

var EmitterSubscription = require('./EmitterSubscription');

var EventSubscriptionVendor = require('./EventSubscriptionVendor');

var emptyFunction = require('fbjs/lib/emptyFunction');

var invariant = require('fbjs/lib/invariant');
/**
 * @class BaseEventEmitter
 * @description
 * An EventEmitter is responsible for managing a set of listeners and publishing
 * events to them when it is told that such events happened. In addition to the
 * data for the given event it also sends a event control object which allows
 * the listeners/handlers to prevent the default behavior of the given event.
 *
 * The emitter is designed to be generic enough to support all the different
 * contexts in which one might want to emit events. It is a simple multicast
 * mechanism on top of which extra functionality can be composed. For example, a
 * more advanced emitter may use an EventHolder and EventFactory.
 */


var BaseEventEmitter = function () {
  /**
   * @constructor
   */
  function BaseEventEmitter() {
    _classCallCheck(this, BaseEventEmitter);

    this._subscriber = new EventSubscriptionVendor();
    this._currentSubscription = null;
  }
  /**
   * Adds a listener to be invoked when events of the specified type are
   * emitted. An optional calling context may be provided. The data arguments
   * emitted will be passed to the listener function.
   *
   * TODO: Annotate the listener arg's type. This is tricky because listeners
   *       can be invoked with varargs.
   *
   * @param {string} eventType - Name of the event to listen to
   * @param {function} listener - Function to invoke when the specified event is
   *   emitted
   * @param {*} context - Optional context object to use when invoking the
   *   listener
   */


  BaseEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {
    return this._subscriber.addSubscription(eventType, new EmitterSubscription(this._subscriber, listener, context));
  };
  /**
   * Similar to addListener, except that the listener is removed after it is
   * invoked once.
   *
   * @param {string} eventType - Name of the event to listen to
   * @param {function} listener - Function to invoke only once when the
   *   specified event is emitted
   * @param {*} context - Optional context object to use when invoking the
   *   listener
   */


  BaseEventEmitter.prototype.once = function once(eventType, listener, context) {
    var emitter = this;
    return this.addListener(eventType, function () {
      emitter.removeCurrentListener();
      listener.apply(context, arguments);
    });
  };
  /**
   * Removes all of the registered listeners, including those registered as
   * listener maps.
   *
   * @param {?string} eventType - Optional name of the event whose registered
   *   listeners to remove
   */


  BaseEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {
    this._subscriber.removeAllSubscriptions(eventType);
  };
  /**
   * Provides an API that can be called during an eventing cycle to remove the
   * last listener that was invoked. This allows a developer to provide an event
   * object that can remove the listener (or listener map) during the
   * invocation.
   *
   * If it is called when not inside of an emitting cycle it will throw.
   *
   * @throws {Error} When called not during an eventing cycle
   *
   * @example
   *   var subscription = emitter.addListenerMap({
   *     someEvent: function(data, event) {
   *       console.log(data);
   *       emitter.removeCurrentListener();
   *     }
   *   });
   *
   *   emitter.emit('someEvent', 'abc'); // logs 'abc'
   *   emitter.emit('someEvent', 'def'); // does not log anything
   */


  BaseEventEmitter.prototype.removeCurrentListener = function removeCurrentListener() {
    !!!this._currentSubscription ? "development" !== 'production' ? invariant(false, 'Not in an emitting cycle; there is no current subscription') : invariant(false) : undefined;

    this._subscriber.removeSubscription(this._currentSubscription);
  };
  /**
   * Returns an array of listeners that are currently registered for the given
   * event.
   *
   * @param {string} eventType - Name of the event to query
   * @return {array}
   */


  BaseEventEmitter.prototype.listeners = function listeners(eventType)
  /* TODO: Array<EventSubscription> */
  {
    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);

    return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {
      return subscription.listener;
    }) : [];
  };
  /**
   * Emits an event of the given type with the given data. All handlers of that
   * particular type will be notified.
   *
   * @param {string} eventType - Name of the event to emit
   * @param {*} Arbitrary arguments to be passed to each registered listener
   *
   * @example
   *   emitter.addListener('someEvent', function(message) {
   *     console.log(message);
   *   });
   *
   *   emitter.emit('someEvent', 'abc'); // logs 'abc'
   */


  BaseEventEmitter.prototype.emit = function emit(eventType) {
    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);

    if (subscriptions) {
      var keys = Object.keys(subscriptions);

      for (var ii = 0; ii < keys.length; ii++) {
        var key = keys[ii];
        var subscription = subscriptions[key]; // The subscription may have been removed during this event loop.

        if (subscription) {
          this._currentSubscription = subscription;

          this.__emitToSubscription.apply(this, [subscription].concat(Array.prototype.slice.call(arguments)));
        }
      }

      this._currentSubscription = null;
    }
  };
  /**
   * Provides a hook to override how the emitter emits an event to a specific
   * subscription. This allows you to set up logging and error boundaries
   * specific to your environment.
   *
   * @param {EmitterSubscription} subscription
   * @param {string} eventType
   * @param {*} Arbitrary arguments to be passed to each registered listener
   */


  BaseEventEmitter.prototype.__emitToSubscription = function __emitToSubscription(subscription, eventType) {
    var args = Array.prototype.slice.call(arguments, 2);
    subscription.listener.apply(subscription.context, args);
  };

  return BaseEventEmitter;
}();

module.exports = BaseEventEmitter;
},{"./EmitterSubscription":"../../node_modules/fbemitter/lib/EmitterSubscription.js","./EventSubscriptionVendor":"../../node_modules/fbemitter/lib/EventSubscriptionVendor.js","fbjs/lib/emptyFunction":"../../node_modules/fbjs/lib/emptyFunction.js","fbjs/lib/invariant":"../../node_modules/fbjs/lib/invariant.js"}],"../../node_modules/fbemitter/index.js":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

var fbemitter = {
  EventEmitter: require('./lib/BaseEventEmitter'),
  EmitterSubscription : require('./lib/EmitterSubscription')
};

module.exports = fbemitter;

},{"./lib/BaseEventEmitter":"../../node_modules/fbemitter/lib/BaseEventEmitter.js","./lib/EmitterSubscription":"../../node_modules/fbemitter/lib/EmitterSubscription.js"}],"../../node_modules/universal-login-sdk/dist/observers/ObserverBase.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _utils = require('../utils/utils');

var _fbemitter = require('fbemitter');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ObserverBase = function () {
  function ObserverBase() {
    (0, _classCallCheck3.default)(this, ObserverBase);

    this.state = 'stop';
    this.step = 1000;
    this.emitters = {};
  }

  (0, _createClass3.default)(ObserverBase, [{
    key: 'subscribe',
    value: function subscribe(eventType, identityAddress, callback) {
      var emitter = this.emitters[identityAddress] || new _fbemitter.EventEmitter();
      this.emitters[identityAddress] = emitter;
      return emitter.addListener(eventType, callback);
    }
  }, {
    key: 'start',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.state === 'stop') {
                  this.state = 'running';
                  this.loop();
                }

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function start() {
        return _ref.apply(this, arguments);
      }

      return start;
    }()
  }, {
    key: 'loop',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(this.state === 'stop')) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt('return');

              case 2:
                _context2.next = 4;
                return this.tick();

              case 4:
                if (this.state === 'stopping') {
                  this.state = 'stop';
                } else {
                  setTimeout(this.loop.bind(this), this.step);
                }

              case 5:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function loop() {
        return _ref2.apply(this, arguments);
      }

      return loop;
    }()
  }, {
    key: 'stop',
    value: function stop() {
      this.state = 'stop';
    }
  }, {
    key: 'finalizeAndStop',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.state = 'stopping';

              case 1:
                _context3.next = 3;
                return (0, _utils.sleep)(this.step);

              case 3:
                if (this.state !== 'stop') {
                  _context3.next = 1;
                  break;
                }

              case 4:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function finalizeAndStop() {
        return _ref3.apply(this, arguments);
      }

      return finalizeAndStop;
    }()
  }]);
  return ObserverBase;
}();

exports.default = ObserverBase;
},{"babel-runtime/regenerator":"../../node_modules/babel-runtime/regenerator/index.js","babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","babel-runtime/helpers/classCallCheck":"../../node_modules/babel-runtime/helpers/classCallCheck.js","babel-runtime/helpers/createClass":"../../node_modules/babel-runtime/helpers/createClass.js","../utils/utils":"../../node_modules/universal-login-sdk/dist/utils/utils.js","fbemitter":"../../node_modules/fbemitter/index.js"}],"../../node_modules/universal-login-sdk/node_modules/node-fetch/browser.js":[function(require,module,exports) {

"use strict"; // ref: https://github.com/tc39/proposal-global

var getGlobal = function () {
  // the only reliable means to get the global object is
  // `Function('return this')()`
  // However, this causes CSP violations in Chrome apps.
  if (typeof self !== 'undefined') {
    return self;
  }

  if (typeof window !== 'undefined') {
    return window;
  }

  if (typeof global !== 'undefined') {
    return global;
  }

  throw new Error('unable to locate global object');
};

var global = getGlobal();
module.exports = exports = global.fetch; // Needed for TypeScript and Webpack.

exports.default = global.fetch.bind(global);
exports.Headers = global.Headers;
exports.Request = global.Request;
exports.Response = global.Response;
},{}],"../../node_modules/universal-login-sdk/dist/utils/http.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var headers = { 'Content-Type': 'application/json; charset=utf-8' };

var fetchFunction = void 0;

// eslint-disable-next-line no-undef
if (typeof window === 'undefined') {
  fetchFunction = require('node-fetch');
} else {
  // eslint-disable-next-line no-undef
  fetchFunction = window.fetch;
}

var fetch = fetchFunction;

exports.headers = headers;
exports.fetch = fetch;
},{"node-fetch":"../../node_modules/universal-login-sdk/node_modules/node-fetch/browser.js"}],"../../node_modules/deep-equal/lib/keys.js":[function(require,module,exports) {
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],"../../node_modules/deep-equal/lib/is_arguments.js":[function(require,module,exports) {
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],"../../node_modules/deep-equal/index.js":[function(require,module,exports) {
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}

},{"./lib/keys.js":"../../node_modules/deep-equal/lib/keys.js","./lib/is_arguments.js":"../../node_modules/deep-equal/lib/is_arguments.js"}],"../../node_modules/universal-login-sdk/dist/observers/RelayerObserver.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _ObserverBase2 = require('./ObserverBase');

var _ObserverBase3 = _interopRequireDefault(_ObserverBase2);

var _http = require('../utils/http');

var _deepEqual = require('deep-equal');

var _deepEqual2 = _interopRequireDefault(_deepEqual);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RelayerObserver = function (_ObserverBase) {
  (0, _inherits3.default)(RelayerObserver, _ObserverBase);

  function RelayerObserver(relayerUrl) {
    (0, _classCallCheck3.default)(this, RelayerObserver);

    var _this = (0, _possibleConstructorReturn3.default)(this, (RelayerObserver.__proto__ || Object.getPrototypeOf(RelayerObserver)).call(this));

    _this.relayerUrl = relayerUrl;
    _this.lastAuthorisations = {};
    return _this;
  }

  (0, _createClass3.default)(RelayerObserver, [{
    key: 'tick',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', this.checkAuthorisationRequests());

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function tick() {
        return _ref.apply(this, arguments);
      }

      return tick;
    }()
  }, {
    key: 'checkAuthorisationsChangedFor',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(identityAddress) {
        var emitter, authorisations;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                emitter = this.emitters[identityAddress];
                _context2.next = 3;
                return this.fetchPendingAuthorisations(identityAddress);

              case 3:
                authorisations = _context2.sent;

                if (!(0, _deepEqual2.default)(authorisations, this.lastAuthorisations)) {
                  this.lastAuthorisations = authorisations;
                  emitter.emit('AuthorisationsChanged', authorisations);
                }

              case 5:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function checkAuthorisationsChangedFor(_x) {
        return _ref2.apply(this, arguments);
      }

      return checkAuthorisationsChangedFor;
    }()
  }, {
    key: 'checkAuthorisationRequests',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
        var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, identityAddress;

        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context3.prev = 3;
                _iterator = Object.keys(this.emitters)[Symbol.iterator]();

              case 5:
                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                  _context3.next = 12;
                  break;
                }

                identityAddress = _step.value;
                _context3.next = 9;
                return this.checkAuthorisationsChangedFor(identityAddress);

              case 9:
                _iteratorNormalCompletion = true;
                _context3.next = 5;
                break;

              case 12:
                _context3.next = 18;
                break;

              case 14:
                _context3.prev = 14;
                _context3.t0 = _context3['catch'](3);
                _didIteratorError = true;
                _iteratorError = _context3.t0;

              case 18:
                _context3.prev = 18;
                _context3.prev = 19;

                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }

              case 21:
                _context3.prev = 21;

                if (!_didIteratorError) {
                  _context3.next = 24;
                  break;
                }

                throw _iteratorError;

              case 24:
                return _context3.finish(21);

              case 25:
                return _context3.finish(18);

              case 26:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this, [[3, 14, 18, 26], [19,, 21, 25]]);
      }));

      function checkAuthorisationRequests() {
        return _ref3.apply(this, arguments);
      }

      return checkAuthorisationRequests;
    }()
  }, {
    key: 'authorisationUrl',
    value: function authorisationUrl(identityAddress) {
      return this.relayerUrl + '/authorisation/' + identityAddress;
    }
  }, {
    key: 'fetchPendingAuthorisations',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(identityAddress) {
        var url, method, response, responseJson;
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                url = this.authorisationUrl(identityAddress);
                method = 'GET';
                _context4.next = 4;
                return (0, _http.fetch)(url, { headers: _http.headers, method: method });

              case 4:
                response = _context4.sent;
                _context4.next = 7;
                return response.json();

              case 7:
                responseJson = _context4.sent;

                if (!(response.status === 200)) {
                  _context4.next = 10;
                  break;
                }

                return _context4.abrupt('return', responseJson.response);

              case 10:
                throw new Error('' + response.status);

              case 11:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function fetchPendingAuthorisations(_x2) {
        return _ref4.apply(this, arguments);
      }

      return fetchPendingAuthorisations;
    }()
  }]);
  return RelayerObserver;
}(_ObserverBase3.default);

exports.default = RelayerObserver;
},{"babel-runtime/regenerator":"../../node_modules/babel-runtime/regenerator/index.js","babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","babel-runtime/helpers/classCallCheck":"../../node_modules/babel-runtime/helpers/classCallCheck.js","babel-runtime/helpers/createClass":"../../node_modules/babel-runtime/helpers/createClass.js","babel-runtime/helpers/possibleConstructorReturn":"../../node_modules/babel-runtime/helpers/possibleConstructorReturn.js","babel-runtime/helpers/inherits":"../../node_modules/babel-runtime/helpers/inherits.js","./ObserverBase":"../../node_modules/universal-login-sdk/dist/observers/ObserverBase.js","../utils/http":"../../node_modules/universal-login-sdk/dist/utils/http.js","deep-equal":"../../node_modules/deep-equal/index.js"}],"../../node_modules/core-js/library/modules/_object-sap.js":[function(require,module,exports) {
// most Object methods by ES6 should accept primitives
var $export = require('./_export');
var core = require('./_core');
var fails = require('./_fails');
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};

},{"./_export":"../../node_modules/core-js/library/modules/_export.js","./_core":"../../node_modules/core-js/library/modules/_core.js","./_fails":"../../node_modules/core-js/library/modules/_fails.js"}],"../../node_modules/core-js/library/modules/es6.object.get-prototype-of.js":[function(require,module,exports) {
// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = require('./_to-object');
var $getPrototypeOf = require('./_object-gpo');

require('./_object-sap')('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});

},{"./_to-object":"../../node_modules/core-js/library/modules/_to-object.js","./_object-gpo":"../../node_modules/core-js/library/modules/_object-gpo.js","./_object-sap":"../../node_modules/core-js/library/modules/_object-sap.js"}],"../../node_modules/core-js/library/fn/object/get-prototype-of.js":[function(require,module,exports) {
require('../../modules/es6.object.get-prototype-of');
module.exports = require('../../modules/_core').Object.getPrototypeOf;

},{"../../modules/es6.object.get-prototype-of":"../../node_modules/core-js/library/modules/es6.object.get-prototype-of.js","../../modules/_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/babel-runtime/core-js/object/get-prototype-of.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/object/get-prototype-of"), __esModule: true };
},{"core-js/library/fn/object/get-prototype-of":"../../node_modules/core-js/library/fn/object/get-prototype-of.js"}],"../../node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js":[function(require,module,exports) {
// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = require('./_to-iobject');
var $getOwnPropertyDescriptor = require('./_object-gopd').f;

require('./_object-sap')('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});

},{"./_to-iobject":"../../node_modules/core-js/library/modules/_to-iobject.js","./_object-gopd":"../../node_modules/core-js/library/modules/_object-gopd.js","./_object-sap":"../../node_modules/core-js/library/modules/_object-sap.js"}],"../../node_modules/core-js/library/fn/object/get-own-property-descriptor.js":[function(require,module,exports) {
require('../../modules/es6.object.get-own-property-descriptor');
var $Object = require('../../modules/_core').Object;
module.exports = function getOwnPropertyDescriptor(it, key) {
  return $Object.getOwnPropertyDescriptor(it, key);
};

},{"../../modules/es6.object.get-own-property-descriptor":"../../node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","../../modules/_core":"../../node_modules/core-js/library/modules/_core.js"}],"../../node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js":[function(require,module,exports) {
module.exports = { "default": require("core-js/library/fn/object/get-own-property-descriptor"), __esModule: true };
},{"core-js/library/fn/object/get-own-property-descriptor":"../../node_modules/core-js/library/fn/object/get-own-property-descriptor.js"}],"../../node_modules/babel-runtime/helpers/get.js":[function(require,module,exports) {
"use strict";

exports.__esModule = true;

var _getPrototypeOf = require("../core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _getOwnPropertyDescriptor = require("../core-js/object/get-own-property-descriptor");

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);

  if (desc === undefined) {
    var parent = (0, _getPrototypeOf2.default)(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};
},{"../core-js/object/get-prototype-of":"../../node_modules/babel-runtime/core-js/object/get-prototype-of.js","../core-js/object/get-own-property-descriptor":"../../node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js"}],"../../node_modules/universal-login-sdk/dist/observers/BlockchainObserver.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = require('babel-runtime/helpers/get');

var _get3 = _interopRequireDefault(_get2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _ethers = require('ethers');

var _ObserverBase2 = require('./ObserverBase');

var _ObserverBase3 = _interopRequireDefault(_ObserverBase2);

var _Identity = require('universal-login-contracts/build/Identity');

var _Identity2 = _interopRequireDefault(_Identity);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BlockchainObserver = function (_ObserverBase) {
  (0, _inherits3.default)(BlockchainObserver, _ObserverBase);

  function BlockchainObserver(provider) {
    (0, _classCallCheck3.default)(this, BlockchainObserver);

    var _this = (0, _possibleConstructorReturn3.default)(this, (BlockchainObserver.__proto__ || Object.getPrototypeOf(BlockchainObserver)).call(this));

    _this.provider = provider;
    _this.eventInterface = new _ethers.Interface(_Identity2.default.interface).events;
    _this.codec = new _ethers.utils.AbiCoder();
    return _this;
  }

  (0, _createClass3.default)(BlockchainObserver, [{
    key: 'start',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.provider.getBlockNumber();

              case 2:
                this.lastBlock = _context.sent;
                _context.next = 5;
                return (0, _get3.default)(BlockchainObserver.prototype.__proto__ || Object.getPrototypeOf(BlockchainObserver.prototype), 'start', this).call(this);

              case 5:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function start() {
        return _ref.apply(this, arguments);
      }

      return start;
    }()
  }, {
    key: 'tick',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
        var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, identityAddress;

        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context2.prev = 3;
                _iterator = Object.keys(this.emitters)[Symbol.iterator]();

              case 5:
                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                  _context2.next = 12;
                  break;
                }

                identityAddress = _step.value;
                _context2.next = 9;
                return this.fetchEvents(identityAddress);

              case 9:
                _iteratorNormalCompletion = true;
                _context2.next = 5;
                break;

              case 12:
                _context2.next = 18;
                break;

              case 14:
                _context2.prev = 14;
                _context2.t0 = _context2['catch'](3);
                _didIteratorError = true;
                _iteratorError = _context2.t0;

              case 18:
                _context2.prev = 18;
                _context2.prev = 19;

                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }

              case 21:
                _context2.prev = 21;

                if (!_didIteratorError) {
                  _context2.next = 24;
                  break;
                }

                throw _iteratorError;

              case 24:
                return _context2.finish(21);

              case 25:
                return _context2.finish(18);

              case 26:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this, [[3, 14, 18, 26], [19,, 21, 25]]);
      }));

      function tick() {
        return _ref2.apply(this, arguments);
      }

      return tick;
    }()
  }, {
    key: 'fetchEvents',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(identityAddress) {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.fetchEventsOfType('KeyAdded', identityAddress);

              case 2:
                _context3.next = 4;
                return this.fetchEventsOfType('KeyRemoved', identityAddress);

              case 4:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function fetchEvents(_x) {
        return _ref3.apply(this, arguments);
      }

      return fetchEvents;
    }()
  }, {
    key: 'fetchEventsOfType',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(type, identityAddress) {
        var topics, filter, events, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, event;

        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                topics = [this.eventInterface[type].topics];
                filter = { fromBlock: this.lastBlock, address: identityAddress, topics: topics };
                _context4.next = 4;
                return this.provider.getLogs(filter);

              case 4:
                events = _context4.sent;
                _iteratorNormalCompletion2 = true;
                _didIteratorError2 = false;
                _iteratorError2 = undefined;
                _context4.prev = 8;

                for (_iterator2 = events[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                  event = _step2.value;

                  this.emitters[identityAddress].emit(type, this.parseArgs(type, event));
                }
                _context4.next = 16;
                break;

              case 12:
                _context4.prev = 12;
                _context4.t0 = _context4['catch'](8);
                _didIteratorError2 = true;
                _iteratorError2 = _context4.t0;

              case 16:
                _context4.prev = 16;
                _context4.prev = 17;

                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                  _iterator2.return();
                }

              case 19:
                _context4.prev = 19;

                if (!_didIteratorError2) {
                  _context4.next = 22;
                  break;
                }

                throw _iteratorError2;

              case 22:
                return _context4.finish(19);

              case 23:
                return _context4.finish(16);

              case 24:
                _context4.next = 26;
                return this.provider.getBlockNumber();

              case 26:
                this.lastBlock = _context4.sent;

              case 27:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this, [[8, 12, 16, 24], [17,, 19, 23]]);
      }));

      function fetchEventsOfType(_x2, _x3) {
        return _ref4.apply(this, arguments);
      }

      return fetchEventsOfType;
    }()
  }, {
    key: 'parseArgs',
    value: function parseArgs(type, event) {
      if (event.topics[0] === this.eventInterface[type].topics[0]) {
        var args = this.eventInterface[type].parse(event.topics, event.data);

        var _codec$decode = this.codec.decode(['address'], args.key),
            _codec$decode2 = (0, _slicedToArray3.default)(_codec$decode, 1),
            address = _codec$decode2[0];

        var purpose = args.purpose.toNumber();
        var keyType = args.keyType.toNumber();
        return { address: address, purpose: purpose, keyType: keyType };
      }
      throw 'Not supported event with topic: ' + event.topics[0];
    }
  }]);
  return BlockchainObserver;
}(_ObserverBase3.default);

exports.default = BlockchainObserver;
},{"babel-runtime/helpers/slicedToArray":"../../node_modules/babel-runtime/helpers/slicedToArray.js","babel-runtime/regenerator":"../../node_modules/babel-runtime/regenerator/index.js","babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","babel-runtime/helpers/classCallCheck":"../../node_modules/babel-runtime/helpers/classCallCheck.js","babel-runtime/helpers/createClass":"../../node_modules/babel-runtime/helpers/createClass.js","babel-runtime/helpers/possibleConstructorReturn":"../../node_modules/babel-runtime/helpers/possibleConstructorReturn.js","babel-runtime/helpers/get":"../../node_modules/babel-runtime/helpers/get.js","babel-runtime/helpers/inherits":"../../node_modules/babel-runtime/helpers/inherits.js","ethers":"../../node_modules/ethers/index.js","./ObserverBase":"../../node_modules/universal-login-sdk/dist/observers/ObserverBase.js","universal-login-contracts/build/Identity":"../../node_modules/universal-login-contracts/build/Identity.json"}],"../../node_modules/universal-login-sdk/dist/config.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MESSAGE_DEFAULTS = undefined;

var _universalLoginContracts = require('universal-login-contracts');

var MESSAGE_DEFAULTS = {
  gasPrice: 1000000000,
  gasLimit: 1000000,
  operationType: _universalLoginContracts.OPERATION_CALL,
  value: 0,
  data: '0x0'
};

exports.MESSAGE_DEFAULTS = MESSAGE_DEFAULTS;
},{"universal-login-contracts":"../../node_modules/universal-login-contracts/index.js"}],"../../node_modules/universal-login-sdk/dist/sdk.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ECDSA_TYPE = exports.ACTION_KEY = exports.MANAGEMENT_KEY = undefined;

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _ethers = require('ethers');

var _ethers2 = _interopRequireDefault(_ethers);

var _Identity = require('universal-login-contracts/build/Identity');

var _Identity2 = _interopRequireDefault(_Identity);

var _universalLoginContracts = require('universal-login-contracts');

var _utils = require('./utils/utils');

var _calculateMessageSignature = require('universal-login-contracts/lib/calculateMessageSignature');

var _calculateMessageSignature2 = _interopRequireDefault(_calculateMessageSignature);

var _ethereum = require('./utils/ethereum');

var _RelayerObserver = require('./observers/RelayerObserver');

var _RelayerObserver2 = _interopRequireDefault(_RelayerObserver);

var _BlockchainObserver = require('./observers/BlockchainObserver');

var _BlockchainObserver2 = _interopRequireDefault(_BlockchainObserver);

var _http = require('./utils/http');

var _config = require('./config');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EthereumIdentitySDK = function () {
  function EthereumIdentitySDK(relayerUrl, providerOrUrl, paymentOptions) {
    (0, _classCallCheck3.default)(this, EthereumIdentitySDK);

    this.provider = typeof providerOrUrl === 'string' ? new _ethers2.default.JsonRpcProvider(providerOrUrl) : providerOrUrl;
    this.relayerUrl = relayerUrl;
    this.relayerObserver = new _RelayerObserver2.default(relayerUrl);
    this.blockchainObserver = new _BlockchainObserver2.default(this.provider);
    this.defaultPaymentOptions = (0, _extends3.default)({}, _config.MESSAGE_DEFAULTS, paymentOptions);
  }

  (0, _createClass3.default)(EthereumIdentitySDK, [{
    key: 'create',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var privateKey, wallet, managementKey, url, method, body, response, responseJson, contract;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                privateKey = this.generatePrivateKey();
                wallet = new _ethers2.default.Wallet(privateKey, this.provider);
                managementKey = wallet.address;
                url = this.relayerUrl + '/identity';
                method = 'POST';
                body = JSON.stringify({ managementKey: managementKey });
                _context.next = 8;
                return (0, _http.fetch)(url, { headers: _http.headers, method: method, body: body });

              case 8:
                response = _context.sent;
                _context.next = 11;
                return response.json();

              case 11:
                responseJson = _context.sent;

                if (!(response.status === 201)) {
                  _context.next = 17;
                  break;
                }

                _context.next = 15;
                return (0, _utils.waitForContractDeploy)(this.provider, _Identity2.default, responseJson.transaction.hash);

              case 15:
                contract = _context.sent;
                return _context.abrupt('return', [privateKey, contract.address]);

              case 17:
                throw new Error('' + responseJson.error);

              case 18:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function create() {
        return _ref.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: 'transferByLink',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(_ref3) {
        var token = _ref3.token,
            amount = _ref3.amount,
            sender = _ref3.sender,
            sigSender = _ref3.sigSender,
            transitPK = _ref3.transitPK,
            receiverPubKey = _ref3.receiverPubKey;
        var transitWallet, transitPubKey, url, method, messageHash, sigReceiver, contract, isLinkValid, body, response, responseJson;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                transitWallet = new _ethers2.default.Wallet(transitPK, this.provider);
                transitPubKey = transitWallet.address;
                url = this.relayerUrl + '/identity/transfer-by-link';
                method = 'POST';
                messageHash = _ethers.utils.solidityKeccak256(['address', 'address'], [receiverPubKey, transitPubKey]);
                sigReceiver = transitWallet.signMessage(_ethers.utils.arrayify(messageHash));

                // check that link is valid

                contract = new _ethers2.default.Contract(sender, _Identity2.default.interface, this.provider);
                _context2.next = 9;
                return contract.isLinkValid(token, amount, receiverPubKey, transitPubKey, sigSender, sigReceiver);

              case 9:
                isLinkValid = _context2.sent;

                console.log({ isLinkValid: isLinkValid, receiverPubKey: receiverPubKey });

                if (isLinkValid) {
                  _context2.next = 13;
                  break;
                }

                throw new Error("Invalid link!");

              case 13:
                body = JSON.stringify({
                  identityPubKey: receiverPubKey,
                  sigSender: sigSender,
                  sigReceiver: sigReceiver,
                  token: token,
                  amount: amount,
                  transitPubKey: transitPubKey,
                  sender: sender
                });
                _context2.next = 16;
                return (0, _http.fetch)(url, { headers: _http.headers, method: method, body: body });

              case 16:
                response = _context2.sent;
                _context2.next = 19;
                return response.json();

              case 19:
                responseJson = _context2.sent;

                console.log({ response: response, responseJson: responseJson });

                if (!(response.status === 201)) {
                  _context2.next = 23;
                  break;
                }

                return _context2.abrupt('return', { response: response, txHash: responseJson.transaction.hash });

              case 23:
                throw new Error('' + responseJson.error);

              case 24:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function transferByLink(_x) {
        return _ref2.apply(this, arguments);
      }

      return transferByLink;
    }()
  }, {
    key: 'hasLinkBeenUsed',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(_ref5) {
        var transitPK = _ref5.transitPK,
            sender = _ref5.sender;
        var transitWallet, contract;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                transitWallet = new _ethers2.default.Wallet(transitPK, this.provider);
                contract = new _ethers2.default.Contract(sender, _Identity2.default.interface, this.provider);
                _context3.next = 4;
                return contract.hasBeenUsed(transitWallet.address);

              case 4:
                return _context3.abrupt('return', _context3.sent);

              case 5:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function hasLinkBeenUsed(_x2) {
        return _ref4.apply(this, arguments);
      }

      return hasLinkBeenUsed;
    }()
  }, {
    key: 'waitForTxReceipt',
    value: function waitForTxReceipt(txHash) {
      return (0, _utils.waitForTransactionReceipt)(this.provider, txHash);
    }
  }, {
    key: 'generateLink',
    value: function generateLink(_ref6) {
      var privateKey = _ref6.privateKey,
          token = _ref6.token,
          amount = _ref6.amount,
          _ref6$transitPrivKey = _ref6.transitPrivKey,
          transitPrivKey = _ref6$transitPrivKey === undefined ? null : _ref6$transitPrivKey;

      // generate transit private key
      var transitPK = transitPrivKey || this.generatePrivateKey();
      var wallet = new _ethers2.default.Wallet(privateKey, this.provider);
      var transitPubKey = new _ethers2.default.Wallet(transitPK, this.provider).address;
      // sign transit private key	
      var messageHash = _ethers.utils.solidityKeccak256(['address', 'uint', 'address'], [token, amount, transitPubKey]);
      var sigSender = wallet.signMessage(_ethers.utils.arrayify(messageHash));
      return { sigSender: sigSender, transitPK: transitPK };
    }
  }, {
    key: 'addKey',
    value: function () {
      var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(to, publicKey, privateKey, transactionDetails) {
        var key, _functions$addKey, data, message;

        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                key = (0, _utils.addressToBytes32)(publicKey);
                _functions$addKey = new _ethers.Interface(_Identity2.default.interface).functions.addKey(key, _universalLoginContracts.MANAGEMENT_KEY, _universalLoginContracts.ECDSA_TYPE), data = _functions$addKey.data;
                message = (0, _extends3.default)({}, transactionDetails, {
                  to: to,
                  from: to,
                  data: data
                });
                _context4.next = 5;
                return this.execute(message, privateKey);

              case 5:
                return _context4.abrupt('return', _context4.sent);

              case 6:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function addKey(_x3, _x4, _x5, _x6) {
        return _ref7.apply(this, arguments);
      }

      return addKey;
    }()
  }, {
    key: 'addKeys',
    value: function () {
      var _ref8 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(to, publicKeys, privateKey, transactionDetails) {
        var keys, keyRoles, keyTypes, _functions$addKeys, data, message;

        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                keys = publicKeys.map(function (publicKey) {
                  return (0, _utils.addressToBytes32)(publicKey);
                });
                keyRoles = new Array(publicKeys.length).fill(_universalLoginContracts.MANAGEMENT_KEY);
                keyTypes = new Array(publicKeys.length).fill(_universalLoginContracts.ECDSA_TYPE);
                _functions$addKeys = new _ethers.Interface(_Identity2.default.interface).functions.addKeys(keys, keyRoles, keyTypes), data = _functions$addKeys.data;
                message = (0, _extends3.default)({}, transactionDetails, {
                  to: to,
                  from: to,
                  data: data
                });
                _context5.next = 7;
                return this.execute(message, privateKey);

              case 7:
                return _context5.abrupt('return', _context5.sent);

              case 8:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function addKeys(_x7, _x8, _x9, _x10) {
        return _ref8.apply(this, arguments);
      }

      return addKeys;
    }()
  }, {
    key: 'removeKey',
    value: function () {
      var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6(to, address, privateKey, transactionDetails) {
        var key, _functions$removeKey, data, message;

        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                key = (0, _utils.addressToBytes32)(address);
                _functions$removeKey = new _ethers.Interface(_Identity2.default.interface).functions.removeKey(key, _universalLoginContracts.MANAGEMENT_KEY), data = _functions$removeKey.data;
                message = (0, _extends3.default)({}, transactionDetails, {
                  to: to,
                  from: to,
                  value: 0,
                  data: data,
                  operationType: _universalLoginContracts.OPERATION_CALL
                });
                _context6.next = 5;
                return this.execute(message, privateKey);

              case 5:
                return _context6.abrupt('return', _context6.sent);

              case 6:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function removeKey(_x11, _x12, _x13, _x14) {
        return _ref9.apply(this, arguments);
      }

      return removeKey;
    }()
  }, {
    key: 'generatePrivateKey',
    value: function generatePrivateKey() {
      return _ethers2.default.Wallet.createRandom().privateKey;
    }
  }, {
    key: 'getRelayerConfig',
    value: function () {
      var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7() {
        var url, method, response, responseJson;
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                url = this.relayerUrl + '/config';
                method = 'GET';
                _context7.next = 4;
                return (0, _http.fetch)(url, { headers: _http.headers, method: method });

              case 4:
                response = _context7.sent;
                _context7.next = 7;
                return response.json();

              case 7:
                responseJson = _context7.sent;

                if (!(response.status === 200)) {
                  _context7.next = 10;
                  break;
                }

                return _context7.abrupt('return', responseJson);

              case 10:
                throw new Error('' + response.status);

              case 11:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function getRelayerConfig() {
        return _ref10.apply(this, arguments);
      }

      return getRelayerConfig;
    }()
  }, {
    key: 'execute',
    value: function () {
      var _ref11 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee8(message, privateKey) {
        var url, method, finalMessage, signature, body, response, responseJson;
        return _regenerator2.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                url = this.relayerUrl + '/identity/execution';
                method = 'POST';
                _context8.t0 = _extends3.default;
                _context8.t1 = {};
                _context8.t2 = this.defaultPaymentOptions;
                _context8.t3 = message;
                _context8.t4 = message.nonce;

                if (_context8.t4) {
                  _context8.next = 13;
                  break;
                }

                _context8.t5 = parseInt;
                _context8.next = 11;
                return this.getNonce(message.from, privateKey);

              case 11:
                _context8.t6 = _context8.sent;
                _context8.t4 = (0, _context8.t5)(_context8.t6, 10);

              case 13:
                _context8.t7 = _context8.t4;
                _context8.t8 = {
                  nonce: _context8.t7
                };
                finalMessage = (0, _context8.t0)(_context8.t1, _context8.t2, _context8.t3, _context8.t8);
                _context8.next = 18;
                return (0, _calculateMessageSignature2.default)(privateKey, finalMessage);

              case 18:
                signature = _context8.sent;
                body = JSON.stringify((0, _extends3.default)({}, finalMessage, { signature: signature }));
                _context8.next = 22;
                return (0, _http.fetch)(url, { headers: _http.headers, method: method, body: body });

              case 22:
                response = _context8.sent;
                _context8.next = 25;
                return response.json();

              case 25:
                responseJson = _context8.sent;

                console.log({ response: response, responseJson: responseJson });

                if (!(response.status === 201)) {
                  _context8.next = 29;
                  break;
                }

                return _context8.abrupt('return', { response: response, txHash: responseJson.transaction.hash });

              case 29:
                throw new Error('' + responseJson.error);

              case 30:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function execute(_x15, _x16) {
        return _ref11.apply(this, arguments);
      }

      return execute;
    }()
  }, {
    key: 'getNonce',
    value: function () {
      var _ref12 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee9(identityAddress, privateKey) {
        var wallet, contract;
        return _regenerator2.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                wallet = new _ethers2.default.Wallet(privateKey, this.provider);
                contract = new _ethers2.default.Contract(identityAddress, _Identity2.default.interface, wallet);
                _context9.next = 4;
                return contract.lastNonce();

              case 4:
                return _context9.abrupt('return', _context9.sent);

              case 5:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function getNonce(_x17, _x18) {
        return _ref12.apply(this, arguments);
      }

      return getNonce;
    }()
  }, {
    key: 'getExecutionNonce',
    value: function getExecutionNonce(emittedEvents) {
      var _events$ExecutedSigne = (0, _slicedToArray3.default)(new _ethers.Interface(_Identity2.default.interface).events.ExecutedSigned.topics, 1),
          eventTopic = _events$ExecutedSigne[0];

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = emittedEvents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var event = _step.value;

          if (event.topics[0] === eventTopic) {
            return _ethers.utils.bigNumberify(event.topics[2]);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      throw 'Event ExecutionRequested not emitted';
    }
  }, {
    key: 'identityExist',
    value: function () {
      var _ref13 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee10(identity) {
        var identityAddress;
        return _regenerator2.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.resolveName(identity);

              case 2:
                identityAddress = _context10.sent;
                _context10.t0 = identityAddress;

                if (!_context10.t0) {
                  _context10.next = 11;
                  break;
                }

                _context10.t1 = _ethereum.codeEqual;
                _context10.t2 = _Identity2.default.runtimeBytecode;
                _context10.next = 9;
                return this.provider.getCode(identityAddress);

              case 9:
                _context10.t3 = _context10.sent;
                _context10.t0 = (0, _context10.t1)(_context10.t2, _context10.t3);

              case 11:
                if (!_context10.t0) {
                  _context10.next = 13;
                  break;
                }

                return _context10.abrupt('return', identityAddress);

              case 13:
                return _context10.abrupt('return', false);

              case 14:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function identityExist(_x19) {
        return _ref13.apply(this, arguments);
      }

      return identityExist;
    }()
  }, {
    key: 'resolveName',
    value: function () {
      var _ref14 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee11(identity) {
        var ensAddress;
        return _regenerator2.default.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.t0 = this.config;

                if (_context11.t0) {
                  _context11.next = 5;
                  break;
                }

                _context11.next = 4;
                return this.getRelayerConfig();

              case 4:
                _context11.t0 = _context11.sent.config;

              case 5:
                this.config = _context11.t0;
                ensAddress = this.config.ensAddress;
                return _context11.abrupt('return', (0, _ethereum.resolveName)(this.provider, ensAddress, identity));

              case 8:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function resolveName(_x20) {
        return _ref14.apply(this, arguments);
      }

      return resolveName;
    }()
  }, {
    key: 'connect',
    value: function () {
      var _ref15 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee12(identityAddress) {
        var privateKey, wallet, key, url, method, body, response;
        return _regenerator2.default.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                privateKey = this.generatePrivateKey();
                wallet = new _ethers2.default.Wallet(privateKey, this.provider);
                key = wallet.address;
                url = this.relayerUrl + '/authorisation';
                method = 'POST';
                body = JSON.stringify({ identityAddress: identityAddress, key: key });
                _context12.next = 8;
                return (0, _http.fetch)(url, { headers: _http.headers, method: method, body: body });

              case 8:
                response = _context12.sent;

                if (!(response.status === 201)) {
                  _context12.next = 11;
                  break;
                }

                return _context12.abrupt('return', privateKey);

              case 11:
                throw new Error('' + response.status);

              case 12:
              case 'end':
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function connect(_x21) {
        return _ref15.apply(this, arguments);
      }

      return connect;
    }()
  }, {
    key: 'denyRequest',
    value: function () {
      var _ref16 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee13(identityAddress, publicKey) {
        var url, method, body, response;
        return _regenerator2.default.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                url = this.relayerUrl + '/authorisation/' + identityAddress;
                method = 'POST';
                body = JSON.stringify({ identityAddress: identityAddress, key: publicKey });
                _context13.next = 5;
                return (0, _http.fetch)(url, { headers: _http.headers, method: method, body: body });

              case 5:
                response = _context13.sent;

                if (!(response.status === 201)) {
                  _context13.next = 8;
                  break;
                }

                return _context13.abrupt('return', publicKey);

              case 8:
                throw new Error('' + response.status);

              case 9:
              case 'end':
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));

      function denyRequest(_x22, _x23) {
        return _ref16.apply(this, arguments);
      }

      return denyRequest;
    }()
  }, {
    key: 'fetchPendingAuthorisations',
    value: function () {
      var _ref17 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee14(identityAddress) {
        return _regenerator2.default.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                return _context14.abrupt('return', this.relayerObserver.fetchPendingAuthorisations(identityAddress));

              case 1:
              case 'end':
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function fetchPendingAuthorisations(_x24) {
        return _ref17.apply(this, arguments);
      }

      return fetchPendingAuthorisations;
    }()
  }, {
    key: 'subscribe',
    value: function subscribe(eventType, identityAddress, callback) {
      if (['AuthorisationsChanged'].includes(eventType)) {
        return this.relayerObserver.subscribe(eventType, identityAddress, callback);
      } else if (['KeyAdded', 'KeyRemoved'].includes(eventType)) {
        return this.blockchainObserver.subscribe(eventType, identityAddress, callback);
      }
      throw 'Unknown event type: ' + eventType;
    }
  }, {
    key: 'start',
    value: function () {
      var _ref18 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee15() {
        return _regenerator2.default.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return this.relayerObserver.start();

              case 2:
                _context15.next = 4;
                return this.blockchainObserver.start();

              case 4:
              case 'end':
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function start() {
        return _ref18.apply(this, arguments);
      }

      return start;
    }()
  }, {
    key: 'stop',
    value: function stop() {
      this.relayerObserver.stop();
      this.blockchainObserver.stop();
    }
  }, {
    key: 'finalizeAndStop',
    value: function () {
      var _ref19 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee16() {
        return _regenerator2.default.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return this.relayerObserver.finalizeAndStop();

              case 2:
                _context16.next = 4;
                return this.blockchainObserver.finalizeAndStop();

              case 4:
              case 'end':
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));

      function finalizeAndStop() {
        return _ref19.apply(this, arguments);
      }

      return finalizeAndStop;
    }()
  }]);
  return EthereumIdentitySDK;
}();

exports.default = EthereumIdentitySDK;
exports.MANAGEMENT_KEY = _universalLoginContracts.MANAGEMENT_KEY;
exports.ACTION_KEY = _universalLoginContracts.ACTION_KEY;
exports.ECDSA_TYPE = _universalLoginContracts.ECDSA_TYPE;
},{"babel-runtime/helpers/slicedToArray":"../../node_modules/babel-runtime/helpers/slicedToArray.js","babel-runtime/regenerator":"../../node_modules/babel-runtime/regenerator/index.js","babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","babel-runtime/helpers/extends":"../../node_modules/babel-runtime/helpers/extends.js","babel-runtime/helpers/classCallCheck":"../../node_modules/babel-runtime/helpers/classCallCheck.js","babel-runtime/helpers/createClass":"../../node_modules/babel-runtime/helpers/createClass.js","ethers":"../../node_modules/ethers/index.js","universal-login-contracts/build/Identity":"../../node_modules/universal-login-contracts/build/Identity.json","universal-login-contracts":"../../node_modules/universal-login-contracts/index.js","./utils/utils":"../../node_modules/universal-login-sdk/dist/utils/utils.js","universal-login-contracts/lib/calculateMessageSignature":"../../node_modules/universal-login-contracts/lib/calculateMessageSignature.js","./utils/ethereum":"../../node_modules/universal-login-sdk/dist/utils/ethereum.js","./observers/RelayerObserver":"../../node_modules/universal-login-sdk/dist/observers/RelayerObserver.js","./observers/BlockchainObserver":"../../node_modules/universal-login-sdk/dist/observers/BlockchainObserver.js","./utils/http":"../../node_modules/universal-login-sdk/dist/utils/http.js","./config":"../../node_modules/universal-login-sdk/dist/config.js"}],"../build/Token.json":[function(require,module,exports) {
module.exports = {
  "assembly": {
    ".code": [{
      "begin": 99,
      "end": 526,
      "name": "PUSH",
      "value": "80"
    }, {
      "begin": 99,
      "end": 526,
      "name": "PUSH",
      "value": "40"
    }, {
      "begin": 99,
      "end": 526,
      "name": "MSTORE"
    }, {
      "begin": 359,
      "end": 524,
      "name": "CALLVALUE"
    }, {
      "begin": 8,
      "end": 17,
      "name": "DUP1"
    }, {
      "begin": 5,
      "end": 7,
      "name": "ISZERO"
    }, {
      "begin": 5,
      "end": 7,
      "name": "PUSH [tag]",
      "value": "1"
    }, {
      "begin": 5,
      "end": 7,
      "name": "JUMPI"
    }, {
      "begin": 30,
      "end": 31,
      "name": "PUSH",
      "value": "0"
    }, {
      "begin": 27,
      "end": 28,
      "name": "DUP1"
    }, {
      "begin": 20,
      "end": 32,
      "name": "REVERT"
    }, {
      "begin": 5,
      "end": 7,
      "name": "tag",
      "value": "1"
    }, {
      "begin": 5,
      "end": 7,
      "name": "JUMPDEST"
    }, {
      "begin": -1,
      "end": -1,
      "name": "POP"
    }, {
      "begin": 319,
      "end": 352,
      "name": "PUSH",
      "value": "F4240"
    }, {
      "begin": 390,
      "end": 402,
      "name": "PUSH",
      "value": "1"
    }, {
      "begin": 390,
      "end": 419,
      "name": "DUP2"
    }, {
      "begin": 390,
      "end": 419,
      "name": "SWAP1"
    }, {
      "begin": 390,
      "end": 419,
      "name": "SSTORE"
    }, {
      "begin": 438,
      "end": 448,
      "name": "CALLER"
    }, {
      "begin": 429,
      "end": 437,
      "name": "PUSH",
      "value": "0"
    }, {
      "begin": 429,
      "end": 449,
      "name": "DUP2"
    }, {
      "begin": 429,
      "end": 449,
      "name": "DUP2"
    }, {
      "begin": 429,
      "end": 449,
      "name": "MSTORE"
    }, {
      "begin": 429,
      "end": 449,
      "name": "PUSH",
      "value": "20"
    }, {
      "begin": 429,
      "end": 449,
      "name": "DUP2"
    }, {
      "begin": 429,
      "end": 449,
      "name": "DUP2"
    }, {
      "begin": 429,
      "end": 449,
      "name": "MSTORE"
    }, {
      "begin": 429,
      "end": 449,
      "name": "PUSH",
      "value": "40"
    }, {
      "begin": 429,
      "end": 449,
      "name": "DUP1"
    }, {
      "begin": 429,
      "end": 449,
      "name": "DUP4"
    }, {
      "begin": 429,
      "end": 449,
      "name": "KECCAK256"
    }, {
      "begin": 429,
      "end": 466,
      "name": "DUP6"
    }, {
      "begin": 429,
      "end": 466,
      "name": "SWAP1"
    }, {
      "begin": 429,
      "end": 466,
      "name": "SSTORE"
    }, {
      "begin": 476,
      "end": 517,
      "name": "DUP1"
    }, {
      "begin": 476,
      "end": 517,
      "name": "MLOAD"
    }, {
      "begin": 476,
      "end": 517,
      "name": "SWAP5"
    }, {
      "begin": 476,
      "end": 517,
      "name": "DUP6"
    }, {
      "begin": 476,
      "end": 517,
      "name": "MSTORE"
    }, {
      "begin": 476,
      "end": 517,
      "name": "MLOAD"
    }, {
      "begin": 438,
      "end": 448,
      "name": "SWAP3"
    }, {
      "begin": 438,
      "end": 448,
      "name": "SWAP4"
    }, {
      "begin": 429,
      "end": 437,
      "name": "SWAP2"
    }, {
      "begin": 429,
      "end": 437,
      "name": "SWAP3"
    }, {
      "begin": 476,
      "end": 517,
      "name": "PUSH",
      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    }, {
      "begin": 476,
      "end": 517,
      "name": "SWAP3"
    }, {
      "begin": 476,
      "end": 517,
      "name": "DUP2"
    }, {
      "begin": 476,
      "end": 517,
      "name": "SWAP1"
    }, {
      "begin": 476,
      "end": 517,
      "name": "SUB"
    }, {
      "begin": 476,
      "end": 517,
      "name": "SWAP1"
    }, {
      "begin": 476,
      "end": 517,
      "name": "SWAP2"
    }, {
      "begin": 476,
      "end": 517,
      "name": "ADD"
    }, {
      "begin": 476,
      "end": 517,
      "name": "SWAP1"
    }, {
      "begin": 476,
      "end": 517,
      "name": "LOG3"
    }, {
      "begin": 99,
      "end": 526,
      "name": "PUSH #[$]",
      "value": "0000000000000000000000000000000000000000000000000000000000000000"
    }, {
      "begin": 99,
      "end": 526,
      "name": "DUP1"
    }, {
      "begin": 99,
      "end": 526,
      "name": "PUSH [$]",
      "value": "0000000000000000000000000000000000000000000000000000000000000000"
    }, {
      "begin": 99,
      "end": 526,
      "name": "PUSH",
      "value": "0"
    }, {
      "begin": 99,
      "end": 526,
      "name": "CODECOPY"
    }, {
      "begin": 99,
      "end": 526,
      "name": "PUSH",
      "value": "0"
    }, {
      "begin": 99,
      "end": 526,
      "name": "RETURN"
    }],
    ".data": {
      "0": {
        ".auxdata": "a165627a7a72305820fb35561f43ee38b5f17903daa340e5dc49197ebe7d7c43c3994fdb115edb6b340029",
        ".code": [{
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "80"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 99,
          "end": 526,
          "name": "MSTORE"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "4"
        }, {
          "begin": 99,
          "end": 526,
          "name": "CALLDATASIZE"
        }, {
          "begin": 99,
          "end": 526,
          "name": "LT"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "FFFFFFFF"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "100000000000000000000000000000000000000000000000000000000"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 99,
          "end": 526,
          "name": "CALLDATALOAD"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DIV"
        }, {
          "begin": 99,
          "end": 526,
          "name": "AND"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "6FDDE03"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP2"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "2"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "95EA7B3"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "3"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "18160DDD"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "4"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "23B872DD"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "5"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "2FF2E9DC"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "6"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "313CE567"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "7"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "66188463"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "8"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "70A08231"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "9"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "95D89B41"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "10"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "A9059CBB"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "11"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "D73DD623"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "12"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "DD62ED3E"
        }, {
          "begin": 99,
          "end": 526,
          "name": "EQ"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH [tag]",
          "value": "13"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPI"
        }, {
          "begin": 99,
          "end": 526,
          "name": "tag",
          "value": "1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "JUMPDEST"
        }, {
          "begin": 99,
          "end": 526,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 99,
          "end": 526,
          "name": "DUP1"
        }, {
          "begin": 99,
          "end": 526,
          "name": "REVERT"
        }, {
          "begin": 137,
          "end": 188,
          "name": "tag",
          "value": "2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "JUMPDEST"
        }, {
          "begin": 137,
          "end": 188,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "14"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "14"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH [tag]",
          "value": "15"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH [tag]",
          "value": "16"
        }, {
          "begin": 137,
          "end": 188,
          "name": "JUMP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "tag",
          "value": "15"
        }, {
          "begin": 137,
          "end": 188,
          "name": "JUMPDEST"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MLOAD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP3"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MSTORE"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP4"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MLOAD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP4"
        }, {
          "begin": 137,
          "end": 188,
          "name": "ADD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MSTORE"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP4"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MLOAD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP3"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP4"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP3"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP4"
        }, {
          "begin": 137,
          "end": 188,
          "name": "ADD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP6"
        }, {
          "begin": 137,
          "end": 188,
          "name": "ADD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP4"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP4"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 8,
          "end": 108,
          "name": "tag",
          "value": "17"
        }, {
          "begin": 8,
          "end": 108,
          "name": "JUMPDEST"
        }, {
          "begin": 33,
          "end": 36,
          "name": "DUP4"
        }, {
          "begin": 30,
          "end": 31,
          "name": "DUP2"
        }, {
          "begin": 27,
          "end": 37,
          "name": "LT"
        }, {
          "begin": 8,
          "end": 108,
          "name": "ISZERO"
        }, {
          "begin": 8,
          "end": 108,
          "name": "PUSH [tag]",
          "value": "18"
        }, {
          "begin": 8,
          "end": 108,
          "name": "JUMPI"
        }, {
          "begin": 90,
          "end": 101,
          "name": "DUP2"
        }, {
          "begin": 90,
          "end": 101,
          "name": "DUP2"
        }, {
          "begin": 90,
          "end": 101,
          "name": "ADD"
        }, {
          "begin": 84,
          "end": 102,
          "name": "MLOAD"
        }, {
          "begin": 71,
          "end": 82,
          "name": "DUP4"
        }, {
          "begin": 71,
          "end": 82,
          "name": "DUP3"
        }, {
          "begin": 71,
          "end": 82,
          "name": "ADD"
        }, {
          "begin": 64,
          "end": 103,
          "name": "MSTORE"
        }, {
          "begin": 52,
          "end": 54,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 45,
          "end": 55,
          "name": "ADD"
        }, {
          "begin": 8,
          "end": 108,
          "name": "PUSH [tag]",
          "value": "17"
        }, {
          "begin": 8,
          "end": 108,
          "name": "JUMP"
        }, {
          "begin": 8,
          "end": 108,
          "name": "tag",
          "value": "18"
        }, {
          "begin": 8,
          "end": 108,
          "name": "JUMPDEST"
        }, {
          "begin": 12,
          "end": 26,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "ADD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "1F"
        }, {
          "begin": 137,
          "end": 188,
          "name": "AND"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "ISZERO"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH [tag]",
          "value": "20"
        }, {
          "begin": 137,
          "end": 188,
          "name": "JUMPI"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP3"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SUB"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MLOAD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP4"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SUB"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "100"
        }, {
          "begin": 137,
          "end": 188,
          "name": "EXP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SUB"
        }, {
          "begin": 137,
          "end": 188,
          "name": "NOT"
        }, {
          "begin": 137,
          "end": 188,
          "name": "AND"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MSTORE"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 137,
          "end": 188,
          "name": "ADD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "tag",
          "value": "20"
        }, {
          "begin": 137,
          "end": 188,
          "name": "JUMPDEST"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP3"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "POP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MLOAD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SUB"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "RETURN"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "tag",
          "value": "3"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "JUMPDEST"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "21"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "21"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "PUSH [tag]",
          "value": "22"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "PUSH",
          "value": "4"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "CALLDATALOAD"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "AND"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "PUSH",
          "value": "24"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "CALLDATALOAD"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "PUSH [tag]",
          "value": "23"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "JUMP"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "tag",
          "value": "22"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "JUMPDEST"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "DUP1"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "MLOAD"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "SWAP2"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "ISZERO"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "ISZERO"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "DUP3"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "MSTORE"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "MLOAD"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "SWAP1"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "DUP2"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "SWAP1"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "SUB"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "ADD"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "SWAP1"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "RETURN"
        }, {
          "begin": 389,
          "end": 472,
          "name": "tag",
          "value": "4"
        }, {
          "begin": 389,
          "end": 472,
          "name": "JUMPDEST"
        }, {
          "begin": 389,
          "end": 472,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "24"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "24"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": 389,
          "end": 472,
          "name": "POP"
        }, {
          "begin": 389,
          "end": 472,
          "name": "PUSH [tag]",
          "value": "25"
        }, {
          "begin": 389,
          "end": 472,
          "name": "PUSH [tag]",
          "value": "26"
        }, {
          "begin": 389,
          "end": 472,
          "name": "JUMP"
        }, {
          "begin": 389,
          "end": 472,
          "name": "tag",
          "value": "25"
        }, {
          "begin": 389,
          "end": 472,
          "name": "JUMPDEST"
        }, {
          "begin": 389,
          "end": 472,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 389,
          "end": 472,
          "name": "DUP1"
        }, {
          "begin": 389,
          "end": 472,
          "name": "MLOAD"
        }, {
          "begin": 389,
          "end": 472,
          "name": "SWAP2"
        }, {
          "begin": 389,
          "end": 472,
          "name": "DUP3"
        }, {
          "begin": 389,
          "end": 472,
          "name": "MSTORE"
        }, {
          "begin": 389,
          "end": 472,
          "name": "MLOAD"
        }, {
          "begin": 389,
          "end": 472,
          "name": "SWAP1"
        }, {
          "begin": 389,
          "end": 472,
          "name": "DUP2"
        }, {
          "begin": 389,
          "end": 472,
          "name": "SWAP1"
        }, {
          "begin": 389,
          "end": 472,
          "name": "SUB"
        }, {
          "begin": 389,
          "end": 472,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 389,
          "end": 472,
          "name": "ADD"
        }, {
          "begin": 389,
          "end": 472,
          "name": "SWAP1"
        }, {
          "begin": 389,
          "end": 472,
          "name": "RETURN"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "tag",
          "value": "5"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "JUMPDEST"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "27"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "27"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "PUSH [tag]",
          "value": "22"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "PUSH",
          "value": "4"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "CALLDATALOAD"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "DUP2"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "AND"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "SWAP1"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "PUSH",
          "value": "24"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "CALLDATALOAD"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "AND"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "PUSH",
          "value": "44"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "CALLDATALOAD"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "PUSH [tag]",
          "value": "29"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "JUMP"
        }, {
          "begin": 278,
          "end": 352,
          "name": "tag",
          "value": "6"
        }, {
          "begin": 278,
          "end": 352,
          "name": "JUMPDEST"
        }, {
          "begin": 278,
          "end": 352,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "30"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "30"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": 278,
          "end": 352,
          "name": "POP"
        }, {
          "begin": 278,
          "end": 352,
          "name": "PUSH [tag]",
          "value": "25"
        }, {
          "begin": 278,
          "end": 352,
          "name": "PUSH [tag]",
          "value": "32"
        }, {
          "begin": 278,
          "end": 352,
          "name": "JUMP"
        }, {
          "begin": 237,
          "end": 271,
          "name": "tag",
          "value": "7"
        }, {
          "begin": 237,
          "end": 271,
          "name": "JUMPDEST"
        }, {
          "begin": 237,
          "end": 271,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "33"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "33"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": 237,
          "end": 271,
          "name": "POP"
        }, {
          "begin": 237,
          "end": 271,
          "name": "PUSH [tag]",
          "value": "34"
        }, {
          "begin": 237,
          "end": 271,
          "name": "PUSH [tag]",
          "value": "35"
        }, {
          "begin": 237,
          "end": 271,
          "name": "JUMP"
        }, {
          "begin": 237,
          "end": 271,
          "name": "tag",
          "value": "34"
        }, {
          "begin": 237,
          "end": 271,
          "name": "JUMPDEST"
        }, {
          "begin": 237,
          "end": 271,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 237,
          "end": 271,
          "name": "DUP1"
        }, {
          "begin": 237,
          "end": 271,
          "name": "MLOAD"
        }, {
          "begin": 237,
          "end": 271,
          "name": "PUSH",
          "value": "FF"
        }, {
          "begin": 237,
          "end": 271,
          "name": "SWAP1"
        }, {
          "begin": 237,
          "end": 271,
          "name": "SWAP3"
        }, {
          "begin": 237,
          "end": 271,
          "name": "AND"
        }, {
          "begin": 237,
          "end": 271,
          "name": "DUP3"
        }, {
          "begin": 237,
          "end": 271,
          "name": "MSTORE"
        }, {
          "begin": 237,
          "end": 271,
          "name": "MLOAD"
        }, {
          "begin": 237,
          "end": 271,
          "name": "SWAP1"
        }, {
          "begin": 237,
          "end": 271,
          "name": "DUP2"
        }, {
          "begin": 237,
          "end": 271,
          "name": "SWAP1"
        }, {
          "begin": 237,
          "end": 271,
          "name": "SUB"
        }, {
          "begin": 237,
          "end": 271,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 237,
          "end": 271,
          "name": "ADD"
        }, {
          "begin": 237,
          "end": 271,
          "name": "SWAP1"
        }, {
          "begin": 237,
          "end": 271,
          "name": "RETURN"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "tag",
          "value": "8"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "JUMPDEST"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "36"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "36"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "PUSH [tag]",
          "value": "22"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "PUSH",
          "value": "4"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "CALLDATALOAD"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "AND"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "PUSH",
          "value": "24"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "CALLDATALOAD"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "PUSH [tag]",
          "value": "38"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "JUMP"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "tag",
          "value": "9"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "JUMPDEST"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "39"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "39"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "PUSH [tag]",
          "value": "25"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "PUSH",
          "value": "4"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "CALLDATALOAD"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "AND"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "PUSH [tag]",
          "value": "41"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "JUMP"
        }, {
          "begin": 194,
          "end": 231,
          "name": "tag",
          "value": "10"
        }, {
          "begin": 194,
          "end": 231,
          "name": "JUMPDEST"
        }, {
          "begin": 194,
          "end": 231,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "42"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "42"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": 194,
          "end": 231,
          "name": "POP"
        }, {
          "begin": 194,
          "end": 231,
          "name": "PUSH [tag]",
          "value": "15"
        }, {
          "begin": 194,
          "end": 231,
          "name": "PUSH [tag]",
          "value": "44"
        }, {
          "begin": 194,
          "end": 231,
          "name": "JUMP"
        }, {
          "begin": 626,
          "end": 947,
          "name": "tag",
          "value": "11"
        }, {
          "begin": 626,
          "end": 947,
          "name": "JUMPDEST"
        }, {
          "begin": 626,
          "end": 947,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "49"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "49"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 626,
          "end": 947,
          "name": "PUSH [tag]",
          "value": "22"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 626,
          "end": 947,
          "name": "PUSH",
          "value": "4"
        }, {
          "begin": 626,
          "end": 947,
          "name": "CALLDATALOAD"
        }, {
          "begin": 626,
          "end": 947,
          "name": "AND"
        }, {
          "begin": 626,
          "end": 947,
          "name": "PUSH",
          "value": "24"
        }, {
          "begin": 626,
          "end": 947,
          "name": "CALLDATALOAD"
        }, {
          "begin": 626,
          "end": 947,
          "name": "PUSH [tag]",
          "value": "51"
        }, {
          "begin": 626,
          "end": 947,
          "name": "JUMP"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "tag",
          "value": "12"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "JUMPDEST"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "52"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "52"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "PUSH [tag]",
          "value": "22"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "PUSH",
          "value": "4"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "CALLDATALOAD"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "AND"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "PUSH",
          "value": "24"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "CALLDATALOAD"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "PUSH [tag]",
          "value": "54"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "JUMP"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "tag",
          "value": "13"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "JUMPDEST"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "CALLVALUE"
        }, {
          "begin": 8,
          "end": 17,
          "name": "DUP1"
        }, {
          "begin": 5,
          "end": 7,
          "name": "ISZERO"
        }, {
          "begin": 5,
          "end": 7,
          "name": "PUSH [tag]",
          "value": "55"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPI"
        }, {
          "begin": 30,
          "end": 31,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 27,
          "end": 28,
          "name": "DUP1"
        }, {
          "begin": 20,
          "end": 32,
          "name": "REVERT"
        }, {
          "begin": 5,
          "end": 7,
          "name": "tag",
          "value": "55"
        }, {
          "begin": 5,
          "end": 7,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "PUSH [tag]",
          "value": "25"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "PUSH",
          "value": "4"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "CALLDATALOAD"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "DUP2"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "AND"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "SWAP1"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "PUSH",
          "value": "24"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "CALLDATALOAD"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "AND"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "PUSH [tag]",
          "value": "57"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "JUMP"
        }, {
          "begin": 137,
          "end": 188,
          "name": "tag",
          "value": "16"
        }, {
          "begin": 137,
          "end": 188,
          "name": "JUMPDEST"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MLOAD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP3"
        }, {
          "begin": 137,
          "end": 188,
          "name": "ADD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP1"
        }, {
          "begin": 137,
          "end": 188,
          "name": "SWAP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MSTORE"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "13"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MSTORE"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "556E6976657273616C4C6F67696E546F6B656E00000000000000000000000000"
        }, {
          "begin": 137,
          "end": 188,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP3"
        }, {
          "begin": 137,
          "end": 188,
          "name": "ADD"
        }, {
          "begin": 137,
          "end": 188,
          "name": "MSTORE"
        }, {
          "begin": 137,
          "end": 188,
          "name": "DUP2"
        }, {
          "begin": 137,
          "end": 188,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "tag",
          "value": "23"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "JUMPDEST"
        }, {
          "begin": 1901,
          "end": 1911,
          "name": "CALLER"
        }, {
          "begin": 1881,
          "end": 1885,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "DUP2"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "DUP2"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "MSTORE"
        }, {
          "begin": 1893,
          "end": 1900,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "SWAP1"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "DUP2"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "MSTORE"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "DUP1"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "DUP4"
        }, {
          "begin": 1893,
          "end": 1912,
          "name": "KECCAK256"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "DUP8"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "AND"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "DUP1"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "DUP6"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "MSTORE"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "SWAP1"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "DUP4"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "MSTORE"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "DUP2"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "DUP5"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "KECCAK256"
        }, {
          "begin": 1893,
          "end": 1931,
          "name": "DUP7"
        }, {
          "begin": 1893,
          "end": 1931,
          "name": "SWAP1"
        }, {
          "begin": 1893,
          "end": 1931,
          "name": "SSTORE"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "DUP2"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "MLOAD"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "DUP7"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "DUP2"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "MSTORE"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "SWAP2"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "MLOAD"
        }, {
          "begin": 1881,
          "end": 1885,
          "name": "SWAP4"
        }, {
          "begin": 1881,
          "end": 1885,
          "name": "SWAP5"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "SWAP1"
        }, {
          "begin": 1893,
          "end": 1922,
          "name": "SWAP4"
        }, {
          "begin": 1901,
          "end": 1911,
          "name": "SWAP1"
        }, {
          "begin": 1901,
          "end": 1911,
          "name": "SWAP3"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "PUSH",
          "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "SWAP3"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "DUP3"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "SWAP1"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "SUB"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "ADD"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "SWAP1"
        }, {
          "begin": 1942,
          "end": 1980,
          "name": "LOG3"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 1993,
          "end": 1997,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "SWAP3"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "SWAP2"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "POP"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "POP"
        }, {
          "begin": 1814,
          "end": 2002,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 389,
          "end": 472,
          "name": "tag",
          "value": "26"
        }, {
          "begin": 389,
          "end": 472,
          "name": "JUMPDEST"
        }, {
          "begin": 455,
          "end": 467,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": 455,
          "end": 467,
          "name": "SLOAD"
        }, {
          "begin": 389,
          "end": 472,
          "name": "SWAP1"
        }, {
          "begin": 389,
          "end": 472,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "tag",
          "value": "29"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 864,
          "end": 879,
          "name": "DUP4"
        }, {
          "begin": 864,
          "end": 879,
          "name": "AND"
        }, {
          "begin": 832,
          "end": 836,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 864,
          "end": 879,
          "name": "SWAP1"
        }, {
          "begin": 864,
          "end": 879,
          "name": "DUP2"
        }, {
          "begin": 864,
          "end": 879,
          "name": "MSTORE"
        }, {
          "begin": 864,
          "end": 879,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 864,
          "end": 879,
          "name": "DUP2"
        }, {
          "begin": 864,
          "end": 879,
          "name": "SWAP1"
        }, {
          "begin": 864,
          "end": 879,
          "name": "MSTORE"
        }, {
          "begin": 864,
          "end": 879,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 864,
          "end": 879,
          "name": "DUP2"
        }, {
          "begin": 864,
          "end": 879,
          "name": "KECCAK256"
        }, {
          "begin": 864,
          "end": 879,
          "name": "SLOAD"
        }, {
          "begin": 854,
          "end": 879,
          "name": "DUP3"
        }, {
          "begin": 854,
          "end": 879,
          "name": "GT"
        }, {
          "begin": 854,
          "end": 879,
          "name": "ISZERO"
        }, {
          "begin": 846,
          "end": 880,
          "name": "PUSH [tag]",
          "value": "61"
        }, {
          "begin": 846,
          "end": 880,
          "name": "JUMPI"
        }, {
          "begin": 846,
          "end": 880,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 846,
          "end": 880,
          "name": "DUP1"
        }, {
          "begin": 846,
          "end": 880,
          "name": "REVERT"
        }, {
          "begin": 846,
          "end": 880,
          "name": "tag",
          "value": "61"
        }, {
          "begin": 846,
          "end": 880,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 904,
          "end": 918,
          "name": "DUP5"
        }, {
          "begin": 904,
          "end": 918,
          "name": "AND"
        }, {
          "begin": 904,
          "end": 918,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 904,
          "end": 918,
          "name": "SWAP1"
        }, {
          "begin": 904,
          "end": 918,
          "name": "DUP2"
        }, {
          "begin": 904,
          "end": 918,
          "name": "MSTORE"
        }, {
          "begin": 904,
          "end": 911,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 904,
          "end": 918,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 904,
          "end": 918,
          "name": "SWAP1"
        }, {
          "begin": 904,
          "end": 918,
          "name": "DUP2"
        }, {
          "begin": 904,
          "end": 918,
          "name": "MSTORE"
        }, {
          "begin": 904,
          "end": 918,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 904,
          "end": 918,
          "name": "DUP1"
        }, {
          "begin": 904,
          "end": 918,
          "name": "DUP4"
        }, {
          "begin": 904,
          "end": 918,
          "name": "KECCAK256"
        }, {
          "begin": 919,
          "end": 929,
          "name": "CALLER"
        }, {
          "begin": 904,
          "end": 930,
          "name": "DUP5"
        }, {
          "begin": 904,
          "end": 930,
          "name": "MSTORE"
        }, {
          "begin": 904,
          "end": 930,
          "name": "SWAP1"
        }, {
          "begin": 904,
          "end": 930,
          "name": "SWAP2"
        }, {
          "begin": 904,
          "end": 930,
          "name": "MSTORE"
        }, {
          "begin": 904,
          "end": 930,
          "name": "SWAP1"
        }, {
          "begin": 904,
          "end": 930,
          "name": "KECCAK256"
        }, {
          "begin": 904,
          "end": 930,
          "name": "SLOAD"
        }, {
          "begin": 894,
          "end": 930,
          "name": "DUP3"
        }, {
          "begin": 894,
          "end": 930,
          "name": "GT"
        }, {
          "begin": 894,
          "end": 930,
          "name": "ISZERO"
        }, {
          "begin": 886,
          "end": 931,
          "name": "PUSH [tag]",
          "value": "62"
        }, {
          "begin": 886,
          "end": 931,
          "name": "JUMPI"
        }, {
          "begin": 886,
          "end": 931,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 886,
          "end": 931,
          "name": "DUP1"
        }, {
          "begin": 886,
          "end": 931,
          "name": "REVERT"
        }, {
          "begin": 886,
          "end": 931,
          "name": "tag",
          "value": "62"
        }, {
          "begin": 886,
          "end": 931,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 945,
          "end": 962,
          "name": "DUP4"
        }, {
          "begin": 945,
          "end": 962,
          "name": "AND"
        }, {
          "begin": 945,
          "end": 962,
          "name": "ISZERO"
        }, {
          "begin": 945,
          "end": 962,
          "name": "ISZERO"
        }, {
          "begin": 937,
          "end": 963,
          "name": "PUSH [tag]",
          "value": "63"
        }, {
          "begin": 937,
          "end": 963,
          "name": "JUMPI"
        }, {
          "begin": 937,
          "end": 963,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 937,
          "end": 963,
          "name": "DUP1"
        }, {
          "begin": 937,
          "end": 963,
          "name": "REVERT"
        }, {
          "begin": 937,
          "end": 963,
          "name": "tag",
          "value": "63"
        }, {
          "begin": 937,
          "end": 963,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "DUP5"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "AND"
        }, {
          "begin": 988,
          "end": 996,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "SWAP1"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "DUP2"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "MSTORE"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "DUP2"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "SWAP1"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "MSTORE"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "SWAP1"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "KECCAK256"
        }, {
          "begin": 988,
          "end": 1003,
          "name": "SLOAD"
        }, {
          "begin": 988,
          "end": 1015,
          "name": "PUSH [tag]",
          "value": "64"
        }, {
          "begin": 988,
          "end": 1015,
          "name": "SWAP1"
        }, {
          "begin": 1008,
          "end": 1014,
          "name": "DUP4"
        }, {
          "begin": 988,
          "end": 1015,
          "name": "PUSH",
          "value": "FFFFFFFF"
        }, {
          "begin": 988,
          "end": 1007,
          "name": "PUSH [tag]",
          "value": "65"
        }, {
          "begin": 988,
          "end": 1015,
          "name": "AND"
        }, {
          "begin": 988,
          "end": 1015,
          "name": "JUMP",
          "value": "[in]"
        }, {
          "begin": 988,
          "end": 1015,
          "name": "tag",
          "value": "64"
        }, {
          "begin": 988,
          "end": 1015,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 970,
          "end": 985,
          "name": "DUP1"
        }, {
          "begin": 970,
          "end": 985,
          "name": "DUP7"
        }, {
          "begin": 970,
          "end": 985,
          "name": "AND"
        }, {
          "begin": 970,
          "end": 978,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 970,
          "end": 985,
          "name": "SWAP1"
        }, {
          "begin": 970,
          "end": 985,
          "name": "DUP2"
        }, {
          "begin": 970,
          "end": 985,
          "name": "MSTORE"
        }, {
          "begin": 970,
          "end": 985,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 970,
          "end": 985,
          "name": "DUP2"
        }, {
          "begin": 970,
          "end": 985,
          "name": "SWAP1"
        }, {
          "begin": 970,
          "end": 985,
          "name": "MSTORE"
        }, {
          "begin": 970,
          "end": 985,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 970,
          "end": 985,
          "name": "DUP1"
        }, {
          "begin": 970,
          "end": 985,
          "name": "DUP3"
        }, {
          "begin": 970,
          "end": 985,
          "name": "KECCAK256"
        }, {
          "begin": 970,
          "end": 1015,
          "name": "SWAP4"
        }, {
          "begin": 970,
          "end": 1015,
          "name": "SWAP1"
        }, {
          "begin": 970,
          "end": 1015,
          "name": "SWAP4"
        }, {
          "begin": 970,
          "end": 1015,
          "name": "SSTORE"
        }, {
          "begin": 1037,
          "end": 1050,
          "name": "SWAP1"
        }, {
          "begin": 1037,
          "end": 1050,
          "name": "DUP6"
        }, {
          "begin": 1037,
          "end": 1050,
          "name": "AND"
        }, {
          "begin": 1037,
          "end": 1050,
          "name": "DUP2"
        }, {
          "begin": 1037,
          "end": 1050,
          "name": "MSTORE"
        }, {
          "begin": 1037,
          "end": 1050,
          "name": "KECCAK256"
        }, {
          "begin": 1037,
          "end": 1050,
          "name": "SLOAD"
        }, {
          "begin": 1037,
          "end": 1062,
          "name": "PUSH [tag]",
          "value": "66"
        }, {
          "begin": 1037,
          "end": 1062,
          "name": "SWAP1"
        }, {
          "begin": 1055,
          "end": 1061,
          "name": "DUP4"
        }, {
          "begin": 1037,
          "end": 1062,
          "name": "PUSH",
          "value": "FFFFFFFF"
        }, {
          "begin": 1037,
          "end": 1054,
          "name": "PUSH [tag]",
          "value": "67"
        }, {
          "begin": 1037,
          "end": 1062,
          "name": "AND"
        }, {
          "begin": 1037,
          "end": 1062,
          "name": "JUMP",
          "value": "[in]"
        }, {
          "begin": 1037,
          "end": 1062,
          "name": "tag",
          "value": "66"
        }, {
          "begin": 1037,
          "end": 1062,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "DUP1"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "DUP6"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "AND"
        }, {
          "begin": 1021,
          "end": 1029,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "SWAP1"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "DUP2"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "MSTORE"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "DUP2"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "DUP2"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "MSTORE"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "DUP1"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "DUP4"
        }, {
          "begin": 1021,
          "end": 1034,
          "name": "KECCAK256"
        }, {
          "begin": 1021,
          "end": 1062,
          "name": "SWAP5"
        }, {
          "begin": 1021,
          "end": 1062,
          "name": "SWAP1"
        }, {
          "begin": 1021,
          "end": 1062,
          "name": "SWAP5"
        }, {
          "begin": 1021,
          "end": 1062,
          "name": "SSTORE"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "SWAP2"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "DUP8"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "AND"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "DUP2"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "MSTORE"
        }, {
          "begin": 1097,
          "end": 1104,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "DUP3"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "MSTORE"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "DUP3"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "DUP2"
        }, {
          "begin": 1097,
          "end": 1111,
          "name": "KECCAK256"
        }, {
          "begin": 1112,
          "end": 1122,
          "name": "CALLER"
        }, {
          "begin": 1097,
          "end": 1123,
          "name": "DUP3"
        }, {
          "begin": 1097,
          "end": 1123,
          "name": "MSTORE"
        }, {
          "begin": 1097,
          "end": 1123,
          "name": "SWAP1"
        }, {
          "begin": 1097,
          "end": 1123,
          "name": "SWAP2"
        }, {
          "begin": 1097,
          "end": 1123,
          "name": "MSTORE"
        }, {
          "begin": 1097,
          "end": 1123,
          "name": "KECCAK256"
        }, {
          "begin": 1097,
          "end": 1123,
          "name": "SLOAD"
        }, {
          "begin": 1097,
          "end": 1135,
          "name": "PUSH [tag]",
          "value": "68"
        }, {
          "begin": 1097,
          "end": 1135,
          "name": "SWAP1"
        }, {
          "begin": 1128,
          "end": 1134,
          "name": "DUP4"
        }, {
          "begin": 1097,
          "end": 1135,
          "name": "PUSH",
          "value": "FFFFFFFF"
        }, {
          "begin": 1097,
          "end": 1127,
          "name": "PUSH [tag]",
          "value": "65"
        }, {
          "begin": 1097,
          "end": 1135,
          "name": "AND"
        }, {
          "begin": 1097,
          "end": 1135,
          "name": "JUMP",
          "value": "[in]"
        }, {
          "begin": 1097,
          "end": 1135,
          "name": "tag",
          "value": "68"
        }, {
          "begin": 1097,
          "end": 1135,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "DUP1"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "DUP7"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "AND"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "DUP2"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "DUP2"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "MSTORE"
        }, {
          "begin": 1068,
          "end": 1075,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "SWAP1"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "DUP2"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "MSTORE"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "DUP1"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "DUP4"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "KECCAK256"
        }, {
          "begin": 1083,
          "end": 1093,
          "name": "CALLER"
        }, {
          "begin": 1068,
          "end": 1094,
          "name": "DUP5"
        }, {
          "begin": 1068,
          "end": 1094,
          "name": "MSTORE"
        }, {
          "begin": 1068,
          "end": 1094,
          "name": "DUP3"
        }, {
          "begin": 1068,
          "end": 1094,
          "name": "MSTORE"
        }, {
          "begin": 1068,
          "end": 1094,
          "name": "SWAP2"
        }, {
          "begin": 1068,
          "end": 1094,
          "name": "DUP3"
        }, {
          "begin": 1068,
          "end": 1094,
          "name": "SWAP1"
        }, {
          "begin": 1068,
          "end": 1094,
          "name": "KECCAK256"
        }, {
          "begin": 1068,
          "end": 1135,
          "name": "SWAP5"
        }, {
          "begin": 1068,
          "end": 1135,
          "name": "SWAP1"
        }, {
          "begin": 1068,
          "end": 1135,
          "name": "SWAP5"
        }, {
          "begin": 1068,
          "end": 1135,
          "name": "SSTORE"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "DUP1"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "MLOAD"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "DUP7"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "DUP2"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "MSTORE"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SWAP1"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "MLOAD"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SWAP3"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "DUP8"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "AND"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SWAP4"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "SWAP2"
        }, {
          "begin": 1068,
          "end": 1082,
          "name": "SWAP3"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "PUSH",
          "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SWAP3"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SWAP2"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "DUP2"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SWAP1"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SUB"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SWAP1"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SWAP2"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "ADD"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "SWAP1"
        }, {
          "begin": 1146,
          "end": 1174,
          "name": "LOG3"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 1187,
          "end": 1191,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "SWAP4"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "SWAP3"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "POP"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "POP"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "POP"
        }, {
          "begin": 726,
          "end": 1196,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 278,
          "end": 352,
          "name": "tag",
          "value": "32"
        }, {
          "begin": 278,
          "end": 352,
          "name": "JUMPDEST"
        }, {
          "begin": 319,
          "end": 352,
          "name": "PUSH",
          "value": "F4240"
        }, {
          "begin": 278,
          "end": 352,
          "name": "DUP2"
        }, {
          "begin": 278,
          "end": 352,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 237,
          "end": 271,
          "name": "tag",
          "value": "35"
        }, {
          "begin": 237,
          "end": 271,
          "name": "JUMPDEST"
        }, {
          "begin": 270,
          "end": 271,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 237,
          "end": 271,
          "name": "DUP2"
        }, {
          "begin": 237,
          "end": 271,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "tag",
          "value": "38"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "JUMPDEST"
        }, {
          "begin": 3826,
          "end": 3836,
          "name": "CALLER"
        }, {
          "begin": 3785,
          "end": 3789,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "SWAP1"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "DUP2"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "MSTORE"
        }, {
          "begin": 3818,
          "end": 3825,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "SWAP1"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "DUP2"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "MSTORE"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "DUP1"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "DUP4"
        }, {
          "begin": 3818,
          "end": 3837,
          "name": "KECCAK256"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "DUP7"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "AND"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "DUP5"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "MSTORE"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "SWAP1"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "SWAP2"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "MSTORE"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "DUP2"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "KECCAK256"
        }, {
          "begin": 3818,
          "end": 3847,
          "name": "SLOAD"
        }, {
          "begin": 3857,
          "end": 3885,
          "name": "DUP1"
        }, {
          "begin": 3857,
          "end": 3885,
          "name": "DUP4"
        }, {
          "begin": 3857,
          "end": 3885,
          "name": "LT"
        }, {
          "begin": 3853,
          "end": 4018,
          "name": "PUSH [tag]",
          "value": "70"
        }, {
          "begin": 3853,
          "end": 4018,
          "name": "JUMPI"
        }, {
          "begin": 3903,
          "end": 3913,
          "name": "CALLER"
        }, {
          "begin": 3927,
          "end": 3928,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "SWAP1"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "DUP2"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "MSTORE"
        }, {
          "begin": 3895,
          "end": 3902,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "SWAP1"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "DUP2"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "MSTORE"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "DUP1"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "DUP4"
        }, {
          "begin": 3895,
          "end": 3914,
          "name": "KECCAK256"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 3895,
          "end": 3924,
          "name": "DUP9"
        }, {
          "begin": 3895,
          "end": 3924,
          "name": "AND"
        }, {
          "begin": 3895,
          "end": 3924,
          "name": "DUP5"
        }, {
          "begin": 3895,
          "end": 3924,
          "name": "MSTORE"
        }, {
          "begin": 3895,
          "end": 3924,
          "name": "SWAP1"
        }, {
          "begin": 3895,
          "end": 3924,
          "name": "SWAP2"
        }, {
          "begin": 3895,
          "end": 3924,
          "name": "MSTORE"
        }, {
          "begin": 3895,
          "end": 3924,
          "name": "DUP2"
        }, {
          "begin": 3895,
          "end": 3924,
          "name": "KECCAK256"
        }, {
          "begin": 3895,
          "end": 3928,
          "name": "SSTORE"
        }, {
          "begin": 3853,
          "end": 4018,
          "name": "PUSH [tag]",
          "value": "71"
        }, {
          "begin": 3853,
          "end": 4018,
          "name": "JUMP"
        }, {
          "begin": 3853,
          "end": 4018,
          "name": "tag",
          "value": "70"
        }, {
          "begin": 3853,
          "end": 4018,
          "name": "JUMPDEST"
        }, {
          "begin": 3981,
          "end": 4011,
          "name": "PUSH [tag]",
          "value": "72"
        }, {
          "begin": 3981,
          "end": 3989,
          "name": "DUP2"
        }, {
          "begin": 3994,
          "end": 4010,
          "name": "DUP5"
        }, {
          "begin": 3981,
          "end": 4011,
          "name": "PUSH",
          "value": "FFFFFFFF"
        }, {
          "begin": 3981,
          "end": 3993,
          "name": "PUSH [tag]",
          "value": "65"
        }, {
          "begin": 3981,
          "end": 4011,
          "name": "AND"
        }, {
          "begin": 3981,
          "end": 4011,
          "name": "JUMP",
          "value": "[in]"
        }, {
          "begin": 3981,
          "end": 4011,
          "name": "tag",
          "value": "72"
        }, {
          "begin": 3981,
          "end": 4011,
          "name": "JUMPDEST"
        }, {
          "begin": 3957,
          "end": 3967,
          "name": "CALLER"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "SWAP1"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "DUP2"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "MSTORE"
        }, {
          "begin": 3949,
          "end": 3956,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "SWAP1"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "DUP2"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "MSTORE"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "DUP1"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "DUP4"
        }, {
          "begin": 3949,
          "end": 3968,
          "name": "KECCAK256"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 3949,
          "end": 3978,
          "name": "DUP10"
        }, {
          "begin": 3949,
          "end": 3978,
          "name": "AND"
        }, {
          "begin": 3949,
          "end": 3978,
          "name": "DUP5"
        }, {
          "begin": 3949,
          "end": 3978,
          "name": "MSTORE"
        }, {
          "begin": 3949,
          "end": 3978,
          "name": "SWAP1"
        }, {
          "begin": 3949,
          "end": 3978,
          "name": "SWAP2"
        }, {
          "begin": 3949,
          "end": 3978,
          "name": "MSTORE"
        }, {
          "begin": 3949,
          "end": 3978,
          "name": "SWAP1"
        }, {
          "begin": 3949,
          "end": 3978,
          "name": "KECCAK256"
        }, {
          "begin": 3949,
          "end": 4011,
          "name": "SSTORE"
        }, {
          "begin": 3853,
          "end": 4018,
          "name": "tag",
          "value": "71"
        }, {
          "begin": 3853,
          "end": 4018,
          "name": "JUMPDEST"
        }, {
          "begin": 4037,
          "end": 4047,
          "name": "CALLER"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "DUP2"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "DUP2"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "MSTORE"
        }, {
          "begin": 4059,
          "end": 4066,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "SWAP1"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "DUP2"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "MSTORE"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "DUP1"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "DUP4"
        }, {
          "begin": 4059,
          "end": 4078,
          "name": "KECCAK256"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "DUP10"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "AND"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "DUP1"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "DUP6"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "MSTORE"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "SWAP1"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "DUP4"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "MSTORE"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "SWAP3"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "DUP2"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "SWAP1"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "KECCAK256"
        }, {
          "begin": 4059,
          "end": 4088,
          "name": "SLOAD"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "DUP2"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "MLOAD"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP1"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "DUP2"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "MSTORE"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP1"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "MLOAD"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP3"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP4"
        }, {
          "begin": 4037,
          "end": 4047,
          "name": "SWAP3"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "PUSH",
          "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP3"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP2"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "DUP2"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP1"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SUB"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP1"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP2"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "ADD"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "SWAP1"
        }, {
          "begin": 4028,
          "end": 4089,
          "name": "LOG3"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 4102,
          "end": 4106,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": 4102,
          "end": 4106,
          "name": "SWAP4"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "SWAP3"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 3679,
          "end": 4111,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "tag",
          "value": "41"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "AND"
        }, {
          "begin": 1205,
          "end": 1212,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "SWAP1"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "DUP2"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "MSTORE"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "DUP2"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "SWAP1"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "MSTORE"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "SWAP1"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "KECCAK256"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "SLOAD"
        }, {
          "begin": 1227,
          "end": 1243,
          "name": "SWAP1"
        }, {
          "begin": 1149,
          "end": 1248,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 194,
          "end": 231,
          "name": "tag",
          "value": "44"
        }, {
          "begin": 194,
          "end": 231,
          "name": "JUMPDEST"
        }, {
          "begin": 194,
          "end": 231,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 194,
          "end": 231,
          "name": "DUP1"
        }, {
          "begin": 194,
          "end": 231,
          "name": "MLOAD"
        }, {
          "begin": 194,
          "end": 231,
          "name": "DUP1"
        }, {
          "begin": 194,
          "end": 231,
          "name": "DUP3"
        }, {
          "begin": 194,
          "end": 231,
          "name": "ADD"
        }, {
          "begin": 194,
          "end": 231,
          "name": "SWAP1"
        }, {
          "begin": 194,
          "end": 231,
          "name": "SWAP2"
        }, {
          "begin": 194,
          "end": 231,
          "name": "MSTORE"
        }, {
          "begin": 194,
          "end": 231,
          "name": "PUSH",
          "value": "3"
        }, {
          "begin": 194,
          "end": 231,
          "name": "DUP2"
        }, {
          "begin": 194,
          "end": 231,
          "name": "MSTORE"
        }, {
          "begin": 194,
          "end": 231,
          "name": "PUSH",
          "value": "554E4C0000000000000000000000000000000000000000000000000000000000"
        }, {
          "begin": 194,
          "end": 231,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 194,
          "end": 231,
          "name": "DUP3"
        }, {
          "begin": 194,
          "end": 231,
          "name": "ADD"
        }, {
          "begin": 194,
          "end": 231,
          "name": "MSTORE"
        }, {
          "begin": 194,
          "end": 231,
          "name": "DUP2"
        }, {
          "begin": 194,
          "end": 231,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 626,
          "end": 947,
          "name": "tag",
          "value": "51"
        }, {
          "begin": 626,
          "end": 947,
          "name": "JUMPDEST"
        }, {
          "begin": 728,
          "end": 738,
          "name": "CALLER"
        }, {
          "begin": 689,
          "end": 693,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 719,
          "end": 739,
          "name": "SWAP1"
        }, {
          "begin": 719,
          "end": 739,
          "name": "DUP2"
        }, {
          "begin": 719,
          "end": 739,
          "name": "MSTORE"
        }, {
          "begin": 719,
          "end": 739,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 719,
          "end": 739,
          "name": "DUP2"
        }, {
          "begin": 719,
          "end": 739,
          "name": "SWAP1"
        }, {
          "begin": 719,
          "end": 739,
          "name": "MSTORE"
        }, {
          "begin": 719,
          "end": 739,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 719,
          "end": 739,
          "name": "DUP2"
        }, {
          "begin": 719,
          "end": 739,
          "name": "KECCAK256"
        }, {
          "begin": 719,
          "end": 739,
          "name": "SLOAD"
        }, {
          "begin": 709,
          "end": 739,
          "name": "DUP3"
        }, {
          "begin": 709,
          "end": 739,
          "name": "GT"
        }, {
          "begin": 709,
          "end": 739,
          "name": "ISZERO"
        }, {
          "begin": 701,
          "end": 740,
          "name": "PUSH [tag]",
          "value": "75"
        }, {
          "begin": 701,
          "end": 740,
          "name": "JUMPI"
        }, {
          "begin": 701,
          "end": 740,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 701,
          "end": 740,
          "name": "DUP1"
        }, {
          "begin": 701,
          "end": 740,
          "name": "REVERT"
        }, {
          "begin": 701,
          "end": 740,
          "name": "tag",
          "value": "75"
        }, {
          "begin": 701,
          "end": 740,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 754,
          "end": 771,
          "name": "DUP4"
        }, {
          "begin": 754,
          "end": 771,
          "name": "AND"
        }, {
          "begin": 754,
          "end": 771,
          "name": "ISZERO"
        }, {
          "begin": 754,
          "end": 771,
          "name": "ISZERO"
        }, {
          "begin": 746,
          "end": 772,
          "name": "PUSH [tag]",
          "value": "76"
        }, {
          "begin": 746,
          "end": 772,
          "name": "JUMPI"
        }, {
          "begin": 746,
          "end": 772,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 746,
          "end": 772,
          "name": "DUP1"
        }, {
          "begin": 746,
          "end": 772,
          "name": "REVERT"
        }, {
          "begin": 746,
          "end": 772,
          "name": "tag",
          "value": "76"
        }, {
          "begin": 746,
          "end": 772,
          "name": "JUMPDEST"
        }, {
          "begin": 811,
          "end": 821,
          "name": "CALLER"
        }, {
          "begin": 802,
          "end": 810,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 802,
          "end": 822,
          "name": "SWAP1"
        }, {
          "begin": 802,
          "end": 822,
          "name": "DUP2"
        }, {
          "begin": 802,
          "end": 822,
          "name": "MSTORE"
        }, {
          "begin": 802,
          "end": 822,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 802,
          "end": 822,
          "name": "DUP2"
        }, {
          "begin": 802,
          "end": 822,
          "name": "SWAP1"
        }, {
          "begin": 802,
          "end": 822,
          "name": "MSTORE"
        }, {
          "begin": 802,
          "end": 822,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 802,
          "end": 822,
          "name": "SWAP1"
        }, {
          "begin": 802,
          "end": 822,
          "name": "KECCAK256"
        }, {
          "begin": 802,
          "end": 822,
          "name": "SLOAD"
        }, {
          "begin": 802,
          "end": 834,
          "name": "PUSH [tag]",
          "value": "77"
        }, {
          "begin": 802,
          "end": 834,
          "name": "SWAP1"
        }, {
          "begin": 827,
          "end": 833,
          "name": "DUP4"
        }, {
          "begin": 802,
          "end": 834,
          "name": "PUSH",
          "value": "FFFFFFFF"
        }, {
          "begin": 802,
          "end": 826,
          "name": "PUSH [tag]",
          "value": "65"
        }, {
          "begin": 802,
          "end": 834,
          "name": "AND"
        }, {
          "begin": 802,
          "end": 834,
          "name": "JUMP",
          "value": "[in]"
        }, {
          "begin": 802,
          "end": 834,
          "name": "tag",
          "value": "77"
        }, {
          "begin": 802,
          "end": 834,
          "name": "JUMPDEST"
        }, {
          "begin": 788,
          "end": 798,
          "name": "CALLER"
        }, {
          "begin": 779,
          "end": 787,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 779,
          "end": 799,
          "name": "SWAP1"
        }, {
          "begin": 779,
          "end": 799,
          "name": "DUP2"
        }, {
          "begin": 779,
          "end": 799,
          "name": "MSTORE"
        }, {
          "begin": 779,
          "end": 799,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 779,
          "end": 799,
          "name": "DUP2"
        }, {
          "begin": 779,
          "end": 799,
          "name": "SWAP1"
        }, {
          "begin": 779,
          "end": 799,
          "name": "MSTORE"
        }, {
          "begin": 779,
          "end": 799,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 779,
          "end": 799,
          "name": "DUP1"
        }, {
          "begin": 779,
          "end": 799,
          "name": "DUP3"
        }, {
          "begin": 779,
          "end": 799,
          "name": "KECCAK256"
        }, {
          "begin": 779,
          "end": 834,
          "name": "SWAP3"
        }, {
          "begin": 779,
          "end": 834,
          "name": "SWAP1"
        }, {
          "begin": 779,
          "end": 834,
          "name": "SWAP3"
        }, {
          "begin": 779,
          "end": 834,
          "name": "SSTORE"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 856,
          "end": 869,
          "name": "DUP6"
        }, {
          "begin": 856,
          "end": 869,
          "name": "AND"
        }, {
          "begin": 856,
          "end": 869,
          "name": "DUP2"
        }, {
          "begin": 856,
          "end": 869,
          "name": "MSTORE"
        }, {
          "begin": 856,
          "end": 869,
          "name": "KECCAK256"
        }, {
          "begin": 856,
          "end": 869,
          "name": "SLOAD"
        }, {
          "begin": 856,
          "end": 881,
          "name": "PUSH [tag]",
          "value": "78"
        }, {
          "begin": 856,
          "end": 881,
          "name": "SWAP1"
        }, {
          "begin": 874,
          "end": 880,
          "name": "DUP4"
        }, {
          "begin": 856,
          "end": 881,
          "name": "PUSH",
          "value": "FFFFFFFF"
        }, {
          "begin": 856,
          "end": 873,
          "name": "PUSH [tag]",
          "value": "67"
        }, {
          "begin": 856,
          "end": 881,
          "name": "AND"
        }, {
          "begin": 856,
          "end": 881,
          "name": "JUMP",
          "value": "[in]"
        }, {
          "begin": 856,
          "end": 881,
          "name": "tag",
          "value": "78"
        }, {
          "begin": 856,
          "end": 881,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 840,
          "end": 853,
          "name": "DUP5"
        }, {
          "begin": 840,
          "end": 853,
          "name": "AND"
        }, {
          "begin": 840,
          "end": 848,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 840,
          "end": 853,
          "name": "DUP2"
        }, {
          "begin": 840,
          "end": 853,
          "name": "DUP2"
        }, {
          "begin": 840,
          "end": 853,
          "name": "MSTORE"
        }, {
          "begin": 840,
          "end": 853,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 840,
          "end": 853,
          "name": "DUP2"
        }, {
          "begin": 840,
          "end": 853,
          "name": "DUP2"
        }, {
          "begin": 840,
          "end": 853,
          "name": "MSTORE"
        }, {
          "begin": 840,
          "end": 853,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 840,
          "end": 853,
          "name": "SWAP2"
        }, {
          "begin": 840,
          "end": 853,
          "name": "DUP3"
        }, {
          "begin": 840,
          "end": 853,
          "name": "SWAP1"
        }, {
          "begin": 840,
          "end": 853,
          "name": "KECCAK256"
        }, {
          "begin": 840,
          "end": 881,
          "name": "SWAP4"
        }, {
          "begin": 840,
          "end": 881,
          "name": "SWAP1"
        }, {
          "begin": 840,
          "end": 881,
          "name": "SWAP4"
        }, {
          "begin": 840,
          "end": 881,
          "name": "SSTORE"
        }, {
          "begin": 892,
          "end": 925,
          "name": "DUP1"
        }, {
          "begin": 892,
          "end": 925,
          "name": "MLOAD"
        }, {
          "begin": 892,
          "end": 925,
          "name": "DUP6"
        }, {
          "begin": 892,
          "end": 925,
          "name": "DUP2"
        }, {
          "begin": 892,
          "end": 925,
          "name": "MSTORE"
        }, {
          "begin": 892,
          "end": 925,
          "name": "SWAP1"
        }, {
          "begin": 892,
          "end": 925,
          "name": "MLOAD"
        }, {
          "begin": 840,
          "end": 853,
          "name": "SWAP2"
        }, {
          "begin": 840,
          "end": 853,
          "name": "SWAP3"
        }, {
          "begin": 901,
          "end": 911,
          "name": "CALLER"
        }, {
          "begin": 901,
          "end": 911,
          "name": "SWAP3"
        }, {
          "begin": 892,
          "end": 925,
          "name": "PUSH",
          "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
        }, {
          "begin": 892,
          "end": 925,
          "name": "SWAP3"
        }, {
          "begin": 892,
          "end": 925,
          "name": "DUP2"
        }, {
          "begin": 892,
          "end": 925,
          "name": "SWAP1"
        }, {
          "begin": 892,
          "end": 925,
          "name": "SUB"
        }, {
          "begin": 892,
          "end": 925,
          "name": "SWAP1"
        }, {
          "begin": 892,
          "end": 925,
          "name": "SWAP2"
        }, {
          "begin": 892,
          "end": 925,
          "name": "ADD"
        }, {
          "begin": 892,
          "end": 925,
          "name": "SWAP1"
        }, {
          "begin": 892,
          "end": 925,
          "name": "LOG3"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 938,
          "end": 942,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": 626,
          "end": 947,
          "name": "SWAP3"
        }, {
          "begin": 626,
          "end": 947,
          "name": "SWAP2"
        }, {
          "begin": 626,
          "end": 947,
          "name": "POP"
        }, {
          "begin": 626,
          "end": 947,
          "name": "POP"
        }, {
          "begin": 626,
          "end": 947,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "tag",
          "value": "54"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "JUMPDEST"
        }, {
          "begin": 3089,
          "end": 3099,
          "name": "CALLER"
        }, {
          "begin": 3027,
          "end": 3031,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "SWAP1"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "DUP2"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "MSTORE"
        }, {
          "begin": 3081,
          "end": 3088,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "SWAP1"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "DUP2"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "MSTORE"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "DUP1"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "DUP4"
        }, {
          "begin": 3081,
          "end": 3100,
          "name": "KECCAK256"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "DUP7"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "AND"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "DUP5"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "MSTORE"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "SWAP1"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "SWAP2"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "MSTORE"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "DUP2"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "KECCAK256"
        }, {
          "begin": 3081,
          "end": 3110,
          "name": "SLOAD"
        }, {
          "begin": 3081,
          "end": 3127,
          "name": "PUSH [tag]",
          "value": "80"
        }, {
          "begin": 3081,
          "end": 3127,
          "name": "SWAP1"
        }, {
          "begin": 3115,
          "end": 3126,
          "name": "DUP4"
        }, {
          "begin": 3081,
          "end": 3127,
          "name": "PUSH",
          "value": "FFFFFFFF"
        }, {
          "begin": 3081,
          "end": 3114,
          "name": "PUSH [tag]",
          "value": "67"
        }, {
          "begin": 3081,
          "end": 3127,
          "name": "AND"
        }, {
          "begin": 3081,
          "end": 3127,
          "name": "JUMP",
          "value": "[in]"
        }, {
          "begin": 3081,
          "end": 3127,
          "name": "tag",
          "value": "80"
        }, {
          "begin": 3081,
          "end": 3127,
          "name": "JUMPDEST"
        }, {
          "begin": 3049,
          "end": 3059,
          "name": "CALLER"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "DUP2"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "DUP2"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "MSTORE"
        }, {
          "begin": 3041,
          "end": 3048,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "SWAP1"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "DUP2"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "MSTORE"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "DUP1"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "DUP4"
        }, {
          "begin": 3041,
          "end": 3060,
          "name": "KECCAK256"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "DUP10"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "AND"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "DUP1"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "DUP6"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "MSTORE"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "SWAP1"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "DUP4"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "MSTORE"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "SWAP3"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "DUP2"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "SWAP1"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "KECCAK256"
        }, {
          "begin": 3041,
          "end": 3128,
          "name": "DUP6"
        }, {
          "begin": 3041,
          "end": 3128,
          "name": "SWAP1"
        }, {
          "begin": 3041,
          "end": 3128,
          "name": "SSTORE"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "DUP1"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "MLOAD"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "SWAP5"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "DUP6"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "MSTORE"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "MLOAD"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "SWAP2"
        }, {
          "begin": 3041,
          "end": 3070,
          "name": "SWAP4"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "PUSH",
          "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "SWAP3"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "SWAP1"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "DUP2"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "SWAP1"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "SUB"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "SWAP1"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "SWAP2"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "ADD"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "SWAP1"
        }, {
          "begin": 3139,
          "end": 3200,
          "name": "LOG3"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 3213,
          "end": 3217,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "SWAP3"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "SWAP2"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "POP"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "POP"
        }, {
          "begin": 2926,
          "end": 3222,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "tag",
          "value": "57"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "1"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "A0"
        }, {
          "begin": -1,
          "end": -1,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": -1,
          "end": -1,
          "name": "EXP"
        }, {
          "begin": -1,
          "end": -1,
          "name": "SUB"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "SWAP2"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "DUP3"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "AND"
        }, {
          "begin": 2420,
          "end": 2427,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "SWAP1"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "DUP2"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "MSTORE"
        }, {
          "begin": 2444,
          "end": 2451,
          "name": "PUSH",
          "value": "2"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "PUSH",
          "value": "20"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "SWAP1"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "DUP2"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "MSTORE"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "PUSH",
          "value": "40"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "DUP1"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "DUP4"
        }, {
          "begin": 2444,
          "end": 2459,
          "name": "KECCAK256"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "SWAP4"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "SWAP1"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "SWAP5"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "AND"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "DUP3"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "MSTORE"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "SWAP2"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "SWAP1"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "SWAP2"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "MSTORE"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "KECCAK256"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "SLOAD"
        }, {
          "begin": 2444,
          "end": 2469,
          "name": "SWAP1"
        }, {
          "begin": 2321,
          "end": 2474,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 1060,
          "end": 1176,
          "name": "tag",
          "value": "65"
        }, {
          "begin": 1060,
          "end": 1176,
          "name": "JUMPDEST"
        }, {
          "begin": 1120,
          "end": 1127,
          "name": "PUSH",
          "value": "0"
        }, {
          "begin": 1142,
          "end": 1150,
          "name": "DUP3"
        }, {
          "begin": 1142,
          "end": 1150,
          "name": "DUP3"
        }, {
          "begin": 1142,
          "end": 1150,
          "name": "GT"
        }, {
          "begin": 1142,
          "end": 1150,
          "name": "ISZERO"
        }, {
          "begin": 1135,
          "end": 1151,
          "name": "PUSH [tag]",
          "value": "83"
        }, {
          "begin": 1135,
          "end": 1151,
          "name": "JUMPI"
        }, {
          "begin": 1135,
          "end": 1151,
          "name": "INVALID"
        }, {
          "begin": 1135,
          "end": 1151,
          "name": "tag",
          "value": "83"
        }, {
          "begin": 1135,
          "end": 1151,
          "name": "JUMPDEST"
        }, {
          "begin": -1,
          "end": -1,
          "name": "POP"
        }, {
          "begin": 1164,
          "end": 1171,
          "name": "SWAP1"
        }, {
          "begin": 1164,
          "end": 1171,
          "name": "SUB"
        }, {
          "begin": 1164,
          "end": 1171,
          "name": "SWAP1"
        }, {
          "begin": 1060,
          "end": 1176,
          "name": "JUMP",
          "value": "[out]"
        }, {
          "begin": 1238,
          "end": 1366,
          "name": "tag",
          "value": "67"
        }, {
          "begin": 1238,
          "end": 1366,
          "name": "JUMPDEST"
        }, {
          "begin": 1319,
          "end": 1326,
          "name": "DUP2"
        }, {
          "begin": 1319,
          "end": 1326,
          "name": "DUP2"
        }, {
          "begin": 1319,
          "end": 1326,
          "name": "ADD"
        }, {
          "begin": 1339,
          "end": 1346,
          "name": "DUP3"
        }, {
          "begin": 1339,
          "end": 1346,
          "name": "DUP2"
        }, {
          "begin": 1339,
          "end": 1346,
          "name": "LT"
        }, {
          "begin": 1339,
          "end": 1346,
          "name": "ISZERO"
        }, {
          "begin": 1332,
          "end": 1347,
          "name": "PUSH [tag]",
          "value": "85"
        }, {
          "begin": 1332,
          "end": 1347,
          "name": "JUMPI"
        }, {
          "begin": 1332,
          "end": 1347,
          "name": "INVALID"
        }, {
          "begin": 1332,
          "end": 1347,
          "name": "tag",
          "value": "85"
        }, {
          "begin": 1332,
          "end": 1347,
          "name": "JUMPDEST"
        }, {
          "begin": 1238,
          "end": 1366,
          "name": "SWAP3"
        }, {
          "begin": 1238,
          "end": 1366,
          "name": "SWAP2"
        }, {
          "begin": 1238,
          "end": 1366,
          "name": "POP"
        }, {
          "begin": 1238,
          "end": 1366,
          "name": "POP"
        }, {
          "begin": 1238,
          "end": 1366,
          "name": "JUMP",
          "value": "[out]"
        }]
      }
    }
  },
  "bytecode": "608060405234801561001057600080fd5b50620f4240600181905533600081815260208181526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3610833806100706000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a75780632ff2e9dc146101d1578063313ce567146101e6578063661884631461021157806370a082311461023557806395d89b4114610256578063a9059cbb1461026b578063d73dd6231461028f578063dd62ed3e146102b3575b600080fd5b3480156100ca57600080fd5b506100d36102da565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a0360043516602435610311565b604080519115158252519081900360200190f35b34801561018c57600080fd5b50610195610377565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a036004358116906024351660443561037d565b3480156101dd57600080fd5b506101956104f2565b3480156101f257600080fd5b506101fb6104f9565b6040805160ff9092168252519081900360200190f35b34801561021d57600080fd5b5061016c600160a060020a03600435166024356104fe565b34801561024157600080fd5b50610195600160a060020a03600435166105ed565b34801561026257600080fd5b506100d3610608565b34801561027757600080fd5b5061016c600160a060020a036004351660243561063f565b34801561029b57600080fd5b5061016c600160a060020a036004351660243561071e565b3480156102bf57600080fd5b50610195600160a060020a03600435811690602435166107b7565b60408051808201909152601381527f556e6976657273616c4c6f67696e546f6b656e00000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b600160a060020a0383166000908152602081905260408120548211156103a257600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156103d257600080fd5b600160a060020a03831615156103e757600080fd5b600160a060020a038416600090815260208190526040902054610410908363ffffffff6107e216565b600160a060020a038086166000908152602081905260408082209390935590851681522054610445908363ffffffff6107f416565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610487908363ffffffff6107e216565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b620f424081565b600281565b336000908152600260209081526040808320600160a060020a038616845290915281205480831061055257336000908152600260209081526040808320600160a060020a0388168452909152812055610587565b610562818463ffffffff6107e216565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b60408051808201909152600381527f554e4c0000000000000000000000000000000000000000000000000000000000602082015281565b3360009081526020819052604081205482111561065b57600080fd5b600160a060020a038316151561067057600080fd5b33600090815260208190526040902054610690908363ffffffff6107e216565b3360009081526020819052604080822092909255600160a060020a038516815220546106c2908363ffffffff6107f416565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610752908363ffffffff6107f416565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156107ee57fe5b50900390565b8181018281101561080157fe5b929150505600a165627a7a72305820fb35561f43ee38b5f17903daa340e5dc49197ebe7d7c43c3994fdb115edb6b340029",
  "functionHashes": {
    "INITIAL_SUPPLY()": "2ff2e9dc",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseApproval(address,uint256)": "66188463",
    "increaseApproval(address,uint256)": "d73dd623",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "gasEstimates": {
    "creation": [42363, 419800],
    "external": {
      "INITIAL_SUPPLY()": 272,
      "allowance(address,address)": 950,
      "approve(address,uint256)": 22354,
      "balanceOf(address)": 763,
      "decimals()": 303,
      "decreaseApproval(address,uint256)": null,
      "increaseApproval(address,uint256)": null,
      "name()": null,
      "symbol()": null,
      "totalSupply()": 428,
      "transfer(address,uint256)": null,
      "transferFrom(address,address,uint256)": null
    },
    "internal": {}
  },
  "interface": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Token.sol\":{\"keccak256\":\"0x61c60df0193c1fe6179b1dc8bf9e738dcb55354cd76a8fb748e54839d1556000\",\"urls\":[\"bzzr://89115f87294e4a54dc86bf8e81fb07fa30d2a75ff6688ee9a71ac93fab574aef\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]},\"openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98\",\"urls\":[\"bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706\"]}},\"version\":1}",
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xF4240 PUSH1 0x1 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x833 DUP1 PUSH2 0x70 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB9 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x66188463 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xD73DD623 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x37D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x4F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x4FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x5ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x608 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x63F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x71E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH32 0x556E6976657273616C4C6F67696E546F6B656E00000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x410 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7E2 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x445 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7F4 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP8 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x487 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7E2 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 DUP8 AND SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0xF4240 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP1 DUP4 LT PUSH2 0x552 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH2 0x587 JUMP JUMPDEST PUSH2 0x562 DUP2 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x7E2 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH32 0x554E4C0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x690 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7E2 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x6C2 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7F4 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x752 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7F4 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP2 SWAP4 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x7EE JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x801 JUMPI INVALID JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CREATE2 CALLDATALOAD JUMP 0x1f NUMBER 0xee CODESIZE 0xb5 CALL PUSH26 0x3DAA340E5DC49197EBE7D7C43C3994FDB115EDB6B3400290000 ",
  "runtimeBytecode": "6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a75780632ff2e9dc146101d1578063313ce567146101e6578063661884631461021157806370a082311461023557806395d89b4114610256578063a9059cbb1461026b578063d73dd6231461028f578063dd62ed3e146102b3575b600080fd5b3480156100ca57600080fd5b506100d36102da565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a0360043516602435610311565b604080519115158252519081900360200190f35b34801561018c57600080fd5b50610195610377565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a036004358116906024351660443561037d565b3480156101dd57600080fd5b506101956104f2565b3480156101f257600080fd5b506101fb6104f9565b6040805160ff9092168252519081900360200190f35b34801561021d57600080fd5b5061016c600160a060020a03600435166024356104fe565b34801561024157600080fd5b50610195600160a060020a03600435166105ed565b34801561026257600080fd5b506100d3610608565b34801561027757600080fd5b5061016c600160a060020a036004351660243561063f565b34801561029b57600080fd5b5061016c600160a060020a036004351660243561071e565b3480156102bf57600080fd5b50610195600160a060020a03600435811690602435166107b7565b60408051808201909152601381527f556e6976657273616c4c6f67696e546f6b656e00000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b600160a060020a0383166000908152602081905260408120548211156103a257600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156103d257600080fd5b600160a060020a03831615156103e757600080fd5b600160a060020a038416600090815260208190526040902054610410908363ffffffff6107e216565b600160a060020a038086166000908152602081905260408082209390935590851681522054610445908363ffffffff6107f416565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610487908363ffffffff6107e216565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b620f424081565b600281565b336000908152600260209081526040808320600160a060020a038616845290915281205480831061055257336000908152600260209081526040808320600160a060020a0388168452909152812055610587565b610562818463ffffffff6107e216565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b60408051808201909152600381527f554e4c0000000000000000000000000000000000000000000000000000000000602082015281565b3360009081526020819052604081205482111561065b57600080fd5b600160a060020a038316151561067057600080fd5b33600090815260208190526040902054610690908363ffffffff6107e216565b3360009081526020819052604080822092909255600160a060020a038516815220546106c2908363ffffffff6107f416565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610752908363ffffffff6107f416565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156107ee57fe5b50900390565b8181018281101561080157fe5b929150505600a165627a7a72305820fb35561f43ee38b5f17903daa340e5dc49197ebe7d7c43c3994fdb115edb6b340029",
  "srcmap": "99:427:1:-;;;359:165;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;319:33:1;390:12;:29;;;438:10;429:8;:20;;;;;;;;;;;:37;;;476:41;;;;;;438:10;;429:8;;476:41;;;;;;;;;;99:427;;;;;;",
  "srcmapRuntime": "99:427:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;137:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;137:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;137:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1814:188:6;-1:-1:-1;;;;;1814:188:6;;;;;;;;;;;;;;;;;;;;;;;;;389:83:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:3;;;;;;;;;;;;;;;;;;;;726:470:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;726:470:6;-1:-1:-1;;;;;726:470:6;;;;;;;;;;;;278:74:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;278:74:1;;;;237:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:34:1;;;;;;;;;;;;;;;;;;;;;;;3679:432:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3679:432:6;-1:-1:-1;;;;;3679:432:6;;;;;;;1149:99:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1149:99:3;-1:-1:-1;;;;;1149:99:3;;;;;194:37:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;194:37:1;;;;626:321:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;626:321:3;-1:-1:-1;;;;;626:321:3;;;;;;;2926:296:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2926:296:6;-1:-1:-1;;;;;2926:296:6;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:6;-1:-1:-1;;;;;2321:153:6;;;;;;;;;;137:51:1;;;;;;;;;;;;;;;;;;;:::o;1814:188:6:-;1901:10;1881:4;1893:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1893:29:6;;;;;;;;;;;:38;;;1942;;;;;;;1881:4;;1893:29;;1901:10;;1942:38;;;;;;;;-1:-1:-1;1993:4:6;1814:188;;;;:::o;389:83:3:-;455:12;;389:83;:::o;726:470:6:-;-1:-1:-1;;;;;864:15:6;;832:4;864:15;;;;;;;;;;;854:25;;;846:34;;;;;;-1:-1:-1;;;;;904:14:6;;;;;;:7;:14;;;;;;;;919:10;904:26;;;;;;;;894:36;;;886:45;;;;;;-1:-1:-1;;;;;945:17:6;;;;937:26;;;;;;-1:-1:-1;;;;;988:15:6;;:8;:15;;;;;;;;;;;:27;;1008:6;988:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;970:15:6;;;:8;:15;;;;;;;;;;;:45;;;;1037:13;;;;;;;:25;;1055:6;1037:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1021:13:6;;;:8;:13;;;;;;;;;;;:41;;;;1097:14;;;;;:7;:14;;;;;1112:10;1097:26;;;;;;;:38;;1128:6;1097:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1068:14:6;;;;;;;:7;:14;;;;;;;;1083:10;1068:26;;;;;;;;:67;;;;1146:28;;;;;;;;;;;1068:14;;1146:28;;;;;;;;;;;-1:-1:-1;1187:4:6;726:470;;;;;:::o;278:74:1:-;319:33;278:74;:::o;237:34::-;270:1;237:34;:::o;3679:432:6:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3818:29:6;;;;;;;;;;3857:28;;;3853:165;;3903:10;3927:1;3895:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3895:29:6;;;;;;;;;:33;3853:165;;;3981:30;:8;3994:16;3981:30;:12;:30;:::i;:::-;3957:10;3949:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3949:29:6;;;;;;;;;:62;3853:165;4037:10;4059:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4028:61:6;;4059:29;;;;;;;;;;;4028:61;;;;;;;;;4037:10;4028:61;;;;;;;;;;;-1:-1:-1;4102:4:6;;3679:432;-1:-1:-1;;;3679:432:6:o;1149:99:3:-;-1:-1:-1;;;;;1227:16:3;1205:7;1227:16;;;;;;;;;;;;1149:99::o;194:37:1:-;;;;;;;;;;;;;;;;;;;:::o;626:321:3:-;728:10;689:4;719:20;;;;;;;;;;;709:30;;;701:39;;;;;;-1:-1:-1;;;;;754:17:3;;;;746:26;;;;;;811:10;802:8;:20;;;;;;;;;;;:32;;827:6;802:32;:24;:32;:::i;:::-;788:10;779:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;856:13:3;;;;;;:25;;874:6;856:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;840:13:3;;:8;:13;;;;;;;;;;;;:41;;;;892:33;;;;;;;840:13;;901:10;;892:33;;;;;;;;;;-1:-1:-1;938:4:3;626:321;;;;:::o;2926:296:6:-;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3081:29:6;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3041:29:6;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;3139:61;;;;;;;;;;;-1:-1:-1;3213:4:6;2926:296;;;;:::o;2321:153::-;-1:-1:-1;;;;;2444:15:6;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;1060:116:2:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:2;;;1060:116::o;1238:128::-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o"
};
},{}],"services/TokenService.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("babel-runtime/helpers/asyncToGenerator"));

var _ethers = _interopRequireWildcard(require("ethers"));

var _Token = _interopRequireDefault(require("../../build/Token"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var TokenService =
/*#__PURE__*/
function () {
  function TokenService(tokenContractAddress, provider) {
    _classCallCheck(this, TokenService);

    this.tokenContractAddress = tokenContractAddress;
    this.provider = provider;
    this.tokenContract = new _ethers.default.Contract(this.tokenContractAddress, _Token.default.interface, this.provider);
  }

  _createClass(TokenService, [{
    key: "getBalance",
    value: function getBalance(address) {
      var _this = this;

      return (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", _this.tokenContract.balanceOf(address));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }))();
    }
  }]);

  return TokenService;
}();

var _default = TokenService;
exports.default = _default;
},{"babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","ethers":"../../node_modules/ethers/index.js","../../build/Token":"../build/Token.json"}],"components/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TOKEN_ADDRESS = void 0;
var TOKEN_ADDRESS = '0x841cea2a436e80561c4be35767d7b6304915a1c2';
exports.TOKEN_ADDRESS = TOKEN_ADDRESS;
},{}],"components/Faucet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _constants = require("./constants");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var FaucetLink =
/*#__PURE__*/
function (_Component) {
  _inherits(FaucetLink, _Component);

  function FaucetLink() {
    _classCallCheck(this, FaucetLink);

    return _possibleConstructorReturn(this, _getPrototypeOf(FaucetLink).apply(this, arguments));
  }

  _createClass(FaucetLink, [{
    key: "generateFaucetLink",
    value: function generateFaucetLink() {
      var faucetIdentity = "0x018b8cc651F603357e61Ee580570F4286239BD25";
      var faucetPK = "0x5b23ecd5ec23f197a1e1bfece28961f1723be79287d86a08ba2eba140ef8b061";
      var amount = Math.pow(10, 20).toString();

      var _this$props$sdk$gener = this.props.sdk.generateLink({
        privateKey: faucetPK,
        token: _constants.TOKEN_ADDRESS,
        amount: amount
      }),
          sigSender = _this$props$sdk$gener.sigSender,
          transitPK = _this$props$sdk$gener.transitPK;

      var faucetLink = "/#/claim?sig=".concat(sigSender, "&pk=").concat(transitPK, "&a=").concat(amount, "&from=").concat(faucetIdentity);
      return faucetLink;
    }
  }, {
    key: "render",
    value: function render() {
      var faucetLink = this.generateFaucetLink();
      return _react.default.createElement("div", {
        style: {
          paddingTop: 20,
          paddingBottom: 20
        }
      }, _react.default.createElement("h3", {
        style: {
          paddingBottom: 20
        }
      }, " You have no account yet "), _react.default.createElement("div", null, _react.default.createElement("div", null, " Follow the link below to get some $ and get new account"), _react.default.createElement("div", {
        style: {
          marginTop: 10
        }
      }, _react.default.createElement("a", {
        style: {
          color: '#0099ff',
          textDecoration: 'underline'
        },
        href: faucetLink
      }, "Follow this link to get $100"))));
    }
  }]);

  return FaucetLink;
}(_react.Component);

exports.default = FaucetLink;
},{"react":"../../node_modules/react/index.js","./constants":"components/constants.js"}],"components/common.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EtherscanAddressLink = exports.EtherscanLink = void 0;

var _react = _interopRequireWildcard(require("react"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var EtherscanLink = function EtherscanLink(_ref) {
  var txHash = _ref.txHash;
  var link = "https://ropsten.etherscan.io/tx/".concat(txHash);
  return _react.default.createElement("a", {
    style: {
      color: '#0099ff',
      textDecoration: 'underline'
    },
    href: link,
    target: "_blank"
  }, txHash);
};

exports.EtherscanLink = EtherscanLink;

var EtherscanAddressLink = function EtherscanAddressLink(_ref2) {
  var address = _ref2.address;
  var link = "https://ropsten.etherscan.io/address/".concat(address);
  return _react.default.createElement("a", {
    style: {
      color: '#0099ff',
      textDecoration: 'underline'
    },
    href: link,
    target: "_blank"
  }, address);
};

exports.EtherscanAddressLink = EtherscanAddressLink;
},{"react":"../../node_modules/react/index.js"}],"components/LinkAccount.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("babel-runtime/helpers/asyncToGenerator"));

var _react = _interopRequireWildcard(require("react"));

var _ethers = _interopRequireDefault(require("ethers"));

var _Faucet = _interopRequireDefault(require("./Faucet"));

var _common = require("./common");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var LinkAccount =
/*#__PURE__*/
function (_Component) {
  _inherits(LinkAccount, _Component);

  function LinkAccount(props) {
    var _this2;

    _classCallCheck(this, LinkAccount);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(LinkAccount).call(this, props)); // get identity address from localstorage

    var identityPK = localStorage.getItem("LINKS_IDENTITY_PK");
    var identity = localStorage.getItem("LINKS_IDENTITY");
    _this2.state = {
      identity: identity,
      identityPK: identityPK,
      balance: 0,
      fetchingBalance: true
    };
    return _this2;
  }

  _createClass(LinkAccount, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this = this;

      return (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        var balance;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (_this.state.identity) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return", null);

              case 2:
                _context.next = 4;
                return _this.props.tokenService.getBalance(_this.state.identity);

              case 4:
                balance = _context.sent;
                console.log({
                  balance: balance
                });

                _this.setState({
                  balance: balance,
                  fetchingBalance: false
                });

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }))();
    }
  }, {
    key: "_logout",
    value: function _logout() {
      var result = confirm("Are you sure you want to burn wallet?");

      if (result) {
        localStorage.clear();
        window.location.reload();
      }
    }
  }, {
    key: "_renderSendBtn",
    value: function _renderSendBtn() {
      return _react.default.createElement("a", {
        href: "/#/send"
      }, " ", _react.default.createElement("button", {
        style: {
          marginTop: 20,
          width: 100
        },
        className: "btn fullwidth"
      }, "Send $ "));
    }
  }, {
    key: "_renderLogout",
    value: function _renderLogout() {
      return _react.default.createElement("div", {
        style: {
          marginTop: 40
        }
      }, _react.default.createElement("button", {
        style: {
          color: 'red'
        },
        onClick: this._logout.bind(this)
      }, " Burn wallet "));
    }
  }, {
    key: "_renderAccount",
    value: function _renderAccount() {
      var balance;

      if (this.state.fetchingBalance) {
        balance = "...";
      } else {
        balance = "$".concat(this.state.balance / 100);
      }

      return _react.default.createElement("div", {
        style: {
          paddingTop: 20,
          paddingBottom: 20
        }
      }, _react.default.createElement("h2", null, " Your account "), _react.default.createElement("div", {
        style: {
          paddingTop: 20,
          paddingBottom: 10
        }
      }, " Address: ", _react.default.createElement(_common.EtherscanAddressLink, {
        address: this.state.identity
      }), " "), _react.default.createElement("div", null, " Balance: ", balance, " "), _react.default.createElement("hr", null), this._renderSendBtn(), this._renderLogout());
    }
  }, {
    key: "render",
    value: function render() {
      return this.state.identityPK ? this._renderAccount() : _react.default.createElement(_Faucet.default, {
        sdk: this.props.sdk
      });
    }
  }]);

  return LinkAccount;
}(_react.Component);

var _default = LinkAccount;
exports.default = _default;
},{"babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","react":"../../node_modules/react/index.js","ethers":"../../node_modules/ethers/index.js","./Faucet":"components/Faucet.js","./common":"components/common.js"}],"../../node_modules/querystring-es3/decode.js":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict'; // If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function (qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);
  var maxKeys = 1000;

  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count

  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr,
        vstr,
        k,
        v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};
},{}],"../../node_modules/querystring-es3/encode.js":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

var stringifyPrimitive = function (v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function (obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';

  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function (k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;

      if (isArray(obj[k])) {
        return map(obj[k], function (v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);
  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map(xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];

  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }

  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }

  return res;
};
},{}],"../../node_modules/querystring-es3/index.js":[function(require,module,exports) {
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');
},{"./decode":"../../node_modules/querystring-es3/decode.js","./encode":"../../node_modules/querystring-es3/encode.js"}],"components/ClaimLink.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("babel-runtime/helpers/asyncToGenerator"));

var _react = _interopRequireWildcard(require("react"));

var _ethers = _interopRequireDefault(require("ethers"));

var _Faucet = _interopRequireDefault(require("./Faucet"));

var _constants = require("./constants");

var _common = require("./common");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var qs = require('querystring');

var ClaimLink =
/*#__PURE__*/
function (_Component) {
  _inherits(ClaimLink, _Component);

  function ClaimLink(props) {
    var _this2;

    _classCallCheck(this, ClaimLink);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ClaimLink).call(this, props));
    console.log({
      props: props
    });
    var queryParams = qs.parse(props.location.search.substring(1));
    var sigSender = queryParams.sig,
        transitPK = queryParams.pk,
        amount = queryParams.a,
        sender = queryParams.from; // get identity address from localstorage

    var identityPK = localStorage.getItem("LINKS_IDENTITY_PK");
    var identity = localStorage.getItem("LINKS_IDENTITY");
    var pendingTxHash = localStorage.getItem("LINKS_PENDING_TX_HASH");
    _this2.state = {
      // identity 
      identity: identity,
      identityPK: identityPK,
      newIdentity: identity === null,
      // params from url
      sigSender: sigSender,
      transitPK: transitPK,
      amount: amount,
      sender: sender,
      // claim tx
      checkingLink: true,
      usedLink: false,
      txHash: pendingTxHash,
      txReceipt: null,
      disabled: false
    };
    return _this2;
  }

  _createClass(ClaimLink, [{
    key: "_checkLink",
    value: function _checkLink() {
      var _this = this;

      return (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        var _this$state, transitPK, sender, result, newIdentity, txReceipt;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this$state = _this.state, transitPK = _this$state.transitPK, sender = _this$state.sender;
                _context.next = 3;
                return _this.props.sdk.hasLinkBeenUsed({
                  transitPK: transitPK,
                  sender: sender
                });

              case 3:
                result = _context.sent;
                console.log({
                  result: result
                });

                _this.setState({
                  checkingLink: false,
                  usedLink: result
                });

                if (!_this.state.txHash) {
                  _context.next = 14;
                  break;
                }

                _context.next = 9;
                return _this.props.sdk.waitForTxReceipt(_this.state.txHash);

              case 9:
                txReceipt = _context.sent;
                console.log({
                  txReceipt: txReceipt
                });

                if (_this.state.newIdentity) {
                  newIdentity = txReceipt.logs[0] && txReceipt.logs[0].address;

                  _this.setState({});

                  localStorage.setItem("LINKS_IDENTITY", newIdentity);
                }

                _this.setState({
                  txReceipt: txReceipt,
                  identity: _this.state.identity || newIdentity
                });

                localStorage.removeItem("LINKS_PENDING_TX_HASH");

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }))();
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this._checkLink();
    }
  }, {
    key: "claimLink",
    value: function claimLink() {
      var _this3 = this;

      console.log("In a claim link");

      if (this.state.disabled) {
        return false;
      }

      var _this$state2 = this.state,
          identity = _this$state2.identity,
          identityPK = _this$state2.identityPK,
          sigSender = _this$state2.sigSender,
          transitPK = _this$state2.transitPK,
          amount = _this$state2.amount,
          sender = _this$state2.sender;
      this.setState({
        disabled: true
      }); //try { 
      //     // send tx

      this.props.sdk.transferByLink({
        token: _constants.TOKEN_ADDRESS,
        amount: amount,
        sender: sender,
        sigSender: sigSender,
        transitPK: transitPK,
        identityPK: identityPK
      }).then(function (_ref) {
        var response = _ref.response,
            txHash = _ref.txHash,
            newIdentityPK = _ref.identityPK;
        console.log({
          response: response,
          txHash: txHash,
          newIdentityPK: newIdentityPK
        }); // store pending tx Hash

        localStorage.setItem("LINKS_PENDING_TX_HASH", txHash);
        localStorage.setItem("LINKS_IDENTITY_PK", newIdentityPK);

        _this3.setState({
          txHash: txHash
        }); // wait for tx to be mined


        _this3.props.sdk.waitForTxReceipt(txHash).then(function (txReceipt) {
          console.log({
            txReceipt: txReceipt
          });
          var newIdentity;

          if (_this3.state.newIdentity) {
            newIdentity = txReceipt.logs[0] && txReceipt.logs[0].address;

            _this3._saveToLocalStorage({
              identityPK: newIdentityPK,
              identity: newIdentity
            });
          }

          _this3.setState({
            txReceipt: txReceipt,
            identity: identity || newIdentity
          }); // #todo store identity PK in localstorage 	    

        });
      }).catch(function (err) {
        console.log({
          err: err
        });

        if (err.search("Error: invalid json response at XMLHttpRequest.request.onreadystatechange") !== 0) {
          alert("Error while claiming tx! Details in the console");
        }
      });
    }
  }, {
    key: "_getDeviceOS",
    value: function _getDeviceOS() {
      if (/Android/i.test(navigator.userAgent)) {
        return 'android';
      }

      if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {
        return 'ios';
      }

      return 'other';
    }
  }, {
    key: "_saveToLocalStorage",
    value: function _saveToLocalStorage(_ref2) {
      var identityPK = _ref2.identityPK,
          identity = _ref2.identity;
      console.log("saving new identity to localstorgae");
      localStorage.setItem("LINKS_IDENTITY_PK", identityPK);
      localStorage.setItem("LINKS_IDENTITY", identity);
      localStorage.removeItem("LINKS_PENDING_TX_HASH");
      console.log("new identity saved!");
    }
  }, {
    key: "_renderClaimLinks",
    value: function _renderClaimLinks() {
      var dailyLink = "app://dailywallet/claim".concat(this.props.location.search);
      var btnClass = this.state.disabled ? "btn fullwidth disabled" : "btn fullwidth";

      if (this._getDeviceOS() === 'android') {
        return _react.default.createElement("div", null, _react.default.createElement("div", {
          style: {
            marginTop: 20
          }
        }, _react.default.createElement("a", {
          style: {
            width: 100,
            padding: 10
          },
          className: btnClass,
          href: dailyLink
        }, " Use Daily Wallet ")));
      } else {
        return _react.default.createElement("button", {
          style: {
            marginTop: 20,
            width: 100
          },
          className: btnClass,
          onClick: this.claimLink.bind(this)
        }, " ", _react.default.createElement("div", null, "Claim "));
      }
    }
  }, {
    key: "_renderClaimBtn",
    value: function _renderClaimBtn() {
      // if tx wasn't initiated
      if (this.state.checkingLink) {
        return _react.default.createElement("div", null, " Checking link...");
      }

      if (this.state.usedLink) {
        return _react.default.createElement("div", {
          style: {
            fontWeight: 'bold'
          }
        }, " Link was used");
      }

      if (!this.state.txHash) {
        return this._renderClaimLinks(); // const btnClass = this.state.disabled ? "btn fullwidth disabled" : "btn fullwidth";
        // return ( <button style={{ marginTop: 20, width: 100}} className={btnClass} onClick={this.claimLink.bind(this)}> <div>Claim </div></button>);
      } // tx sent but not mined yet


      if (!this.state.txReceipt) {
        return _react.default.createElement("div", null, "Pending Tx... ", _react.default.createElement(_common.EtherscanLink, {
          txHash: this.state.txHash
        }));
      } // tx was mined


      return _react.default.createElement("div", null, _react.default.createElement("div", {
        style: {
          paddingTop: 20,
          paddingBottom: 10
        }
      }, " Mined Tx: ", _react.default.createElement(_common.EtherscanLink, {
        txHash: this.state.txHash
      })), _react.default.createElement("div", null, "Claimed To: ", _react.default.createElement(_common.EtherscanAddressLink, {
        address: this.state.identity
      })));
    }
  }, {
    key: "_renderLinkDetails",
    value: function _renderLinkDetails() {
      var claimTo = this.state.newIdentity ? "New account" : _react.default.createElement(_common.EtherscanAddressLink, {
        address: this.state.identity
      });
      return _react.default.createElement("div", null, _react.default.createElement("div", {
        style: {
          paddingTop: 10
        }
      }, " Amount: $", this.state.amount / 100), _react.default.createElement("div", {
        style: {
          paddingTop: 10
        }
      }, " Claim To: ", claimTo, " "));
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", null, _react.default.createElement("h2", null, " Claim Link "), this._renderLinkDetails(), _react.default.createElement("hr", null), this._renderClaimBtn(), this.state.identity ? _react.default.createElement("div", {
        style: {
          marginTop: 40
        }
      }, _react.default.createElement("a", {
        style: {
          color: '#0099ff',
          textDecoration: 'underline'
        },
        href: "/#/"
      }, " Go to Your Account ")) : null);
    }
  }]);

  return ClaimLink;
}(_react.Component);

var _default = ClaimLink;
exports.default = _default;
},{"babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","react":"../../node_modules/react/index.js","ethers":"../../node_modules/ethers/index.js","./Faucet":"components/Faucet.js","querystring":"../../node_modules/querystring-es3/index.js","./constants":"components/constants.js","./common":"components/common.js"}],"../../node_modules/toggle-selection/index.js":[function(require,module,exports) {

module.exports = function () {
  var selection = document.getSelection();
  if (!selection.rangeCount) {
    return function () {};
  }
  var active = document.activeElement;

  var ranges = [];
  for (var i = 0; i < selection.rangeCount; i++) {
    ranges.push(selection.getRangeAt(i));
  }

  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML
    case 'INPUT':
    case 'TEXTAREA':
      active.blur();
      break;

    default:
      active = null;
      break;
  }

  selection.removeAllRanges();
  return function () {
    selection.type === 'Caret' &&
    selection.removeAllRanges();

    if (!selection.rangeCount) {
      ranges.forEach(function(range) {
        selection.addRange(range);
      });
    }

    active &&
    active.focus();
  };
};

},{}],"../../node_modules/copy-to-clipboard/index.js":[function(require,module,exports) {
'use strict';

var deselectCurrent = require('toggle-selection');

var defaultMessage = 'Copy to clipboard: #{key}, Enter';

function format(message) {
  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';
  return message.replace(/#{\s*key\s*}/g, copyKey);
}

function copy(text, options) {
  var debug, message, reselectPrevious, range, selection, mark, success = false;
  if (!options) { options = {}; }
  debug = options.debug || false;
  try {
    reselectPrevious = deselectCurrent();

    range = document.createRange();
    selection = document.getSelection();

    mark = document.createElement('span');
    mark.textContent = text;
    // reset user styles for span element
    mark.style.all = 'unset';
    // prevents scrolling to the end of the page
    mark.style.position = 'fixed';
    mark.style.top = 0;
    mark.style.clip = 'rect(0, 0, 0, 0)';
    // used to preserve spaces and line breaks
    mark.style.whiteSpace = 'pre';
    // do not inherit user-select (it may be `none`)
    mark.style.webkitUserSelect = 'text';
    mark.style.MozUserSelect = 'text';
    mark.style.msUserSelect = 'text';
    mark.style.userSelect = 'text';

    document.body.appendChild(mark);

    range.selectNode(mark);
    selection.addRange(range);

    var successful = document.execCommand('copy');
    if (!successful) {
      throw new Error('copy command was unsuccessful');
    }
    success = true;
  } catch (err) {
    debug && console.error('unable to copy using execCommand: ', err);
    debug && console.warn('trying IE specific stuff');
    try {
      window.clipboardData.setData('text', text);
      success = true;
    } catch (err) {
      debug && console.error('unable to copy using clipboardData: ', err);
      debug && console.error('falling back to prompt');
      message = format('message' in options ? options.message : defaultMessage);
      window.prompt(message, text);
    }
  } finally {
    if (selection) {
      if (typeof selection.removeRange == 'function') {
        selection.removeRange(range);
      } else {
        selection.removeAllRanges();
      }
    }

    if (mark) {
      document.body.removeChild(mark);
    }
    reselectPrevious();
  }

  return success;
}

module.exports = copy;

},{"toggle-selection":"../../node_modules/toggle-selection/index.js"}],"components/Send.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("babel-runtime/helpers/asyncToGenerator"));

var _react = _interopRequireWildcard(require("react"));

var _constants = require("./constants");

var _copyToClipboard = _interopRequireDefault(require("copy-to-clipboard"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var SendForm =
/*#__PURE__*/
function (_Component) {
  _inherits(SendForm, _Component);

  function SendForm(props) {
    var _this2;

    _classCallCheck(this, SendForm);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(SendForm).call(this, props)); // get identity address from localstorage

    var identityPK = localStorage.getItem("LINKS_IDENTITY_PK");
    var identity = localStorage.getItem("LINKS_IDENTITY");
    _this2.state = {
      identity: identity,
      identityPK: identityPK,
      balance: 0,
      fetchingBalance: true,
      amount: 1,
      copyBtnClicked: false,
      link: null
    };
    return _this2;
  }

  _createClass(SendForm, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this = this;

      return (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        var balance;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (_this.state.identity) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return", null);

              case 2:
                _context.next = 4;
                return _this.props.tokenService.getBalance(_this.state.identity);

              case 4:
                balance = _context.sent;
                console.log({
                  balance: balance
                });

                _this.setState({
                  balance: balance,
                  fetchingBalance: false,
                  link: _this.generateLink(_this.state.amount, balance)
                });

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }))();
    }
  }, {
    key: "_renderCopyBtn",
    value: function _renderCopyBtn(link) {
      var _this3 = this;

      var label = this.state.copyBtnClicked ? "Copied!" : "Copy the link";
      var className = this.state.copyBtnClicked ? "btn fullwidth disabled" : "btn fullwidth";
      return _react.default.createElement("button", {
        style: {
          marginTop: 20,
          width: 250
        },
        className: className,
        onClick: function onClick() {
          (0, _copyToClipboard.default)(link);

          _this3.setState({
            copyBtnClicked: true
          });
        }
      }, " ", label, " ");
    }
  }, {
    key: "generateLink",
    value: function generateLink(value, balance) {
      var _this$state = this.state,
          identity = _this$state.identity,
          identityPK = _this$state.identityPK;
      var amount = value;
      amount = amount * 100;
      var bal = balance;

      if (amount > bal) {
        return "Max: ".concat(bal / 100, ". Not enough balance.");
      }

      if (amount <= 0) {
        return "You should add amount!";
      }

      var _this$props$sdk$gener = this.props.sdk.generateLink({
        privateKey: identityPK,
        token: _constants.TOKEN_ADDRESS,
        amount: amount
      }),
          sigSender = _this$props$sdk$gener.sigSender,
          transitPK = _this$props$sdk$gener.transitPK;

      var link = "".concat(window.location.protocol, "//").concat(window.location.host, "/#/claim?sig=").concat(sigSender, "&pk=").concat(transitPK, "&a=").concat(amount, "&from=").concat(identity);
      return link;
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      return _react.default.createElement("div", {
        style: {
          paddingTop: 20,
          paddingBottom: 20
        }
      }, _react.default.createElement("h3", {
        style: {
          paddingBottom: 20
        }
      }, " Your balance: $", this.state.balance / 100), _react.default.createElement("div", null, _react.default.createElement("input", {
        className: "input",
        type: "text",
        value: this.state.amount,
        onChange: function onChange(_ref) {
          var target = _ref.target;
          return _this4.setState({
            amount: target.value,
            copyBtnClicked: false,
            link: _this4.generateLink(target.value, _this4.state.balance)
          });
        }
      }), _react.default.createElement("div", {
        style: {
          marginTop: 20
        }
      }, _react.default.createElement("h3", null, " Share this link with receiver "), _react.default.createElement("div", {
        style: {
          marginTop: 10,
          marginBottom: 10
        }
      }, _react.default.createElement("input", {
        className: "input",
        type: "text",
        value: this.state.link
      })), this._renderCopyBtn(this.state.link)), _react.default.createElement("div", {
        style: {
          marginTop: 40
        }
      }, _react.default.createElement("a", {
        style: {
          color: '#0099ff',
          textDecoration: 'underline'
        },
        href: "/#/"
      }, " Go to Your Account "))));
    }
  }]);

  return SendForm;
}(_react.Component);

var _default = SendForm;
exports.default = _default;
},{"babel-runtime/helpers/asyncToGenerator":"../../node_modules/babel-runtime/helpers/asyncToGenerator.js","react":"../../node_modules/react/index.js","./constants":"components/constants.js","copy-to-clipboard":"../../node_modules/copy-to-clipboard/index.js"}],"components/App.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("babel-runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _universalLoginSdk = _interopRequireDefault(require("universal-login-sdk"));

var _ethers = _interopRequireDefault(require("ethers"));

var _reactRouterDom = require("react-router-dom");

var _TokenService = _interopRequireDefault(require("../services/TokenService"));

var _constants = require("./constants");

var _LinkAccount = _interopRequireDefault(require("./LinkAccount"));

var _ClaimLink = _interopRequireDefault(require("./ClaimLink"));

var _Send = _interopRequireDefault(require("./Send"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var App =
/*#__PURE__*/
function (_Component) {
  _inherits(App, _Component);

  function App(props) {
    var _this;

    _classCallCheck(this, App);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));
    var serverUrl = 'https://gasless-ropsten.eth2phone.com';
    _this.provider = new _ethers.default.providers.JsonRpcProvider('https://ropsten.infura.io');
    _this.sdk = new _universalLoginSdk.default(serverUrl, _this.provider);
    _this.tokenService = new _TokenService.default(_constants.TOKEN_ADDRESS, _this.provider);
    return _this;
  }

  _createClass(App, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.sdk.start();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.sdk.stop();
    } // 	
    // <Route path="/send" component={(props) => <SendLink {...props} tokenService={this.tokenService} sdk={this.sdk} />} />				
    // <Route component={(props) => (<LinkAccount {...props} sdk={this.sdk} tokenService={this.tokenService} />)} />

  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var LinkAccountComponent = function LinkAccountComponent(props) {
        return _react.default.createElement(_LinkAccount.default, (0, _extends2.default)({}, props, {
          sdk: _this2.sdk,
          tokenService: _this2.tokenService
        }));
      };

      return _react.default.createElement("div", {
        className: "login-view"
      }, _react.default.createElement("div", {
        className: "container"
      }, _react.default.createElement(_reactRouterDom.HashRouter, null, _react.default.createElement(_reactRouterDom.Switch, null, _react.default.createElement(_reactRouterDom.Route, {
        path: "/send",
        component: function component(props) {
          return _react.default.createElement(_Send.default, {
            tokenService: _this2.tokenService,
            sdk: _this2.sdk
          });
        }
      }), _react.default.createElement(_reactRouterDom.Route, {
        path: "/claim",
        component: function component(props) {
          return _react.default.createElement(_ClaimLink.default, {
            location: props.location,
            sdk: _this2.sdk
          });
        }
      }), _react.default.createElement(_reactRouterDom.Route, {
        component: LinkAccountComponent
      })))));
    }
  }]);

  return App;
}(_react.Component);

var _default = App;
exports.default = _default;
},{"babel-runtime/helpers/extends":"../../node_modules/babel-runtime/helpers/extends.js","react":"../../node_modules/react/index.js","universal-login-sdk":"../../node_modules/universal-login-sdk/dist/sdk.js","ethers":"../../node_modules/ethers/index.js","react-router-dom":"../../node_modules/react-router-dom/es/index.js","../services/TokenService":"services/TokenService.js","./constants":"components/constants.js","./LinkAccount":"components/LinkAccount.js","./ClaimLink":"components/ClaimLink.js","./Send":"components/Send.js"}],"../../node_modules/parcel-bundler/src/builtins/bundle-url.js":[function(require,module,exports) {
var bundleURL = null;

function getBundleURLCached() {
  if (!bundleURL) {
    bundleURL = getBundleURL();
  }

  return bundleURL;
}

function getBundleURL() {
  // Attempt to find the URL of the current script and use that as the base URL
  try {
    throw new Error();
  } catch (err) {
    var matches = ('' + err.stack).match(/(https?|file|ftp):\/\/[^)\n]+/g);

    if (matches) {
      return getBaseURL(matches[0]);
    }
  }

  return '/';
}

function getBaseURL(url) {
  return ('' + url).replace(/^((?:https?|file|ftp):\/\/.+)\/[^/]+$/, '$1') + '/';
}

exports.getBundleURL = getBundleURLCached;
exports.getBaseURL = getBaseURL;
},{}],"../../node_modules/parcel-bundler/src/builtins/css-loader.js":[function(require,module,exports) {
var bundle = require('./bundle-url');

function updateLink(link) {
  var newLink = link.cloneNode();

  newLink.onload = function () {
    link.remove();
  };

  newLink.href = link.href.split('?')[0] + '?' + Date.now();
  link.parentNode.insertBefore(newLink, link.nextSibling);
}

var cssTimeout = null;

function reloadCSS() {
  if (cssTimeout) {
    return;
  }

  cssTimeout = setTimeout(function () {
    var links = document.querySelectorAll('link[rel="stylesheet"]');

    for (var i = 0; i < links.length; i++) {
      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {
        updateLink(links[i]);
      }
    }

    cssTimeout = null;
  }, 50);
}

module.exports = reloadCSS;
},{"./bundle-url":"../../node_modules/parcel-bundler/src/builtins/bundle-url.js"}],"css/icomoon.css":[function(require,module,exports) {
var reloadCSS = require('_css_loader');

module.hot.dispose(reloadCSS);
module.hot.accept(reloadCSS);
},{"./../fonts/icomoon/icomoon.eot":[["icomoon.8ec18e71.eot","fonts/icomoon/icomoon.eot"],"fonts/icomoon/icomoon.eot"],"./../fonts/icomoon/icomoon.ttf":[["icomoon.247d4f1e.ttf","fonts/icomoon/icomoon.ttf"],"fonts/icomoon/icomoon.ttf"],"./../fonts/icomoon/icomoon.woff":[["icomoon.e372d059.woff","fonts/icomoon/icomoon.woff"],"fonts/icomoon/icomoon.woff"],"./../fonts/icomoon/icomoon.svg":[["icomoon.c727c55a.svg","fonts/icomoon/icomoon.svg"],"fonts/icomoon/icomoon.svg"],"_css_loader":"../../node_modules/parcel-bundler/src/builtins/css-loader.js"}],"css/main.sass":[function(require,module,exports) {
var reloadCSS = require('_css_loader');

module.hot.dispose(reloadCSS);
module.hot.accept(reloadCSS);
},{"./../img/arrow-light.svg":[["arrow-light.1cc0db98.svg","img/arrow-light.svg"],"img/arrow-light.svg"],"./../img/triangle.svg":[["triangle.fe4fc6c1.svg","img/triangle.svg"],"img/triangle.svg"],"_css_loader":"../../node_modules/parcel-bundler/src/builtins/css-loader.js"}],"app.js":[function(require,module,exports) {
"use strict";

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _reactRouterDom = require("react-router-dom");

var _App = _interopRequireDefault(require("./components/App"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable import/first, no-undef, no-unused-vars */
require('./css/icomoon.css');

require('./css/main.sass');

_reactDom.default.render(_react.default.createElement(_reactRouterDom.BrowserRouter, null, _react.default.createElement(_App.default, null)), document.getElementById('app'));
/* eslint-enable import/first no-undef */
},{"react":"../../node_modules/react/index.js","react-dom":"../../node_modules/react-dom/index.js","react-router-dom":"../../node_modules/react-router-dom/es/index.js","./components/App":"components/App.js","./css/icomoon.css":"css/icomoon.css","./css/main.sass":"css/main.sass"}],"index.js":[function(require,module,exports) {
"use strict";

require("regenerator-runtime/runtime");

require("./app");

require('babel-core/register');

require('babel-polyfill'); //import 'babel-polyfill'
},{"regenerator-runtime/runtime":"../../node_modules/regenerator-runtime/runtime.js","babel-core/register":"../../node_modules/babel-core/register.js","babel-polyfill":"../../node_modules/babel-polyfill/lib/index.js","./app":"app.js"}],"../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "63729" + '/');

  ws.onmessage = function (event) {
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      console.clear();
      data.assets.forEach(function (asset) {
        hmrApply(global.parcelRequire, asset);
      });
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          hmrAccept(global.parcelRequire, asset.id);
        }
      });
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAccept(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAccept(bundle.parent, id);
  }

  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAccept(global.parcelRequire, id);
  });
}
},{}]},{},["../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","index.js"], null)
//# sourceMappingURL=/src.e31bb0bc.map